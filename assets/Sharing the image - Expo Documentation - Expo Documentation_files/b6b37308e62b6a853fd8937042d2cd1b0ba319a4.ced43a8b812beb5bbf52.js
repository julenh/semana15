(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[15],{"+5jK":function(e){e.exports=JSON.parse('{"name":"expo-blur","kind":1,"kindString":"Project","originalName":"","children":[{"name":"BlurView","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new BlurView","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"reference","name":"BlurProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Readonly"}]}}],"type":{"type":"reference","name":"default"},"inheritedFrom":{"type":"reference","name":"React.Component<BlurProps>.constructor"}},{"name":"new BlurView","kind":16384,"kindString":"Constructor signature","comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BlurProps"}},{"name":"context","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"default"},"inheritedFrom":{"type":"reference","name":"React.Component<BlurProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<BlurProps>.constructor"}},{"name":"_root","kind":1024,"kindString":"Property","type":{"type":"reference","name":"ComponentOrHandle"},"defaultValue":"null"},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"ReactNode"}}]}}],"name":"Readonly"}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}}],"name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"defaultProps","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"intensity","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"},"defaultValue":"50"},{"name":"tint","kind":1024,"kindString":"Property","type":{"type":"reference","name":"BlurTint"},"defaultValue":"..."}]}},"defaultValue":"..."},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"_setNativeRef","kind":2048,"kindString":"Method","signatures":[{"name":"_setNativeRef","kind":4096,"kindString":"Call signature","parameters":[{"name":"ref","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"ComponentOrHandle"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"render","kind":2048,"kindString":"Method","signatures":[{"name":"render","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"setNativeProps","kind":2048,"kindString":"Method","signatures":[{"name":"setNativeProps","kind":4096,"kindString":"Call signature","parameters":[{"name":"nativeProps","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Component"}]},{"name":"BlurProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"intensity","kind":1024,"kindString":"Property","comment":{"shortText":"A number from `1` to `100` to control the intensity of the blur effect."},"type":{"type":"intrinsic","name":"number"}},{"name":"tint","kind":1024,"kindString":"Property","comment":{"shortText":"A tint mode which will be applied to the view.","tags":[{"tag":"default","text":"\'default\'\\n"}]},"type":{"type":"reference","name":"BlurTint"}}]}},{"type":"reference","typeArguments":[{"type":"query","queryType":{"type":"reference","name":"View"}}],"name":"React.ComponentProps"}]}},{"name":"BlurTint","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"},{"type":"literal","value":"default"}]}}]}')},"+5ou":function(e){e.exports=JSON.parse('{"name":"expo-secure-store","kind":1,"kindString":"Project","originalName":"","children":[{"name":"KeychainAccessibilityConstant","kind":4194304,"kindString":"Type alias","type":{"type":"intrinsic","name":"number"}},{"name":"SecureStoreOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"keychainAccessible","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(iOS only)__ Specifies when the stored entry is accessible, using iOS\'s `kSecAttrAccessible`\\nproperty. See Apple\'s documentation on [keychain item accessibility](https://developer.apple.com/library/content/documentation/Security/Conceptual/keychainServConcepts/02concepts/concepts.html#//apple_ref/doc/uid/TP30000897-CH204-SW18).\\nDefault value: `SecureStore.WHEN_UNLOCKED`."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"}},{"name":"keychainService","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"- iOS: The item\'s service, equivalent to `kSecAttrService`\\n- Android: Equivalent of the public/private key pair `Alias`\\n> If the item is set with the `keychainService` option, it will be required to later fetch the value."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AFTER_FIRST_UNLOCK","kind":32,"kindString":"Variable","comment":{"shortText":"The data in the keychain item cannot be accessed after a restart until the device has been\\nunlocked once by the user. This may be useful if you need to access the item when the phone\\nis locked."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"..."},{"name":"AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","comment":{"shortText":"Similar to `AFTER_FIRST_UNLOCK`, except the entry is not migrated to a new device when restoring\\nfrom a backup."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"..."},{"name":"ALWAYS","kind":32,"kindString":"Variable","comment":{"shortText":"The data in the keychain item can always be accessed regardless of whether the device is locked.\\nThis is the least secure option."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"..."},{"name":"ALWAYS_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","comment":{"shortText":"Similar to `ALWAYS`, except the entry is not migrated to a new device when restoring from a backup."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"..."},{"name":"WHEN_PASSCODE_SET_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","comment":{"shortText":"Similar to `WHEN_UNLOCKED_THIS_DEVICE_ONLY`, except the user must have set a passcode in order to\\nstore an entry. If the user removes their passcode, the entry will be deleted."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"..."},{"name":"WHEN_UNLOCKED","kind":32,"kindString":"Variable","comment":{"shortText":"The data in the keychain item can be accessed only while the device is unlocked by the user."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"..."},{"name":"WHEN_UNLOCKED_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","comment":{"shortText":"Similar to `WHEN_UNLOCKED`, except the entry is not migrated to a new device when restoring from\\na backup."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"..."},{"name":"deleteItemAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteItemAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Delete the value associated with the provided key.","returns":"A promise that will reject if the value couldn\'t be deleted.\\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"text":"The key that was used to store the associated value."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"An [`SecureStoreOptions`](#securestoreoptions) object.\\n"},"type":{"type":"reference","name":"SecureStoreOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"getItemAsync","kind":64,"kindString":"Function","signatures":[{"name":"getItemAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Fetch the stored value associated with the provided key.","returns":"A promise that resolves to the previously stored value, or `null` if there is no entry\\nfor the given key. The promise will reject if an error occurred while retrieving the value.\\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"text":"The key that was used to store the associated value."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"An [`SecureStoreOptions`](#securestoreoptions) object.\\n"},"type":{"type":"reference","name":"SecureStoreOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the SecureStore API is enabled on the current device. This does not check the app\\npermissions.","returns":"Promise which fulfils witch `boolean`, indicating whether the SecureStore API is available\\non the current device. Currently this resolves `true` on iOS and Android only.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"setItemAsync","kind":64,"kindString":"Function","signatures":[{"name":"setItemAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Store a key\u2013value pair.","returns":"A promise that will reject if value cannot be stored on the device.\\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"text":"The key to associate with the stored value. Keys may contain alphanumeric characters\\n`.`, `-`, and `_`."},"type":{"type":"intrinsic","name":"string"}},{"name":"value","kind":32768,"kindString":"Parameter","comment":{"text":"The value to store. Size limit is 2048 bytes."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"An [`SecureStoreOptions`](#securestoreoptions) object.\\n"},"type":{"type":"reference","name":"SecureStoreOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},"+E1r":function(e){e.exports=JSON.parse('{"name":"expo-checkbox","kind":1,"kindString":"Project","originalName":"","children":[{"name":"default","kind":4,"kindString":"Namespace","children":[{"name":"displayName","kind":32,"kindString":"Variable","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Promise"}}]}]},{"name":"CheckboxComponent","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"CheckboxProps"}],"name":"React.FC"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isAvailableAsync","kind":2048,"kindString":"Method","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}}]}},{"name":"CheckboxEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"target","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"value","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}}]}}],"name":"NativeSyntheticEvent"}},{"name":"CheckboxProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"color","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The tint or color of the checkbox. This overrides the disabled opaque style."},"type":{"type":"reference","name":"ColorValue"}},{"name":"disabled","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the checkbox is disabled, it becomes opaque and uncheckable."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"value","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Value indicating if the checkbox should be rendered as checked or not. Default value is `false`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"onChange","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onChange","kind":4096,"kindString":"Call signature","comment":{"shortText":"Callback that is invoked when the user presses the checkbox."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","comment":{"text":"A native event containing the checkbox change.\\n"},"type":{"type":"reference","name":"CheckboxEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onValueChange","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onValueChange","kind":4096,"kindString":"Call signature","comment":{"shortText":"Callback that is invoked when the user presses the checkbox."},"parameters":[{"name":"value","kind":32768,"kindString":"Parameter","comment":{"text":"A boolean indicating the new checked state of the checkbox.\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]}]}}]}},{"name":"default","kind":32,"kindString":"Variable","type":{"type":"reference","name":"CheckboxComponent"},"defaultValue":"..."}]}')},"+HKP":function(e){e.exports=JSON.parse('{"name":"expo-media-library","kind":1,"kindString":"Project","originalName":"","children":[{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"EXPermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"Album","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"approximateLocation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Apply only to albums whose type is `\'moment\'`. Approximated location of all\\nassets in the moment.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"Location"}},{"name":"assetCount","kind":1024,"kindString":"Property","comment":{"shortText":"Estimated number of assets in the album."},"type":{"type":"intrinsic","name":"number"}},{"name":"endTime","kind":1024,"kindString":"Property","comment":{"shortText":"Apply only to albums whose type is `\'moment\'`. Latest creation timestamp of all\\nassets in the moment.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Album ID."},"type":{"type":"intrinsic","name":"string"}},{"name":"locationNames","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Apply only to albums whose type is `\'moment\'`. Names of locations grouped\\nin the moment.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"startTime","kind":1024,"kindString":"Property","comment":{"shortText":"Apply only to albums whose type is `\'moment\'`. Earliest creation timestamp of all\\nassets in the moment.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"title","kind":1024,"kindString":"Property","comment":{"shortText":"Album title."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The type of the assets album.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"AlbumType"}}]}}},{"name":"AlbumRef","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"Album"},{"type":"intrinsic","name":"string"}]}},{"name":"AlbumType","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"album"},{"type":"literal","value":"moment"},{"type":"literal","value":"smartAlbum"}]}},{"name":"AlbumsOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"includeSmartAlbums","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"Asset","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"albumId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Album ID that the asset belongs to.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"creationTime","kind":1024,"kindString":"Property","comment":{"shortText":"File creation timestamp."},"type":{"type":"intrinsic","name":"number"}},{"name":"duration","kind":1024,"kindString":"Property","comment":{"shortText":"Duration of the video or audio asset in seconds."},"type":{"type":"intrinsic","name":"number"}},{"name":"filename","kind":1024,"kindString":"Property","comment":{"shortText":"Filename of the asset."},"type":{"type":"intrinsic","name":"string"}},{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"Height of the image or video."},"type":{"type":"intrinsic","name":"number"}},{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Internal ID that represents an asset."},"type":{"type":"intrinsic","name":"string"}},{"name":"mediaSubtypes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of media subtypes.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"reference","name":"MediaSubtype"}}},{"name":"mediaType","kind":1024,"kindString":"Property","comment":{"shortText":"Media type."},"type":{"type":"reference","name":"MediaTypeValue"}},{"name":"modificationTime","kind":1024,"kindString":"Property","comment":{"shortText":"Last modification timestamp."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"URI that points to the asset. `assets://*` (iOS), `file://*` (Android)"},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"Width of the image or video."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"AssetInfo","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"Asset"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"exif","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"EXIF metadata associated with the image."},"type":{"type":"intrinsic","name":"object"}},{"name":"isFavorite","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the asset is marked as favorite.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isNetworkAsset","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"This field is available only if flag `shouldDownloadFromNetwork` is set to `false`.\\nWhether the asset is stored on the network (iCloud on iOS).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"localUri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Local URI for the asset."},"type":{"type":"intrinsic","name":"string"}},{"name":"location","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"GPS location if available."},"type":{"type":"reference","name":"Location"}},{"name":"orientation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Display orientation of the image. Orientation is available only for assets whose\\n`mediaType` is `MediaType.photo`. Value will range from 1 to 8, see [EXIF orientation specification](http://sylvana.net/jpegcrop/exif_orientation.html)\\nfor more details.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"number"}}]}}]}},{"name":"AssetRef","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"Asset"},{"type":"intrinsic","name":"string"}]}},{"name":"AssetsOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"after","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Asset ID of the last item returned on the previous page."},"type":{"type":"reference","name":"AssetRef"}},{"name":"album","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"[Album](#album) or its ID to get assets from specific album."},"type":{"type":"reference","name":"AlbumRef"}},{"name":"createdAfter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"`Date` object or Unix timestamp in milliseconds limiting returned assets only to those that\\nwere created after this date."},"type":{"type":"union","types":[{"type":"reference","name":"Date"},{"type":"intrinsic","name":"number"}]}},{"name":"createdBefore","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Similarly as `createdAfter`, but limits assets only to those that were created before specified\\ndate."},"type":{"type":"union","types":[{"type":"reference","name":"Date"},{"type":"intrinsic","name":"number"}]}},{"name":"first","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The maximum number of items on a single page.","tags":[{"tag":"default","text":"20\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"mediaType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of [MediaTypeValue](#expomedialibrarymediatypevalue)s or a single `MediaTypeValue`.","tags":[{"tag":"default","text":"MediaType.photo\\n"}]},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"MediaTypeValue"}},{"type":"reference","name":"MediaTypeValue"}]}},{"name":"sortBy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of [`SortByValue`](#sortbyvalue)s or a single `SortByValue` value. By default, all\\nkeys are sorted in descending order, however you can also pass a pair `[key, ascending]` where\\nthe second item is a `boolean` value that means whether to use ascending order. Note that if\\nthe `SortBy.default` key is used, then `ascending` argument will not matter. Earlier items have\\nhigher priority when sorting out the results.\\nIf empty, this method will use the default sorting that is provided by the platform."},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"SortByValue"}},{"type":"reference","name":"SortByValue"}]}}]}}},{"name":"Location","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"latitude","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}},{"name":"MediaLibraryAssetInfoQueryOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"shouldDownloadFromNetwork","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether allow the asset to be downloaded from network. Only available in iOS with iCloud assets.","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"MediaLibraryAssetsChangeEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"deletedAssets","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Available only if `hasIncrementalChanges` is `true`.\\nArray of [`Asset`](#asset)s that have been deleted from the library."},"type":{"type":"array","elementType":{"type":"reference","name":"Asset"}}},{"name":"hasIncrementalChanges","kind":1024,"kindString":"Property","comment":{"shortText":"Whether the media library\'s changes could be described as \\"incremental changes\\".\\n`true` indicates the changes are described by the `insertedAssets`, `deletedAssets` and\\n`updatedAssets` values. `false` indicates that the scope of changes is too large and you\\nshould perform a full assets reload (eg. a user has changed access to individual assets in the\\nmedia library)."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"insertedAssets","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Available only if `hasIncrementalChanges` is `true`.\\nArray of [`Asset`](#asset)s that have been inserted to the library."},"type":{"type":"array","elementType":{"type":"reference","name":"Asset"}}},{"name":"updatedAssets","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Available only if `hasIncrementalChanges` is `true`.\\nArray of [`Asset`](#asset)s that have been updated or completed downloading from network\\nstorage (iCloud on iOS)."},"type":{"type":"array","elementType":{"type":"reference","name":"Asset"}}}]}}},{"name":"MediaSubtype","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"depthEffect"},{"type":"literal","value":"hdr"},{"type":"literal","value":"highFrameRate"},{"type":"literal","value":"livePhoto"},{"type":"literal","value":"panorama"},{"type":"literal","value":"screenshot"},{"type":"literal","value":"stream"},{"type":"literal","value":"timelapse"}]}},{"name":"MediaTypeObject","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"audio","kind":1024,"kindString":"Property","type":{"type":"literal","value":"audio"}},{"name":"photo","kind":1024,"kindString":"Property","type":{"type":"literal","value":"photo"}},{"name":"unknown","kind":1024,"kindString":"Property","type":{"type":"literal","value":"unknown"}},{"name":"video","kind":1024,"kindString":"Property","type":{"type":"literal","value":"video"}}]}}},{"name":"MediaTypeValue","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"audio"},{"type":"literal","value":"photo"},{"type":"literal","value":"video"},{"type":"literal","value":"unknown"}]}},{"name":"PagedInfo","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter"}],"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"assets","kind":1024,"kindString":"Property","comment":{"shortText":"A page of [`Asset`](#asset)s fetched by the query."},"type":{"type":"array","elementType":{"type":"reference","name":"T"}}},{"name":"endCursor","kind":1024,"kindString":"Property","comment":{"shortText":"ID of the last fetched asset. It should be passed as `after` option in order to get the\\nnext page."},"type":{"type":"intrinsic","name":"string"}},{"name":"hasNextPage","kind":1024,"kindString":"Property","comment":{"shortText":"Whether there are more assets to fetch."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"totalCount","kind":1024,"kindString":"Property","comment":{"shortText":"Estimated total number of assets that match the query."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"PermissionResponse","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"EXPermissionResponse"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accessPrivileges","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates if your app has access to the whole or only part of the photo library. Possible values are:\\n- `\'all\'` if the user granted your app access to the whole photo library\\n- `\'limited\'` if the user granted your app access only to selected photos (only available on iOS 14.0+)\\n- `\'none\'` if user denied or hasn\'t yet granted the permission"},"type":{"type":"union","types":[{"type":"literal","value":"all"},{"type":"literal","value":"limited"},{"type":"literal","value":"none"}]}}]}}]}},{"name":"SortByKey","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"mediaType"},{"type":"literal","value":"width"},{"type":"literal","value":"height"},{"type":"literal","value":"creationTime"},{"type":"literal","value":"modificationTime"},{"type":"literal","value":"duration"}]}},{"name":"SortByObject","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"creationTime","kind":1024,"kindString":"Property","type":{"type":"literal","value":"creationTime"}},{"name":"default","kind":1024,"kindString":"Property","type":{"type":"literal","value":"default"}},{"name":"duration","kind":1024,"kindString":"Property","type":{"type":"literal","value":"duration"}},{"name":"height","kind":1024,"kindString":"Property","type":{"type":"literal","value":"height"}},{"name":"mediaType","kind":1024,"kindString":"Property","type":{"type":"literal","value":"mediaType"}},{"name":"modificationTime","kind":1024,"kindString":"Property","type":{"type":"literal","value":"modificationTime"}},{"name":"width","kind":1024,"kindString":"Property","type":{"type":"literal","value":"width"}}]}}},{"name":"SortByValue","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"tuple","elements":[{"type":"reference","name":"SortByKey"},{"type":"intrinsic","name":"boolean"}]},{"type":"reference","name":"SortByKey"}]}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"MediaType","kind":32,"kindString":"Variable","comment":{"shortText":"Possible media types."},"type":{"type":"reference","name":"MediaTypeObject"},"defaultValue":"MediaLibrary.MediaType"},{"name":"SortBy","kind":32,"kindString":"Variable","comment":{"shortText":"Supported keys that can be used to sort `getAssetsAsync` results."},"type":{"type":"reference","name":"SortByObject"},"defaultValue":"MediaLibrary.SortBy"},{"name":"addAssetsToAlbumAsync","kind":64,"kindString":"Function","signatures":[{"name":"addAssetsToAlbumAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Adds array of assets to the album.","text":"On Android, by default it copies assets from the current album to provided one, however it\'s also\\npossible to move them by passing `false` as `copyAssets` argument.In case they\'re copied you\\nshould keep in mind that `getAssetsAsync` will return duplicated assets.","returns":"Returns promise which fulfils with `true` if the assets were successfully added to\\nthe album.\\n"},"parameters":[{"name":"assets","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of [Asset](#asset) or their IDs."},"type":{"type":"union","types":[{"type":"reference","name":"AssetRef"},{"type":"array","elementType":{"type":"reference","name":"AssetRef"}}]}},{"name":"album","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [Album](#album) or its ID."},"type":{"type":"reference","name":"AlbumRef"}},{"name":"copy","kind":32768,"kindString":"Parameter","comment":{"shortText":"__Android only.__ Whether to copy assets to the new album instead of move them.\\nDefaults to `true`."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"true"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"addListener","kind":64,"kindString":"Function","signatures":[{"name":"addListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribes for updates in user\'s media library.","returns":"An [`Subscription`](#subscription) object that you can call `remove()` on when you would\\nlike to unsubscribe the listener.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"A callback that is fired when any assets have been inserted or deleted from the\\nlibrary, or when the user changes which assets they\'re allowing access to. On Android it\'s\\ninvoked with an empty object. On iOS it\'s invoked with [`MediaLibraryAssetsChangeEvent`](#medialibraryassetschangeevent)\\nobject."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"MediaLibraryAssetsChangeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"albumNeedsMigrationAsync","kind":64,"kindString":"Function","signatures":[{"name":"albumNeedsMigrationAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks if the album should be migrated to a different location. In other words, it checks if the\\napplication has the write permission to the album folder. If not, it returns `true`, otherwise `false`.\\n> Note: For **Android below R**, **web** or **iOS**, this function always returns `false`.","returns":"Returns a promise which fulfils with `true` if the album should be migrated.\\n"},"parameters":[{"name":"album","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [Album](#album) or its ID."},"type":{"type":"reference","name":"AlbumRef"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"createAlbumAsync","kind":64,"kindString":"Function","signatures":[{"name":"createAlbumAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates an album with given name and initial asset. The asset parameter is required on Android,\\nsince it\'s not possible to create empty album on this platform. On Android, by default it copies\\ngiven asset from the current album to the new one, however it\'s also possible to move it by\\npassing `false` as `copyAsset` argument.\\nIn case it\'s copied you should keep in mind that `getAssetsAsync` will return duplicated asset.","returns":"Newly created [`Album`](#album).\\n"},"parameters":[{"name":"albumName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the album to create."},"type":{"type":"intrinsic","name":"string"}},{"name":"asset","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"An [Asset](#asset) or its ID (required on Android)."},"type":{"type":"reference","name":"AssetRef"}},{"name":"copyAsset","kind":32768,"kindString":"Parameter","comment":{"shortText":"__Android Only.__ Whether to copy asset to the new album instead of move it.\\nDefaults to `true`."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"true"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Album"}],"name":"Promise"}}]},{"name":"createAssetAsync","kind":64,"kindString":"Function","signatures":[{"name":"createAssetAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates an asset from existing file. The most common use case is to save a picture taken by [Camera](./camera).\\nThis method requires `CAMERA_ROLL` permission.","returns":"A promise which fulfils with an object representing an [`Asset`](#asset).\\n","tags":[{"tag":"example","text":"\\n```js\\nconst { uri } = await Camera.takePictureAsync();\\nconst asset = await MediaLibrary.createAssetAsync(uri);\\n```"}]},"parameters":[{"name":"localUri","kind":32768,"kindString":"Parameter","comment":{"shortText":"A URI to the image or video file. It must contain an extension. On Android it\\nmust be a local path, so it must start with `file:///`"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Asset"}],"name":"Promise"}}]},{"name":"deleteAlbumsAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteAlbumsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Deletes given albums from the library. On Android by default it deletes assets belonging to given\\nalbums from the library. On iOS it doesn\'t delete these assets, however it\'s possible to do by\\npassing `true` as `deleteAssets`.","returns":"Returns a promise which fulfils with `true` if the albums were successfully deleted from\\nthe library.\\n"},"parameters":[{"name":"albums","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of [`Album`](#asset)s or their IDs."},"type":{"type":"union","types":[{"type":"reference","name":"AlbumRef"},{"type":"array","elementType":{"type":"reference","name":"AlbumRef"}}]}},{"name":"assetRemove","kind":32768,"kindString":"Parameter","comment":{"shortText":"__iOS Only.__ Whether to also delete assets belonging to given albums.\\nDefaults to `false`."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"deleteAssetsAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteAssetsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Deletes assets from the library. On iOS it deletes assets from all albums they belong to, while\\non Android it keeps all copies of them (album is strictly connected to the asset). Also, there is\\nadditional dialog on iOS that requires user to confirm this action.","returns":"Returns promise which fulfils with `true` if the assets were successfully deleted.\\n"},"parameters":[{"name":"assets","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of [Asset](#asset) or their IDs."},"type":{"type":"union","types":[{"type":"reference","name":"AssetRef"},{"type":"array","elementType":{"type":"reference","name":"AssetRef"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"getAlbumAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAlbumAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Queries for an album with a specific name.","returns":"An object representing an [`Album`](#album), if album with given name exists, otherwise\\nreturns `null`.\\n"},"parameters":[{"name":"title","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the album to look for."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Album"}],"name":"Promise"}}]},{"name":"getAlbumsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAlbumsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Queries for user-created albums in media gallery.","returns":"A promise which fulfils with an array of [`Album`](#asset)s. Depending on Android version,\\nroot directory of your storage may be listed as album titled `\\"0\\"` or unlisted at all.\\n"},"parameters":[{"name":"__namedParameters","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AlbumsOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Album"}}],"name":"Promise"}}]},{"name":"getAssetInfoAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAssetInfoAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Provides more information about an asset, including GPS location, local URI and EXIF metadata.","returns":"(#assetinfo) object, which is an `Asset` extended by an additional fields.\\n"},"parameters":[{"name":"asset","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [Asset](#asset) or its ID."},"type":{"type":"reference","name":"AssetRef"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"MediaLibraryAssetInfoQueryOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AssetInfo"}],"name":"Promise"}}]},{"name":"getAssetsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAssetsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Fetches a page of assets matching the provided criteria.","returns":"A promise that fulfils with to [`PagedInfo`](#pagedinfo) object with array of [`Asset`](#asset)s.\\n"},"parameters":[{"name":"assetsOptions","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"AssetsOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"Asset"}],"name":"PagedInfo"}],"name":"Promise"}}]},{"name":"getMomentsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMomentsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Fetches a list of moments, which is a group of assets taken around the same place\\nand time.","returns":"An array of [albums](#album) whose type is `moment`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing media library.","returns":"A promise that fulfils with [`PermissionResponse`](#permissionresponse) object.\\n"},"parameters":[{"name":"writeOnly","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the Media Library API is enabled on the current device.","returns":"A promise which fulfils with a `boolean`, indicating whether the Media Library API is\\navailable on the current device.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"migrateAlbumIfNeededAsync","kind":64,"kindString":"Function","signatures":[{"name":"migrateAlbumIfNeededAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Moves album content to the special media directories on **Android R** or **above** if needed.\\nThose new locations are in line with the Android `scoped storage` - so your application won\'t\\nlose write permission to those directories in the future.","text":"This method does nothing if:\\n- app is running on **iOS**, **web** or **Android below R**\\n- app has **write permission** to the album folder\\n\\nThe migration is possible when the album contains only compatible files types.\\nFor instance, movies and pictures are compatible with each other, but music and pictures are not.\\nIf automatic migration isn\'t possible, the function will be rejected.\\nIn that case, you can use methods from the `expo-file-system` to migrate all your files manually.\\n\\n# Why do you need to migrate files?\\n__Android R__ introduced a lot of changes in the storage system. Now applications can\'t save\\nanything to the root directory. The only available locations are from the `MediaStore` API.\\nUnfortunately, the media library stored albums in folders for which, because of those changes,\\nthe application doesn\'t have permissions anymore. However, it doesn\'t mean you need to migrate\\nall your albums. If your application doesn\'t add assets to albums, you don\'t have to migrate.\\nEverything will work as it used to. You can read more about scoped storage in [the Android documentation](https://developer.android.com/about/versions/11/privacy/storage).\\n","returns":"A promise which fulfils to `void`.\\n"},"parameters":[{"name":"album","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [Album](#album) or its ID."},"type":{"type":"reference","name":"AlbumRef"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"presentPermissionsPickerAsync","kind":64,"kindString":"Function","signatures":[{"name":"presentPermissionsPickerAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"__Available only on iOS >= 14.__ Allows the user to update the assets that your app has access to.\\nThe system modal is only displayed if the user originally allowed only `limited` access to their\\nmedia library, otherwise this method is a no-op.","returns":"A promise that either rejects if the method is unavailable (meaning the device is not\\nrunning iOS >= 14), or resolves to `void`.\\n> __Note:__ This method doesn\'t inform you if the user changes which assets your app has access to.\\nFor that information, you need to subscribe for updates to the user\'s media library using [addListener(listener)](#medialibraryaddlistenerlistener).\\nIf `hasIncrementalChanges` is `false`, the user changed their permissions.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"removeAllListeners","kind":64,"kindString":"Function","signatures":[{"name":"removeAllListeners","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes all listeners."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeAssetsFromAlbumAsync","kind":64,"kindString":"Function","signatures":[{"name":"removeAssetsFromAlbumAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes given assets from album.","text":"On Android, album will be automatically deleted if there are no more assets inside.","returns":"Returns promise which fulfils with `true` if the assets were successfully removed from\\nthe album.\\n"},"parameters":[{"name":"assets","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of [Asset](#asset) or their IDs."},"type":{"type":"union","types":[{"type":"reference","name":"AssetRef"},{"type":"array","elementType":{"type":"reference","name":"AssetRef"}}]}},{"name":"album","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [Album](#album) or its ID."},"type":{"type":"reference","name":"AlbumRef"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"removeSubscription","kind":64,"kindString":"Function","signatures":[{"name":"removeSubscription","kind":4096,"kindString":"Call signature","parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing media in user\'s media library.","returns":"A promise that fulfils with [`PermissionResponse`](#permissionresponse) object.\\n"},"parameters":[{"name":"writeOnly","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"saveToLibraryAsync","kind":64,"kindString":"Function","signatures":[{"name":"saveToLibraryAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Saves the file at given `localUri` to the user\'s media library. Unlike [`createAssetAsync()`](#medialibrarycreateassetasynclocaluri),\\nThis method doesn\'t return created asset.\\nOn __iOS 11+__, it\'s possible to use this method without asking for `CAMERA_ROLL` permission,\\nhowever then yours `Info.plist` should have `NSPhotoLibraryAddUsageDescription` key."},"parameters":[{"name":"localUri","kind":32768,"kindString":"Parameter","comment":{"shortText":"A URI to the image or video file. It must contain an extension. On Android it\\nmust be a local path, so it must start with `file:///`.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"usePermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"usePermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to access the media library.\\nThis uses both `requestPermissionsAsync` and `getPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = MediaLibrary.usePermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"writeOnly","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}]}}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}]}')},"+J/d":function(e){e.exports=JSON.parse('{"name":"expo-in-app-purchases","kind":1,"kindString":"Project","originalName":"","children":[{"name":"IAPErrorCode","kind":8,"kindString":"Enumeration","comment":{"shortText":"Abstracts over the Android [Billing Response Codes](https://developer.android.com/reference/com/android/billingclient/api/BillingClient.BillingResponseCode)\\nand iOS [SKErrorCodes](https://developer.apple.com/documentation/storekit/skerrorcode?language=objc)."},"children":[{"name":"BILLING_UNAVAILABLE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Billing API version is not supported for the type requested. See `BILLING_UNAVAILABLE` on\\nAndroid."},"defaultValue":"5"},{"name":"CLOUD_SERVICE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Apple Cloud Service connection failed or invalid permissions.\\nSee `SKErrorCloudServicePermissionDenied`, `SKErrorCloudServiceNetworkConnectionFailed` and\\n`SKErrorCloudServiceRevoked` on iOS."},"defaultValue":"10"},{"name":"DEVELOPER_ERROR","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Invalid arguments provided to the API. This error can also indicate that the application was\\nnot correctly signed or properly set up for In-app Billing in Google Play. See `DEVELOPER_ERROR`\\non Android."},"defaultValue":"7"},{"name":"INVALID_IDENTIFIER","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The offer identifier or price specified in App Store Connect is no longer valid. See\\n`SKErrorInvalidSignature`, `SKErrorInvalidOfferPrice`, `SKErrorInvalidOfferIdentifier` on iOS."},"defaultValue":"13"},{"name":"ITEM_ALREADY_OWNED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Failure to purchase since item is already owned. See `ITEM_ALREADY_OWNED` on Android."},"defaultValue":"8"},{"name":"ITEM_NOT_OWNED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Failure to consume since item is not owned. See `ITEM_NOT_OWNED` on Android."},"defaultValue":"9"},{"name":"ITEM_UNAVAILABLE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Requested product is not available for purchase. See `SKErrorStoreProductNotAvailable` on iOS,\\n`ITEM_UNAVAILABLE` on Android."},"defaultValue":"6"},{"name":"MISSING_PARAMS","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Parameters are missing in a payment discount. See `SKErrorMissingOfferParams` on iOS."},"defaultValue":"14"},{"name":"PAYMENT_INVALID","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The feature is not allowed on the current device, or the user is not authorized to make payments.\\nSee `SKErrorClientInvalid`, `SKErrorPaymentInvalid`, and `SKErrorPaymentNotAllowed` on iOS,\\n`FEATURE_NOT_SUPPORTED` on Android."},"defaultValue":"1"},{"name":"PRIVACY_UNACKNOWLEDGED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The user has not yet acknowledged Apple\u2019s privacy policy for Apple Music. See\\n`SKErrorPrivacyAcknowledgementRequired` on iOS."},"defaultValue":"11"},{"name":"SERVICE_DISCONNECTED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Play Store service is not connected now. See `SERVICE_DISCONNECTED` on Android."},"defaultValue":"2"},{"name":"SERVICE_TIMEOUT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The request has reached the maximum timeout before Google Play responds. See `SERVICE_TIMEOUT`\\non Android."},"defaultValue":"4"},{"name":"SERVICE_UNAVAILABLE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Network connection is down. See `SERVICE_UNAVAILABLE` on Android."},"defaultValue":"3"},{"name":"UNAUTHORIZED_REQUEST","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The app is attempting to use a property for which it does not have the required entitlement.\\nSee `SKErrorUnauthorizedRequestData` on iOS."},"defaultValue":"12"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An unknown or unexpected error occurred. See `SKErrorUnknown` on iOS, `ERROR` on Android."},"defaultValue":"0"}]},{"name":"IAPItemType","kind":8,"kindString":"Enumeration","children":[{"name":"PURCHASE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"One time purchase or consumable."},"defaultValue":"0"},{"name":"SUBSCRIPTION","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Subscription."},"defaultValue":"1"}]},{"name":"IAPResponseCode","kind":8,"kindString":"Enumeration","children":[{"name":"DEFERRED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Purchase was deferred.","tags":[{"tag":"platform","text":"ios\\n"}]},"defaultValue":"3"},{"name":"ERROR","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An error occurred. Check the `errorCode` for additional details."},"defaultValue":"2"},{"name":"OK","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Response returned successfully."},"defaultValue":"0"},{"name":"USER_CANCELED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"User canceled the purchase."},"defaultValue":"1"}]},{"name":"InAppPurchaseState","kind":8,"kindString":"Enumeration","children":[{"name":"DEFERRED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The transaction has been received, but its final status is pending external\\naction such as the Ask to Buy feature where a child initiates a new purchase and has to wait\\nfor the family organizer\'s approval. Update your UI to show the deferred state, and wait for\\nanother callback that indicates the final status.","tags":[{"tag":"platform","text":"ios\\n"}]},"defaultValue":"4"},{"name":"FAILED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The transaction failed."},"defaultValue":"2"},{"name":"PURCHASED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The App Store successfully processed payment."},"defaultValue":"1"},{"name":"PURCHASING","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The transaction is being processed."},"defaultValue":"0"},{"name":"RESTORED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"This transaction restores content previously purchased by the user. Read the\\n`originalTransaction` properties to obtain information about the original purchase.","tags":[{"tag":"platform","text":"ios\\n"}]},"defaultValue":"3"}]},{"name":"IAPItemDetails","kind":256,"kindString":"Interface","comment":{"shortText":"Details about the purchasable item that you inputted in App Store Connect and Google Play Console."},"children":[{"name":"description","kind":1024,"kindString":"Property","comment":{"shortText":"User facing description about the item.","tags":[{"tag":"example","text":"`Currency used to trade for items in the game`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"price","kind":1024,"kindString":"Property","comment":{"shortText":"The price formatted with the local currency symbol. Use this to display the price, not to make\\ncalculations.","tags":[{"tag":"example","text":"`$1.99`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"priceAmountMicros","kind":1024,"kindString":"Property","comment":{"shortText":"The price in micro-units, where 1,000,000 micro-units equal one unit of the currency. Use this\\nfor calculations.","tags":[{"tag":"example","text":"`1990000`\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"priceCurrencyCode","kind":1024,"kindString":"Property","comment":{"shortText":"The local currency code from the ISO 4217 code list.","tags":[{"tag":"example","text":"`USD`, `CAN`, `RUB`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"productId","kind":1024,"kindString":"Property","comment":{"shortText":"The product ID representing an item inputted in App Store Connect and Google Play Console.","tags":[{"tag":"example","text":"`gold`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"subscriptionPeriod","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The length of a subscription period specified in ISO 8601 format. In-app purchases return `P0D`.\\nOn iOS, non-renewable subscriptions also return `P0D`.","tags":[{"tag":"example","text":"`P0D`, `P6W`, `P3M`, `P6M`, `P1Y`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"title","kind":1024,"kindString":"Property","comment":{"shortText":"The title of the purchasable item. This should be displayed to the user and may be different\\nfrom the `productId`.","tags":[{"tag":"example","text":"`Gold Coin`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"The type of the purchase. Note that this is not very accurate on iOS as this data is only\\navailable on iOS 11.2 and higher and non-renewable subscriptions always return\\n`IAPItemType.PURCHASE`."},"type":{"type":"reference","name":"IAPItemType"}}]},{"name":"IAPQueryResponse","kind":256,"kindString":"Interface","comment":{"shortText":"The response type for queries and purchases."},"children":[{"name":"errorCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"`IAPErrorCode` that provides more detail on why an error occurred. `null` unless `responseCode`\\nis `IAPResponseCode.ERROR`."},"type":{"type":"reference","name":"IAPErrorCode"}},{"name":"responseCode","kind":1024,"kindString":"Property","comment":{"shortText":"The response code from a query or purchase."},"type":{"type":"reference","name":"IAPResponseCode"}},{"name":"results","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The array containing the `InAppPurchase` or `IAPItemDetails` objects requested depending on\\nthe method."},"type":{"type":"array","elementType":{"type":"reference","name":"QueryResult"}}}],"typeParameter":[{"name":"QueryResult","kind":131072,"kindString":"Type parameter"}]},{"name":"InAppPurchase","kind":256,"kindString":"Interface","children":[{"name":"acknowledged","kind":1024,"kindString":"Property","comment":{"shortText":"Boolean indicating whether this item has been \\"acknowledged\\" via `finishTransactionAsync`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"orderId","kind":1024,"kindString":"Property","comment":{"shortText":"A string that uniquely identifies a successful payment transaction."},"type":{"type":"intrinsic","name":"string"}},{"name":"originalOrderId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Represents the original order ID for restored purchases.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"originalPurchaseTime","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Represents the original purchase time for restored purchases.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"packageName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The application package from which the purchase originated.","tags":[{"tag":"example","text":"`com.example.myapp`"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"productId","kind":1024,"kindString":"Property","comment":{"shortText":"The product ID representing an item inputted in Google Play Console and App Store Connect.","tags":[{"tag":"example","text":"`gold`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"purchaseState","kind":1024,"kindString":"Property","comment":{"shortText":"The state of the purchase."},"type":{"type":"reference","name":"InAppPurchaseState"}},{"name":"purchaseTime","kind":1024,"kindString":"Property","comment":{"shortText":"The time the product was purchased, in milliseconds since the epoch (Jan 1, 1970)."},"type":{"type":"intrinsic","name":"number"}},{"name":"purchaseToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A token that uniquely identifies a purchase for a given item and user pair.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"transactionReceipt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The App Store receipt found in the main bundle encoded as a Base64 String.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}}]},{"name":"IAPPurchaseHistoryOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"useGooglePlayCache","kind":1024,"kindString":"Property","comment":{"shortText":"A boolean that indicates whether or not you want to make a network request\\nto sync expired/consumed purchases and those on other devices.\\n- If set to `true`, this method returns purchase details **only** for the user\'s currently\\n  owned items (active subscriptions and non-consumed one-time purchases). If set to `false`, it\\n  will make a network request and return the most recent purchase made by the user for each\\n  product, even if that purchase is expired, canceled, or consumed.\\n- The return type if this is `false` is actually a subset of when it\'s `true`. This is because\\n  Android returns a [`PurchaseHistoryRecord`](https://developer.android.com/reference/com/android/billingclient/api/PurchaseHistoryRecord)\\n  which only contains the purchase time, purchase token, and product ID, rather than all of the\\n  attributes found in the [`InAppPurchase`](#inapppurchase) type.","tags":[{"tag":"default","text":"true"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"QueryResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"InAppPurchase"},{"type":"reference","name":"IAPItemDetails"}]}},{"name":"connectAsync","kind":64,"kindString":"Function","signatures":[{"name":"connectAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Connects to the app store and performs all of the necessary initialization to prepare the module\\nto accept payments.\\nThis method must be called before anything else, otherwise an error will be thrown.","returns":"Returns a Promise that fulfills when connection is established.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"disconnectAsync","kind":64,"kindString":"Function","signatures":[{"name":"disconnectAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Disconnects from the app store and cleans up memory internally. Call this when you are done using\\nthe In-App Purchases API in your app.","text":"No other methods can be used until the next time you call `connectAsync`.\\n","returns":"Returns a Promise that fulfils when disconnecting process is finished.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"finishTransactionAsync","kind":64,"kindString":"Function","signatures":[{"name":"finishTransactionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Marks a transaction as completed. This _must_ be called on successful purchases only after you\\nhave verified the transaction and unlocked the functionality purchased by the user.","text":"On Android, this will either \\"acknowledge\\" or \\"consume\\" the purchase depending on the value of\\n`consumeItem`. Acknowledging indicates that this is a one time purchase (e.g. premium upgrade),\\nwhereas consuming a purchase allows it to be bought more than once. You cannot buy an item again\\nuntil it\'s consumed. Both consuming and acknowledging let Google know that you are done\\nprocessing the transaction. If you do not acknowledge or consume a purchase within three days,\\nthe user automatically receives a refund, and Google Play revokes the purchase.\\n\\nOn iOS, this will mark the transaction as finished and prevent it from reappearing in the\\npurchase listener callback. It will also let the user know their purchase was successful.\\n\\n`consumeItem` is ignored on iOS because you must specify whether an item is a consumable or\\nnon-consumable in its product entry in App Store Connect, whereas on Android you indicate an item\\nis consumable at runtime.\\n\\n> Make sure that you verify each purchase to prevent faulty transactions and protect against\\nfraud _before_ you call `finishTransactionAsync`. On iOS, you can validate the purchase\'s\\n`transactionReceipt` with the App Store as described [here](https://developer.apple.com/library/archive/releasenotes/General/ValidateAppStoreReceipt/Chapters/ValidateRemotely.html).\\nOn Android, you can verify your purchase using the Google Play Developer API as described [here](https://developer.android.com/google/play/billing/billing_best_practices#validating-purchase).\\n","tags":[{"tag":"example","text":"\\n```ts\\nif (!purchase.acknowledged) {\\n  await finishTransactionAsync(purchase, false); // or true for consumables\\n}\\n```"}]},"parameters":[{"name":"purchase","kind":32768,"kindString":"Parameter","comment":{"shortText":"The purchase you want to mark as completed."},"type":{"type":"reference","name":"InAppPurchase"}},{"name":"consumeItem","kind":32768,"kindString":"Parameter","comment":{"shortText":"__Android Only.__ A boolean indicating whether or not the item is a consumable.\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"getBillingResponseCodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBillingResponseCodeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns the last response code. This is more descriptive on Android since there is native support\\nfor retrieving the billing response code.","text":"On Android, this will return `IAPResponseCode.ERROR` if you are not connected or one of the\\nbilling response codes found [here](https://developer.android.com/reference/com/android/billingclient/api/BillingClient.BillingResponseCode)\\nif you are.\\n\\nOn iOS, this will return `IAPResponseCode.OK` if you are connected or `IAPResponseCode.ERROR` if\\nyou are not. Therefore, it\'s a good way to test whether or not you are connected and it\'s safe to\\nuse the other methods.\\n","returns":"Returns a Promise that fulfils with an number representing the `IAPResponseCode`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst responseCode = await getBillingResponseCodeAsync();\\n if (responseCode !== IAPResponseCode.OK) {\\n  // Either we\'re not connected or the last response returned an error (Android)\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"IAPResponseCode"}],"name":"Promise"}}]},{"name":"getProductsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getProductsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Retrieves the product details (price, description, title, etc) for each item that you inputted in\\nthe Google Play Console and App Store Connect. These products are associated with your app\'s\\nspecific Application/Bundle ID and cannot be retrieved from other apps. This queries both in-app\\nproducts and subscriptions so there\'s no need to pass those in separately.","text":"You must retrieve an item\'s details before you attempt to purchase it via `purchaseItemAsync`.\\nThis is a prerequisite to buying a product even if you have the item details bundled in your app\\nor on your own servers.\\n\\nIf any of the product IDs passed in are invalid and don\'t exist, you will not receive an\\n`IAPItemDetails` object corresponding to that ID. For example, if you pass in four product IDs\\nin but one of them has a typo, you will only get three response objects back.\\n","returns":"Returns a Promise that resolves with an `IAPQueryResponse` containing `IAPItemDetails`\\nobjects in the `results` array.\\n","tags":[{"tag":"example","text":"\\n```ts\\n// These product IDs must match the item entries you created in the App Store Connect and Google Play Console.\\n// If you want to add more or edit their attributes you can do so there.\\n\\nconst items = Platform.select({\\n  ios: [\\n    \'dev.products.gas\',\\n    \'dev.products.premium\',\\n    \'dev.products.gold_monthly\',\\n    \'dev.products.gold_yearly\',\\n  ],\\n  android: [\'gas\', \'premium\', \'gold_monthly\', \'gold_yearly\'],\\n});\\n\\n // Retrieve product details\\nconst { responseCode, results } = await getProductsAsync(items);\\nif (responseCode === IAPResponseCode.OK) {\\n  this.setState({ items: results });\\n}\\n```\\n"}]},"parameters":[{"name":"itemList","kind":32768,"kindString":"Parameter","comment":{"shortText":"The list of product IDs whose details you want to query from the app store."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"IAPItemDetails"}],"name":"IAPQueryResponse"}],"name":"Promise"}}]},{"name":"getPurchaseHistoryAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPurchaseHistoryAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Retrieves the user\'s purchase history.","text":"Please note that on iOS, StoreKit actually creates a new transaction object every time you\\nrestore completed transactions, therefore the `purchaseTime` and `orderId` may be inaccurate if\\nit\'s a restored purchase. If you need the original transaction\'s information you can use\\n`originalPurchaseTime` and `originalOrderId`, but those will be 0 and an empty string\\nrespectively if it is the original transaction.\\n\\nYou should not call this method on launch because restoring purchases on iOS prompts for the\\nuser\u2019s App Store credentials, which could interrupt the flow of your app.\\n","returns":"Returns a `Promise` that fulfills with an `IAPQueryResponse` that contains an array of\\n`InAppPurchase` objects.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An optional `PurchaseHistoryOptions` object."},"type":{"type":"reference","name":"IAPPurchaseHistoryOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"InAppPurchase"}],"name":"IAPQueryResponse"}],"name":"Promise"}}]},{"name":"purchaseItemAsync","kind":64,"kindString":"Function","signatures":[{"name":"purchaseItemAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Initiates the purchase flow to buy the item associated with this `productId`. This will display\\na prompt to the user that will allow them to either buy the item or cancel the purchase. When the\\npurchase completes, the result must be handled in the callback that you passed in to\\n[`setPurchaseListener`](#setpurchaselistener).","text":"Remember, you have to query an item\'s details via `getProductsAsync` and set the purchase\\nlistener before you attempt to buy an item.\\n\\n> [Apple](https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/StoreKitGuide/Chapters/Subscriptions.html)\\nand [Google](https://developer.android.com/google/play/billing/billing_subscriptions) both have\\ntheir own workflows for dealing with subscriptions. In general, you can deal with them in the\\nsame way you do one-time purchases but there are caveats including if a user decides to cancel\\nbefore the expiration date. To check the status of a subscription, you can use the [Google Play Developer](https://developers.google.com/android-publisher/api-ref/purchases/subscriptions/get)\\nAPI on Android and the [Status Update Notifications](https://developer.apple.com/documentation/storekit/in-app_purchase/enabling_status_update_notifications)\\nservice on iOS.\\n","returns":"Returns a `Promise` that resolves when the purchase is done processing. To get the actual\\nresult of the purchase, you must handle purchase events inside the `setPurchaseListener` callback.\\n"},"parameters":[{"name":"itemId","kind":32768,"kindString":"Parameter","comment":{"shortText":"The product ID of the item you want to buy."},"type":{"type":"intrinsic","name":"string"}},{"name":"oldPurchaseToken","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"__Android Only.__ The `purchaseToken` of the purchase that the user is\\nupgrading or downgrading from. This is mandatory for replacing an old subscription such as when\\na user upgrades from a monthly subscription to a yearly one that provides the same content.\\nYou can get the purchase token from [`getPurchaseHistoryAsync`](#inapppurchasesgetpurchasehistoryasyncrefresh-boolean)."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setPurchaseListener","kind":64,"kindString":"Function","signatures":[{"name":"setPurchaseListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a callback that handles incoming purchases. This must be done before any calls to\\n`purchaseItemAsync` are made, otherwise those transactions will be lost. You should **set the\\npurchase listener globally**, and not inside a specific screen, to ensure that you receive\\nincomplete transactions, subscriptions, and deferred transactions.","text":"Purchases can either be instantiated by the user (via `purchaseItemAsync`) or they can come from\\nsubscription renewals or unfinished transactions on iOS (e.g. if your app exits before\\n`finishTransactionAsync` was called).\\n\\n> Note that on iOS, the results array will only contain one item: the one that was just purchased.\\nOn Android, it will return both finished and unfinished purchases, hence the array return type.\\nThis is because the Google Play Billing API detects purchase updates but doesn\'t differentiate\\nwhich item was just purchased, therefore there\'s no good way to tell but in general it will be\\nwhichever purchase has `acknowledged` set to `false`, so those are the ones that you have to\\nhandle in the response. Consumed items will not be returned however, so if you consume an item\\nthat record will be gone and no longer appear in the results array when a new purchase is made.\\n","tags":[{"tag":"example","text":"\\n```ts\\n// Set purchase listener\\n setPurchaseListener(({ responseCode, results, errorCode }) => {\\n  // Purchase was successful\\n  if (responseCode === IAPResponseCode.OK) {\\n    results.forEach(purchase => {\\n      if (!purchase.acknowledged) {\\n        console.log(`Successfully purchased ${purchase.productId}`);\\n        // Process transaction here and unlock content...\\n\\n        // Then when you\'re done\\n        finishTransactionAsync(purchase, true);\\n      }\\n    });\\n  } else if (responseCode === IAPResponseCode.USER_CANCELED) {\\n    console.log(\'User canceled the transaction\');\\n  } else if (responseCode === IAPResponseCode.DEFERRED) {\\n    console.log(\'User does not have permissions to buy but requested parental approval (iOS only)\');\\n  } else {\\n    console.warn(`Something went wrong with the purchase. Received errorCode ${errorCode}`);\\n  }\\n});\\n```"}]},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"shortText":"The callback function you want to run when there is an update to the purchases.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"result","kind":32768,"kindString":"Parameter","type":{"type":"reference","typeArguments":[{"type":"reference","name":"InAppPurchase"}],"name":"IAPQueryResponse"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}]}')},"+Pz5":function(e,w,n){"use strict";Object.defineProperty(w,"__esModule",{value:!0});var c=n("NOby"),p=n("T0BQ"),d=r("text"),a=r("string"),m={resolveAll:s()};function r(o){return{tokenize:t,resolveAll:s(o==="text"?i:void 0)};function t(l){var k=this,g=this.parser.constructs[o],h=l.attempt(g,f,S);return f;function f(y){return P(y)?h(y):S(y)}function S(y){if(y===null){l.consume(y);return}return l.enter("data"),l.consume(y),b}function b(y){return P(y)?(l.exit("data"),h(y)):(l.consume(y),b)}function P(y){var v=g[y],u=-1;if(y===null)return!0;if(v){for(;++u<v.length;)if(!v[u].previous||v[u].previous.call(k,k.previous))return!0}}}}function s(o){return t;function t(l,k){for(var g=-1,h;++g<=l.length;)h===void 0?l[g]&&l[g][1].type==="data"&&(h=g,g++):(!l[g]||l[g][1].type!=="data")&&(g!==h+2&&(l[h][1].end=l[g-1][1].end,l.splice(h+2,g-h-2),g=h+2),h=void 0);return o?o(l,k):l}}function i(o,t){for(var l=-1,k,g,h,f,S,b,P,y;++l<=o.length;)if((l===o.length||o[l][1].type==="lineEnding")&&o[l-1][1].type==="data"){for(g=o[l-1][1],k=t.sliceStream(g),f=k.length,S=-1,b=0,P=void 0;f--;)if(h=k[f],typeof h=="string"){for(S=h.length;h.charCodeAt(S-1)===32;)b++,S--;if(S)break;S=-1}else if(h===-2)P=!0,b++;else if(h!==-1){f++;break}b&&(y={type:l===o.length||P||b<2?"lineSuffix":"hardBreakTrailing",start:{line:g.end.line,column:g.end.column-b,offset:g.end.offset-b,_index:g.start._index+f,_bufferIndex:f?S:g.start._bufferIndex+S},end:p(g.end)},g.end=p(y.start),g.start.offset===g.end.offset?c(g,y):(o.splice(l,0,["enter",y,t],["exit",y,t]),l+=2)),l++}return o}w.resolver=m,w.string=a,w.text=d},"+Z/f":function(e){e.exports=JSON.parse('{"name":"expo-screen-orientation","kind":1,"kindString":"Project","originalName":"","children":[{"name":"Orientation","kind":8,"kindString":"Enumeration","children":[{"name":"LANDSCAPE_LEFT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Left landscape interface orientation."},"defaultValue":"3"},{"name":"LANDSCAPE_RIGHT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Right landscape interface orientation."},"defaultValue":"4"},{"name":"PORTRAIT_DOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Upside down portrait interface orientation."},"defaultValue":"2"},{"name":"PORTRAIT_UP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Right-side up portrait interface orientation."},"defaultValue":"1"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An unknown screen orientation. For example, the device is flat, perhaps on a table."},"defaultValue":"0"}]},{"name":"OrientationLock","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values can be passed to the [`lockAsync`](#screenorientationlockasyncorientationlock)\\nmethod.\\n> __Note:__ `OrientationLock.ALL` and `OrientationLock.PORTRAIT` are invalid on devices which\\ndon\'t support `OrientationLock.PORTRAIT_DOWN`."},"children":[{"name":"ALL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"All four possible orientations"},"defaultValue":"1"},{"name":"DEFAULT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The default orientation. On iOS, this will allow all orientations except `Orientation.PORTRAIT_DOWN`.\\nOn Android, this lets the system decide the best orientation."},"defaultValue":"0"},{"name":"LANDSCAPE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Any landscape orientation."},"defaultValue":"5"},{"name":"LANDSCAPE_LEFT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Left landscape only."},"defaultValue":"6"},{"name":"LANDSCAPE_RIGHT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Right landscape only."},"defaultValue":"7"},{"name":"OTHER","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A platform specific orientation. This is not a valid policy that can be applied in [`lockAsync`](#screenorientationlockasyncorientationlock)."},"defaultValue":"8"},{"name":"PORTRAIT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Any portrait orientation."},"defaultValue":"2"},{"name":"PORTRAIT_DOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Upside down portrait only."},"defaultValue":"4"},{"name":"PORTRAIT_UP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Right-side up portrait only."},"defaultValue":"3"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An unknown screen orientation lock. This is not a valid policy that can be applied in [`lockAsync`](#screenorientationlockasyncorientationlock)."},"defaultValue":"9"}]},{"name":"SizeClassIOS","kind":8,"kindString":"Enumeration","comment":{"shortText":"Each iOS device has a default set of [size classes](https://developer.apple.com/library/archive/featuredarticles/ViewControllerPGforiPhoneOS/TheAdaptiveModel.html)\\nthat you can use as a guide when designing your interface."},"children":[{"name":"COMPACT","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"REGULAR","kind":16,"kindString":"Enumeration member","defaultValue":"0"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","defaultValue":"2"}]},{"name":"WebOrientation","kind":8,"kindString":"Enumeration","children":[{"name":"LANDSCAPE_PRIMARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"landscape-primary\\""},{"name":"LANDSCAPE_SECONDARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"landscape-secondary\\""},{"name":"PORTRAIT_PRIMARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"portrait-primary\\""},{"name":"PORTRAIT_SECONDARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"portrait-secondary\\""}]},{"name":"WebOrientationLock","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum representing the lock policies that can be applied on the web platform, modelled after\\nthe [W3C specification](https://w3c.github.io/screen-orientation/#dom-orientationlocktype).\\nThese values can be applied through the [`lockPlatformAsync`](#screenorientationlockplatformasyncplatforminfo)\\nmethod."},"children":[{"name":"ANY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"any\\""},{"name":"LANDSCAPE","kind":16,"kindString":"Enumeration member","defaultValue":"\\"landscape\\""},{"name":"LANDSCAPE_PRIMARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"landscape-primary\\""},{"name":"LANDSCAPE_SECONDARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"landscape-secondary\\""},{"name":"NATURAL","kind":16,"kindString":"Enumeration member","defaultValue":"\\"natural\\""},{"name":"PORTRAIT","kind":16,"kindString":"Enumeration member","defaultValue":"\\"portrait\\""},{"name":"PORTRAIT_PRIMARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"portrait-primary\\""},{"name":"PORTRAIT_SECONDARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"portrait-secondary\\""},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","defaultValue":"\\"unknown\\""}]},{"name":"OrientationChangeEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"orientationInfo","kind":1024,"kindString":"Property","comment":{"shortText":"The current `ScreenOrientationInfo` of the device."},"type":{"type":"reference","name":"ScreenOrientationInfo"}},{"name":"orientationLock","kind":1024,"kindString":"Property","comment":{"shortText":"The current `OrientationLock` of the device."},"type":{"type":"reference","name":"OrientationLock"}}]}}},{"name":"OrientationChangeListener","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"OrientationChangeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"PlatformOrientationInfo","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"screenOrientationArrayIOS","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of orientations to allow on the iOS platform.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"reference","name":"Orientation"}}},{"name":"screenOrientationConstantAndroid","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A constant to set using the Android native [API](https://developer.android.com/reference/android/R.attr.html#screenOrientation).\\nFor example, in order to set the lock policy to [unspecified](https://developer.android.com/reference/android/content/pm/ActivityInfo.html#SCREEN_ORIENTATION_UNSPECIFIED),\\n`-1` should be passed in.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"screenOrientationLockWeb","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A web orientation lock to apply in the browser.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"reference","name":"WebOrientationLock"}}]}}},{"name":"ScreenOrientationInfo","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"horizontalSizeClass","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The [horizontal size class](https://developer.apple.com/library/archive/featuredarticles/ViewControllerPGforiPhoneOS/TheAdaptiveModel.html)\\nof the device.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"SizeClassIOS"}},{"name":"orientation","kind":1024,"kindString":"Property","comment":{"shortText":"The current orientation of the device."},"type":{"type":"reference","name":"Orientation"}},{"name":"verticalSizeClass","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The [vertical size class](https://developer.apple.com/library/archive/featuredarticles/ViewControllerPGforiPhoneOS/TheAdaptiveModel.html)\\nof the device.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"SizeClassIOS"}}]}}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"addOrientationChangeListener","kind":64,"kindString":"Function","signatures":[{"name":"addOrientationChangeListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Invokes the `listener` function when the screen orientation changes from `portrait` to `landscape`\\nor from `landscape` to `portrait`. For example, it won\'t be invoked when screen orientation\\nchange from `portrait up` to `portrait down`, but it will be called when there was a change from\\n`portrait up` to `landscape left`."},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"Each orientation update will pass an object with the new [`OrientationChangeEvent`](#screenorientationorientationchangeevent)\\nto the listener.\\n"},"type":{"type":"reference","name":"OrientationChangeListener"}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getOrientationAsync","kind":64,"kindString":"Function","signatures":[{"name":"getOrientationAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current screen orientation.","returns":"Returns a promise that fulfils with an [`Orientation`](#screenorientationorientation)\\nvalue that reflects the current screen orientation.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_GET_ORIENTATION_LOCK` - __Android Only.__ An unknown error occurred\\n  when trying to get the system lock.\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Orientation"}],"name":"Promise"}}]},{"name":"getOrientationLockAsync","kind":64,"kindString":"Function","signatures":[{"name":"getOrientationLockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current screen orientation lock type.","returns":"Returns a promise which fulfils with an [`OrientationLock`](#screenorientationorientationlock)\\nvalue.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"OrientationLock"}],"name":"Promise"}}]},{"name":"getPlatformOrientationLockAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPlatformOrientationLockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the platform specific screen orientation lock type.","returns":"Returns a promise which fulfils with a [`PlatformOrientationInfo`](#screenorientationplatformorientationinfo)\\nvalue.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_GET_PLATFORM_ORIENTATION_LOCK`\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PlatformOrientationInfo"}],"name":"Promise"}}]},{"name":"lockAsync","kind":64,"kindString":"Function","signatures":[{"name":"lockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Lock the screen orientation to a particular `OrientationLock`.","returns":"Returns a promise with `void` value, which fulfils when the orientation is set.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_INVALID_ORIENTATION_LOCK` - An invalid [`OrientationLock`](#screenorientationorientationlock)\\n  was passed in.\\n- `ERR_SCREEN_ORIENTATION_UNSUPPORTED_ORIENTATION_LOCK` - The platform does not support the\\n  orientation lock policy.\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n","tags":[{"tag":"example","text":"\\n```ts\\nasync function changeScreenOrientation() {\\n  await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE_LEFT);\\n}\\n```\\n"}]},"parameters":[{"name":"orientationLock","kind":32768,"kindString":"Parameter","comment":{"shortText":"The orientation lock to apply. See the [`OrientationLock`](#screenorientationorientationlock)\\nenum for possible values."},"type":{"type":"reference","name":"OrientationLock"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"lockPlatformAsync","kind":64,"kindString":"Function","signatures":[{"name":"lockPlatformAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns a promise with `void` value, resolving when the orientation is set and rejecting\\nif an invalid option or value is passed.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_INVALID_ORIENTATION_LOCK` - __iOS Only.__ An invalid [`OrientationLock`](#screenorientationorientationlock)\\n  was passed in.\\n- `ERR_SCREEN_ORIENTATION_UNSUPPORTED_ORIENTATION_LOCK` - The platform does not support the\\n  orientation lock policy.\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"The platform specific lock to apply. See the [`PlatformOrientationInfo`](#screenorientationplatformorientationinfo)\\nobject type for the different platform formats."},"type":{"type":"reference","name":"PlatformOrientationInfo"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"removeOrientationChangeListener","kind":64,"kindString":"Function","signatures":[{"name":"removeOrientationChangeListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unsubscribes the listener associated with the `Subscription` object from all orientation change\\nupdates."},"parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","comment":{"shortText":"A subscription object that manages the updates passed to a listener function\\non an orientation change.\\n"},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeOrientationChangeListeners","kind":64,"kindString":"Function","signatures":[{"name":"removeOrientationChangeListeners","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes all listeners subscribed to orientation change updates."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"supportsOrientationLockAsync","kind":64,"kindString":"Function","signatures":[{"name":"supportsOrientationLockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the [`OrientationLock`](#screenorientationorientationlock) policy is supported on\\nthe device.","returns":"Returns a promise that resolves to a `boolean` value that reflects whether or not the\\norientationLock is supported.\\n"},"parameters":[{"name":"orientationLock","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"OrientationLock"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"unlockAsync","kind":64,"kindString":"Function","signatures":[{"name":"unlockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the screen orientation back to the `OrientationLock.DEFAULT` policy.","returns":"Returns a promise with `void` value, which fulfils when the orientation is set.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},"+ZFF":function(e){e.exports=JSON.parse('{"name":"expo-media-library","kind":1,"kindString":"Project","originalName":"","children":[{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"EXPermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"Album","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"approximateLocation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__iOS Only.__ Apply only to albums whose type is `\'moment\'`. Approximated location of all assets in the moment."},"type":{"type":"reference","name":"Location"}},{"name":"assetCount","kind":1024,"kindString":"Property","comment":{"shortText":"Estimated number of assets in the album"},"type":{"type":"intrinsic","name":"number"}},{"name":"endTime","kind":1024,"kindString":"Property","comment":{"shortText":"__iOS Only.__ Apply only to albums whose type is `\'moment\'`. Latest creation timestamp of all assets in the moment."},"type":{"type":"intrinsic","name":"number"}},{"name":"id","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"locationNames","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":" __iOS Only.__ Apply only to albums whose type is `\'moment\'`. Names of locations grouped in the moment."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"startTime","kind":1024,"kindString":"Property","comment":{"shortText":"__iOS Only.__ Apply only to albums whose type is `\'moment\'`. Earliest creation timestamp of all assets in the moment."},"type":{"type":"intrinsic","name":"number"}},{"name":"title","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__iOS Only.__ The type of the assets album."},"type":{"type":"reference","name":"AlbumType"}}]}}},{"name":"AlbumRef","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"Album"},{"type":"intrinsic","name":"string"}]}},{"name":"AlbumType","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"album"},{"type":"literal","value":"moment"},{"type":"literal","value":"smartAlbum"}]}},{"name":"AlbumsOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"includeSmartAlbums","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"Asset","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"albumId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__Android Only.__ Album ID that the asset belongs to."},"type":{"type":"intrinsic","name":"string"}},{"name":"creationTime","kind":1024,"kindString":"Property","comment":{"shortText":"File creation timestamp."},"type":{"type":"intrinsic","name":"number"}},{"name":"duration","kind":1024,"kindString":"Property","comment":{"shortText":"Duration of the video or audio asset in seconds."},"type":{"type":"intrinsic","name":"number"}},{"name":"filename","kind":1024,"kindString":"Property","comment":{"shortText":"Filename of the asset."},"type":{"type":"intrinsic","name":"string"}},{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"Height of the image or video."},"type":{"type":"intrinsic","name":"number"}},{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Internal ID that represents an asset."},"type":{"type":"intrinsic","name":"string"}},{"name":"mediaSubtypes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__iOS Only.__ An array of media subtypes."},"type":{"type":"array","elementType":{"type":"reference","name":"MediaSubtype"}}},{"name":"mediaType","kind":1024,"kindString":"Property","comment":{"shortText":"Media type."},"type":{"type":"reference","name":"MediaTypeValue"}},{"name":"modificationTime","kind":1024,"kindString":"Property","comment":{"shortText":"Last modification timestamp."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"URI that points to the asset. `assets://*` (iOS), `file://*` (Android)"},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"Width of the image or video."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"AssetInfo","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"Asset"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"exif","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"EXIF metadata associated with the image."},"type":{"type":"intrinsic","name":"object"}},{"name":"isFavorite","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__iOS Only.__ Whether the asset is marked as favorite."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isNetworkAsset","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__iOS Only.__ This field is available only if flag `shouldDownloadFromNetwork` is set to `false`.\\nWhether the asset is stored on the network (iCloud on iOS)"},"type":{"type":"intrinsic","name":"boolean"}},{"name":"localUri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Local URI for the asset."},"type":{"type":"intrinsic","name":"string"}},{"name":"location","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"GPS location if available."},"type":{"type":"reference","name":"Location"}},{"name":"orientation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__iOS Only.__ Display orientation of the image. Orientation is available only for assets whose\\n`mediaType` is `MediaType.photo`. Value will range from 1 to 8, see [EXIF orientation specification](http://sylvana.net/jpegcrop/exif_orientation.html)\\nfor more details."},"type":{"type":"intrinsic","name":"number"}}]}}]}},{"name":"AssetRef","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"Asset"},{"type":"intrinsic","name":"string"}]}},{"name":"AssetsOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"after","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Asset ID of the last item returned on the previous page."},"type":{"type":"reference","name":"AssetRef"}},{"name":"album","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"[Album](#album) or its ID to get assets from specific album."},"type":{"type":"reference","name":"AlbumRef"}},{"name":"createdAfter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"`Date` object or Unix timestamp in milliseconds limiting returned assets only to those that\\nwere created after this date."},"type":{"type":"union","types":[{"type":"reference","name":"Date"},{"type":"intrinsic","name":"number"}]}},{"name":"createdBefore","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Similarly as `createdAfter`, but limits assets only to those that were created before specified\\ndate."},"type":{"type":"union","types":[{"type":"reference","name":"Date"},{"type":"intrinsic","name":"number"}]}},{"name":"first","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The maximum number of items on a single page.","tags":[{"tag":"default","text":"`20`\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"mediaType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of [MediaTypeValue](#expomedialibrarymediatypevalue)s or a single `MediaTypeValue`.","tags":[{"tag":"default","text":"`MediaType.photo`\\n"}]},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"MediaTypeValue"}},{"type":"reference","name":"MediaTypeValue"}]}},{"name":"sortBy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of [`SortByValue`](#sortbyvalue)s or a single `SortByValue` value. By default, all\\nkeys are sorted in descending order, however you can also pass a pair `[key, ascending]` where\\nthe second item is a `boolean` value that means whether to use ascending order. Note that if\\nthe `SortBy.default` key is used, then `ascending` argument will not matter. Earlier items have\\nhigher priority when sorting out the results.\\nIf empty, this method will use the default sorting that is provided by the platform."},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"SortByValue"}},{"type":"reference","name":"SortByValue"}]}}]}}},{"name":"Location","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"latitude","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}},{"name":"MediaLibraryAssetInfoQueryOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"shouldDownloadFromNetwork","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether allow the asset to be downloaded from network. Only available in iOS with iCloud assets.","tags":[{"tag":"default","text":"`true`\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"MediaLibraryAssetsChangeEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"deletedAssets","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Available only if `hasIncrementalChanges` is `true`.\\nArray of [`Asset`](#asset)s that have been deleted from the library."},"type":{"type":"array","elementType":{"type":"reference","name":"Asset"}}},{"name":"hasIncrementalChanges","kind":1024,"kindString":"Property","comment":{"shortText":"Whether the media library\'s changes could be described as \\"incremental changes\\".\\n`true` indicates the changes are described by the `insertedAssets`, `deletedAssets` and\\n`updatedAssets` values. `false` indicates that the scope of changes is too large and you\\nshould perform a full assets reload (eg. a user has changed access to individual assets in the\\nmedia library)."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"insertedAssets","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Available only if `hasIncrementalChanges` is `true`.\\nArray of [`Asset`](#asset)s that have been inserted to the library."},"type":{"type":"array","elementType":{"type":"reference","name":"Asset"}}},{"name":"updatedAssets","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Available only if `hasIncrementalChanges` is `true`.\\nArray of [`Asset`](#asset)s that have been updated or completed downloading from network\\nstorage (iCloud on iOS)."},"type":{"type":"array","elementType":{"type":"reference","name":"Asset"}}}]}}},{"name":"MediaSubtype","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"depthEffect"},{"type":"literal","value":"hdr"},{"type":"literal","value":"highFrameRate"},{"type":"literal","value":"livePhoto"},{"type":"literal","value":"panorama"},{"type":"literal","value":"screenshot"},{"type":"literal","value":"stream"},{"type":"literal","value":"timelapse"}]}},{"name":"MediaTypeObject","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"audio","kind":1024,"kindString":"Property","type":{"type":"literal","value":"audio"}},{"name":"photo","kind":1024,"kindString":"Property","type":{"type":"literal","value":"photo"}},{"name":"unknown","kind":1024,"kindString":"Property","type":{"type":"literal","value":"unknown"}},{"name":"video","kind":1024,"kindString":"Property","type":{"type":"literal","value":"video"}}]}}},{"name":"MediaTypeValue","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"audio"},{"type":"literal","value":"photo"},{"type":"literal","value":"video"},{"type":"literal","value":"unknown"}]}},{"name":"PagedInfo","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter"}],"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"assets","kind":1024,"kindString":"Property","comment":{"shortText":"A page of [`Asset`](#asset)s fetched by the query."},"type":{"type":"array","elementType":{"type":"reference","name":"T"}}},{"name":"endCursor","kind":1024,"kindString":"Property","comment":{"shortText":"ID of the last fetched asset. It should be passed as `after` option in order to get the\\nnext page."},"type":{"type":"intrinsic","name":"string"}},{"name":"hasNextPage","kind":1024,"kindString":"Property","comment":{"shortText":"Whether there are more assets to fetch."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"totalCount","kind":1024,"kindString":"Property","comment":{"shortText":"Estimated total number of assets that match the query."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"PermissionResponse","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"EXPermissionResponse"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accessPrivileges","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates if your app has access to the whole or only part of the photo library. Possible values are:\\n- `\'all\'` if the user granted your app access to the whole photo library\\n- `\'limited\'` if the user granted your app access only to selected photos (only available on iOS 14.0+)\\n- `\'none\'` if user denied or hasn\'t yet granted the permission"},"type":{"type":"union","types":[{"type":"literal","value":"all"},{"type":"literal","value":"limited"},{"type":"literal","value":"none"}]}}]}}]}},{"name":"SortByKey","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"mediaType"},{"type":"literal","value":"width"},{"type":"literal","value":"height"},{"type":"literal","value":"creationTime"},{"type":"literal","value":"modificationTime"},{"type":"literal","value":"duration"}]}},{"name":"SortByObject","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"creationTime","kind":1024,"kindString":"Property","type":{"type":"literal","value":"creationTime"}},{"name":"default","kind":1024,"kindString":"Property","type":{"type":"literal","value":"default"}},{"name":"duration","kind":1024,"kindString":"Property","type":{"type":"literal","value":"duration"}},{"name":"height","kind":1024,"kindString":"Property","type":{"type":"literal","value":"height"}},{"name":"mediaType","kind":1024,"kindString":"Property","type":{"type":"literal","value":"mediaType"}},{"name":"modificationTime","kind":1024,"kindString":"Property","type":{"type":"literal","value":"modificationTime"}},{"name":"width","kind":1024,"kindString":"Property","type":{"type":"literal","value":"width"}}]}}},{"name":"SortByValue","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"tuple","elements":[{"type":"reference","name":"SortByKey"},{"type":"intrinsic","name":"boolean"}]},{"type":"reference","name":"SortByKey"}]}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"MediaType","kind":32,"kindString":"Variable","comment":{"shortText":"Possible media types."},"type":{"type":"reference","name":"MediaTypeObject"},"defaultValue":"..."},{"name":"SortBy","kind":32,"kindString":"Variable","comment":{"shortText":"Supported keys that can be used to sort `getAssetsAsync` results."},"type":{"type":"reference","name":"SortByObject"},"defaultValue":"..."},{"name":"addAssetsToAlbumAsync","kind":64,"kindString":"Function","signatures":[{"name":"addAssetsToAlbumAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Adds array of assets to the album.","text":"On Android, by default it copies assets from the current album to provided one, however it\'s also\\npossible to move them by passing `false` as `copyAssets` argument.In case they\'re copied you\\nshould keep in mind that `getAssetsAsync` will return duplicated assets.","returns":"Returns promise which fulfils with `true` if the assets were successfully added to\\nthe album.\\n"},"parameters":[{"name":"assets","kind":32768,"kindString":"Parameter","comment":{"text":"An array of [Asset](#asset) or their IDs."},"type":{"type":"union","types":[{"type":"reference","name":"AssetRef"},{"type":"array","elementType":{"type":"reference","name":"AssetRef"}}]}},{"name":"album","kind":32768,"kindString":"Parameter","comment":{"text":"An [Album](#album) or its ID."},"type":{"type":"reference","name":"AlbumRef"}},{"name":"copy","kind":32768,"kindString":"Parameter","comment":{"text":"__Android only.__ Whether to copy assets to the new album instead of move them.\\nDefaults to `true`."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"true"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"addListener","kind":64,"kindString":"Function","signatures":[{"name":"addListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribes for updates in user\'s media library.","returns":"An [`Subscription`](#subscription) object that you can call `remove()` on when you would\\nlike to unsubscribe the listener.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"text":"A callback that is fired when any assets have been inserted or deleted from the\\nlibrary, or when the user changes which assets they\'re allowing access to. On Android it\'s\\ninvoked with an empty object. On iOS it\'s invoked with [`MediaLibraryAssetsChangeEvent`](#medialibraryassetschangeevent)\\nobject."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"MediaLibraryAssetsChangeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"albumNeedsMigrationAsync","kind":64,"kindString":"Function","signatures":[{"name":"albumNeedsMigrationAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks if the album should be migrated to a different location. In other words, it checks if the\\napplication has the write permission to the album folder. If not, it returns `true`, otherwise `false`.\\n> Note: For **Android below R**, **web** or **iOS**, this function always returns `false`.","returns":"Returns a promise which fulfils with `true` if the album should be migrated.\\n"},"parameters":[{"name":"album","kind":32768,"kindString":"Parameter","comment":{"text":"An [Album](#album) or its ID."},"type":{"type":"reference","name":"AlbumRef"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"createAlbumAsync","kind":64,"kindString":"Function","signatures":[{"name":"createAlbumAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates an album with given name and initial asset. The asset parameter is required on Android,\\nsince it\'s not possible to create empty album on this platform. On Android, by default it copies\\ngiven asset from the current album to the new one, however it\'s also possible to move it by\\npassing `false` as `copyAsset` argument.\\nIn case it\'s copied you should keep in mind that `getAssetsAsync` will return duplicated asset.","returns":"Newly created [`Album`](#album).\\n"},"parameters":[{"name":"albumName","kind":32768,"kindString":"Parameter","comment":{"text":"Name of the album to create."},"type":{"type":"intrinsic","name":"string"}},{"name":"asset","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"An [Asset](#asset) or its ID (required on Android)."},"type":{"type":"reference","name":"AssetRef"}},{"name":"copyAsset","kind":32768,"kindString":"Parameter","comment":{"text":"__Android Only.__ Whether to copy asset to the new album instead of move it.\\nDefaults to `true`."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"true"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Album"}],"name":"Promise"}}]},{"name":"createAssetAsync","kind":64,"kindString":"Function","signatures":[{"name":"createAssetAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates an asset from existing file. The most common use case is to save a picture taken by [Camera](../camera).\\nThis method requires `CAMERA_ROLL` permission.","returns":"A promise which fulfils with an object representing an [`Asset`](#asset).\\n","tags":[{"tag":"example","text":"\\n```js\\nconst { uri } = await Camera.takePictureAsync();\\nconst asset = await MediaLibrary.createAssetAsync(uri);\\n```"}]},"parameters":[{"name":"localUri","kind":32768,"kindString":"Parameter","comment":{"text":"A URI to the image or video file. It must contain an extension. On Android it\\nmust be a local path, so it must start with `file:///`"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Asset"}],"name":"Promise"}}]},{"name":"deleteAlbumsAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteAlbumsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Deletes given albums from the library. On Android by default it deletes assets belonging to given\\nalbums from the library. On iOS it doesn\'t delete these assets, however it\'s possible to do by\\npassing `true` as `deleteAssets`.","returns":"Returns a promise which fulfils with `true` if the albums were successfully deleted from\\nthe library.\\n"},"parameters":[{"name":"albums","kind":32768,"kindString":"Parameter","comment":{"text":"An array of [`Album`](#asset)s or their IDs."},"type":{"type":"union","types":[{"type":"reference","name":"AlbumRef"},{"type":"array","elementType":{"type":"reference","name":"AlbumRef"}}]}},{"name":"assetRemove","kind":32768,"kindString":"Parameter","comment":{"text":"__iOS Only.__ Whether to also delete assets belonging to given albums.\\nDefaults to `false`."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"deleteAssetsAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteAssetsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Deletes assets from the library. On iOS it deletes assets from all albums they belong to, while\\non Android it keeps all copies of them (album is strictly connected to the asset). Also, there is\\nadditional dialog on iOS that requires user to confirm this action.","returns":"Returns promise which fulfils with `true` if the assets were successfully deleted.\\n"},"parameters":[{"name":"assets","kind":32768,"kindString":"Parameter","comment":{"text":"An array of [Asset](#asset) or their IDs."},"type":{"type":"union","types":[{"type":"reference","name":"AssetRef"},{"type":"array","elementType":{"type":"reference","name":"AssetRef"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"getAlbumAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAlbumAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Queries for an album with a specific name.","returns":"An object representing an [`Album`](#album), if album with given name exists, otherwise\\nreturns `null`.\\n"},"parameters":[{"name":"title","kind":32768,"kindString":"Parameter","comment":{"text":"Name of the album to look for."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Album"}],"name":"Promise"}}]},{"name":"getAlbumsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAlbumsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Queries for user-created albums in media gallery.","returns":"A promise which fulfils with an array of [`Album`](#asset)s. Depending on Android version,\\nroot directory of your storage may be listed as album titled `\\"0\\"` or unlisted at all.\\n"},"parameters":[{"name":"__namedParameters","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AlbumsOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Album"}}],"name":"Promise"}}]},{"name":"getAssetInfoAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAssetInfoAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Provides more information about an asset, including GPS location, local URI and EXIF metadata.","returns":"(#assetinfo) object, which is an `Asset` extended by an additional fields.\\n"},"parameters":[{"name":"asset","kind":32768,"kindString":"Parameter","comment":{"text":"An [Asset](#asset) or its ID."},"type":{"type":"reference","name":"AssetRef"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"MediaLibraryAssetInfoQueryOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AssetInfo"}],"name":"Promise"}}]},{"name":"getAssetsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAssetsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Fetches a page of assets matching the provided criteria.","returns":"A promise that fulfils with to [`PagedInfo`](#pagedinfo) object with array of [`Asset`](#asset)s.\\n"},"parameters":[{"name":"assetsOptions","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"AssetsOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"Asset"}],"name":"PagedInfo"}],"name":"Promise"}}]},{"name":"getMomentsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMomentsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"__iOS Only.__ Fetches a list of moments, which is a group of assets taken around the same place\\nand time.","returns":"An array of [albums](#album) whose type is `moment`.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing media library.","returns":"A promise that fulfils with [`PermissionResponse`](#permissionresponse) object.\\n"},"parameters":[{"name":"writeOnly","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the Media Library API is enabled on the current device.","returns":"A promise which fulfils with a `boolean`, indicating whether the Media Library API is\\navailable on the current device.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"migrateAlbumIfNeededAsync","kind":64,"kindString":"Function","signatures":[{"name":"migrateAlbumIfNeededAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Moves album content to the special media directories on **Android R** or **above** if needed.\\nThose new locations are in line with the Android `scoped storage` - so your application won\'t\\nlose write permission to those directories in the future.","text":"This method does nothing if:\\n- app is running on **iOS**, **web** or **Android below R**\\n- app has **write permission** to the album folder\\n\\nThe migration is possible when the album contains only compatible files types.\\nFor instance, movies and pictures are compatible with each other, but music and pictures are not.\\nIf automatic migration isn\'t possible, the function will be rejected.\\nIn that case, you can use methods from the `expo-file-system` to migrate all your files manually.\\n\\n# Why do you need to migrate files?\\n__Android R__ introduced a lot of changes in the storage system. Now applications can\'t save\\nanything to the root directory. The only available locations are from the `MediaStore` API.\\nUnfortunately, the media library stored albums in folders for which, because of those changes,\\nthe application doesn\'t have permissions anymore. However, it doesn\'t mean you need to migrate\\nall your albums. If your application doesn\'t add assets to albums, you don\'t have to migrate.\\nEverything will work as it used to. You can read more about scoped storage in [the Android documentation](https://developer.android.com/about/versions/11/privacy/storage).\\n","returns":"A promise which fulfils to `void`.\\n"},"parameters":[{"name":"album","kind":32768,"kindString":"Parameter","comment":{"text":"An [Album](#album) or its ID."},"type":{"type":"reference","name":"AlbumRef"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"presentPermissionsPickerAsync","kind":64,"kindString":"Function","signatures":[{"name":"presentPermissionsPickerAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"__Available only on iOS >= 14.__ Allows the user to update the assets that your app has access to.\\nThe system modal is only displayed if the user originally allowed only `limited` access to their\\nmedia library, otherwise this method is a no-op.","returns":"A promise that either rejects if the method is unavailable (meaning the device is not\\nrunning iOS >= 14), or resolves to `void`.\\n> __Note:__ This method doesn\'t inform you if the user changes which assets your app has access to.\\nFor that information, you need to subscribe for updates to the user\'s media library using [addListener(listener)](#medialibraryaddlistenerlistener).\\nIf `hasIncrementalChanges` is `false`, the user changed their permissions.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"removeAllListeners","kind":64,"kindString":"Function","signatures":[{"name":"removeAllListeners","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes all listeners."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeAssetsFromAlbumAsync","kind":64,"kindString":"Function","signatures":[{"name":"removeAssetsFromAlbumAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes given assets from album.","text":"On Android, album will be automatically deleted if there are no more assets inside.","returns":"Returns promise which fulfils with `true` if the assets were successfully removed from\\nthe album.\\n"},"parameters":[{"name":"assets","kind":32768,"kindString":"Parameter","comment":{"text":"An array of [Asset](#asset) or their IDs."},"type":{"type":"union","types":[{"type":"reference","name":"AssetRef"},{"type":"array","elementType":{"type":"reference","name":"AssetRef"}}]}},{"name":"album","kind":32768,"kindString":"Parameter","comment":{"text":"An [Album](#album) or its ID."},"type":{"type":"reference","name":"AlbumRef"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"removeSubscription","kind":64,"kindString":"Function","signatures":[{"name":"removeSubscription","kind":4096,"kindString":"Call signature","parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing media in user\'s media library.","returns":"A promise that fulfils with [`PermissionResponse`](#permissionresponse) object.\\n"},"parameters":[{"name":"writeOnly","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"saveToLibraryAsync","kind":64,"kindString":"Function","signatures":[{"name":"saveToLibraryAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Saves the file at given `localUri` to the user\'s media library. Unlike [`createAssetAsync()`](#medialibrarycreateassetasynclocaluri),\\nThis method doesn\'t return created asset.\\nOn __iOS 11+__, it\'s possible to use this method without asking for `CAMERA_ROLL` permission,\\nhowever then yours `Info.plist` should have `NSPhotoLibraryAddUsageDescription` key."},"parameters":[{"name":"localUri","kind":32768,"kindString":"Parameter","comment":{"text":"A URI to the image or video file. It must contain an extension. On Android it\\nmust be a local path, so it must start with `file:///`.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"usePermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"usePermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to access the media library.\\nThis uses both `requestPermissionsAsync` and `getPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = MediaLibrary.usePermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"writeOnly","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}]}}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}]}')},"+kOb":function(e){e.exports=JSON.parse('{"name":"expo-screen-orientation","kind":1,"kindString":"Project","originalName":"","children":[{"name":"Orientation","kind":8,"kindString":"Enumeration","children":[{"name":"LANDSCAPE_LEFT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Left landscape interface orientation."},"defaultValue":"3"},{"name":"LANDSCAPE_RIGHT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Right landscape interface orientation."},"defaultValue":"4"},{"name":"PORTRAIT_DOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Upside down portrait interface orientation."},"defaultValue":"2"},{"name":"PORTRAIT_UP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Right-side up portrait interface orientation."},"defaultValue":"1"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An unknown screen orientation. For example, the device is flat, perhaps on a table."},"defaultValue":"0"}]},{"name":"OrientationLock","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values can be passed to the [`lockAsync`](#screenorientationlockasyncorientationlock)\\nmethod.\\n> __Note:__ `OrientationLock.ALL` and `OrientationLock.PORTRAIT` are invalid on devices which\\ndon\'t support `OrientationLock.PORTRAIT_DOWN`."},"children":[{"name":"ALL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"All four possible orientations"},"defaultValue":"1"},{"name":"DEFAULT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The default orientation. On iOS, this will allow all orientations except `Orientation.PORTRAIT_DOWN`.\\nOn Android, this lets the system decide the best orientation."},"defaultValue":"0"},{"name":"LANDSCAPE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Any landscape orientation."},"defaultValue":"5"},{"name":"LANDSCAPE_LEFT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Left landscape only."},"defaultValue":"6"},{"name":"LANDSCAPE_RIGHT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Right landscape only."},"defaultValue":"7"},{"name":"OTHER","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A platform specific orientation. This is not a valid policy that can be applied in [`lockAsync`](#screenorientationlockasyncorientationlock)."},"defaultValue":"8"},{"name":"PORTRAIT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Any portrait orientation."},"defaultValue":"2"},{"name":"PORTRAIT_DOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Upside down portrait only."},"defaultValue":"4"},{"name":"PORTRAIT_UP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Right-side up portrait only."},"defaultValue":"3"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An unknown screen orientation lock. This is not a valid policy that can be applied in [`lockAsync`](#screenorientationlockasyncorientationlock)."},"defaultValue":"9"}]},{"name":"SizeClassIOS","kind":8,"kindString":"Enumeration","comment":{"shortText":"Each iOS device has a default set of [size classes](https://developer.apple.com/library/archive/featuredarticles/ViewControllerPGforiPhoneOS/TheAdaptiveModel.html)\\nthat you can use as a guide when designing your interface."},"children":[{"name":"COMPACT","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"REGULAR","kind":16,"kindString":"Enumeration member","defaultValue":"0"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","defaultValue":"2"}]},{"name":"WebOrientation","kind":8,"kindString":"Enumeration","children":[{"name":"LANDSCAPE_PRIMARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"landscape-primary\\""},{"name":"LANDSCAPE_SECONDARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"landscape-secondary\\""},{"name":"PORTRAIT_PRIMARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"portrait-primary\\""},{"name":"PORTRAIT_SECONDARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"portrait-secondary\\""}]},{"name":"WebOrientationLock","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum representing the lock policies that can be applied on the web platform, modelled after\\nthe [W3C specification](https://w3c.github.io/screen-orientation/#dom-orientationlocktype).\\nThese values can be applied through the [`lockPlatformAsync`](#screenorientationlockplatformasyncplatforminfo)\\nmethod."},"children":[{"name":"ANY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"any\\""},{"name":"LANDSCAPE","kind":16,"kindString":"Enumeration member","defaultValue":"\\"landscape\\""},{"name":"LANDSCAPE_PRIMARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"landscape-primary\\""},{"name":"LANDSCAPE_SECONDARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"landscape-secondary\\""},{"name":"NATURAL","kind":16,"kindString":"Enumeration member","defaultValue":"\\"natural\\""},{"name":"PORTRAIT","kind":16,"kindString":"Enumeration member","defaultValue":"\\"portrait\\""},{"name":"PORTRAIT_PRIMARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"portrait-primary\\""},{"name":"PORTRAIT_SECONDARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"portrait-secondary\\""},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","defaultValue":"\\"unknown\\""}]},{"name":"OrientationChangeEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"orientationInfo","kind":1024,"kindString":"Property","comment":{"shortText":"The current `ScreenOrientationInfo` of the device."},"type":{"type":"reference","name":"ScreenOrientationInfo"}},{"name":"orientationLock","kind":1024,"kindString":"Property","comment":{"shortText":"The current `OrientationLock` of the device."},"type":{"type":"reference","name":"OrientationLock"}}]}}},{"name":"OrientationChangeListener","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"OrientationChangeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"PlatformOrientationInfo","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"screenOrientationArrayIOS","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__iOS Only.__ An array of orientations to allow on the iOS platform."},"type":{"type":"array","elementType":{"type":"reference","name":"Orientation"}}},{"name":"screenOrientationConstantAndroid","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__Android Only.__ A constant to set using the Android native [API](https://developer.android.com/reference/android/R.attr.html#screenOrientation).\\nFor example, in order to set the lock policy to [unspecified](https://developer.android.com/reference/android/content/pm/ActivityInfo.html#SCREEN_ORIENTATION_UNSPECIFIED),\\n`-1` should be passed in."},"type":{"type":"intrinsic","name":"number"}},{"name":"screenOrientationLockWeb","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__Web Only.__ A web orientation lock to apply in the browser."},"type":{"type":"reference","name":"WebOrientationLock"}}]}}},{"name":"ScreenOrientationInfo","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"horizontalSizeClass","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":" __iOS Only.__ The [horizontal size class](https://developer.apple.com/library/archive/featuredarticles/ViewControllerPGforiPhoneOS/TheAdaptiveModel.html)\\nof the device."},"type":{"type":"reference","name":"SizeClassIOS"}},{"name":"orientation","kind":1024,"kindString":"Property","comment":{"shortText":"The current orientation of the device."},"type":{"type":"reference","name":"Orientation"}},{"name":"verticalSizeClass","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":" __iOS Only.__ The [vertical size class](https://developer.apple.com/library/archive/featuredarticles/ViewControllerPGforiPhoneOS/TheAdaptiveModel.html)\\nof the device."},"type":{"type":"reference","name":"SizeClassIOS"}}]}}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"addOrientationChangeListener","kind":64,"kindString":"Function","signatures":[{"name":"addOrientationChangeListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Invokes the `listener` function when the screen orientation changes from `portrait` to `landscape`\\nor from `landscape` to `portrait`. For example, it won\'t be invoked when screen orientation\\nchange from `portrait up` to `portrait down`, but it will be called when there was a change from\\n`portrait up` to `landscape left`."},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"text":"Each orientation update will pass an object with the new [`OrientationChangeEvent`](#screenorientationorientationchangeevent)\\nto the listener.\\n"},"type":{"type":"reference","name":"OrientationChangeListener"}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getOrientationAsync","kind":64,"kindString":"Function","signatures":[{"name":"getOrientationAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current screen orientation.","returns":"Returns a promise that fulfils with an [`Orientation`](#screenorientationorientation)\\nvalue that reflects the current screen orientation.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_GET_ORIENTATION_LOCK` - __Android Only.__ An unknown error occurred\\n  when trying to get the system lock.\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Orientation"}],"name":"Promise"}}]},{"name":"getOrientationLockAsync","kind":64,"kindString":"Function","signatures":[{"name":"getOrientationLockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current screen orientation lock type.","returns":"Returns a promise which fulfils with an [`OrientationLock`](#screenorientationorientationlock)\\nvalue.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"OrientationLock"}],"name":"Promise"}}]},{"name":"getPlatformOrientationLockAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPlatformOrientationLockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the platform specific screen orientation lock type.","returns":"Returns a promise which fulfils with a [`PlatformOrientationInfo`](#screenorientationplatformorientationinfo)\\nvalue.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_GET_PLATFORM_ORIENTATION_LOCK`\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PlatformOrientationInfo"}],"name":"Promise"}}]},{"name":"lockAsync","kind":64,"kindString":"Function","signatures":[{"name":"lockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Lock the screen orientation to a particular `OrientationLock`.","returns":"Returns a promise with `void` value, which fulfils when the orientation is set.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_INVALID_ORIENTATION_LOCK` - An invalid [`OrientationLock`](#screenorientationorientationlock)\\n  was passed in.\\n- `ERR_SCREEN_ORIENTATION_UNSUPPORTED_ORIENTATION_LOCK` - The platform does not support the\\n  orientation lock policy.\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n","tags":[{"tag":"example","text":"\\n```ts\\nasync function changeScreenOrientation() {\\n  await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE_LEFT);\\n}\\n```\\n"}]},"parameters":[{"name":"orientationLock","kind":32768,"kindString":"Parameter","comment":{"text":"The orientation lock to apply. See the [`OrientationLock`](#screenorientationorientationlock)\\nenum for possible values."},"type":{"type":"reference","name":"OrientationLock"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"lockPlatformAsync","kind":64,"kindString":"Function","signatures":[{"name":"lockPlatformAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns a promise with `void` value, resolving when the orientation is set and rejecting\\nif an invalid option or value is passed.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_INVALID_ORIENTATION_LOCK` - __iOS Only.__ An invalid [`OrientationLock`](#screenorientationorientationlock)\\n  was passed in.\\n- `ERR_SCREEN_ORIENTATION_UNSUPPORTED_ORIENTATION_LOCK` - The platform does not support the\\n  orientation lock policy.\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"The platform specific lock to apply. See the [`PlatformOrientationInfo`](#screenorientationplatformorientationinfo)\\nobject type for the different platform formats."},"type":{"type":"reference","name":"PlatformOrientationInfo"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"removeOrientationChangeListener","kind":64,"kindString":"Function","signatures":[{"name":"removeOrientationChangeListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unsubscribes the listener associated with the `Subscription` object from all orientation change\\nupdates."},"parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","comment":{"text":"A subscription object that manages the updates passed to a listener function\\non an orientation change.\\n"},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeOrientationChangeListeners","kind":64,"kindString":"Function","signatures":[{"name":"removeOrientationChangeListeners","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes all listeners subscribed to orientation change updates."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"supportsOrientationLockAsync","kind":64,"kindString":"Function","signatures":[{"name":"supportsOrientationLockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the [`OrientationLock`](#screenorientationorientationlock) policy is supported on\\nthe device.","returns":"Returns a promise that resolves to a `boolean` value that reflects whether or not the\\norientationLock is supported.\\n"},"parameters":[{"name":"orientationLock","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"OrientationLock"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"unlockAsync","kind":64,"kindString":"Function","signatures":[{"name":"unlockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the screen orientation back to the `OrientationLock.DEFAULT` policy.","returns":"Returns a promise with `void` value, which fulfils when the orientation is set.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},"+zj1":function(e){e.exports=JSON.parse('{"name":"expo-tracking-transparency","kind":1,"kindString":"Project","originalName":"","children":[{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"getTrackingPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getTrackingPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks whether or not the user has authorized the app to access app-related data that can be used\\nfor tracking the user or the device. See `requestTrackingPermissionsAsync` for more details.","text":"On Android, web, and iOS 13 and below, this method always returns that the permission was\\ngranted.\\n","tags":[{"tag":"example","text":"\\n```typescript\\nconst { granted } = await getTrackingPermissionsAsync();\\n\\nif (granted) {\\n  // Your app is authorized to track the user or their device\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isAvailable","kind":64,"kindString":"Function","signatures":[{"name":"isAvailable","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the TrackingTransparency API is available on the current device.","returns":"Currently this is `true` on iOS 14 and above only. On devices where the\\nTracking Transparency API is unavailable, the get and request permissions methods will always\\nresolve to `granted`.\\n"},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"requestTrackingPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestTrackingPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Requests the user to authorize or deny access to app-related data that can be used for tracking\\nthe user or the device. Examples of data used for tracking include email address, device ID,\\nadvertising ID, etc. On iOS 14.5 and above, if the user denies this permission, any attempt to\\ncollect the IDFA will return a string of 0s.","text":"The system remembers the user\u2019s choice and doesn\u2019t prompt again unless a user uninstalls and then\\nreinstalls the app on the device.\\n\\nOn Android, web, and iOS 13 and below, this method always returns that the permission was\\ngranted.","tags":[{"tag":"example","text":"\\n```typescript\\nconst { granted } = await requestTrackingPermissionsAsync();\\n\\nif (granted) {\\n  // Your app is authorized to track the user or their device\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"useTrackingPermissions","kind":64,"kindString":"Function","signatures":[{"name":"useTrackingPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request the user to authorize or deny access to app-related data that can be used for tracking\\nthe user or the device. Examples of data used for tracking include email address, device ID,\\nadvertising ID, etc. On iOS 14.5 and above, if the user denies this permission, any attempt to\\ncollect the IDFA will return a string of 0s.","text":"The system remembers the user\u2019s choice and doesn\u2019t prompt again unless a user uninstalls and then\\nreinstalls the app on the device.\\n\\nOn Android, web, and iOS 13 and below, this method always returns that the permission was\\ngranted.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = useTrackingPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}]}')},"/+k/":function(e,w,n){"use strict";function c(p,d){return p.column+=d,p.offset+=d,p._bufferIndex+=d,p}e.exports=c},"/Xwa":function(e){e.exports=JSON.parse('{"name":"expo-system-ui","kind":1,"kindString":"Project","originalName":"","children":[{"name":"getBackgroundColorAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBackgroundColorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the root view background color.","returns":"Current root view background color in hex format. Returns `null` if the background color is not set.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst color = await SystemUI.getBackgroundColorAsync();\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"ColorValue"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"setBackgroundColorAsync","kind":64,"kindString":"Function","signatures":[{"name":"setBackgroundColorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Changes the root view background color.","tags":[{"tag":"example","text":"\\n```ts\\nSystemUI.setBackgroundColorAsync(\\"white\\");\\n```"}]},"parameters":[{"name":"color","kind":32768,"kindString":"Parameter","comment":{"shortText":"Any valid [CSS 3 (SVG) color](http://www.w3.org/TR/css3-color/#svg-color).\\n"},"type":{"type":"reference","name":"ColorValue"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},"/aKz":function(e){e.exports=JSON.parse('{"name":"expo-face-detector","kind":1,"kindString":"Project","originalName":"","children":[{"name":"FaceDetectorClassifications","kind":8,"kindString":"Enumeration","children":[{"name":"all","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"none","kind":16,"kindString":"Enumeration member","defaultValue":"1"}]},{"name":"FaceDetectorLandmarks","kind":8,"kindString":"Enumeration","children":[{"name":"all","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"none","kind":16,"kindString":"Enumeration member","defaultValue":"1"}]},{"name":"FaceDetectorMode","kind":8,"kindString":"Enumeration","children":[{"name":"accurate","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"fast","kind":16,"kindString":"Enumeration member","defaultValue":"1"}]},{"name":"DetectionOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"In order to configure detector\'s behavior modules pass a settings object which is then\\ninterpreted by this module."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"detectLandmarks","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to detect and return landmarks positions on the face (ears, eyes, mouth, cheeks, nose).\\nUse `FaceDetector.FaceDetectorLandmarks.{all, none}`."},"type":{"type":"reference","name":"FaceDetectorLandmarks"}},{"name":"minDetectionInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Minimal interval in milliseconds between two face detection events being submitted to JS.\\nUse, when you expect lots of faces for long time and are afraid of JS Bridge being overloaded.","tags":[{"tag":"default","text":"0\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"mode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to detect faces in fast or accurate mode. Use `FaceDetector.FaceDetectorMode.{fast, accurate}`."},"type":{"type":"reference","name":"FaceDetectorMode"}},{"name":"runClassifications","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to run additional classifications on detected faces (smiling probability, open eye\\nprobabilities). Use `FaceDetector.FaceDetectorClassifications.{all, none}`."},"type":{"type":"reference","name":"FaceDetectorClassifications"}},{"name":"tracking","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Flag to enable tracking of faces between frames. If true, each face will be returned with\\n`faceID` attribute which should be consistent across frames.","tags":[{"tag":"default","text":"false\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"DetectionResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"faces","kind":1024,"kindString":"Property","comment":{"shortText":"Array of faces objects."},"type":{"type":"array","elementType":{"type":"reference","name":"FaceFeature"}}},{"name":"image","kind":1024,"kindString":"Property","type":{"type":"reference","name":"Image"}}]}}},{"name":"FaceFeature","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"bottomMouthPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the bottom edge of the mouth in image coordinates. Returned only if detection\\nclassifications property is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"bounds","kind":1024,"kindString":"Property","comment":{"shortText":"An object containing face bounds."},"type":{"type":"reference","name":"FaceFeatureBounds"}},{"name":"faceID","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A face identifier (used for tracking, if the same face appears on consecutive frames it will\\nhave the same `faceID`)."},"type":{"type":"intrinsic","name":"number"}},{"name":"leftCheekPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the left cheek in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"leftEarPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the left ear in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"leftEyeOpenProbability","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Probability that the left eye is open. Returned only if detection classifications property is\\nset to `FaceDetectorClassifications.all`."},"type":{"type":"intrinsic","name":"number"}},{"name":"leftEyePosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the left eye in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"leftMouthPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the left edge of the mouth in image coordinates. Returned only if detection\\nclassifications property is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"mouthPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the center of the mouth in image coordinates. Returned only if detection\\nclassifications property is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"noseBasePosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the nose base in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"rightCheekPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the right cheek in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"rightEarPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the right ear in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"rightEyeOpenProbability","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Probability that the right eye is open. Returned only if detection classifications property is\\nset to `FaceDetectorClassifications.all`."},"type":{"type":"intrinsic","name":"number"}},{"name":"rightEyePosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the right eye in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"rightMouthPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the right edge of the mouth in image coordinates. Returned only if detection\\nclassifications property is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"rollAngle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Roll angle of the face (bank)."},"type":{"type":"intrinsic","name":"number"}},{"name":"smilingProbability","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Probability that the face is smiling. Returned only if detection classifications property is\\nset to `FaceDetectorClassifications.all`."},"type":{"type":"intrinsic","name":"number"}},{"name":"yawAngle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Yaw angle of the face (heading, turning head left or right)."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"FaceFeatureBounds","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"origin","kind":1024,"kindString":"Property","comment":{"shortText":"Position of the top left corner of a square containing the face in image coordinates,"},"type":{"type":"reference","name":"Point"}},{"name":"size","kind":1024,"kindString":"Property","comment":{"shortText":"Size of the square containing the face in image coordinates,"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}}]}}},{"name":"Image","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"Height of the image in pixels."},"type":{"type":"intrinsic","name":"number"}},{"name":"orientation","kind":1024,"kindString":"Property","comment":{"shortText":"Orientation of the image (value conforms to the EXIF orientation tag standard)."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"URI of the image."},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"Width of the image in pixels."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"Point","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"x","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"y","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}},{"name":"detectFacesAsync","kind":64,"kindString":"Function","signatures":[{"name":"detectFacesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Detect faces on a picture.","returns":"Returns a Promise which fulfils with [`DetectionResult`](#detectionresult) object.\\n"},"parameters":[{"name":"uri","kind":32768,"kindString":"Parameter","comment":{"shortText":"`file://` URI to the image."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of detection options."},"type":{"type":"reference","name":"DetectionOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DetectionResult"}],"name":"Promise"}}]}]}')},"/apb":function(e,w,n){"use strict";var c=n("E/Jm"),p={name:"codeText",tokenize:m,resolve:d,previous:a};function d(r){var s=r.length-4,i=3,o,t;if((r[i][1].type==="lineEnding"||r[i][1].type==="space")&&(r[s][1].type==="lineEnding"||r[s][1].type==="space")){for(o=i;++o<s;)if(r[o][1].type==="codeTextData"){r[s][1].type=r[i][1].type="codeTextPadding",i+=2,s-=2;break}}for(o=i-1,s++;++o<=s;)t===void 0?o!==s&&r[o][1].type!=="lineEnding"&&(t=o):(o===s||r[o][1].type==="lineEnding")&&(r[t][1].type="codeTextData",o!==t+2&&(r[t][1].end=r[o-1][1].end,r.splice(t+2,o-t-2),s-=o-t-2,o=t+2),t=void 0);return r}function a(r){return r!==96||this.events[this.events.length-1][1].type==="characterEscape"}function m(r,s,i){var o=0,t,l;return k;function k(b){return r.enter("codeText"),r.enter("codeTextSequence"),g(b)}function g(b){return b===96?(r.consume(b),o++,g):(r.exit("codeTextSequence"),h(b))}function h(b){return b===null?i(b):b===96?(l=r.enter("codeTextSequence"),t=0,S(b)):b===32?(r.enter("space"),r.consume(b),r.exit("space"),h):c(b)?(r.enter("lineEnding"),r.consume(b),r.exit("lineEnding"),h):(r.enter("codeTextData"),f(b))}function f(b){return b===null||b===32||b===96||c(b)?(r.exit("codeTextData"),h(b)):(r.consume(b),f)}function S(b){return b===96?(r.consume(b),t++,S):t===o?(r.exit("codeTextSequence"),r.exit("codeText"),s(b)):(l.type="codeTextData",f(b))}}e.exports=p},"/cIb":function(e,w){e.exports=n;function n(c){var p=c.options.bullet||"*";if(p!=="*"&&p!=="+"&&p!=="-")throw new Error("Cannot serialize items with `"+p+"` for `options.bullet`, expected `*`, `+`, or `-`");return p}},"/clR":function(e){e.exports=JSON.parse('{"name":"expo-facebook","kind":0,"originalName":"","children":[{"name":"FacebookAuthenticationCredential","kind":16777216,"kindString":"Reference","target":70},{"name":"FacebookAuthenticationCredential","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"appId","kind":1024,"kindString":"Property","comment":{"shortText":"Application ID used to initialize the Facebook SDK app."},"type":{"type":"intrinsic","name":"string"}},{"name":"dataAccessExpirationDate","kind":1024,"kindString":"Property","comment":{"shortText":"Time at which the current user data access expires."},"type":{"type":"reference","name":"Date"}},{"name":"declinedPermissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of requested permissions that the user has declined."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"expirationDate","kind":1024,"kindString":"Property","comment":{"shortText":"Time at which the `token` expires."},"type":{"type":"reference","name":"Date"}},{"name":"expiredPermissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of permissions that were expired with this access token."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"graphDomain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A website domain within the Graph API.","text":"https://developers.facebook.com/docs/graph-api/reference/v5.0/domain\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"permissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of granted permissions."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"refreshDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The last time the `token` was refreshed (or when it was first obtained)"},"type":{"type":"reference","name":"Date"}},{"name":"signedRequest","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A valid raw signed request as a string."},"type":{"type":"intrinsic","name":"string"}},{"name":"token","kind":1024,"kindString":"Property","comment":{"shortText":"Access token for the authenticated session. This token provides access to the Facebook Graph API."},"type":{"type":"intrinsic","name":"string"}},{"name":"tokenSource","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"_(Android only)_ Indicates how this `token` was obtained."},"type":{"type":"intrinsic","name":"string"}},{"name":"userId","kind":1024,"kindString":"Property","comment":{"shortText":"App-scoped Facebook ID of the user."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"FacebookInitializationOptions","kind":16777216,"kindString":"Reference","target":103},{"name":"FacebookInitializationOptions","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"FacebookSDKScriptURLOptions"},{"type":"reference","name":"FacebookSDKInitializationOptions"},{"type":"reference","name":"FacebookNativeInitializationOptions"}]}},{"name":"FacebookLoginResult","kind":16777216,"kindString":"Reference","target":84},{"name":"FacebookLoginResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","type":{"type":"literal","value":"cancel"}}]}},{"type":"intersection","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","type":{"type":"literal","value":"success"}}]}},{"type":"reference","name":"FacebookAuthenticationCredential"}]}]}},{"name":"FacebookNativeInitializationOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"appName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An optional Facebook App Name argument for iOS and Android."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"FacebookOptions","kind":16777216,"kindString":"Reference","target":89},{"name":"FacebookOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"permissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}}},{"name":"FacebookSDKInitializationOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"appId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Application ID used to initialize the FBSDK app.","text":"On Android and iOS if you don\'t provide this, Facebook SDK will try to use `appId` from Android and iOS.\\napp resources (which in standalone apps you would define in `app.json`, in the Expo client are unavailable, and in bare you configure yourself according to Facebook setup documentation for [iOS](https://developers.facebook.com/docs/facebook-login/ios#4--configure-your-project) and [Android](https://developers.facebook.com/docs/facebook-login/android#manifest)).\\nIf it fails to find one, the promise will be rejected.\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"autoLogAppEvents","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets whether Facebook SDK should log app events. App events involve app eg. installs, app launches (more info [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#auto-events) and [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#auto-events)).\\nIn some cases, you may want to disable or delay the collection of automatically logged events, such as to obtain user consent or fulfill legal obligations.","text":"This method corresponds to:\\n- [iOS disable auto events](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#disable-auto-events)\\n- [Android disable auto events](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#disable-auto-events)\\n"},"type":{"type":"intrinsic","name":"boolean"}},{"name":"version","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Selects the version of FBSDK to use.","text":"https://developers.facebook.com/docs/javascript/reference/FB.init/v5.0\\n"},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"FacebookSDKScriptURLOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"domain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Android: Sets the base Facebook domain to use when making network requests.\\nDefaults to: \'connect.facebook.net\'"},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"flushAsync","kind":64,"kindString":"Function","signatures":[{"name":"flushAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Explicitly kicks off flushing of events to Facebook."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"getAdvertiserIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAdvertiserIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the advertiser ID from Facebook.","returns":"A promise fulfilled with the advertiser id or null if not set.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getAnonymousIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAnonymousIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get an anonymous ID from Facebook.","returns":"A promise fulfilled with an anonymous id or null if not set.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getAttributionIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAttributionIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"**Android only.** Gets the attribution ID from Facebook.","returns":"A promise fulfilled with the attribution id or null if not set.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getAuthenticationCredentialAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAuthenticationCredentialAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns the `FacebookAuthenticationCredential` object if a user is authenticated, and `null` if no valid authentication exists.","text":"You can use this method to check if the user should sign in or not.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"FacebookAuthenticationCredential"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks application\'s permissions for using data for tracking the user or the device.","text":">iOS: it requires the NSUserTrackingUsageDescription message added to the info.plist.\\n","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getUserIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"getUserIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the user ID.","returns":"A promise fulfilled with the user id or null if not set.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"initializeAsync","kind":64,"kindString":"Function","signatures":[{"name":"initializeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Calling this method ensures that the SDK is initialized.\\nYou have to call this method before calling any method that uses\\nthe FBSDK (ex: `logInWithReadPermissionsAsync`, `logOutAsync`) to ensure that\\nFacebook support is initialized properly.","text":"- On Android and iOS you can optionally provide an `appId` argument.\\n  - If you don\'t provide `appId`, the Facebook SDK will try to use `appId` from native app resources (which in standalone apps you define in `app.json`, in app store development clients are unavailable, and in bare apps you configure yourself according to [Facebook\'s setup documentation for iOS](https://developers.facebook.com/docs/facebook-login/ios#4--configure-your-project) and [Android](https://developers.facebook.com/docs/facebook-login/android#manifest)). If the Facebook SDK fails to find an `appId` value, the returned promise will be rejected.\\n  - The same resolution mechanism works for `appName`.\\n- If you provide an explicit `appId`, it will override any other source.\\n"},"parameters":[{"name":"optionsOrAppId","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"reference","name":"FacebookInitializationOptions"},{"type":"intrinsic","name":"string"}]}},{"name":"appName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"logEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs an event with eventName and optional parameters. Supports the optional parameter `valueToSum`,\\nwhich when reported, all of the valueToSum properties are summed together. For example, if 10 people purchased\\none item and each item cost $10 (and passed in valueToSum) then they would be added together to report $100.\\nParameters must be either strings or numbers, otherwise no event will be logged.","text":"To view and test app events, please visit Facebook\'s Event Manager- https://www.facebook.com/events_manager2/list/app/\\n"},"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"parameters","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Params"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logInWithReadPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"logInWithReadPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prompts the user to log into Facebook and grants your app permission to access their Facebook data. On iOS and Android, if the Facebook app isn\'t installed then a web view will be used to authenticate.","returns":"If the user or Facebook cancelled the login, returns { type: \'cancel\' }. Otherwise, returns { type: \'success\' } & [FacebookAuthenticationCredential](#facebookauthenticationcredential).\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"A map of options:\\n - **permissions (array)** -- An array specifying the permissions to ask for from Facebook for this login. The permissions are strings as specified in the [Facebook API documentation](https://developers.facebook.com/docs/permissions/reference). The default permissions are [\'public_profile\', \'email\']."},"type":{"type":"reference","name":"FacebookOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"FacebookLoginResult"}],"name":"Promise"}}]},{"name":"logOutAsync","kind":64,"kindString":"Function","signatures":[{"name":"logOutAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs out of the currently authenticated session."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logPurchaseAsync","kind":64,"kindString":"Function","signatures":[{"name":"logPurchaseAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs a purchase event with the amount, currency code, and optional parameters.\\nParameters must be either strings or numbers, otherwise no event will be logged.\\nSee http://en.wikipedia.org/wiki/ISO_4217 for currencyCodes."},"parameters":[{"name":"purchaseAmount","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}},{"name":"currencyCode","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"parameters","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Params"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logPushNotificationOpenAsync","kind":64,"kindString":"Function","signatures":[{"name":"logPushNotificationOpenAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs an app event that tracks that the application was opened via Push Notification. Accepts\\na string describing the campaign of the Push Notification."},"parameters":[{"name":"campaign","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"PermissionStatus","kind":4,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks for permissions to use data for tracking the user or the device.","text":"> iOS: it requires the NSUserTrackingUsageDescription message added to the info.plist.\\n","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"setAdvertiserIDCollectionEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setAdvertiserIDCollectionEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Whether the Facebook SDK should collect advertiser ID properties, like the Apple IDFA\\nand Android Advertising ID, automatically. Advertiser IDs let you identify and target specific customers.\\nTo learn more visit [Facebook documentation](https://developers.facebook.com/docs/app-ads/targeting/mobile-advertiser-ids)\\ndescribing that topic.","text":"In some cases, you may want to disable or delay the collection of `advertiser-id`,\\nsuch as to obtain user consent or fulfill legal obligations.\\n\\nThis method corresponds to [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#disable-advertiser-id)\\nand [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#disable-advertiser-id) native SDK methods."},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","comment":{"text":"Whether `advertiser-id` should be collected\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setAdvertiserTrackingEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setAdvertiserTrackingEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets whether Facebook SDK should enable advertising tracking,\\n(more info [here](https://developers.facebook.com/docs/app-events/guides/advertising-tracking-enabled)).","text":"Limitations:\\n1. AdvertiserTrackingEnabled is only available for iOS 14+.\\n2. For iOS 13 or earlier, AdvertiserTrackingEnabled uses the Limit Ad Tracking setting as its value.\\n\\nThis method corresponds to [this](https://developers.facebook.com/docs/app-events/guides/advertising-tracking-enabled)\\n","returns":"Whether the value is set successfully. It will always return false in Android, iOS 13 and below.\\n"},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","comment":{"text":"Whether advertising tracking of the Facebook SDK should be enabled"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"setAutoInitEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setAutoInitEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"Explicitly call `initializeAsync` instead.\\n"}]},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setAutoLogAppEventsEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setAutoLogAppEventsEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets whether Facebook SDK should log app events. App events involve eg. app installs,\\napp launches (more info [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#auto-events)\\nand [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#auto-events)).","text":"In some cases, you may want to disable or delay the collection of automatically logged events,\\nsuch as to obtain user consent or fulfill legal obligations.\\n\\nThis method corresponds to [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#disable-auto-events)\\nand [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#disable-auto-events) native SDK methods.\\n"},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","comment":{"text":"Whether automatic events logging of the Facebook SDK should be enabled\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserDataAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUserDataAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets additional data about the user to increase the chances of matching a Facebook user."},"parameters":[{"name":"userData","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"UserData"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUserIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a custom user ID to associate with all app events.\\nThe userID is persisted until it is cleared by passing nil."},"parameters":[{"name":"userID","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"UserData","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Info about a user to increase chances of matching a Facebook user.\\nSee https://developers.facebook.com/docs/app-events/advanced-matching for\\nmore info about the expected format of each field."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"city","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"country","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"dateOfBirth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"email","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"firstName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"gender","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":"m"},{"type":"literal","value":"f"}]}},{"name":"lastName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"phone","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"zip","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}]}}}]}')},"/qs6":function(e){e.exports=JSON.parse('{"name":"expo-firebase-analytics","kind":1,"kindString":"Project","originalName":"","children":[{"name":"FirebaseAnalyticsJS","kind":128,"kindString":"Class","comment":{"shortText":"A pure JavaScript Google Firebase Analytics implementation that uses\\nthe HTTPS Measurement API 2 to send events to Google Analytics.","text":"This class provides an alternative for the Firebase Analytics module\\nshipped with the Firebase JS SDK. That library uses the gtag.js dependency\\nand requires certain browser features. This prevents the use\\nanalytics on other platforms, such as Node-js and react-native.\\n\\nFirebaseAnalyticsJS provides a bare-bone implementation of the new\\nHTTPS Measurement API 2 protocol (which is undocumented), with an API\\nthat follows the Firebase Analytics JS SDK.\\n"},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new FirebaseAnalyticsJS","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"config","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"FirebaseAnalyticsJSConfig"}},{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"FirebaseAnalyticsJSOptions"}}],"type":{"type":"reference","name":"FirebaseAnalyticsJS"}}]},{"name":"config","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"type":{"type":"reference","name":"FirebaseAnalyticsJSConfig"}},{"name":"url","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"type":{"type":"intrinsic","name":"string"}},{"name":"clearEvents","kind":2048,"kindString":"Method","signatures":[{"name":"clearEvents","kind":4096,"kindString":"Call signature","comment":{"shortText":"Clears any queued events and cancels the flush timer."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"logEvent","kind":2048,"kindString":"Method","signatures":[{"name":"logEvent","kind":4096,"kindString":"Call signature","comment":{"shortText":"https://firebase.google.com/docs/reference/js/firebase.analytics.Analytics#log-event"},"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"eventParams","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"resetAnalyticsData","kind":2048,"kindString":"Method","signatures":[{"name":"resetAnalyticsData","kind":4096,"kindString":"Call signature","comment":{"shortText":"Clears all analytics data for this instance."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setAnalyticsCollectionEnabled","kind":2048,"kindString":"Method","signatures":[{"name":"setAnalyticsCollectionEnabled","kind":4096,"kindString":"Call signature","comment":{"shortText":"https://firebase.google.com/docs/reference/js/firebase.analytics.Analytics#set-analytics-collection-enabled"},"parameters":[{"name":"isEnabled","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setClientId","kind":2048,"kindString":"Method","signatures":[{"name":"setClientId","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a new value for the client ID."},"parameters":[{"name":"clientId","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setDebugModeEnabled","kind":2048,"kindString":"Method","signatures":[{"name":"setDebugModeEnabled","kind":4096,"kindString":"Call signature","comment":{"shortText":"Enables or disabled debug mode."},"parameters":[{"name":"isEnabled","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setSessionTimeoutDuration","kind":2048,"kindString":"Method","signatures":[{"name":"setSessionTimeoutDuration","kind":4096,"kindString":"Call signature","comment":{"shortText":"Not supported, this method is a no-op"},"parameters":[{"name":"_sessionTimeoutInterval","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserId","kind":2048,"kindString":"Method","signatures":[{"name":"setUserId","kind":4096,"kindString":"Call signature","comment":{"shortText":"https://firebase.google.com/docs/reference/js/firebase.analytics.Analytics#set-user-id"},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserProperties","kind":2048,"kindString":"Method","signatures":[{"name":"setUserProperties","kind":4096,"kindString":"Call signature","comment":{"shortText":"https://firebase.google.com/docs/reference/js/firebase.analytics.Analytics#set-user-properties"},"parameters":[{"name":"userProperties","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"parseEvent","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"parseEvent","kind":4096,"kindString":"Call signature","comment":{"shortText":"Parses an event (as passed to logEvent) and throws an error when the\\nevent-name or parameters are invalid.","text":"Upon success, returns the event in encoded format, ready to be send\\nthrough the Google Measurement API v2.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"FirebaseAnalyticsJSOptions"}},{"name":"eventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"eventParams","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}}],"type":{"type":"reference","name":"FirebaseAnalyticsJSCodedEvent"}}]},{"name":"parseUserProperty","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"parseUserProperty","kind":4096,"kindString":"Call signature","comment":{"shortText":"Parses user-properties (as passed to setUserProperties) and throws an error when\\none of the user properties is invalid.","text":"Upon success, returns the user-properties in encoded format, ready to be send\\nthrough the Google Measurement API v2.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"FirebaseAnalyticsJSOptions"}},{"name":"userPropertyName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"userPropertyValue","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"string"}}]}]},{"name":"logEvent","kind":64,"kindString":"Function","signatures":[{"name":"logEvent","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs an app event. The event can have up to 25 parameters. Events with the same name must have\\nthe same parameters. Up to 500 event names are supported. Using predefined events and/or\\nparameters is recommended for optimal reporting. See [the Google Analytics event reference](https://developers.google.com/gtagjs/reference/event)\\nfor a list of all predefined events.","text":"> The following event names are reserved for the native SDKs automatic collection and cannot be used: `ad_activeview, ad_click, ad_exposure, ad_query, ad_reward, adunit_exposure, app_background, app_clear_data, app_exception, app_remove, app_store_refund, app_store_subscription_cancel, ad_activeview, ad_click, ad_exposure, ad_query, ad_reward, adunit_exposure, app_background, app_clear_data, app_exception, app_remove, app_store_refund, app_store_subscription_cancel, app_store_subscription_convert, app_store_subscription_renew, app_update, app_upgrade, dynamic_link_app_open, dynamic_link_app_update, dynamic_link_first_open, error, firebase_campaign, first_open, first_visit, in_app_purchase, notification_dismiss, notification_foreground, notification_open, notification_receive, os_update, session_start, session_start_with_rollout, user_engagement`\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Analytics.logEvent(\'add_to_cart\', {\\n  currency: \'USD\',\\n  value: 29.98\\n  items: [{\\n    id: \\"P12345\\",\\n    name: \\"Expo Warhol T-Shirt\\",\\n    brand: \\"Expo\\",\\n    category: \\"Apparel/T-Shirts\\",\\n    coupon: \\"SUMMER_DISCOUNT\\",\\n    list_name: \\"Search Results\\",\\n    list_position: 1,\\n    price: 14.99,\\n    quantity: 2,\\n    variant: \\"Blue\\"\\n  }]\\n});\\n```\\n"}]},"parameters":[{"name":"name","kind":32768,"kindString":"Parameter","comment":{"shortText":"The name of the event. Should contain 1 to 40 alphanumeric characters or underscores.\\nThe name must start with an alphabetic character. Some event names are  reserved. The `firebase_`,\\n`google_`, and `ga_` prefixes are reserved and should not be used. Note that event names are\\ncase-sensitive and that logging two events whose names differ only in case will result in two\\ndistinct events. To manually log screen view events, use the `screen_view` event name."},"type":{"type":"intrinsic","name":"string"}},{"name":"properties","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The dictionary of event parameters. Passing `undefined` indicates that the\\nevent has no parameters. Parameter names can be up to 40 characters long and must start with an\\nalphabetic character and contain only alphanumeric characters and underscores. Only `String` and\\n`Number` parameter types are supported; and `items` arrays containing dictionaries.\\n`String` parameter values can be up to 100 characters long. The `firebase_`,  `google_`, and\\n`ga_` prefixes are reserved and should not be used for parameter names.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"resetAnalyticsData","kind":64,"kindString":"Function","signatures":[{"name":"resetAnalyticsData","kind":4096,"kindString":"Call signature","comment":{"shortText":"Clears all analytics data for this instance from the device and resets the app instance ID."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setAnalyticsCollectionEnabled","kind":64,"kindString":"Function","signatures":[{"name":"setAnalyticsCollectionEnabled","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets whether analytics collection is enabled for this app on this device. This setting is\\npersisted across app sessions. __By default it is enabled__."},"parameters":[{"name":"isEnabled","kind":32768,"kindString":"Parameter","comment":{"shortText":"A flag that enables or disables Analytics collection.\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setClientId","kind":64,"kindString":"Function","signatures":[{"name":"setClientId","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the clientId to the given value. For best results, set this value before\\ncalling any other functions on this module.","text":"By default, the clientId is set to `Constants.installationId` in Expo Go, which is deprecated and\\nwill be removed in SDK 44. At that time, this method will need to be used to set the `clientId`\\nwhen using Expo Go.\\n","tags":[{"tag":"platform","text":"expo\\n"}]},"parameters":[{"name":"clientId","kind":32768,"kindString":"Parameter","comment":{"shortText":"UUIDv4 string value to set for the current session in Expo Go."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setCurrentScreen","kind":64,"kindString":"Function","signatures":[{"name":"setCurrentScreen","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the current screen name, which specifies the current visual context in your app. This helps\\nidentify the areas in your app where users spend their time and how they interact with your app.","tags":[{"tag":"deprecated","text":"__Deprecated.__ Use [`logEvent(\'screen_view\', { screen_name: \'MyScreen\', ... })`](#logevent)\\ninstead. This API will be removed in SDK 45.\\n"}]},"parameters":[{"name":"screenName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The name of the current screen. Should contain 1 to 100 characters. Set to\\n`undefined` to clear the current screen name."},"type":{"type":"intrinsic","name":"string"}},{"name":"screenClassOverride","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The name of the screen class. Should contain 1 to 100 characters. By\\ndefault this is the class name of the current screen (UIViewController on iOS). Set to\\n`undefined` to revert to the default class name.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setDebugModeEnabled","kind":64,"kindString":"Function","signatures":[{"name":"setDebugModeEnabled","kind":4096,"kindString":"Call signature","comment":{"shortText":"Enables or disabled debug mode on the Expo client, so events can\\nbe tracked using the [DebugView in the Analytics dashboard](https://firebase.google.com/docs/analytics/debugview#reporting).","text":"This option is only available in Expo Go. When using a custom development app, a standalone app,\\nthe bare workflow or web, use the [natively available options](https://firebase.google.com/docs/analytics/debugview).\\n","tags":[{"tag":"platform","text":"expo\\n"}]},"parameters":[{"name":"isEnabled","kind":32768,"kindString":"Parameter","comment":{"shortText":"A flag that enables or disables debug mode."},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setSessionTimeoutDuration","kind":64,"kindString":"Function","signatures":[{"name":"setSessionTimeoutDuration","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the interval of inactivity in seconds that terminates the current session. The default\\nvalue is 1800000 milliseconds (30 minutes).","text":"> Setting the session timeout only applies to the native iOS and Android SDKs. Calling this\\n> method does nothing on Expo Go or web.\\n"},"parameters":[{"name":"sessionTimeoutInterval","kind":32768,"kindString":"Parameter","comment":{"shortText":"The custom time of inactivity in milliseconds before the current\\nsession terminates.\\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUnavailabilityLogging","kind":64,"kindString":"Function","signatures":[{"name":"setUnavailabilityLogging","kind":4096,"kindString":"Call signature","comment":{"shortText":"Enables or disables the warning and log messages when using Firebase Analytics on the Expo client.","text":"Firebase Analytics is not available on the Expo client and therefore logs the requests to the\\nconsole for development purposes. To test Firebase Analytics, create a standalone build or custom\\nclient. Use this function to suppress the warning and log messages.\\n"},"parameters":[{"name":"isEnabled","kind":32768,"kindString":"Parameter","comment":{"shortText":"A flag that enables or disables unavailability logging.\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setUserId","kind":64,"kindString":"Function","signatures":[{"name":"setUserId","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the user ID property. This feature must be used in accordance with [Google\'s Privacy Policy](https://www.google.com/policies/privacy)"},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","comment":{"shortText":"The user ID to ascribe to the user of this app on this device, which must be\\nnon-empty and no more than 256 characters long. Setting userID to null removes the user ID.\\n"},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserProperties","kind":64,"kindString":"Function","signatures":[{"name":"setUserProperties","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets multiple user properties to the supplied values.","tags":[{"tag":"example","text":"\\n```ts\\nawait Analytics.setUserProperties({\\n  loves_expo: \'a lot\',\\n});\\n```\\n"}]},"parameters":[{"name":"properties","kind":32768,"kindString":"Parameter","comment":{"shortText":"Key/value set of user properties. Values can be up to 36 characters long.\\nSetting the value to null removes the user property.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}],"name":"Record"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserProperty","kind":64,"kindString":"Function","signatures":[{"name":"setUserProperty","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a user property to a given value. Up to 25 user property names are supported. Once set,\\nuser property values persist throughout the app life-cycle and across sessions.","text":"The following user property names are reserved and cannot be used:\\n- `first_open_time`\\n- `last_deep_link_referrer`\\n- `user_id`\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Analytics.setUserProperty(\'favorite_batmobile\', \'1989 Burton-mobile\');\\n```\\n"}]},"parameters":[{"name":"name","kind":32768,"kindString":"Parameter","comment":{"shortText":"The name of the user property to set. Should contain 1 to 24 alphanumeric characters\\nor underscores and must start with an alphabetic character. The `firebase_`, `google_`, and\\n`ga_` prefixes are reserved and should not be used for user property names."},"type":{"type":"intrinsic","name":"string"}},{"name":"value","kind":32768,"kindString":"Parameter","comment":{"shortText":"The value of the user property. Values can be up to 36 characters long. Setting the\\nvalue to null removes the user property.\\n"},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},"0RbX":function(e,w,n){"use strict";var c=n("0h9/"),p=n("Yoeg"),d=n("L8sx"),a=n("+Pz5"),m=n("oJEb"),r=n("5pEW"),s=n("pe0m"),i=n("RrMp");function o(t){var l=t||{},k={defined:[],constructs:m([i].concat(s(l.extensions))),content:g(c),document:g(p),flow:g(d),string:g(a.string),text:g(a.text)};return k;function g(h){return f;function f(S){return r(k,h,S)}}}e.exports=o},"0So9":function(e,w,n){var c=n("hq1P"),p=n("Ny5O"),d=n("9SNS"),a=n("E/Jm"),m=n("BjXi"),r=n("uDje"),s={tokenize:v,partial:!0},i={tokenize:u,partial:!0},o={tokenize:C,partial:!0},t={tokenize:F,partial:!0},l={tokenize:R,partial:!0},k={tokenize:P,previous:L},g={tokenize:y,previous:K},h={tokenize:b,previous:D},f={};w.text=f;for(var S=48;S<123;)f[S]=h,S++,S===58?S=65:S===91&&(S=97);f[43]=h,f[45]=h,f[46]=h,f[95]=h,f[72]=[h,g],f[104]=[h,g],f[87]=[h,k],f[119]=[h,k];function b(V,X,$){var re=this,ne;return B;function B(Y){return!W(Y)||!D(re.previous)||ee(re.events)?$(Y):(V.enter("literalAutolink"),V.enter("literalAutolinkEmail"),N(Y))}function N(Y){return W(Y)?(V.consume(Y),N):Y===64?(V.consume(Y),z):$(Y)}function z(Y){return Y===46?V.check(t,J,H)(Y):Y===45||Y===95?V.check(t,$,E)(Y):p(Y)?(V.consume(Y),z):J(Y)}function H(Y){return V.consume(Y),ne=!0,z}function E(Y){return V.consume(Y),oe}function oe(Y){return Y===46?V.check(t,$,H)(Y):z(Y)}function J(Y){return ne?(V.exit("literalAutolinkEmail"),V.exit("literalAutolink"),X(Y)):$(Y)}}function P(V,X,$){var re=this;return ne;function ne(N){return N!==87&&N-32!==87||!L(re.previous)||ee(re.events)?$(N):(V.enter("literalAutolink"),V.enter("literalAutolinkWww"),V.check(s,V.attempt(i,V.attempt(o,B),$),$)(N))}function B(N){return V.exit("literalAutolinkWww"),V.exit("literalAutolink"),X(N)}}function y(V,X,$){var re=this;return ne;function ne(T){return T!==72&&T-32!==72||!K(re.previous)||ee(re.events)?$(T):(V.enter("literalAutolink"),V.enter("literalAutolinkHttp"),V.consume(T),B)}function B(T){return T===84||T-32===84?(V.consume(T),N):$(T)}function N(T){return T===84||T-32===84?(V.consume(T),z):$(T)}function z(T){return T===80||T-32===80?(V.consume(T),H):$(T)}function H(T){return T===83||T-32===83?(V.consume(T),E):E(T)}function E(T){return T===58?(V.consume(T),oe):$(T)}function oe(T){return T===47?(V.consume(T),J):$(T)}function J(T){return T===47?(V.consume(T),Y):$(T)}function Y(T){return d(T)||r(T)||m(T)?$(T):V.attempt(i,V.attempt(o,ae),$)(T)}function ae(T){return V.exit("literalAutolinkHttp"),V.exit("literalAutolink"),X(T)}}function v(V,X,$){return re;function re(H){return V.consume(H),ne}function ne(H){return H===87||H-32===87?(V.consume(H),B):$(H)}function B(H){return H===87||H-32===87?(V.consume(H),N):$(H)}function N(H){return H===46?(V.consume(H),z):$(H)}function z(H){return H===null||a(H)?$(H):X(H)}}function u(V,X,$){var re,ne;return B;function B(H){return H===38?V.check(l,z,N)(H):H===46||H===95?V.check(t,z,N)(H):d(H)||r(H)||H!==45&&m(H)?z(H):(V.consume(H),B)}function N(H){return H===46?(ne=re,re=void 0,V.consume(H),B):(H===95&&(re=!0),V.consume(H),B)}function z(H){return!ne&&!re?X(H):$(H)}}function C(V,X){var $=0;return re;function re(N){return N===38?V.check(l,X,ne)(N):(N===40&&$++,N===41?V.check(t,B,ne)(N):I(N)?X(N):j(N)?V.check(t,X,ne)(N):(V.consume(N),re))}function ne(N){return V.consume(N),re}function B(N){return $--,$<0?X(N):ne(N)}}function R(V,X,$){return re;function re(N){return V.consume(N),ne}function ne(N){return c(N)?(V.consume(N),ne):N===59?(V.consume(N),B):$(N)}function B(N){return I(N)?X(N):$(N)}}function F(V,X,$){return re;function re(B){return V.consume(B),ne}function ne(B){return j(B)?(V.consume(B),ne):I(B)?X(B):$(B)}}function j(V){return V===33||V===34||V===39||V===41||V===42||V===44||V===46||V===58||V===59||V===60||V===63||V===95||V===126}function I(V){return V===null||V<0||V===32||V===60}function W(V){return V===43||V===45||V===46||V===95||p(V)}function L(V){return V===null||V<0||V===32||V===40||V===42||V===95||V===126}function K(V){return V===null||!c(V)}function D(V){return V!==47&&K(V)}function ee(V){for(var X=V.length;X--;)if((V[X][1].type==="labelLink"||V[X][1].type==="labelImage")&&!V[X][1]._balanced)return!0}},"0W06":function(e){e.exports=JSON.parse('{"name":"expo-status-bar","kind":1,"kindString":"Project","originalName":"","children":[{"name":"StatusBarAnimation","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"none"},{"type":"literal","value":"fade"},{"type":"literal","value":"slide"}]}},{"name":"StatusBarProps","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"animated","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the transition between status bar property changes should be\\nanimated. Supported for `backgroundColor`, `barStyle` and `hidden`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"backgroundColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The background color of the status bar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"hidden","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the status bar is hidden."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"hideTransitionAnimation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The transition effect when showing and hiding the status bar using\\nthe hidden prop.","tags":[{"tag":"default","text":"\'fade\'"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"StatusBarAnimation"}},{"name":"networkActivityIndicatorVisible","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the network activity indicator should be visible.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"style","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets the color of the status bar text. Default value is `\\"auto\\"` which\\npicks the appropriate value according to the active color scheme, eg:\\nif your app is dark mode, the style will be `\\"light\\"`.","tags":[{"tag":"default","text":"\'auto\'\\n"}]},"type":{"type":"reference","name":"StatusBarStyle"}},{"name":"translucent","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the status bar is translucent. When translucent is set to `true`,\\nthe app will draw under the status bar. This is the default behaviour in\\nprojects created with Expo tools because it is consistent with iOS.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"StatusBarStyle","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"auto"},{"type":"literal","value":"inverted"},{"type":"literal","value":"light"},{"type":"literal","value":"dark"}]}},{"name":"StatusBar","kind":64,"kindString":"Function","signatures":[{"name":"StatusBar","kind":4096,"kindString":"Call signature","comment":{"shortText":"A component that allows you to configure your status bar without directly calling imperative\\nmethods like `setBarStyle`.","text":"You will likely have multiple `StatusBar` components mounted in the same app at the same time.\\nFor example, if you have multiple screens in your app, you may end up using one per screen.\\nThe props of each `StatusBar` component will be merged in the order that they were mounted.\\nThis component is built on top of the [StatusBar](https://reactnative.dev/docs/statusbar)\\ncomponent exported from React Native, and it provides defaults that work better for Expo users.\\n"},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"StatusBarProps"}}],"type":{"type":"literal","value":null}}]},{"name":"setStatusBarBackgroundColor","kind":64,"kindString":"Function","signatures":[{"name":"setStatusBarBackgroundColor","kind":4096,"kindString":"Call signature","comment":{"shortText":"Set the background color of the status bar.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"backgroundColor","kind":32768,"kindString":"Parameter","comment":{"shortText":"The background color of the status bar."},"type":{"type":"intrinsic","name":"string"}},{"name":"animated","kind":32768,"kindString":"Parameter","comment":{"shortText":"`true` to animate the background color change, `false` to change immediately."},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setStatusBarHidden","kind":64,"kindString":"Function","signatures":[{"name":"setStatusBarHidden","kind":4096,"kindString":"Call signature","comment":{"shortText":"Toggle visibility of the status bar."},"parameters":[{"name":"hidden","kind":32768,"kindString":"Parameter","comment":{"shortText":"If the status bar should be hidden."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"animation","kind":32768,"kindString":"Parameter","comment":{"shortText":"Animation to use when toggling hidden, defaults to `\'none\'`.\\n"},"type":{"type":"reference","name":"StatusBarAnimation"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setStatusBarNetworkActivityIndicatorVisible","kind":64,"kindString":"Function","signatures":[{"name":"setStatusBarNetworkActivityIndicatorVisible","kind":4096,"kindString":"Call signature","comment":{"shortText":"Toggle visibility of the network activity indicator.","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"visible","kind":32768,"kindString":"Parameter","comment":{"shortText":"If the network activity indicator should be visible."},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setStatusBarStyle","kind":64,"kindString":"Function","signatures":[{"name":"setStatusBarStyle","kind":4096,"kindString":"Call signature","comment":{"shortText":"Set the bar style of the status bar."},"parameters":[{"name":"style","kind":32768,"kindString":"Parameter","comment":{"shortText":"The color of the status bar text.\\n"},"type":{"type":"reference","name":"StatusBarStyle"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setStatusBarTranslucent","kind":64,"kindString":"Function","signatures":[{"name":"setStatusBarTranslucent","kind":4096,"kindString":"Call signature","comment":{"shortText":"Set the translucency of the status bar.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"translucent","kind":32768,"kindString":"Parameter","comment":{"shortText":"Whether the app can draw under the status bar. When `true`, content will be\\nrendered under the status bar. This is always `true` on iOS and cannot be changed."},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]}]}')},"0Wqv":function(e){e.exports=JSON.parse('{"name":"expo-web-browser","kind":1,"kindString":"Project","originalName":"","children":[{"name":"WebBrowserResultType","kind":8,"kindString":"Enumeration","children":[{"name":"CANCEL","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"cancel\\""},{"name":"DISMISS","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"dismiss\\""},{"name":"LOCKED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"locked\\""},{"name":"OPENED","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"android\\n"}]},"defaultValue":"\\"opened\\""}]},{"name":"WebBrowserAuthSessionResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"WebBrowserRedirectResult"},{"type":"reference","name":"WebBrowserResult"}]}},{"name":"WebBrowserCompleteAuthSessionOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"skipRedirectCheck","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Attempt to close the window without checking to see if the auth redirect matches the cached redirect URL."},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"WebBrowserCompleteAuthSessionResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"message","kind":1024,"kindString":"Property","comment":{"shortText":"Additional description or reasoning of the result."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the result."},"type":{"type":"union","types":[{"type":"literal","value":"success"},{"type":"literal","value":"failed"}]}}]}}},{"name":"WebBrowserCoolDownResult","kind":4194304,"kindString":"Type alias","type":{"type":"reference","name":"ServiceActionResult"}},{"name":"WebBrowserCustomTabsResults","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"browserPackages","kind":1024,"kindString":"Property","comment":{"shortText":"All packages recognized by `PackageManager` as capable of handling Custom Tabs. Empty array\\nmeans there is no supporting browsers on device."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"defaultBrowserPackage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Default package chosen by user, `null` if there is no such packages. Also `null` usually means,\\nthat user will be prompted to choose from available packages."},"type":{"type":"intrinsic","name":"string"}},{"name":"preferredBrowserPackage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Package preferred by `CustomTabsClient` to be used to handle Custom Tabs. It favors browser\\nchosen by user as default, as long as it is present on both `browserPackages` and\\n`servicePackages` lists. Only such browsers are considered as fully supporting Custom Tabs.\\nIt might be `null` when there is no such browser installed or when default browser is not in\\n`servicePackages` list."},"type":{"type":"intrinsic","name":"string"}},{"name":"servicePackages","kind":1024,"kindString":"Property","comment":{"shortText":"All packages recognized by `PackageManager` as capable of handling Custom Tabs Service.\\nThis service is used by [`warmUpAsync`](#webbrowserwarmupasyncbrowserpackage), [`mayInitWithUrlAsync`](#webbrowsermayinitwithurlasyncurl-browserpackage)\\nand [`coolDownAsync`](#webbrowsercooldownasyncbrowserpackage)."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}}},{"name":"WebBrowserMayInitWithUrlResult","kind":4194304,"kindString":"Type alias","type":{"type":"reference","name":"ServiceActionResult"}},{"name":"WebBrowserOpenOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"browserPackage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Package name of a browser to be used to handle Custom Tabs. List of\\navailable packages is to be queried by [`getCustomTabsSupportingBrowsers`](#webbrowsergetcustomtabssupportingbrowsersasync) method.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"controlsColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Tint color for controls in SKSafariViewController in `#AARRGGBB` or `#RRGGBB` format.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"createTask","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether the browser should open in a new task or in\\nthe same task as your app.","tags":[{"tag":"default","text":"true"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"dismissButtonStyle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The style of the dismiss button. Should be one of: `done`, `close`, or `cancel`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":"done"},{"type":"literal","value":"close"},{"type":"literal","value":"cancel"}]}},{"name":"enableBarCollapsing","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether the toolbar should be hiding when a user scrolls the website."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"enableDefaultShareMenuItem","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether a default share item should be added to the menu.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"readerMode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether Safari should enter Reader mode, if it is available.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"secondaryToolbarColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Color of the secondary toolbar in either `#AARRGGBB` or `#RRGGBB` format.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"showInRecents","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether browsed website should be shown as separate\\nentry in Android recents/multitasking view. Requires `createTask` to be `true` (default).","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"showTitle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether the browser should show the title of website on the toolbar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"toolbarColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Color of the toolbar in either `#AARRGGBB` or `#RRGGBB` format."},"type":{"type":"intrinsic","name":"string"}},{"name":"windowFeatures","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Features to use with `window.open()`.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"WebBrowserWindowFeatures"}]}},{"name":"windowName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Name to assign to the popup window.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"WebBrowserRedirectResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the result."},"type":{"type":"literal","value":"success"}},{"name":"url","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"WebBrowserResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the result."},"type":{"type":"reference","name":"WebBrowserResultType"}}]}}},{"name":"WebBrowserWarmUpResult","kind":4194304,"kindString":"Type alias","type":{"type":"reference","name":"ServiceActionResult"}},{"name":"WebBrowserWindowFeatures","kind":4194304,"kindString":"Type alias","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"string"}]}],"name":"Record"}},{"name":"coolDownAsync","kind":64,"kindString":"Function","signatures":[{"name":"coolDownAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"This methods removes all bindings to services created by [`warmUpAsync`](#webbrowserwarmupasyncbrowserpackage)\\nor [`mayInitWithUrlAsync`](#webbrowsermayinitwithurlasyncurl-browserpackage). You should call\\nthis method once you don\'t need them to avoid potential memory leaks. However, those binding\\nwould be cleared once your application is destroyed, which might be sufficient in most cases.","returns":"The promise which fulfils with ` WebBrowserCoolDownResult` when cooling is performed, or\\nan empty object when there was no connection to be dismissed.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"browserPackage","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Package of browser to be cooled. If not set, preferred browser will be used.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserCoolDownResult"}],"name":"Promise"}}]},{"name":"dismissAuthSession","kind":64,"kindString":"Function","signatures":[{"name":"dismissAuthSession","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]},{"name":"dismissBrowser","kind":64,"kindString":"Function","signatures":[{"name":"dismissBrowser","kind":4096,"kindString":"Call signature","comment":{"shortText":"Dismisses the presented web browser.","returns":"The `void` on successful attempt, or throws error, if dismiss functionality is not avaiable.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"name":"getCustomTabsSupportingBrowsersAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCustomTabsSupportingBrowsersAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a list of applications package names supporting Custom Tabs, Custom Tabs\\nservice, user chosen and preferred one. This may not be fully reliable, since it uses\\n`PackageManager.getResolvingActivities` under the hood. (For example, some browsers might not be\\npresent in browserPackages list once another browser is set to default.)","returns":"The promise which fulfils with [`WebBrowserCustomTabsResults`](#webbrowsercustomtabsresults) object.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserCustomTabsResults"}],"name":"Promise"}}]},{"name":"mayInitWithUrlAsync","kind":64,"kindString":"Function","signatures":[{"name":"mayInitWithUrlAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"This method initiates (if needed) [CustomTabsSession](https://developer.android.com/reference/android/support/customtabs/CustomTabsSession.html#maylaunchurl)\\nand calls its `mayLaunchUrl` method for browser specified by the package.","returns":"A promise which fulfils with `WebBrowserMayInitWithUrlResult` object.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"The url of page that is likely to be loaded first when opening browser."},"type":{"type":"intrinsic","name":"string"}},{"name":"browserPackage","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Package of browser to be informed. If not set, preferred\\nbrowser will be used.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserMayInitWithUrlResult"}],"name":"Promise"}}]},{"name":"maybeCompleteAuthSession","kind":64,"kindString":"Function","signatures":[{"name":"maybeCompleteAuthSession","kind":4096,"kindString":"Call signature","comment":{"shortText":"Possibly completes an authentication session on web in a window popup. The method\\nshould be invoked on the page that the window redirects to.","returns":"Returns an object with message about why the redirect failed or succeeded:\\n\\nIf `type` is set to `failed`, the reason depends on the message:\\n- `Not supported on this platform`: If the platform doesn\'t support this method (iOS, Android).\\n- `Cannot use expo-web-browser in a non-browser environment`: If the code was executed in an SSR\\n  or node environment.\\n- `No auth session is currently in progress`: (the cached state wasn\'t found in local storage).\\n  This can happen if the window redirects to an origin (website) that is different to the initial\\n  website origin. If this happens in development, it may be because the auth started on localhost\\n  and finished on your computer port (Ex: `128.0.0.*`). This is controlled by the `redirectUrl`\\n  and `returnUrl`.\\n- `Current URL \\"<URL>\\" and original redirect URL \\"<URL>\\" do not match`: This can occur when the\\n  redirect URL doesn\'t match what was initial defined as the `returnUrl`. You can skip this test\\n  in development by passing `{ skipRedirectCheck: true }` to the function.\\n\\nIf `type` is set to `success`, the parent window will attempt to close the child window immediately.\\n\\nIf the error `ERR_WEB_BROWSER_REDIRECT` was thrown, it may mean that the parent window was\\nreloaded before the auth was completed. In this case you\'ll need to close the child window manually.\\n","tags":[{"tag":"platform","text":"web\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"WebBrowserCompleteAuthSessionOptions"},"defaultValue":"{}"}],"type":{"type":"reference","name":"WebBrowserCompleteAuthSessionResult"}}]},{"name":"openAuthSessionAsync","kind":64,"kindString":"Function","signatures":[{"name":"openAuthSessionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"# On iOS:\\nOpens the url with Safari in a modal using `SFAuthenticationSession` on iOS 11 and greater,\\nand falling back on a `SFSafariViewController`. The user will be asked whether to allow the app\\nto authenticate using the given url.","text":"# On Android:\\nThis will be done using a \\"custom Chrome tabs\\" browser, [AppState](../react-native/appstate/),\\nand [Linking](./linking/) APIs.\\n\\n# On web:\\n> This API can only be used in a secure environment (`https`). You can use expo `start:web --https`\\nto test this. Otherwise, an error with code [`ERR_WEB_BROWSER_CRYPTO`](#errwebbrowsercrypto) will be thrown.\\nThis will use the browser\'s [`window.open()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/open) API.\\n- _Desktop_: This will create a new web popup window in the browser that can be closed later using `WebBrowser.maybeCompleteAuthSession()`.\\n- _Mobile_: This will open a new tab in the browser which can be closed using `WebBrowser.maybeCompleteAuthSession()`.\\n\\nHow this works on web:\\n- A crypto state will be created for verifying the redirect.\\n  - This means you need to run with `expo start:web --https`\\n- The state will be added to the window\'s `localstorage`. This ensures that auth cannot complete\\n  unless it\'s done from a page running with the same origin as it was started.\\n  Ex: if `openAuthSessionAsync` is invoked on `https://localhost:19006`, then `maybeCompleteAuthSession`\\n  must be invoked on a page hosted from the origin `https://localhost:19006`. Using a different\\n  website, or even a different host like `https://128.0.0.*:19006` for example will not work.\\n- A timer will be started to check for every 1000 milliseconds (1 second) to detect if the window\\n  has been closed by the user. If this happens then a promise will resolve with `{ type: \'dismiss\' }`.\\n\\n> On mobile web, Chrome and Safari will block any call to [`window.open()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/open)\\nwhich takes too long to fire after a user interaction. This method must be invoked immediately\\nafter a user interaction. If the event is blocked, an error with code [`ERR_WEB_BROWSER_BLOCKED`](#errwebbrowserblocked) will be thrown.\\n","returns":"\\n- If the user does not permit the application to authenticate with the given url, the Promise fulfills with `{ type: \'cancel\' }` object.\\n- If the user closed the web browser, the Promise fulfills with `{ type: \'cancel\' }` object.\\n- If the browser is closed using [`dismissBrowser`](#webbrowserdismissbrowser),\\nthe Promise fulfills with `{ type: \'dismiss\' }` object.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"The url to open in the web browser. This should be a login page."},"type":{"type":"intrinsic","name":"string"}},{"name":"redirectUrl","kind":32768,"kindString":"Parameter","comment":{"shortText":"_Optional_ - The url to deep link back into your app. By default, this will be [`Constants.linkingUrl`](./constants/#expoconstantslinkinguri)."},"type":{"type":"intrinsic","name":"string"}},{"name":"browserParams","kind":32768,"kindString":"Parameter","comment":{"shortText":"_Optional_ - An object with the same keys as [`WebBrowserOpenOptions`](#webbrowseropenoptions).\\nIf there is no native AuthSession implementation available (which is the case on Android)\\nthese params will be used in the browser polyfill. If there is a native AuthSession implementation,\\nthese params will be ignored.\\n"},"type":{"type":"reference","name":"WebBrowserOpenOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserAuthSessionResult"}],"name":"Promise"}}]},{"name":"openBrowserAsync","kind":64,"kindString":"Function","signatures":[{"name":"openBrowserAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Opens the url with Safari in a modal on iOS using [`SFSafariViewController`](https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller),\\nand Chrome in a new [custom tab](https://developer.chrome.com/multidevice/android/customtabs)\\non Android. On iOS, the modal Safari will not share cookies with the system Safari. If you need\\nthis, use [`openAuthSessionAsync`](#webbrowseropenauthsessionasyncurl-redirecturl-browserparams).","returns":"The promise behaves differently based on the platform.\\nOn Android promise resolves with `{type: \'opened\'}` if we were able to open browser.\\nOn iOS:\\n- If the user closed the web browser, the Promise resolves with `{ type: \'cancel\' }`.\\n- If the browser is closed using [`dismissBrowser`](#webbrowserdismissbrowser), the Promise resolves with `{ type: \'dismiss\' }`.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"The url to open in the web browser."},"type":{"type":"intrinsic","name":"string"}},{"name":"browserParams","kind":32768,"kindString":"Parameter","comment":{"shortText":"A dictionary of key-value pairs.\\n"},"type":{"type":"reference","name":"WebBrowserOpenOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserResult"}],"name":"Promise"}}]},{"name":"warmUpAsync","kind":64,"kindString":"Function","signatures":[{"name":"warmUpAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"This method calls `warmUp` method on [CustomTabsClient](https://developer.android.com/reference/android/support/customtabs/CustomTabsClient.html#warmup(long))\\nfor specified package.","returns":"A promise which fulfils with `WebBrowserWarmUpResult` object.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"browserPackage","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Package of browser to be warmed up. If not set, preferred browser will be warmed.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserWarmUpResult"}],"name":"Promise"}}]}]}')},"0aKP":function(e,w,n){"use strict";var c=[].splice;e.exports=c},"0cwX":function(e){e.exports=JSON.parse('{"name":"expo-task-manager","kind":1,"kindString":"Project","originalName":"","children":[{"name":"TaskManagerError","kind":256,"kindString":"Interface","comment":{"shortText":"Error object that can be received through [`TaskManagerTaskBody`](#taskmanagertaskbody) when the\\ntask fails."},"children":[{"name":"code","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}},{"name":"message","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]},{"name":"TaskManagerTask","kind":256,"kindString":"Interface","comment":{"shortText":"Represents an already registered task."},"children":[{"name":"options","kind":1024,"kindString":"Property","comment":{"shortText":"Provides `options` that the task was registered with."},"type":{"type":"intrinsic","name":"any"}},{"name":"taskName","kind":1024,"kindString":"Property","comment":{"shortText":"Name that the task is registered with."},"type":{"type":"intrinsic","name":"string"}},{"name":"taskType","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the task which depends on how the task was registered."},"type":{"type":"intrinsic","name":"string"}}]},{"name":"TaskManagerTaskBody","kind":256,"kindString":"Interface","comment":{"shortText":"Represents the object that is passed to the task executor."},"children":[{"name":"data","kind":1024,"kindString":"Property","comment":{"shortText":"An object of data passed to the task executor. Its properties depends on the type of the task."},"type":{"type":"reference","name":"T"}},{"name":"error","kind":1024,"kindString":"Property","comment":{"shortText":"Error object if the task failed or `null` otherwise."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"TaskManagerError"}]}},{"name":"executionInfo","kind":1024,"kindString":"Property","comment":{"shortText":"Additional details containing unique ID of task event and name of the task."},"type":{"type":"reference","name":"TaskManagerTaskBodyExecutionInfo"}}],"typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter","default":{"type":"intrinsic","name":"object"}}]},{"name":"TaskManagerTaskBodyExecutionInfo","kind":256,"kindString":"Interface","comment":{"shortText":"Additional details about execution provided in `TaskManagerTaskBody`."},"children":[{"name":"appState","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"State of the application.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":"active"},{"type":"literal","value":"background"},{"type":"literal","value":"inactive"}]}},{"name":"eventId","kind":1024,"kindString":"Property","comment":{"shortText":"Unique ID of task event."},"type":{"type":"intrinsic","name":"string"}},{"name":"taskName","kind":1024,"kindString":"Property","comment":{"shortText":"Name of the task."},"type":{"type":"intrinsic","name":"string"}}]},{"name":"TaskManagerTaskExecutor","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Type of task executor \u2013 a function that handles the task."},"parameters":[{"name":"body","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"TaskManagerTaskBody"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"defineTask","kind":64,"kindString":"Function","signatures":[{"name":"defineTask","kind":4096,"kindString":"Call signature","comment":{"shortText":"Defines task function. It must be called in the global scope of your JavaScript bundle.\\nIn particular, it cannot be called in any of React lifecycle methods like `componentDidMount`.\\nThis limitation is due to the fact that when the application is launched in the background,\\nwe need to spin up your JavaScript app, run your task and then shut down \u2014 no views are mounted\\nin this scenario."},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task. It must be the same as the name you provided when registering the task."},"type":{"type":"intrinsic","name":"string"}},{"name":"taskExecutor","kind":32768,"kindString":"Parameter","comment":{"shortText":"A function that will be invoked when the task with given `taskName` is executed.\\n"},"type":{"type":"reference","name":"TaskManagerTaskExecutor"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"getRegisteredTasksAsync","kind":64,"kindString":"Function","signatures":[{"name":"getRegisteredTasksAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Provides information about tasks registered in the app.","returns":"A promise which fulfills with an array of tasks registered in the app. Example:\\n```json\\n[\\n  {\\n    taskName: \'location-updates-task-name\',\\n    taskType: \'location\',\\n    options: {\\n      accuracy: Location.Accuracy.High,\\n      showsBackgroundLocationIndicator: false,\\n    },\\n  },\\n  {\\n    taskName: \'geofencing-task-name\',\\n    taskType: \'geofencing\',\\n    options: {\\n      regions: [...],\\n    },\\n  },\\n]\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"TaskManagerTask"}}],"name":"Promise"}}]},{"name":"getTaskOptionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getTaskOptionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Retrieves `options` associated with the task, that were passed to the function registering the task\\n(eg. `Location.startLocationUpdatesAsync`).","returns":"A promise which fulfills with the `options` object that was passed while registering task\\nwith given name or `null` if task couldn\'t be found.\\n"},"typeParameter":[{"name":"TaskOptions","kind":131072,"kindString":"Type parameter"}],"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TaskOptions"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine if the `TaskManager` API can be used in this app.","returns":"A promise fulfills with `true` if the API can be used, and `false` otherwise.\\nOn the web it always returns `false`.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isTaskDefined","kind":64,"kindString":"Function","signatures":[{"name":"isTaskDefined","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks whether the task is already defined."},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"isTaskRegisteredAsync","kind":64,"kindString":"Function","signatures":[{"name":"isTaskRegisteredAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine whether the task is registered. Registered tasks are stored in a persistent storage and\\npreserved between sessions.","returns":"A promise which fulfills with a `boolean` value whether or not the task with given name\\nis already registered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"unregisterAllTasksAsync","kind":64,"kindString":"Function","signatures":[{"name":"unregisterAllTasksAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unregisters all tasks registered for the running app. You may want to call this when the user is\\nsigning out and you no longer need to track his location or run any other background tasks.","returns":"A promise which fulfills as soon as all tasks are completely unregistered.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"unregisterTaskAsync","kind":64,"kindString":"Function","signatures":[{"name":"unregisterTaskAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unregisters task from the app, so the app will not be receiving updates for that task anymore.\\n_It is recommended to use methods specialized by modules that registered the task, eg.\\n[`Location.stopLocationUpdatesAsync`](./location/#expolocationstoplocationupdatesasynctaskname)._","returns":"A promise which fulfills as soon as the task is unregistered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task to unregister."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},"0h9/":function(e,w,n){"use strict";Object.defineProperty(w,"__esModule",{value:!0});var c=n("E/Jm"),p=n("yRGd"),d=a;function a(m){var r=m.attempt(this.parser.constructs.contentInitial,i,o),s;return r;function i(k){if(k===null){m.consume(k);return}return m.enter("lineEnding"),m.consume(k),m.exit("lineEnding"),p(m,r,"linePrefix")}function o(k){return m.enter("paragraph"),t(k)}function t(k){var g=m.enter("chunkText",{contentType:"text",previous:s});return s&&(s.next=g),s=g,l(k)}function l(k){if(k===null){m.exit("chunkText"),m.exit("paragraph"),m.consume(k);return}return c(k)?(m.consume(k),m.exit("chunkText"),t):(m.consume(k),l)}}w.tokenize=d},"0mGV":function(e,w,n){"use strict";var c=n("E/Jm"),p=n("2N74"),d=n("yRGd");function a(m,r){var s;return i;function i(o){return c(o)?(m.enter("lineEnding"),m.consume(o),m.exit("lineEnding"),s=!0,i):p(o)?d(m,i,s?"linePrefix":"lineSuffix")(o):r(o)}}e.exports=a},"0sWW":function(e){e.exports=JSON.parse('{"name":"expo-background-fetch","kind":0,"kindString":"Project","originalName":"","children":[{"name":"BackgroundFetchResult","kind":4,"kindString":"Enumeration","comment":{"shortText":"This return value is to let iOS know what the result of your background fetch was, so the\\nplatform can better schedule future background fetches. Also, your app has up to 30 seconds\\nto perform the task, otherwise your app will be terminated and future background fetches\\nmay be delayed."},"children":[{"name":"Failed","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An attempt to download data was made but that attempt failed."},"defaultValue":"3"},{"name":"NewData","kind":16,"kindString":"Enumeration member","comment":{"shortText":"New data was successfully downloaded."},"defaultValue":"2"},{"name":"NoData","kind":16,"kindString":"Enumeration member","comment":{"shortText":"There was no new data to download."},"defaultValue":"1"}]},{"name":"BackgroundFetchStatus","kind":4,"kindString":"Enumeration","children":[{"name":"Available","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Background updates are available for the app."},"defaultValue":"3"},{"name":"Denied","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The user explicitly disabled background behavior for this app or for the whole system."},"defaultValue":"1"},{"name":"Restricted","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Background updates are unavailable and the user cannot enable them again. This status can occur\\nwhen, for example, parental controls are in effect for the current user."},"defaultValue":"2"}]},{"name":"BackgroundFetchOptions","kind":256,"kindString":"Interface","children":[{"name":"minimumInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Inexact interval in seconds between subsequent repeats of the background fetch alarm. The final\\ninterval may differ from the specified one to minimize wakeups and battery usage.\\n- On Android it defaults to __10 minutes__,\\n- On iOS it calls [`BackgroundFetch.setMinimumIntervalAsync`](#backgroundfetchsetminimumintervalasyncminimuminterval)\\nbehind the scenes and the default value is the smallest fetch interval supported by the system __(10-15 minutes)__.\\nBackground fetch task receives no data, but your task should return a value that best describes\\nthe results of your background fetch work.","tags":[{"tag":"returns","text":"Returns a promise that fulfils once the task is registered and rejects in case of any errors.\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"startOnBoot","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(Android only).__ Whether to restart background fetch events when the device has finished\\nbooting. Defaults to `false`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"stopOnTerminate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(Android only).__ Whether to stop receiving background fetch events after user terminates the\\napp. Defaults to `true`."},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"getStatusAsync","kind":64,"kindString":"Function","signatures":[{"name":"getStatusAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets a status of background fetch.","returns":"Returns a promise which fulfils with one of `BackgroundFetchStatus` enum values.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"BackgroundFetchStatus"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"registerTaskAsync","kind":64,"kindString":"Function","signatures":[{"name":"registerTaskAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Registers background fetch task with given name. Registered tasks are saved in persistent storage and restored once the app is initialized."},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"text":"Name of the task to register. The task needs to be defined first - see [`TaskManager.defineTask`](taskmanager#defineTask)\\nfor more details."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"An object containing the background fetch options.\\n\\n# Example\\n```ts\\nimport * as BackgroundFetch from \'expo-background-fetch\';\\nimport * as TaskManager from \'expo-task-manager\';\\n\\nTaskManager.defineTask(YOUR_TASK_NAME, () => {\\n  try {\\n    const receivedNewData = // do your background fetch here\\n    return receivedNewData ? BackgroundFetch.Result.NewData : BackgroundFetch.Result.NoData;\\n  } catch (error) {\\n    return BackgroundFetch.Result.Failed;\\n  }\\n});\\n```\\n"},"type":{"type":"reference","name":"BackgroundFetchOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setMinimumIntervalAsync","kind":64,"kindString":"Function","signatures":[{"name":"setMinimumIntervalAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the minimum number of seconds that must elapse before another background fetch can be\\ninitiated. This value is advisory only and does not indicate the exact amount of time expected\\nbetween fetch operations.","text":"> This method doesn\'t take any effect on Android. It is a global value which means that it can\\noverwrite settings from another application opened through Expo Go.\\n","returns":"A promise which fulfils once the minimum interval is set.\\n"},"parameters":[{"name":"minimumInterval","kind":32768,"kindString":"Parameter","comment":{"text":"Number of seconds that must elapse before another background fetch can be called."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"unregisterTaskAsync","kind":64,"kindString":"Function","signatures":[{"name":"unregisterTaskAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unregisters background fetch task, so the application will no longer be executing this task.","returns":"A promise which fulfils when the task is fully unregistered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"text":"Name of the task to unregister."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},"19je":function(e){e.exports=JSON.parse('{"name":"expo-brightness","kind":1,"kindString":"Project","originalName":"","children":[{"name":"BrightnessMode","kind":8,"kindString":"Enumeration","children":[{"name":"AUTOMATIC","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Mode in which the device OS will automatically adjust the screen brightness depending on the\\nambient light."},"defaultValue":"1"},{"name":"MANUAL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Mode in which the screen brightness will remain constant and will not be adjusted by the OS."},"defaultValue":"2"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Means that the current brightness mode cannot be determined."},"defaultValue":"0"}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"getBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current brightness level of the device\'s main screen.","returns":"A `Promise` that fulfils with a number between `0` and `1`, inclusive, representing the\\ncurrent screen brightness.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing system brightness.","returns":"A promise that fulfils with an object of type [PermissionResponse](#permissionrespons).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getSystemBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"getSystemBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the global system screen brightness.","returns":"A `Promise` that is resolved with a number between `0` and `1`, inclusive, representing\\nthe current system screen brightness.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise"}}]},{"name":"getSystemBrightnessModeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getSystemBrightnessModeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the system brightness mode (e.g. whether or not the OS will automatically\\nadjust the screen brightness depending on ambient light).","returns":"A `Promise` that fulfils with a [`BrightnessMode`](#brightnessmode). Requires\\n`SYSTEM_BRIGHTNESS` permissions.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BrightnessMode"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the Brightness API is enabled on the current device. This does not check the app\\npermissions.","returns":"Async `boolean`, indicating whether the Brightness API is available on the current device.\\nCurrently this resolves `true` on iOS and Android only.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isUsingSystemBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"isUsingSystemBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a boolean specifying whether or not the current activity is using the\\nsystem-wide brightness value.","returns":"A `Promise` that fulfils with `true` when the current activity is using the system-wide\\nbrightness value, and `false` otherwise.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing system brightness.","returns":"A promise that fulfils with an object of type [PermissionResponse](#permissionrespons).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"setBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"setBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the current screen brightness. On iOS, this setting will persist until the device is locked,\\nafter which the screen brightness will revert to the user\'s default setting. On Android, this\\nsetting only applies to the current activity; it will override the system brightness value\\nwhenever your app is in the foreground.","returns":"A `Promise` that fulfils when the brightness has been successfully set.\\n"},"parameters":[{"name":"brightnessValue","kind":32768,"kindString":"Parameter","comment":{"shortText":"A number between `0` and `1`, inclusive, representing the desired screen\\nbrightness."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setSystemBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"setSystemBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"> __WARNING:__ This method is experimental.","text":"Sets the global system screen brightness and changes the brightness mode to\\n`MANUAL`. Requires `SYSTEM_BRIGHTNESS` permissions.","returns":"A `Promise` that fulfils when the brightness has been successfully set.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"brightnessValue","kind":32768,"kindString":"Parameter","comment":{"shortText":"A number between `0` and `1`, inclusive, representing the desired screen\\nbrightness."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setSystemBrightnessModeAsync","kind":64,"kindString":"Function","signatures":[{"name":"setSystemBrightnessModeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the system brightness mode.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"brightnessMode","kind":32768,"kindString":"Parameter","comment":{"shortText":"One of `BrightnessMode.MANUAL` or `BrightnessMode.AUTOMATIC`. The system\\nbrightness mode cannot be set to `BrightnessMode.UNKNOWN`."},"type":{"type":"reference","name":"BrightnessMode"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"usePermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"usePermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to modify the system brightness.\\nThis uses both `requestPermissionAsync` and `getPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Brightness.usePermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"useSystemBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"useSystemBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Resets the brightness setting of the current activity to use the system-wide\\nbrightness value rather than overriding it.","returns":"A `Promise` that fulfils when the setting has been successfully changed.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},"1SvC":function(e){e.exports=JSON.parse('{"name":"expo-brightness","kind":1,"kindString":"Project","originalName":"","children":[{"name":"BrightnessMode","kind":8,"kindString":"Enumeration","children":[{"name":"AUTOMATIC","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Mode in which the device OS will automatically adjust the screen brightness depending on the\\nambient light."},"defaultValue":"1"},{"name":"MANUAL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Mode in which the screen brightness will remain constant and will not be adjusted by the OS."},"defaultValue":"2"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Means that the current brightness mode cannot be determined."},"defaultValue":"0"}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"getBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current brightness level of the device\'s main screen.","returns":"A `Promise` that fulfils with a number between `0` and `1`, inclusive, representing the\\ncurrent screen brightness.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing system brightness.","returns":"A promise that fulfils with an object of type [PermissionResponse](#permissionrespons).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getSystemBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"getSystemBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"__Android only.__ Gets the global system screen brightness.","returns":"A `Promise` that is resolved with a number between `0` and `1`, inclusive, representing\\nthe current system screen brightness.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise"}}]},{"name":"getSystemBrightnessModeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getSystemBrightnessModeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"__Android only.__ Gets the system brightness mode (e.g. whether or not the OS will automatically\\nadjust the screen brightness depending on ambient light).","returns":"A `Promise` that fulfils with a [`BrightnessMode`](#brightnessmode). Requires\\n`SYSTEM_BRIGHTNESS` permissions.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BrightnessMode"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the Brightness API is enabled on the current device. This does not check the app\\npermissions.","returns":"Async `boolean`, indicating whether the Brightness API is available on the current device.\\nCurrently this resolves `true` on iOS and Android only.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isUsingSystemBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"isUsingSystemBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"__Android only.__ Returns a boolean specifying whether or not the current activity is using the\\nsystem-wide brightness value.","returns":"A `Promise` that fulfils with `true` when the current activity is using the system-wide\\nbrightness value, and `false` otherwise.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing system brightness.","returns":"A promise that fulfils with an object of type [PermissionResponse](#permissionrespons).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"setBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"setBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the current screen brightness. On iOS, this setting will persist until the device is locked,\\nafter which the screen brightness will revert to the user\'s default setting. On Android, this\\nsetting only applies to the current activity; it will override the system brightness value\\nwhenever your app is in the foreground.","returns":"A `Promise` that fulfils when the brightness has been successfully set.\\n"},"parameters":[{"name":"brightnessValue","kind":32768,"kindString":"Parameter","comment":{"text":"A number between `0` and `1`, inclusive, representing the desired screen\\nbrightness."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setSystemBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"setSystemBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"> __WARNING:__ This method is experimental.","text":"__Android only.__ Sets the global system screen brightness and changes the brightness mode to\\n`MANUAL`. Requires `SYSTEM_BRIGHTNESS` permissions.","returns":"A `Promise` that fulfils when the brightness has been successfully set.\\n"},"parameters":[{"name":"brightnessValue","kind":32768,"kindString":"Parameter","comment":{"text":"A number between `0` and `1`, inclusive, representing the desired screen\\nbrightness."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setSystemBrightnessModeAsync","kind":64,"kindString":"Function","signatures":[{"name":"setSystemBrightnessModeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"__Android only.__ Sets the system brightness mode."},"parameters":[{"name":"brightnessMode","kind":32768,"kindString":"Parameter","comment":{"text":"One of `BrightnessMode.MANUAL` or `BrightnessMode.AUTOMATIC`. The system\\nbrightness mode cannot be set to `BrightnessMode.UNKNOWN`.\\n"},"type":{"type":"reference","name":"BrightnessMode"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"usePermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"usePermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to modify the system brightness.\\nThis uses both `requestPermissionAsync` and `getPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Brightness.usePermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"useSystemBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"useSystemBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"__Android only.__ Resets the brightness setting of the current activity to use the system-wide\\nbrightness value rather than overriding it.","returns":"A `Promise` that fulfils when the setting has been successfully changed.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},"1kJa":function(e){e.exports=JSON.parse('{"name":"expo-error-recovery","kind":1,"kindString":"Project","originalName":"","children":[{"name":"ErrorRecoveryProps","kind":4194304,"kindString":"Type alias","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"recoveredProps","kind":32,"kindString":"Variable","type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"ErrorRecoveryProps"}]},"defaultValue":"..."},{"name":"setRecoveryProps","kind":64,"kindString":"Function","signatures":[{"name":"setRecoveryProps","kind":4096,"kindString":"Call signature","comment":{"shortText":"Set arbitrary error recovery props. If your project crashes in production as a result of a fatal\\nJS error, Expo will reload your project. If you\'ve set these props, they\'ll be passed to your\\nreloaded project\'s initial props under `exp.errorRecovery`. Access to `localStorage` is required\\non web, or else this will simply be a no-op.","text":"[Read more about error handling with Expo](/guides/errors)."},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","comment":{"shortText":"An object which will be passed to your reloaded project\'s initial props if the\\nproject was reloaded as a result of a fatal JS error.\\n"},"type":{"type":"reference","name":"ErrorRecoveryProps"}}],"type":{"type":"intrinsic","name":"void"}}]}]}')},"1mpw":function(e,w,n){"use strict";var c=n("Mf4r");function p(d){for(;!c(d););return d}e.exports=p},"20u5":function(e,w,n){"use strict";function c(p,d){var a=d.start._index,m=d.start._bufferIndex,r=d.end._index,s=d.end._bufferIndex,i;return a===r?i=[p[a].slice(m,s)]:(i=p.slice(a,r),m>-1&&(i[0]=i[0].slice(m)),s>0&&i.push(p[r].slice(0,s))),i}e.exports=c},"26Rv":function(e){e.exports=JSON.parse('{"name":"expo-keep-awake","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"activateKeepAwake","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"activateKeepAwake","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Prevents the screen from sleeping until `deactivateKeepAwake` is called with the same `tag` value.","text":"If the `tag` argument is specified, the screen will not sleep until you call `deactivateKeepAwake`\\nwith the same `tag` argument. When using multiple `tags` for activation you\'ll have to deactivate\\neach one in order to re-enable screen sleep. If tag is unspecified, the default `tag` is used."},"parameters":[{"name":"tag","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"*Optional* - Tag to lock screen sleep prevention. If not provided, the default tag is used.\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"deactivateKeepAwake","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"deactivateKeepAwake","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Releases the lock on screen-sleep prevention associated with the given `tag` value. If `tag`\\nis unspecified, it defaults to the same default tag that `activateKeepAwake` uses."},"parameters":[{"name":"tag","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"*Optional* - Tag to release the lock on screen sleep prevention. If not provided,\\nthe default tag is used.\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"useKeepAwake","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"useKeepAwake","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"A React hook to keep the screen awake for as long as the owner component is mounted.\\nThe optionally provided `tag` argument is used when activating and deactivating the keep-awake\\nfeature. If unspecified, the default `tag` is used. See the documentation for `activateKeepAwake`\\nbelow to learn more about the `tag` argument."},"parameters":[{"name":"tag","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"*Optional*\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."}],"type":{"type":"intrinsic","name":"void"}}]}]}')},"2AxE":function(e,w,n){"use strict";var c=n("xGQ6");e.exports=p;function p(d,a){var m={src:c(a.url),alt:a.alt};return a.title!==null&&a.title!==void 0&&(m.title=a.title),d(a,"img",m)}},"2J2/":function(e){e.exports=JSON.parse('{"name":"expo-pedometer","kind":1,"kindString":"Project","originalName":"","children":[{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"PedometerResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"steps","kind":1024,"kindString":"Property","comment":{"shortText":"Number of steps taken between the given dates."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PedometerUpdateCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"result","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"PedometerResult"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getStepCountAsync","kind":64,"kindString":"Function","signatures":[{"name":"getStepCountAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the step count between two dates.","returns":"Returns a promise that fulfills with a [`PedometerResult`](#pedometerresult).\\n\\nAs [Apple documentation states](https://developer.apple.com/documentation/coremotion/cmpedometer/1613946-querypedometerdatafromdate?language=objc):\\n> Only the past seven days worth of data is stored and available for you to retrieve. Specifying\\n> a start date that is more than seven days in the past returns only the available data.\\n"},"parameters":[{"name":"start","kind":32768,"kindString":"Parameter","comment":{"shortText":"A date indicating the start of the range over which to measure steps."},"type":{"type":"reference","name":"Date"}},{"name":"end","kind":32768,"kindString":"Parameter","comment":{"shortText":"A date indicating the end of the range over which to measure steps."},"type":{"type":"reference","name":"Date"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PedometerResult"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the pedometer is enabled on the device.","returns":"Returns a promise that fulfills with a `boolean`, indicating whether the pedometer is\\navailable on this device.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"watchStepCount","kind":64,"kindString":"Function","signatures":[{"name":"watchStepCount","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to pedometer updates.","returns":"Returns a [`Subscription`](#subscription) that enables you to call\\n`remove()` when you would like to unsubscribe the listener.\\n"},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"shortText":"A callback that is invoked when new step count data is available. The callback is\\nprovided with a single argument that is [`PedometerResult`](#pedometerresult)."},"type":{"type":"reference","name":"PedometerUpdateCallback"}}],"type":{"type":"reference","name":"Subscription"}}]}]}')},"2N74":function(e,w,n){"use strict";function c(p){return p===-2||p===-1||p===32}e.exports=c},"2aGx":function(e){e.exports=JSON.parse('{"name":"expo-firebase-core","kind":1,"kindString":"Project","originalName":"","children":[{"name":"FirebaseOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"apiKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Firebase API key."},"type":{"type":"intrinsic","name":"string"}},{"name":"appId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Unique identifier of the Firebase app."},"type":{"type":"intrinsic","name":"string"}},{"name":"authDomain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"databaseURL","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Firebase database URL."},"type":{"type":"intrinsic","name":"string"}},{"name":"measurementId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"messagingSenderId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"projectId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Unique identifier of the Firebase project."},"type":{"type":"intrinsic","name":"string"}},{"name":"storageBucket","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Google Cloud Storage bucket name."},"type":{"type":"intrinsic","name":"string"}},{"name":"trackingId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Tracking identifier for Google Analytics."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"DEFAULT_APP_NAME","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Name of the default Firebase app (e.g. `[DEFAULT]`).","text":"In Expo Go, a Firebase App is created for each project that is loaded, and a unique name for each\\nproject is returned.\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"void"}]},"defaultValue":"..."},{"name":"DEFAULT_APP_OPTIONS","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Firebase options with which the default app was initialized. If no Google services configuration\\nwas provided, `undefined` is returned.","text":"Depending on the platform, the options are read from the following files and `app.json` keys.\\n\\n| Platform | File                       | App.json key                 |\\n| -------- | -------------------------- | ---------------------------- |\\n| iOS      | `GoogleService-Info.plist` | `ios.googleServicesFile`     |\\n| Android  | `google-services.json`     | `android.googleServicesFile` |\\n| Web      | -                          | `web.config.firebase`        |\\n\\n# Example\\n\\n```js\\nconsole.log(FirebaseCore.DEFAULT_APP_OPTIONS);\\n{\\n  appId: \\"1:1082251606918:ios:a2800bc715889446e24a07\\",\\n  apiKey: \\"AIzaXXXXXXXX-xxxxxxxxxxxxxxxxxxx\\",\\n  clientId: \\"000000000000-0000000000000.apps.googleusercontent.com\\",\\n  trackingId: 12345567890,\\n  databaseURL: \\"https://myexpoapp777.firebaseio.com\\",\\n  storageBucket:  \\"myexpoapp777.appspot.com\\",\\n  projectId: \\"myexpoapp777\\",\\n  messagingSenderId:  123454321\\n}\\n```\\n"},"type":{"type":"union","types":[{"type":"reference","name":"FirebaseOptions"},{"type":"intrinsic","name":"void"}]},"defaultValue":"..."},{"name":"DEFAULT_WEB_APP_OPTIONS","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The default Firebase options as defined in `web.config.firebase` in `app.json`."},"type":{"type":"union","types":[{"type":"reference","name":"FirebaseOptions"},{"type":"intrinsic","name":"void"}]},"defaultValue":"..."}]}')},"2jS9":function(e,w,n){"use strict";e.exports=p;var c=n("mIr8");function p(d,a){for(var m=a.children||[],r=m.length,s=[],i=-1,o,t;++i<r;)o=c(d,m[i],a),o&&(i&&m[i-1].type==="break"&&(o.value&&(o.value=o.value.replace(/^\s+/,"")),t=o.children&&o.children[0],t&&t.value&&(t.value=t.value.replace(/^\s+/,""))),s=s.concat(o));return s}},"2lNy":function(e){e.exports=JSON.parse('{"name":"expo-calendar","kind":1,"kindString":"Project","originalName":"","children":[{"name":"DayOfTheWeek","kind":8,"kindString":"Enumeration","children":[{"name":"Friday","kind":16,"kindString":"Enumeration member","defaultValue":"6"},{"name":"Monday","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"Saturday","kind":16,"kindString":"Enumeration member","defaultValue":"7"},{"name":"Sunday","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"Thursday","kind":16,"kindString":"Enumeration member","defaultValue":"5"},{"name":"Tuesday","kind":16,"kindString":"Enumeration member","defaultValue":"3"},{"name":"Wednesday","kind":16,"kindString":"Enumeration member","defaultValue":"4"}]},{"name":"MonthOfTheYear","kind":8,"kindString":"Enumeration","children":[{"name":"April","kind":16,"kindString":"Enumeration member","defaultValue":"4"},{"name":"August","kind":16,"kindString":"Enumeration member","defaultValue":"8"},{"name":"December","kind":16,"kindString":"Enumeration member","defaultValue":"12"},{"name":"February","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"January","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"July","kind":16,"kindString":"Enumeration member","defaultValue":"7"},{"name":"June","kind":16,"kindString":"Enumeration member","defaultValue":"6"},{"name":"March","kind":16,"kindString":"Enumeration member","defaultValue":"3"},{"name":"May","kind":16,"kindString":"Enumeration member","defaultValue":"5"},{"name":"November","kind":16,"kindString":"Enumeration member","defaultValue":"11"},{"name":"October","kind":16,"kindString":"Enumeration member","defaultValue":"10"},{"name":"September","kind":16,"kindString":"Enumeration member","defaultValue":"9"}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"Alarm","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A method for having the OS automatically remind the user about an calendar item."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"absoluteDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date object or string representing an absolute time the alarm should occur.\\nOverrides `relativeOffset` and `structuredLocation` if specified alongside either.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"method","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Method of alerting the user that this alarm should use; on iOS this is always a notification.\\nPossible values: [`AlarmMethod`](#calendaralarmmethod).","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"relativeOffset","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Number of minutes from the `startDate` of the calendar item that the alarm should occur.\\nUse negative values to have the alarm occur before the `startDate`."},"type":{"type":"intrinsic","name":"number"}},{"name":"structuredLocation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"AlarmLocation"}}]}}},{"name":"AlarmLocation","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"coords","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"latitude","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"proximity","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"radius","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"title","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Attendee","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A person or entity that is associated with an event by being invited or fulfilling some other role."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"email","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Email address of the attendee.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"id","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Internal ID that represents this attendee on the device.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"isCurrentUser","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates whether or not this attendee is the current OS user.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"Displayed name of the attendee."},"type":{"type":"intrinsic","name":"string"}},{"name":"role","kind":1024,"kindString":"Property","comment":{"shortText":"Role of the attendee at the event.\\nPossible values: [`AttendeeRole`](#calendarattendeerole)."},"type":{"type":"intrinsic","name":"string"}},{"name":"status","kind":1024,"kindString":"Property","comment":{"shortText":"Status of the attendee in relation to the event.\\nPossible values: [`AttendeeStatus`](#calendarattendeestatus)."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the attendee.\\nPossible values: [`AttendeeType`](#calendarattendeetype)."},"type":{"type":"intrinsic","name":"string"}},{"name":"url","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL for the attendee.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Calendar","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A calendar record upon which events (or, on iOS, reminders) can be stored. Settings here apply to\\nthe calendar as a whole and how its events are displayed in the OS calendar app."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accessLevel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Level of access that the user has for the calendar.\\nPossible values: [`CalendarAccessLevel`](#calendarcalendaraccesslevel).","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"allowedAttendeeTypes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Attendee types that this calendar supports.\\nPossible values: Array of [`AttendeeType`](#calendarattendeetype).","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"allowedAvailabilities","kind":1024,"kindString":"Property","comment":{"shortText":"Availability types that this calendar supports.\\nPossible values: Array of [`Availability`](#calendaravailability)."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"allowedReminders","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Alarm methods that this calendar supports.\\nPossible values: Array of [`AlarmMethod`](#calendaralarmmethod).","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"allowsModifications","kind":1024,"kindString":"Property","comment":{"shortText":"Boolean value that determines whether this calendar can be modified."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"color","kind":1024,"kindString":"Property","comment":{"shortText":"Color used to display this calendar\'s events."},"type":{"type":"intrinsic","name":"string"}},{"name":"entityType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the calendar is used in the Calendar or Reminders OS app.\\nPossible values: [`EntityTypes`](#calendarentitytypes).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Internal ID that represents this calendar on the device."},"type":{"type":"intrinsic","name":"string"}},{"name":"isPrimary","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value indicating whether this is the device\'s primary calendar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isSynced","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates whether this calendar is synced and its events stored on the device.\\nUnexpected behavior may occur if this is not set to `true`.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isVisible","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates whether the OS displays events on this calendar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"name","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Internal system name of the calendar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"ownerAccount","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Name for the account that owns this calendar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"source","kind":1024,"kindString":"Property","comment":{"shortText":"Object representing the source to be used for the calendar."},"type":{"type":"reference","name":"Source"}},{"name":"sourceId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"ID of the source to be used for the calendar. Likely the same as the source for any other\\nlocally stored calendars.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"timeZone","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Time zone for the calendar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"title","kind":1024,"kindString":"Property","comment":{"shortText":"Visible name of the calendar."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Type of calendar this object represents.\\nPossible values: [`CalendarType`](#calendarcalendartype).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"DaysOfTheWeek","kind":4194304,"kindString":"Type alias","comment":{"tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"dayOfTheWeek","kind":1024,"kindString":"Property","comment":{"shortText":"Sunday to Saturday - `DayOfTheWeek` enum."},"type":{"type":"reference","name":"DayOfTheWeek"}},{"name":"weekNumber","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"`-53` to `53` (`0` ignores this field, and a negative indicates a value from the end of the range)."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"Event","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An event record, or a single instance of a recurring event. On iOS, used in the Calendar app."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accessLevel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"User\'s access level for the event.\\nPossible values: [`EventAccessLevel`](#calendareventaccesslevel).","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"alarms","kind":1024,"kindString":"Property","comment":{"shortText":"Array of Alarm objects which control automated reminders to the user."},"type":{"type":"array","elementType":{"type":"reference","name":"Alarm"}}},{"name":"allDay","kind":1024,"kindString":"Property","comment":{"shortText":"Whether the event is displayed as an all-day event on the calendar"},"type":{"type":"intrinsic","name":"boolean"}},{"name":"availability","kind":1024,"kindString":"Property","comment":{"shortText":"The availability setting for the event.\\nPossible values: [`Availability`](#calendaravailability)."},"type":{"type":"intrinsic","name":"string"}},{"name":"calendarId","kind":1024,"kindString":"Property","comment":{"shortText":"ID of the calendar that contains this event."},"type":{"type":"intrinsic","name":"string"}},{"name":"creationDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date when the event record was created.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}]}},{"name":"endDate","kind":1024,"kindString":"Property","comment":{"shortText":"Date object or string representing the time when the event ends."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}]}},{"name":"endTimeZone","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Time zone for the event end time.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"guestsCanInviteOthers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether invited guests can invite other guests.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"guestsCanModify","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether invited guests can modify the details of the event.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"guestsCanSeeGuests","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether invited guests can see other guests.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Internal ID that represents this event on the device."},"type":{"type":"intrinsic","name":"string"}},{"name":"instanceId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"For instances of recurring events, volatile ID representing this instance. Not guaranteed to\\nalways refer to the same instance.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"isDetached","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value indicating whether or not the event is a detached (modified) instance of a recurring event.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"lastModifiedDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date when the event record was last modified.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}]}},{"name":"location","kind":1024,"kindString":"Property","comment":{"shortText":"Location field of the event."},"type":{"type":"intrinsic","name":"string"}},{"name":"notes","kind":1024,"kindString":"Property","comment":{"shortText":"Description or notes saved with the event."},"type":{"type":"intrinsic","name":"string"}},{"name":"organizer","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Organizer of the event.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"organizerEmail","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Email address of the organizer of the event.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"originalId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"For detached (modified) instances of recurring events, the ID of the original recurring event.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"originalStartDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"For recurring events, the start date for the first (original) instance of the event.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}]}},{"name":"recurrenceRule","kind":1024,"kindString":"Property","comment":{"shortText":"Object representing rules for recurring or repeating events. Set to `null` for one-time events."},"type":{"type":"reference","name":"RecurrenceRule"}},{"name":"startDate","kind":1024,"kindString":"Property","comment":{"shortText":"Date object or string representing the time when the event starts."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}]}},{"name":"status","kind":1024,"kindString":"Property","comment":{"shortText":"Status of the event.\\nPossible values: [`EventStatus`](#calendareventstatus)."},"type":{"type":"intrinsic","name":"string"}},{"name":"timeZone","kind":1024,"kindString":"Property","comment":{"shortText":"Time zone the event is scheduled in."},"type":{"type":"intrinsic","name":"string"}},{"name":"title","kind":1024,"kindString":"Property","comment":{"shortText":"Visible name of the event."},"type":{"type":"intrinsic","name":"string"}},{"name":"url","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL for the event.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"RecurrenceRule","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A recurrence rule for events or reminders, allowing the same calendar item to recur multiple times.\\nThis type is based on [the iOS interface](https://developer.apple.com/documentation/eventkit/ekrecurrencerule/1507320-initrecurrencewithfrequency)\\nwhich is in turn based on [the iCal RFC](https://tools.ietf.org/html/rfc5545#section-3.8.5.3)\\nso you can refer to those to learn more about this potentially complex interface.","text":"Not all of the combinations make sense. For example, when frequency is `DAILY`, setting `daysOfTheMonth` makes no sense.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"daysOfTheMonth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The days of the month this event occurs on.\\n`-31` to `31` (not including `0`). Negative indicates a value from the end of the range.\\nThis field is only valid for `Calendar.Frequency.Monthly`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"name":"daysOfTheWeek","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The days of the week the event should recur on. An array of [`DaysOfTheWeek`](#daysoftheweek) object.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"reference","name":"DaysOfTheWeek"}}},{"name":"daysOfTheYear","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The days of the year this event occurs on.\\n`-366` to `366` (not including `0`). Negative indicates a value from the end of the range.\\nThis field is only valid for `Calendar.Frequency.Yearly`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"name":"endDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date on which the calendar item should stop recurring; overrides `occurrence` if both are specified."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}]}},{"name":"frequency","kind":1024,"kindString":"Property","comment":{"shortText":"How often the calendar item should recur.\\nPossible values: [`Frequency`](#calendarfrequency)."},"type":{"type":"intrinsic","name":"string"}},{"name":"interval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Interval at which the calendar item should recur. For example, an `interval: 2` with `frequency: DAILY`\\nwould yield an event that recurs every other day.","tags":[{"tag":"default","text":"1\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"monthsOfTheYear","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The months this event occurs on.\\nThis field is only valid for `Calendar.Frequency.Yearly`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"reference","name":"MonthOfTheYear"}}},{"name":"occurrence","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Number of times the calendar item should recur before stopping."},"type":{"type":"intrinsic","name":"number"}},{"name":"setPositions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"TAn array of numbers that filters which recurrences to include. For example, for an event that\\nrecurs every Monday, passing 2 here will make it recur every other Monday.\\n`-366` to `366` (not including `0`). Negative indicates a value from the end of the range.\\nThis field is only valid for `Calendar.Frequency.Yearly`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"name":"weeksOfTheYear","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The weeks of the year this event occurs on.\\n`-53` to `53` (not including `0`). Negative indicates a value from the end of the range.\\nThis field is only valid for `Calendar.Frequency.Yearly`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}]}}},{"name":"RecurringEventOptions","kind":4194304,"kindString":"Type alias","comment":{"tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"futureEvents","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether or not future events in the recurring series should also be updated. If `true`, will\\napply the given changes to the recurring instance specified by `instanceStartDate` and all\\nfuture events in the series. If `false`, will only apply the given changes to the instance\\nspecified by `instanceStartDate`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"instanceStartDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date object representing the start time of the desired instance, if looking for a single instance\\nof a recurring event. If this is not provided and **id** represents a recurring event, the first\\ninstance of that event will be returned by default."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}]}}]}}},{"name":"Reminder","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A reminder record, used in the iOS Reminders app. No direct analog on Android.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"alarms","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Array of Alarm objects which control automated alarms to the user about the task."},"type":{"type":"array","elementType":{"type":"reference","name":"Alarm"}}},{"name":"calendarId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"ID of the calendar that contains this reminder."},"type":{"type":"intrinsic","name":"string"}},{"name":"completed","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates whether or not the task has been completed."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"completionDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date object or string representing the date of completion, if `completed` is `true`.\\nSetting this property of a nonnull `Date` will automatically set the reminder\'s `completed` value to `true`."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}]}},{"name":"creationDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date when the reminder record was created."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}]}},{"name":"dueDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date object or string representing the time when the reminder task is due."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}]}},{"name":"id","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Internal ID that represents this reminder on the device."},"type":{"type":"intrinsic","name":"string"}},{"name":"lastModifiedDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date when the reminder record was last modified."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}]}},{"name":"location","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Location field of the reminder"},"type":{"type":"intrinsic","name":"string"}},{"name":"notes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Description or notes saved with the reminder."},"type":{"type":"intrinsic","name":"string"}},{"name":"recurrenceRule","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Object representing rules for recurring or repeated reminders. Null for one-time tasks."},"type":{"type":"reference","name":"RecurrenceRule"}},{"name":"startDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date object or string representing the start date of the reminder task."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}]}},{"name":"timeZone","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Time zone the reminder is scheduled in."},"type":{"type":"intrinsic","name":"string"}},{"name":"title","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Visible name of the reminder."},"type":{"type":"intrinsic","name":"string"}},{"name":"url","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL for the reminder."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Source","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A source account that owns a particular calendar. Expo apps will typically not need to interact with `Source` objects."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"id","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Internal ID that represents this source on the device.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"isLocalAccount","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether this source is the local phone account. Must be `true` if `type` is `undefined`.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"Name for the account that owns this calendar and was used to sync the calendar to the device."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the account that owns this calendar and was used to sync it to the device.\\nIf `isLocalAccount` is falsy then this must be defined, and must match an account on the device\\nalong with `name`, or the OS will delete the calendar.\\nOn iOS, one of [`SourceType`](#calendarsourcetype)s."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AlarmMethod","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"ALARM","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'alarm\'"},{"name":"ALERT","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'alert\'"},{"name":"DEFAULT","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'default\'"},{"name":"EMAIL","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'email\'"},{"name":"SMS","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'sms\'"}]}},"defaultValue":"..."},{"name":"AttendeeRole","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"ATTENDEE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'attendee\'"},{"name":"CHAIR","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'chair\'"},{"name":"NONE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'none\'"},{"name":"NON_PARTICIPANT","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'nonParticipant\'"},{"name":"OPTIONAL","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'optional\'"},{"name":"ORGANIZER","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'organizer\'"},{"name":"PERFORMER","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'performer\'"},{"name":"REQUIRED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'required\'"},{"name":"SPEAKER","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'speaker\'"},{"name":"UNKNOWN","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'unknown\'"}]}},"defaultValue":"..."},{"name":"AttendeeStatus","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"ACCEPTED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'accepted\'"},{"name":"COMPLETED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'completed\'"},{"name":"DECLINED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'declined\'"},{"name":"DELEGATED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'delegated\'"},{"name":"INVITED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'invited\'"},{"name":"IN_PROCESS","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'inProcess\'"},{"name":"NONE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'none\'"},{"name":"PENDING","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'pending\'"},{"name":"TENTATIVE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'tentative\'"},{"name":"UNKNOWN","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'unknown\'"}]}},"defaultValue":"..."},{"name":"AttendeeType","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"GROUP","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'group\'"},{"name":"NONE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'none\'"},{"name":"OPTIONAL","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'optional\'"},{"name":"PERSON","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'person\'"},{"name":"REQUIRED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'required\'"},{"name":"RESOURCE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'resource\'"},{"name":"ROOM","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'room\'"},{"name":"UNKNOWN","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'unknown\'"}]}},"defaultValue":"..."},{"name":"Availability","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"BUSY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'busy\'"},{"name":"FREE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'free\'"},{"name":"NOT_SUPPORTED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'notSupported\'"},{"name":"TENTATIVE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'tentative\'"},{"name":"UNAVAILABLE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'unavailable\'"}]}},"defaultValue":"..."},{"name":"CalendarAccessLevel","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"CONTRIBUTOR","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'contributor\'"},{"name":"EDITOR","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'editor\'"},{"name":"FREEBUSY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'freebusy\'"},{"name":"NONE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'none\'"},{"name":"OVERRIDE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'override\'"},{"name":"OWNER","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'owner\'"},{"name":"READ","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'read\'"},{"name":"RESPOND","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'respond\'"},{"name":"ROOT","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'root\'"}]}},"defaultValue":"..."},{"name":"CalendarType","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"BIRTHDAYS","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'birthdays\'"},{"name":"CALDAV","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'caldav\'"},{"name":"EXCHANGE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'exchange\'"},{"name":"LOCAL","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'local\'"},{"name":"SUBSCRIBED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'subscribed\'"},{"name":"UNKNOWN","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'unknown\'"}]}},"defaultValue":"..."},{"name":"EntityTypes","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"EVENT","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'event\'"},{"name":"REMINDER","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'reminder\'"}]}},"defaultValue":"..."},{"name":"EventAccessLevel","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"CONFIDENTIAL","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'confidential\'"},{"name":"DEFAULT","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'default\'"},{"name":"PRIVATE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'private\'"},{"name":"PUBLIC","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'public\'"}]}},"defaultValue":"..."},{"name":"EventStatus","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"CANCELED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'canceled\'"},{"name":"CONFIRMED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'confirmed\'"},{"name":"NONE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'none\'"},{"name":"TENTATIVE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'tentative\'"}]}},"defaultValue":"..."},{"name":"Frequency","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"DAILY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'daily\'"},{"name":"MONTHLY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'monthly\'"},{"name":"WEEKLY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'weekly\'"},{"name":"YEARLY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'yearly\'"}]}},"defaultValue":"..."},{"name":"ReminderStatus","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"COMPLETED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'completed\'"},{"name":"INCOMPLETE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'incomplete\'"}]}},"defaultValue":"..."},{"name":"SourceType","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"BIRTHDAYS","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'birthdays\'"},{"name":"CALDAV","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'caldav\'"},{"name":"EXCHANGE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'exchange\'"},{"name":"LOCAL","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'local\'"},{"name":"MOBILEME","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'mobileme\'"},{"name":"SUBSCRIBED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'subscribed\'"}]}},"defaultValue":"..."},{"name":"createAttendeeAsync","kind":64,"kindString":"Function","signatures":[{"name":"createAttendeeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates a new attendee record and adds it to the specified event. Note that if `eventId` specifies\\na recurring event, this will add the attendee to every instance of the event.","returns":"A string representing the ID of the newly created attendee record.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"eventId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the event to add this attendee to."},"type":{"type":"intrinsic","name":"string"}},{"name":"details","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of details for the attendee to be created."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Attendee"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"createCalendarAsync","kind":64,"kindString":"Function","signatures":[{"name":"createCalendarAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates a new calendar on the device, allowing events to be added later and displayed in the OS Calendar app.","returns":"A string representing the ID of the newly created calendar.\\n"},"parameters":[{"name":"details","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of details for the calendar to be created."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Calendar"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"createEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"createEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates a new event on the specified calendar.","returns":"A promise which fulfils with a string representing the ID of the newly created event.\\n"},"parameters":[{"name":"calendarId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the calendar to create this event in."},"type":{"type":"intrinsic","name":"string"}},{"name":"eventData","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of details for the event to be created."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Event"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"createReminderAsync","kind":64,"kindString":"Function","signatures":[{"name":"createReminderAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates a new reminder on the specified calendar.","returns":"A promise which fulfils with a string representing the ID of the newly created reminder.","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"calendarId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the calendar to create this reminder in (or `null` to add the calendar to\\nthe OS-specified default calendar for reminders)."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"name":"reminder","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of details for the reminder to be created"},"type":{"type":"reference","name":"Reminder"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"deleteAttendeeAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteAttendeeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Deletes an existing attendee record from the device. __Use with caution.__","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the attendee to delete."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"deleteCalendarAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteCalendarAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Deletes an existing calendar and all associated events/reminders/attendees from the device. __Use with caution.__"},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the calendar to delete.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"deleteEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Deletes an existing event from the device. Use with caution."},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the event to be deleted."},"type":{"type":"intrinsic","name":"string"}},{"name":"recurringEventOptions","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of options for recurring events.\\n"},"type":{"type":"reference","name":"RecurringEventOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"deleteReminderAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteReminderAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Deletes an existing reminder from the device. __Use with caution.__","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the reminder to be deleted."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getAttendeesForEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAttendeesForEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets all attendees for a given event (or instance of a recurring event).","returns":"A promise which fulfils with an array of [`Attendee`](#attendee) associated with the\\nspecified event.\\n"},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the event to return attendees for."},"type":{"type":"intrinsic","name":"string"}},{"name":"recurringEventOptions","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of options for recurring events."},"type":{"type":"reference","name":"RecurringEventOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Attendee"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getCalendarPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCalendarPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing user\'s calendars.","returns":"A promise that resolves to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getCalendarsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCalendarsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets an array of calendar objects with details about the different calendars stored on the device.","returns":"An array of [calendar objects](#calendar \'Calendar\') matching the provided entity type (if provided).\\n"},"parameters":[{"name":"entityType","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"__iOS Only.__ Not required, but if defined, filters the returned calendars to\\na specific entity type. Possible values are `Calendar.EntityTypes.EVENT` (for calendars shown in\\nthe Calendar app) and `Calendar.EntityTypes.REMINDER` (for the Reminders app). **Note:** if not\\ndefined, you will need both permissions: **CALENDAR** and **REMINDERS**."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Calendar"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getDefaultCalendarAsync","kind":64,"kindString":"Function","signatures":[{"name":"getDefaultCalendarAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets an instance of the default calendar object.","returns":"A promise resolving to the [Calendar](#calendar) object that is the user\'s default calendar.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Calendar"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"getEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a specific event selected by ID. If a specific instance of a recurring event is desired,\\nthe start date of this instance must also be provided, as instances of recurring events do not\\nhave their own unique and stable IDs on either iOS or Android.","returns":"A promise which fulfils with an [`Event`](#event) object matching the provided criteria, if one exists.\\n"},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the event to return."},"type":{"type":"intrinsic","name":"string"}},{"name":"recurringEventOptions","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of options for recurring events."},"type":{"type":"reference","name":"RecurringEventOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Event"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getEventsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getEventsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns all events in a given set of calendars over a specified time period. The filtering has\\nslightly different behavior per-platform - on iOS, all events that overlap at all with the\\n`[startDate, endDate]` interval are returned, whereas on Android, only events that begin on or\\nafter the `startDate` and end on or before the `endDate` will be returned.","returns":"A promise which fulfils with an array of [`Event`](#event) objects matching the search criteria.\\n"},"parameters":[{"name":"calendarIds","kind":32768,"kindString":"Parameter","comment":{"shortText":"Array of IDs of calendars to search for events in."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"startDate","kind":32768,"kindString":"Parameter","comment":{"shortText":"Beginning of time period to search for events in."},"type":{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}},{"name":"endDate","kind":32768,"kindString":"Parameter","comment":{"shortText":"End of time period to search for events in."},"type":{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Event"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getReminderAsync","kind":64,"kindString":"Function","signatures":[{"name":"getReminderAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a specific reminder selected by ID.","returns":"A promise which fulfils with a [`Reminder`](#reminder) matching the provided ID, if one exists.","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the reminder to return."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Reminder"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getRemindersAsync","kind":64,"kindString":"Function","signatures":[{"name":"getRemindersAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a list of reminders matching the provided criteria. If `startDate` and `endDate` are defined,\\nreturns all reminders that overlap at all with the [startDate, endDate] interval - i.e. all reminders\\nthat end after the `startDate` or begin before the `endDate`.","returns":"A promise which fulfils with an array of [`Reminder`](#reminder) objects matching the search criteria.","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"calendarIds","kind":32768,"kindString":"Parameter","comment":{"shortText":"Array of IDs of calendars to search for reminders in."},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}},{"name":"status","kind":32768,"kindString":"Parameter","comment":{"shortText":"One of `Calendar.ReminderStatus.COMPLETED` or `Calendar.ReminderStatus.INCOMPLETE`."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"name":"startDate","kind":32768,"kindString":"Parameter","comment":{"shortText":"Beginning of time period to search for reminders in. Required if `status` is defined."},"type":{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}},{"name":"endDate","kind":32768,"kindString":"Parameter","comment":{"shortText":"End of time period to search for reminders in. Required if `status` is defined."},"type":{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Reminder"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getRemindersPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getRemindersPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing user\'s reminders.","returns":"A promise that resolves to an object of type [`PermissionResponse`](#permissionresponse).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getSourceAsync","kind":64,"kindString":"Function","signatures":[{"name":"getSourceAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a specific source selected by ID.","returns":"A promise which fulfils with an array of [`Source`](#source) object matching the provided\\nID, if one exists.","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the source to return."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Source"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getSourcesAsync","kind":64,"kindString":"Function","signatures":[{"name":"getSourcesAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"A promise which fulfils with an array of [`Source`](#source) objects all sources for\\ncalendars stored on the device.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Source"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the Calendar API is enabled on the current device. This does not check the app permissions.","returns":"Async `boolean`, indicating whether the Calendar API is available on the current device.\\nCurrently, this resolves `true` on iOS and Android only.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"openEventInCalendar","kind":64,"kindString":"Function","signatures":[{"name":"openEventInCalendar","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sends an intent to open the specified event in the OS Calendar app.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the event to open."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"requestCalendarPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestCalendarPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing user\'s calendars.","returns":"A promise that resolves to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"Use [`requestCalendarPermissionsAsync()`](#calendarrequestcalendarpermissionsasync) instead.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestRemindersPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestRemindersPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing user\'s reminders.","returns":"A promise that resolves to an object of type [`PermissionResponse`](#permissionresponse).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"updateAttendeeAsync","kind":64,"kindString":"Function","signatures":[{"name":"updateAttendeeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Updates an existing attendee record. To remove a property, explicitly set it to `null` in `details`.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the attendee record to be updated."},"type":{"type":"intrinsic","name":"string"}},{"name":"details","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of properties to be updated."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Attendee"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"updateCalendarAsync","kind":64,"kindString":"Function","signatures":[{"name":"updateCalendarAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Updates the provided details of an existing calendar stored on the device. To remove a property,\\nexplicitly set it to `null` in `details`."},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the calendar to update."},"type":{"type":"intrinsic","name":"string"}},{"name":"details","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of properties to be updated.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Calendar"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"updateEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"updateEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Updates the provided details of an existing calendar stored on the device. To remove a property,\\nexplicitly set it to `null` in `details`."},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the event to be updated."},"type":{"type":"intrinsic","name":"string"}},{"name":"details","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of properties to be updated."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Event"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"defaultValue":"{}"},{"name":"recurringEventOptions","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of options for recurring events.\\n"},"type":{"type":"reference","name":"RecurringEventOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"updateReminderAsync","kind":64,"kindString":"Function","signatures":[{"name":"updateReminderAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Updates the provided details of an existing reminder stored on the device. To remove a property,\\nexplicitly set it to `null` in `details`.","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the reminder to be updated."},"type":{"type":"intrinsic","name":"string"}},{"name":"details","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of properties to be updated."},"type":{"type":"reference","name":"Reminder"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"useCalendarPermissions","kind":64,"kindString":"Function","signatures":[{"name":"useCalendarPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to access the calendar.\\nThis uses both `getCalendarPermissionsAsync` and `requestCalendarPermissionsAsync` to interact\\nwith the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Calendar.useCalendarPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"useRemindersPermissions","kind":64,"kindString":"Function","signatures":[{"name":"useRemindersPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to access reminders.\\nThis uses both `getRemindersPermissionsAsync` and `requestRemindersPermissionsAsync` to interact\\nwith the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Calendar.useRemindersPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}]}')},"2zhJ":function(e){e.exports=JSON.parse('{"name":"expo-store-review","kind":1,"kindString":"Project","originalName":"","children":[{"name":"hasAction","kind":64,"kindString":"Function","signatures":[{"name":"hasAction","kind":4096,"kindString":"Call signature","comment":{"returns":"This returns a promise that fulfills to `true` if `StoreReview.requestReview()` is capable\\ndirecting the user to some kind of store review flow. If the app config (`app.json`) does not\\ncontain store URLs and native store review capabilities are not available then the promise\\nwill fulfill to `false`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nif (await StoreReview.hasAction()) {\\n  // you can call StoreReview.requestReview()\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determines if the platform has the capabilities to use `StoreReview.requestReview()`.","returns":"\\nThis returns a promise fulfills with `boolean`, depending on the platform:\\n- On iOS, it will resolve to `true` if the device is running iOS 10.3+.\\n- On Android, it will resolve to `true` if the device is running Android 5.0+.\\n- On Web, it will resolve to `false`.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestReview","kind":64,"kindString":"Function","signatures":[{"name":"requestReview","kind":4096,"kindString":"Call signature","comment":{"shortText":"In ideal circumstances this will open a native modal and allow the user to select a star rating\\nthat will then be applied to the App Store, without leaving the app. If the device is running\\na version of iOS lower than 10.3, or a version of Android lower than 5.0, this will attempt\\nto get the store URL and link the user to it."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"storeUrl","kind":64,"kindString":"Function","signatures":[{"name":"storeUrl","kind":4096,"kindString":"Call signature","comment":{"shortText":"This uses the `Constants` API to get the `Constants.manifest.ios.appStoreUrl` on iOS, or the\\n`Constants.manifest.android.playStoreUrl` on Android.","text":"On Web this will return `null`.\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}]}')},"321L":function(e,w,n){e.exports=n("0So9")},"33Zt":function(e,w,n){"use strict";var c=n("E/Jm"),p=n("2N74"),d=n("yRGd"),a={name:"thematicBreak",tokenize:m};function m(r,s,i){var o=0,t;return l;function l(h){return r.enter("thematicBreak"),t=h,k(h)}function k(h){return h===t?(r.enter("thematicBreakSequence"),g(h)):p(h)?d(r,k,"whitespace")(h):o<3||h!==null&&!c(h)?i(h):(r.exit("thematicBreak"),s(h))}function g(h){return h===t?(r.consume(h),o++,g):(r.exit("thematicBreakSequence"),k(h))}}e.exports=a},"3QmW":function(e){e.exports=JSON.parse('{"name":"expo-background-fetch","kind":1,"kindString":"Project","originalName":"","children":[{"name":"BackgroundFetchResult","kind":8,"kindString":"Enumeration","comment":{"shortText":"This return value is to let iOS know what the result of your background fetch was, so the\\nplatform can better schedule future background fetches. Also, your app has up to 30 seconds\\nto perform the task, otherwise your app will be terminated and future background fetches\\nmay be delayed."},"children":[{"name":"Failed","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An attempt to download data was made but that attempt failed."},"defaultValue":"3"},{"name":"NewData","kind":16,"kindString":"Enumeration member","comment":{"shortText":"New data was successfully downloaded."},"defaultValue":"2"},{"name":"NoData","kind":16,"kindString":"Enumeration member","comment":{"shortText":"There was no new data to download."},"defaultValue":"1"}]},{"name":"BackgroundFetchStatus","kind":8,"kindString":"Enumeration","children":[{"name":"Available","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Background updates are available for the app."},"defaultValue":"3"},{"name":"Denied","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The user explicitly disabled background behavior for this app or for the whole system."},"defaultValue":"1"},{"name":"Restricted","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Background updates are unavailable and the user cannot enable them again. This status can occur\\nwhen, for example, parental controls are in effect for the current user."},"defaultValue":"2"}]},{"name":"BackgroundFetchOptions","kind":256,"kindString":"Interface","children":[{"name":"minimumInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Inexact interval in seconds between subsequent repeats of the background fetch alarm. The final\\ninterval may differ from the specified one to minimize wakeups and battery usage.\\n- On Android it defaults to __10 minutes__,\\n- On iOS it calls [`BackgroundFetch.setMinimumIntervalAsync`](#backgroundfetchsetminimumintervalasyncminimuminterval)\\nbehind the scenes and the default value is the smallest fetch interval supported by the system __(10-15 minutes)__.\\nBackground fetch task receives no data, but your task should return a value that best describes\\nthe results of your background fetch work.","tags":[{"tag":"returns","text":"Returns a promise that fulfils once the task is registered and rejects in case of any errors.\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"startOnBoot","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(Android only).__ Whether to restart background fetch events when the device has finished\\nbooting. Defaults to `false`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"stopOnTerminate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(Android only).__ Whether to stop receiving background fetch events after user terminates the\\napp. Defaults to `true`."},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"getStatusAsync","kind":64,"kindString":"Function","signatures":[{"name":"getStatusAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets a status of background fetch.","returns":"Returns a promise which fulfils with one of `BackgroundFetchStatus` enum values.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"BackgroundFetchStatus"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"registerTaskAsync","kind":64,"kindString":"Function","signatures":[{"name":"registerTaskAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Registers background fetch task with given name. Registered tasks are saved in persistent storage and restored once the app is initialized.","tags":[{"tag":"example","text":"\\n```ts\\nimport * as BackgroundFetch from \'expo-background-fetch\';\\nimport * as TaskManager from \'expo-task-manager\';\\n\\nTaskManager.defineTask(YOUR_TASK_NAME, () => {\\n  try {\\n    const receivedNewData = // do your background fetch here\\n    return receivedNewData ? BackgroundFetch.Result.NewData : BackgroundFetch.Result.NoData;\\n  } catch (error) {\\n    return BackgroundFetch.Result.Failed;\\n  }\\n});\\n```\\n"}]},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"text":"Name of the task to register. The task needs to be defined first - see [`TaskManager.defineTask`](taskmanager#defineTask)\\nfor more details."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"An object containing the background fetch options.\\n"},"type":{"type":"reference","name":"BackgroundFetchOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setMinimumIntervalAsync","kind":64,"kindString":"Function","signatures":[{"name":"setMinimumIntervalAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the minimum number of seconds that must elapse before another background fetch can be\\ninitiated. This value is advisory only and does not indicate the exact amount of time expected\\nbetween fetch operations.","text":"> This method doesn\'t take any effect on Android. It is a global value which means that it can\\noverwrite settings from another application opened through Expo Go.\\n","returns":"A promise which fulfils once the minimum interval is set.\\n"},"parameters":[{"name":"minimumInterval","kind":32768,"kindString":"Parameter","comment":{"text":"Number of seconds that must elapse before another background fetch can be called."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"unregisterTaskAsync","kind":64,"kindString":"Function","signatures":[{"name":"unregisterTaskAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unregisters background fetch task, so the application will no longer be executing this task.","returns":"A promise which fulfils when the task is fully unregistered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"text":"Name of the task to unregister."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},"3Ukx":function(e,w,n){"use strict";var c=n("q1tI"),p=n.n(c),d=n("8jhV"),a=n("3WCi"),m=n("eVvU"),r=n("6LaW"),s=n("6x+I"),i=n.n(s),o=n("cpVT"),t=n("AeFk"),l=n("3zh3"),k=n("wH4i"),g=n.n(k),h=n("ky+X"),f=n("Bzn4");function S(q,x){var A=Object.keys(q);if(Object.getOwnPropertySymbols){var _=Object.getOwnPropertySymbols(q);x&&(_=_.filter(function(U){return Object.getOwnPropertyDescriptor(q,U).enumerable})),A.push.apply(A,_)}return A}function b(q){for(var x=1;x<arguments.length;x++){var A=arguments[x]!=null?arguments[x]:{};x%2?S(Object(A),!0).forEach(function(_){Object(o.a)(q,_,A[_])}):Object.getOwnPropertyDescriptors?Object.defineProperties(q,Object.getOwnPropertyDescriptors(A)):S(Object(A)).forEach(function(_){Object.defineProperty(q,_,Object.getOwnPropertyDescriptor(A,_))})}return q}function P(){return"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."}var y=!1,v;(function(q){q[q.LegacyEnum=4]="LegacyEnum",q[q.Enum=8]="Enum",q[q.Variable=32]="Variable",q[q.Function=64]="Function",q[q.Class=128]="Class",q[q.Interface=256]="Interface",q[q.Property=1024]="Property",q[q.Method=2048]="Method",q[q.TypeAlias=4194304]="TypeAlias"})(v||(v={}));var u=function(x){return`Using "../" when linking other packages in doc comments produce a broken link! Please use "./" instead. Problematic link:
	`.concat(x)},C={blockquote:function(x){var A=x.children;return Object(t.c)(d.d,null,A.map(function(_){var U,G;return(_==null||(U=_.props)===null||U===void 0||(G=U.node)===null||G===void 0?void 0:G.tagName)==="p"?_==null?void 0:_.props.children:_}))},code:function(x){var A=x.children,_=x.className;return _?Object(t.c)(a.a,{className:_},A):Object(t.c)(a.b,null,A)},h1:function(x){var A=x.children;return Object(t.c)(h.d,null,A)},ul:function(x){var A=x.children;return Object(t.c)(m.c,null,A)},li:function(x){var A=x.children;return Object(t.c)(m.a,null,A)},a:function(x){var A=x.href,_=x.children;if(A!=null&&A.startsWith("../")&&!(A!=null&&A.startsWith("../.."))&&!(A!=null&&A.startsWith("../react-native"))){if(y)throw new Error(u(A));console.warn(u(A))}return Object(t.c)(f.a,{href:A},_)},p:function(x){var A=x.children;return A?Object(t.c)(d.b,null,A):null},strong:function(x){var A=x.children;return Object(t.c)(d.a,null,A)},span:function(x){var A=x.children;return A?Object(t.c)("span",null,A):null}},R=b(b({},C),{},{p:function(x){var A=x.children;return A?Object(t.c)("span",null,A):null}}),F=["ColorValue","Component","E","EventSubscription","File","FileList","Manifest","NativeSyntheticEvent","ParsedQs","ServiceActionResult","T","TaskOptions","Uint8Array","React.FC","ForwardRefExoticComponent","StyleProp","RequestPermissionMethod","GetPermissionMethod","Options","PermissionHookBehavior"],j=["RefAttributes"],I={ForwardRefExoticComponent:"Component"},W={AVPlaybackSource:"/versions/latest/sdk/av/#playback-api",AVPlaybackStatus:"/versions/latest/sdk/av/#playback-status",AVPlaybackStatusToSet:"/versions/latest/sdk/av/#default-initial--avplaybackstatustoset",Date:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",Element:"https://www.typescriptlang.org/docs/handbook/jsx.html#function-component",Error:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",ExpoConfig:"https://github.com/expo/expo-cli/blob/main/packages/config-types/src/ExpoConfig.ts",MessageEvent:"https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent",Omit:"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys",Pick:"https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys",Partial:"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype",Promise:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",View:"/versions/latest/react-native/view",ViewProps:"/versions/latest/react-native/view#props",ViewStyle:"/versions/latest/react-native/view-style-props"},L=function(x,A){var _,U=(_=I[x])!==null&&_!==void 0?_:x;return F.includes(U)?U+(A==="array"?"[]":""):Object(t.c)(f.a,{href:W[U]||"#".concat(U.toLowerCase()),key:"type-link-".concat(U)},U,A==="array"&&"[]")},K=function(x){return x.map(D).map(function(A,_){return Object(t.c)("span",{key:"union-type-".concat(_)},A,_+1!==x.length&&" | ")})},D=function q(x){var A=x.elements,_=x.elementType,U=x.name,G=x.type,Q=x.types,te=x.typeArguments,Z=x.declaration,ie=x.value,pe=x.queryType,ge=x.operator,ue=x.objectType,ve=x.indexType;try{var Oe;if(U)return G==="reference"?te?U==="Record"||U==="React.ComponentProps"?Object(t.c)(p.a.Fragment,null,U,"<",te.map(function(Se,ke){return Object(t.c)("span",{key:"record-type-".concat(ke)},q(Se),ke!==te.length-1?", ":null)}),">"):Object(t.c)(p.a.Fragment,null,L(U),"<",te.map(function(Se,ke){return Object(t.c)("span",{key:"".concat(U,"-nested-type-").concat(ke)},q(Se),ke!==te.length-1?", ":null)}),">"):L(U):U;if(_!=null&&_.name)return _.type==="reference"?L(_.name,G):G==="array"?_.name+"[]":_.name+G;if(_!=null&&_.declaration){if(G==="array"){var qe=_.declaration.indexSignature||{},De=qe.parameters,Ue=qe.type;if(De&&Ue)return"{ [".concat(X(De),"]: ").concat(q(Ue)," }")}return _.name+G}else{if(G==="union"&&Q!==null&&Q!==void 0&&Q.length)return K(Q);if(_&&_.type==="union"&&_!==null&&_!==void 0&&(Oe=_.types)!==null&&Oe!==void 0&&Oe.length){var Ge=(_==null?void 0:_.types)||[];return Object(t.c)(p.a.Fragment,null,"(",K(Ge),")",G==="array"&&"[]")}else if(Z!=null&&Z.signatures){var Ve,Re=Z.signatures[0];if(Re!=null&&(Ve=Re.parameters)!==null&&Ve!==void 0&&Ve.length){var Le;return Object(t.c)(p.a.Fragment,null,"(",(Le=Re.parameters)===null||Le===void 0?void 0:Le.map(function(Se,ke){var Ie;return Object(t.c)("span",{key:"param-".concat(ke,"-").concat(Se.name)},Se.name,": ",q(Se.type),ke+1!==((Ie=Re.parameters)===null||Ie===void 0?void 0:Ie.length)&&", ")}),") ","=>"," ",q(Re.type))}else return Object(t.c)(p.a.Fragment,null,"() =>"," ",q(Re.type))}else{if(G==="reflection"&&Z!==null&&Z!==void 0&&Z.children)return Object(t.c)(p.a.Fragment,null,"{ ",Z==null?void 0:Z.children.map(function(Se,ke){var Ie;return Object(t.c)("span",{key:"reflection-".concat(U,"-").concat(ke)},Se.name+": "+q(Se.type),ke+1!==(Z==null||(Ie=Z.children)===null||Ie===void 0?void 0:Ie.length)?", ":null)})," }");if(G==="tuple"&&A)return Object(t.c)(p.a.Fragment,null,"[",A.map(function(Se,ke){return Object(t.c)("span",{key:"tuple-".concat(U,"-").concat(ke)},q(Se),ke+1!==A.length?", ":null)}),"]");if(G==="query"&&pe)return pe.name;if(G==="literal"&&typeof ie=="boolean")return"".concat(ie);if(G==="literal"&&ie)return"'".concat(ie,"'");if(G==="intersection"&&Q)return Q.filter(function(Se){var ke=Se.name;return!j.includes(ke!=null?ke:"")}).map(function(Se,ke,Ie){return Object(t.c)("span",{key:"intersection-".concat(U,"-").concat(ke)},q(Se),ke+1!==Ie.length&&" & ")});if(G==="indexedAccess")return"".concat(ue==null?void 0:ue.name,"['").concat(ve==null?void 0:ve.value,"']");if(G==="typeOperator")return ge||"undefined";if(ie===null)return"null"}}return"undefined"}catch(Se){return console.warn("Type resolve has failed!",Se),"undefined"}},ee=function(x){return x.startsWith("__")?x.substr(2):x},V=function(x){var A=x.comment,_=x.name,U=x.type,G=x.flags;return Object(t.c)(m.a,{key:"param-".concat(_)},Object(t.c)(d.a,null,ee(_),(G==null?void 0:G.isOptional)&&"?"," (",Object(t.c)(a.b,null,D(U)),")"),Object(t.c)(J,{comment:A,components:R,withDash:!0}))},X=function(x){return x?x==null?void 0:x.map(function(A){return ee(A.name)}).join(", "):""},$=function(x,A){var _=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1;if(x)return Object(t.c)(a.b,{key:"signature-type-".concat(x.name)},D(x));if(A&&A.length)return A.map(function(U){var G=U.name,Q=U.type,te=U.parameters;return Object(t.c)(a.b,{key:"signature-type-".concat(G)},"(",te&&_?te.map(function(Z){var ie;return Object(t.c)("span",{key:"signature-param-".concat(Z.name)},Z.name,((ie=Z.flags)===null||ie===void 0?void 0:ie.isOptional)&&"?",": ",D(Z.type))}):X(te),") => ",D(Q))})},re=function(x){return x!=null&&x.isOptional?Object(t.c)(p.a.Fragment,null,Object(t.c)("br",null),Object(t.c)("span",{css:ae},"(optional)")):void 0},ne=function(x){return x&&x.length?x.replace(/&ast;/g,"*").replace(/\t/g,""):""},B=function(x,A){var _;return x||A&&((_=A[0])===null||_===void 0?void 0:_.comment)},N=function(x,A){var _;return(_=z(x,A))===null||_===void 0?void 0:_[0]},z=function(x,A){var _;return A==null||(_=A.tags)===null||_===void 0?void 0:_.filter(function(U){return U.tag===x})},H=function(x){return x.charAt(0).toUpperCase()+x.slice(1)},E=function(x){var A=x.toLowerCase().replace(`
`,"");return A.includes("ios")?A.replace("ios","iOS"):A.includes("expo")?A.replace("expo","Expo Go"):H(x)},oe=function(x){var A=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0,_=z("platform",x);return _!=null&&_.length?Object(t.c)(p.a.Fragment,null,_.map(function(U){return Object(t.c)("div",{key:U.text,css:fe},E(U.text)," Only")}),A&&Object(t.c)("br",null)):null},J=function(x){var A,_,U=x.comment,G=x.components,Q=G===void 0?C:G,te=x.withDash,Z=x.beforeContent,ie=x.afterContent,pe=x.includePlatforms,ge=pe===void 0?!0:pe,ue=U!=null&&(A=U.shortText)!==null&&A!==void 0&&A.trim().length?Object(t.c)(i.a,{components:Q,remarkPlugins:[g.a]},ne(U.shortText)):null,ve=U!=null&&(_=U.text)!==null&&_!==void 0&&_.trim().length?Object(t.c)(i.a,{components:Q,remarkPlugins:[g.a]},ne(U.text)):null,Oe=z("example",U),qe=Oe==null?void 0:Oe.map(function(Re,Le){return Object(t.c)(p.a.Fragment,{key:"example-"+Le},Q!==C?Object(t.c)("div",{css:je},Object(t.c)(d.a,null,"Example")):Object(t.c)(h.d,null,"Example"),Object(t.c)(i.a,{components:Q},Re.text))}),De=N("deprecated",U),Ue=De?Object(t.c)(d.d,{key:"deprecation-note"},De.text.trim().length?Object(t.c)(i.a,{components:R},"**Deprecated.** ".concat(De.text)):Object(t.c)(d.a,null,"Deprecated")):null,Ge=N("see",U),Ve=Ge?Object(t.c)(d.d,null,Object(t.c)(d.a,null,"See: "),Object(t.c)(i.a,{components:R},Ge.text)):null;return Object(t.c)(p.a.Fragment,null,Ue,Z,te&&(ue||ve)&&" - ",ge&&oe(U,!te),ue,ve,ie,Ve,qe)},Y=function(x){var A,_,U,G,Q=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[];if(x&&x!=="default")return x;var te=Q.filter(function(Z){return Z.name==="constructor"})[0];return(A=te==null||(_=te.signatures)===null||_===void 0||(U=_[0])===null||U===void 0||(G=U.type)===null||G===void 0?void 0:G.name)!==null&&A!==void 0?A:"default"},ae=Object(t.b)("color:",l.theme.text.secondary,";font-size:90%;padding-top:22px;",""),T=Object(t.b)("color:",l.theme.text.secondary,";font-size:90%;font-weight:600;",""),fe=Object(t.b)("&{display:inline-block;background-color:",l.theme.background.tertiary,";color:",l.theme.text.default,";font-size:90%;font-weight:700;padding:6px 12px;margin-bottom:8px;margin-right:8px;border-radius:4px;}table &{margin-bottom:1rem;}",""),je={name:"te1fbj",styles:"margin:8px 0"};function Ae(){return"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."}var we={name:"15p700m",styles:"margin-top:20px;margin-bottom:10px;display:inline-block"},_e=function(x,A,_,U,G){var Q=x.signatures,te=Q===void 0?[]:Q,Z=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!0,ie=Z?r.c:r.e;return te.map(function(pe){var ge=pe.name,ue=pe.parameters,ve=pe.comment,Oe=pe.type;return Object(t.c)("div",{key:"method-signature-".concat(ge,"-").concat((ue==null?void 0:ue.length)||0)},Object(t.c)(ie,null,Object(t.c)(a.b,{customCss:we},U&&"".concat(U,"."),G!=="Hooks"?"".concat(ge,"(").concat(X(ue),")"):ge)),oe(ve),Object(t.c)(J,{comment:ve,beforeContent:ue&&Object(t.c)(p.a.Fragment,null,Object(t.c)(r.d,null,"Arguments"),Object(t.c)(m.c,null,ue==null?void 0:ue.map(V))),includePlatforms:!1}),D(Oe)!=="undefined"?Object(t.c)("div",null,Object(t.c)(r.d,null,"Returns"),Object(t.c)(m.c,null,Object(t.c)(m.a,{returnType:!0},Object(t.c)(a.b,null,D(Oe)))),(ve==null?void 0:ve.returns)&&Object(t.c)(i.a,{components:C},ve.returns)):null,A!==void 0?A+1!==_&&Object(t.c)("hr",null):null)})},O=function(x){var A=x.data,_=x.apiName,U=x.header,G=U===void 0?"Methods":U;return A!=null&&A.length?Object(t.c)(p.a.Fragment,null,Object(t.c)(r.a,{key:"methods-header"},G),A.map(function(Q,te){return _e(Q,te,A.length,_,G)})):null},ce=O;function ze(){return"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."}var We="...",tt={name:"1xehxn2",styles:"padding-top:0.15rem;padding-bottom:0.15rem"},nt={name:"8dk3vg",styles:"margin-bottom:1rem"},it=function(x,A){var _,U,G,Q,te=x.comment,Z=x.name,ie=N("default",te);return ie?ie.text:A==null||(_=A.type)===null||_===void 0||(U=_.declaration)===null||U===void 0||(G=U.children)===null||G===void 0||(Q=G.filter(function(pe){return pe.name===Z})[0])===null||Q===void 0?void 0:Q.defaultValue},rt=function(x){return Object(t.c)(m.a,{key:"inherited-prop-".concat(x.name,"-").concat(x.type)},Object(t.c)(a.b,null,D(x)))},He=function(x,A){var _,U=(_=x==null?void 0:x.filter(function(G){return G.type==="reference"}))!==null&&_!==void 0?_:[];if(U.length)return Object(t.c)(p.a.Fragment,null,A?Object(t.c)(r.b,null,"Inherited Props"):Object(t.c)(r.d,null,"Inherited Props"),Object(t.c)(m.c,null,U.map(rt)))},at=function(x,A,_){var U,G=x.name,Q=x.type,te=Q.types?(U=Q.types)===null||U===void 0?void 0:U.filter(function(ie){return ie.declaration}):[Q],Z=te.map(function(ie){var pe;return ie==null||(pe=ie.declaration)===null||pe===void 0?void 0:pe.children}).flat().filter(function(ie,pe,ge){return ge.findIndex(function(ue){return(ue==null?void 0:ue.name)===(ie==null?void 0:ie.name)})===pe});return Object(t.c)("div",{key:"props-definition-".concat(G)},Object(t.c)(m.c,null,Z==null?void 0:Z.map(function(ie){return ie?Ke(ie,it(ie,A),_):null})),He(Q.types,_))},Ke=function(x,A,_){var U=x.comment,G=x.name,Q=x.type,te=x.flags,Z=x.signatures;return Object(t.c)(m.a,{propType:!0,key:"prop-entry-".concat(G),customCss:tt},_?Object(t.c)(r.c,null,Object(t.c)(a.b,null,G)):Object(t.c)(r.d,null,G),Object(t.c)(d.b,null,(te==null?void 0:te.isOptional)&&Object(t.c)("span",{css:T},"Optional\u2003\u2022\u2003"),Object(t.c)("span",{css:T},"Type:")," ",$(Q,Z,!0),A&&A!==We?Object(t.c)("span",null,Object(t.c)("span",{css:T},"\u2003\u2022\u2003Default:")," ",Object(t.c)(a.b,null,A)):null),Object(t.c)(J,{comment:B(U,Z)}),Object(t.c)("hr",{css:nt}))},ot=function(x){var A=x.data,_=x.defaultProps,U=x.header,G=U===void 0?"Props":U,Q=A.find(function(te){return te.name===G});return A!=null&&A.length?Object(t.c)(p.a.Fragment,null,G==="Props"?Object(t.c)(r.a,{key:"props-header"},G):Object(t.c)(p.a.Fragment,null,Object(t.c)(r.c,{key:"".concat(G,"-props-header")},Object(t.c)(a.b,null,G)),Q&&Q.comment?Object(t.c)(J,{comment:Q.comment}):Object(t.c)("br",null)),A.map(function(te){return at(te,_,G==="Props")})):null},Ye=ot,Je=function(x){return x.kind===v.Property&&!x.overwrites&&!x.name.startsWith("_")&&!x.implementationOf},st=function(x){return x.kind===v.Method&&!x.overwrites},mt=function(x,A){var _=x.name,U=x.comment,G=x.type,Q=x.extendedTypes,te=x.children,Z=x.implementedTypes,ie=te==null?void 0:te.filter(Je),pe=te==null?void 0:te.filter(st);return Object(t.c)("div",{key:"class-definition-".concat(_)},A?Object(t.c)(r.c,null,Object(t.c)(a.b,null,_)):Object(t.c)(r.a,null,_),((Q==null?void 0:Q.length)||(Z==null?void 0:Z.length))&&Object(t.c)(d.b,null,Object(t.c)(d.a,null,"Type: "),G?Object(t.c)(a.b,null,D(G)):"Class",(Q==null?void 0:Q.length)&&Object(t.c)(p.a.Fragment,null,Object(t.c)("span",null," extends "),Q.map(function(ge){return Object(t.c)(a.b,{key:"extends-".concat(ge.name)},D(ge))})),(Z==null?void 0:Z.length)&&Object(t.c)(p.a.Fragment,null,Object(t.c)("span",null," implements "),Z.map(function(ge){return Object(t.c)(a.b,{key:"implements-".concat(ge.name)},D(ge))}))),Object(t.c)(J,{comment:U}),ie!=null&&ie.length?Object(t.c)(p.a.Fragment,null,A?Object(t.c)(p.a.Fragment,null,Object(t.c)(r.d,null,_," Properties"),Object(t.c)("br",null)):Object(t.c)(r.a,null,_," Properties"),Object(t.c)(m.c,null,ie.map(function(ge){return Ke(ge,ge==null?void 0:ge.defaultValue,!A)}))):null,pe!=null&&pe.length?Object(t.c)(p.a.Fragment,null,A?Object(t.c)(r.d,null,_," Methods"):Object(t.c)(r.a,null,_," Methods"),Object(t.c)("div",{style:{paddingLeft:8}},pe.map(function(ge,ue){return _e(ge,ue,pe.length,void 0,void 0,!A)}))):null,Object(t.c)("hr",null))},pt=function(x){var A=x.data;if(A!=null&&A.length){var _=A.length>1;return Object(t.c)(p.a.Fragment,null,_?Object(t.c)(r.a,null,"Classes"):null,A.map(function(U){return mt(U,_)}))}return null},Qe=pt,Xe=function(x,A){var _,U;return x||((_=A==null||(U=A[0])===null||U===void 0?void 0:U.comment)!==null&&_!==void 0?_:void 0)},Ze=function(x,A){var _=x.name,U=x.comment,G=x.type,Q=x.extendedTypes,te=x.children,Z=x.signatures,ie=Q!=null&&Q.length?Q[0]:G,pe=Y(_,te);return Object(t.c)("div",{key:"component-definition-".concat(pe)},Object(t.c)(r.c,null,Object(t.c)(a.b,null,pe)),ie&&Object(t.c)(d.b,null,Object(t.c)(d.a,null,"Type:")," ",Object(t.c)(a.b,null,D(ie))),Object(t.c)(J,{comment:Xe(U,Z)}),A&&A.length?Object(t.c)(Ye,{data:A,header:"".concat(pe,"Props")}):null)},dt=function(x){var A=x.data,_=x.componentsProps;return A!=null&&A.length?Object(t.c)(p.a.Fragment,null,Object(t.c)(r.a,{key:"components-header"},"Components"),A.map(function(U){return Ze(U,_.filter(function(G){return G.name.includes(Y(U.name,U.children))}))})):null},$e=dt,et=function(x,A){var _=x.name,U=x.comment,G=x.type;return Object(t.c)("div",{key:"constant-definition-".concat(_)},Object(t.c)(r.c,null,Object(t.c)(a.b,null,A?"".concat(A,"."):"",_)),G&&Object(t.c)(d.b,null,Object(t.c)(d.a,null,"Type:")," ",Object(t.c)(a.b,null,D(G))),Object(t.c)(J,{comment:U}))},lt=function(x){var A=x.data,_=x.apiName;return A!=null&&A.length?Object(t.c)(p.a.Fragment,null,Object(t.c)(r.a,{key:"constants-header"},"Constants"),A.map(function(U){return et(U,_)})):null},ct=lt;function kt(){return"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."}var ut=Object(t.b)({color:l.theme.text.secondary,fontSize:"75%"},"",""),yt=function(x,A){return x.defaultValue&&A.defaultValue?x.defaultValue.includes("'")&&A.defaultValue.includes("'")?x.defaultValue.localeCompare(A.defaultValue):parseInt(x.defaultValue,10)-parseInt(A.defaultValue,10):0},M={name:"5p0j9t",styles:"font-size:120%"},me=function(x){var A=x.name,_=x.children,U=x.comment;return Object(t.c)("div",{key:"enum-definition-".concat(A)},Object(t.c)(r.c,null,Object(t.c)(a.b,null,A)),Object(t.c)(J,{comment:U}),Object(t.c)(m.c,null,_.sort(yt).map(function(G){return Object(t.c)(m.a,{key:G.name},Object(t.c)("span",{css:M},Object(t.c)(a.b,null,G.name)),G.comment?Object(t.c)(J,{comment:G.comment,components:R,withDash:!0}):null,(G==null?void 0:G.defaultValue)&&Object(t.c)(d.b,null,Object(t.c)(a.b,{customCss:ut},A,".",G.name," \uFF1D ",G==null?void 0:G.defaultValue)))})))},de=function(x){var A=x.data;return A!=null&&A.length?Object(t.c)(p.a.Fragment,null,Object(t.c)(r.a,{key:"enums-header"},"Enums"),A.map(me)):null},le=de,Te=function(x){return x?Object(t.c)(p.a.Fragment,null,Object(t.c)("br",null),Object(t.c)("br",null),Object(t.c)(d.a,null,"Default:")," ",Object(t.c)(a.b,null,x.text)):null},he=function(x,A){if(A&&A.length){var _=A[0],U=_.type,G=_.parameters,Q=_.comment,te=N("default",Q);return Object(t.c)(p.a.Fragment,null,G!=null&&G.length?G.map(function(ie){return V(ie)}):null,Object(t.c)(d.a,null,"Returns: "),Object(t.c)(a.b,null,D(U)),Q&&Object(t.c)(p.a.Fragment,null,Object(t.c)("br",null),Object(t.c)(J,{comment:Q,components:R,afterContent:Te(te)})))}else{var Z=N("default",x);return x?Object(t.c)(J,{comment:x,components:R,afterContent:Te(Z)}):"-"}},xe=function(x){var A=x.name,_=x.flags,U=x.type,G=x.comment,Q=x.signatures;return Object(t.c)("tr",{key:A},Object(t.c)("td",null,Object(t.c)(d.a,null,A,Q&&Q.length?"()":""),re(_)),Object(t.c)("td",null,$(U,Q)),Object(t.c)("td",null,he(G,Q)))},Ne=function(x){var A=x.name,_=x.children,U=x.comment,G=x.extendedTypes;return _?Object(t.c)("div",{key:"interface-definition-".concat(A)},Object(t.c)(r.c,null,Object(t.c)(a.b,null,A)),(G==null?void 0:G.length)&&Object(t.c)(d.b,null,Object(t.c)(d.a,null,"Extends: "),G.map(function(Q){return Object(t.c)(a.b,{key:"extend-".concat(Q.name)},D(Q))})),Object(t.c)(J,{comment:U}),Object(t.c)("table",null,Object(t.c)("thead",null,Object(t.c)("tr",null,Object(t.c)("th",null,"Name"),Object(t.c)("th",null,"Type"),Object(t.c)("th",null,"Description"))),Object(t.c)("tbody",null,_.filter(function(Q){return!(Q!=null&&Q.inheritedFrom)}).map(xe)))):null},Pe=function(x){var A=x.data;return A!=null&&A.length?Object(t.c)(p.a.Fragment,null,Object(t.c)(r.a,{key:"interfaces-header"},"Interfaces"),A.map(Ne)):null},Ce=Pe,ye=function(x){var A=Array.from(new Set(x.map(function(_){return _.value&&typeof _.value})));return A.length===1&&A.filter(Boolean).length===1?Object(t.c)(p.a.Fragment,null,Object(t.c)(a.b,null,A[0])," - "):null},Fe=function(x){var A=x.children;return Object(t.c)("table",{key:"type-declaration-table-".concat(A==null?void 0:A.map(function(_){return _.name}).join("-"))},Object(t.c)("thead",null,Object(t.c)("tr",null,Object(t.c)("th",null,"Name"),Object(t.c)("th",null,"Type"),Object(t.c)("th",null,"Description"))),Object(t.c)("tbody",null,A==null?void 0:A.map(Tt)))},Be=function(x){return x?Object(t.c)(p.a.Fragment,null,Object(t.c)("br",null),Object(t.c)("br",null),Object(t.c)(d.a,null,"Default: "),Object(t.c)(a.b,null,x)):null},Tt=function(x){var A,_=x.name,U=x.flags,G=x.type,Q=x.comment,te=x.defaultValue,Z=x.signatures,ie=ne(te||((A=N("default",Q))===null||A===void 0?void 0:A.text)),pe=B(Q,Z);return Object(t.c)("tr",{key:_},Object(t.c)("td",null,Object(t.c)(d.a,null,_),re(U)),Object(t.c)("td",null,$(G,Z)),Object(t.c)("td",null,pe?Object(t.c)(J,{comment:pe,components:R,afterContent:Be(ie)}):"-"))},vt=function(x){var A=x.name,_=x.comment,U=x.type,G=x.typeParameter;if(U.declaration)return Object(t.c)("div",{key:"type-definition-".concat(A)},Object(t.c)(r.c,null,Object(t.c)(a.b,null,A,U.declaration.signatures?"()":"")),Object(t.c)(J,{comment:_}),U.declaration.children&&Fe(U.declaration),U.declaration.signatures?U.declaration.signatures.map(function(Z){var ie=Z.parameters,pe=Z.comment;return Object(t.c)("div",{key:"type-definition-signature-".concat(A)},Object(t.c)(J,{comment:pe}),ie?Object(t.c)(r.d,null,"Arguments"):null,ie?Object(t.c)(m.c,null,ie==null?void 0:ie.map(V)):null)}):null);if(U.types&&["union","intersection"].includes(U.type)){var Q=U.types.filter(function(Z){return["literal","intrinsic","reference","tuple"].includes(Z.type)}),te=U.types.filter(function(Z){return Z.type==="reflection"});if(te.length)return Object(t.c)("div",{key:"prop-type-definition-".concat(A)},Object(t.c)(r.c,null,Object(t.c)(a.b,null,A)),Object(t.c)(J,{comment:_}),U.type==="intersection"?Object(t.c)(d.b,null,Object(t.c)(a.b,null,U.types.filter(function(Z){return Z.type==="reference"}).map(D))," ","extended by:"):null,te.map(function(Z){var ie;return(Z==null||(ie=Z.declaration)===null||ie===void 0?void 0:ie.children)&&Fe(Z.declaration)}));if(Q.length)return Object(t.c)("div",{key:"type-definition-".concat(A)},Object(t.c)(r.c,null,Object(t.c)(a.b,null,A)),Object(t.c)(J,{comment:_}),Object(t.c)(d.b,null,ye(Q),"Acceptable values are:"," ",Q.map(function(Z,ie){return Object(t.c)("span",{key:"".concat(A,"-literal-type-").concat(ie)},Object(t.c)(a.b,null,D(Z)),ie+1!==Q.length?", ":".")})))}else{if(U.name==="Record"&&U.typeArguments||U.type==="reference")return Object(t.c)("div",{key:"record-definition-".concat(A)},Object(t.c)(r.c,null,Object(t.c)(a.b,null,A)),Object(t.c)(m.c,null,Object(t.c)(m.a,null,Object(t.c)(a.b,null,D(U)))),Object(t.c)(J,{comment:_}));if(U.type==="intrinsic")return Object(t.c)("div",{key:"generic-type-definition-".concat(A)},Object(t.c)(r.c,null,Object(t.c)(a.b,null,A)),Object(t.c)(J,{comment:_}),Object(t.c)(d.a,null,"Type: "),Object(t.c)(a.b,null,U.name));if(U.type==="conditional"&&U.checkType)return Object(t.c)("div",{key:"conditional-type-definition-".concat(A)},Object(t.c)(r.c,null,Object(t.c)(a.b,null,A,"<",U.checkType.name,">")),Object(t.c)(J,{comment:_}),Object(t.c)(d.a,null,"Generic: "),Object(t.c)(a.b,null,U.checkType.name,G&&Object(t.c)(p.a.Fragment,null," extends ",D(G[0].type))),Object(t.c)("br",null),Object(t.c)(d.a,null,"Type: "),Object(t.c)(a.b,null,U.checkType.name,G&&Object(t.c)(p.a.Fragment,null," extends ",U.extendsType&&D(U.extendsType))," ? ",U.trueType&&D(U.trueType)," : ",U.falseType&&D(U.falseType)))}},xt=function(x){var A=x.data;return A!=null&&A.length?Object(t.c)(p.a.Fragment,null,Object(t.c)(r.a,{key:"types-header"},"Types"),A.map(vt)):null},Pt=xt,At=n("5BX9"),wt="v".concat(n("kiQV").version),Ee=function(){var x=arguments.length>0&&arguments[0]!==void 0?arguments[0]:[],A=arguments.length>1?arguments[1]:void 0,_=arguments.length>2&&arguments[2]!==void 0?arguments[2]:function(){return!0};return x.filter(function(U){return(Array.isArray(A)?A.includes(U.kind):U.kind===A)&&_(U)})},ft=function(x){var A=x.name;return A.startsWith("use")&&A!=="useSystemBrightnessAsync"},St=function(x){var A=x.name;return A.endsWith("Listener")||A.endsWith("Listeners")},bt=function(x){var A=x.name;return A.includes("Props")&&A!=="ErrorRecoveryProps"},gt=function(x){var A=x.type,_=x.extendedTypes,U=x.signatures;return A!=null&&A.name&&["React.FC","ForwardRefExoticComponent"].includes(A==null?void 0:A.name)?!0:_&&_.length?_[0].name==="Component":!!(U&&U.length&&(U[0].type.name==="Element"||U[0].parameters&&U[0].parameters[0].name==="props"))},Ct=function(x){var A=x.name,_=x.type;return!["default","Constants","EventEmitter"].includes(A)&&!(_!=null&&_.name&&["React.FC","ForwardRefExoticComponent"].includes(_==null?void 0:_.name))},Et=function(x){var A=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"unversioned",_=arguments.length>2?arguments[2]:void 0,U=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,G=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1;try{var Q=n("T73F")("./".concat(A,"/").concat(x,".json")),te=Q.children,Z=Ee(te,v.Function,function(se){return!St(se)&&!ft(se)&&!gt(se)}),ie=Ee(te,v.Function,ft),pe=Ee(te,v.Function,St),ge=Ee(te,v.TypeAlias,function(se){return!bt(se)&&!!(se.type.declaration||se.type.types||se.type.type||se.type.typeArguments)&&(U&&_?se.name.startsWith(_):!0)}),ue=Ee(te,v.TypeAlias,function(se){var be;return bt(se)&&!!(se.type.types||(be=se.type.declaration)!==null&&be!==void 0&&be.children)}),ve=Ee(te.filter(function(se){return se.kind===v.Class}).map(function(se){return se.children}).flat(),v.Property,function(se){return se.name==="defaultProps"})[0],Oe=Ee(te,[v.Enum,v.LegacyEnum]),qe=Ee(te,v.Interface),De=Ee(te,v.Variable,function(se){return Ct(se)}),Ue=Ee(te,[v.Variable,v.Class,v.Function],function(se){return gt(se)}),Ge=Ue.map(function(se){var be=se.name,Me=se.children;return"".concat(Y(be,Me),"Props")}),Ve=Ee(ue,v.TypeAlias,function(se){return Ge.includes(se.name)}),Re=Ee(te,v.Class,function(se){return!gt(se)&&(_?!se.name.includes(_):!0)}),Le=Ue.map(function(se){var be;return(be=se.children)===null||be===void 0?void 0:be.filter(function(Me){var ht;return Me.kind===v.Method&&(Me==null||(ht=Me.flags)===null||ht===void 0?void 0:ht.isExternal)!==!0&&Me.name!=="render"&&!Me.name.startsWith("_")})}).flat(),Se=Z.map(function(se){return se.name}),ke=Le.filter(function(se){var be;return(se==null||(be=se.flags)===null||be===void 0?void 0:be.isStatic)===!0&&!Se.includes(se.name)}),Ie=Le.filter(function(se){var be;return(se==null||(be=se.flags)===null||be===void 0?void 0:be.isStatic)!==!0&&!(se!=null&&se.overwrites)}).filter(Boolean);return Object(t.c)(p.a.Fragment,null,Object(t.c)($e,{data:Ue,componentsProps:Ve}),Object(t.c)(ce,{data:ke,header:"Static Methods"}),Object(t.c)(ce,{data:Ie,header:"Component Methods"}),Object(t.c)(ct,{data:De,apiName:_}),Object(t.c)(ce,{data:ie,header:"Hooks"}),Object(t.c)(Qe,{data:Re}),ue&&!Ve.length?Object(t.c)(Ye,{data:ue,defaultProps:ve}):null,Object(t.c)(ce,{data:Z,apiName:_}),Object(t.c)(ce,{data:pe,apiName:_,header:"Event Subscriptions"}),Object(t.c)(Pt,{data:ge}),Object(t.c)(Ce,{data:qe}),Object(t.c)(le,{data:Oe}))}catch(se){return Object(t.c)(d.b,null,"No API data file found, sorry!")}},Ot=function(x){var A=x.packageName,_=x.apiName,U=x.forceVersion,G=x.strictTypes,Q=G===void 0?!1:G,te=Object(At.c)(),Z=te.version,ie=U||(Z==="unversioned"?Z:Z==="latest"?wt:Z);return Et(A,ie,_,Q,!!U)},Rt=w.a=Ot},"3ZbZ":function(e){e.exports=JSON.parse('{"name":"expo-media-library","kind":1,"kindString":"Project","originalName":"","children":[{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"EXPermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"Album","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"approximateLocation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Apply only to albums whose type is `\'moment\'`. Approximated location of all\\nassets in the moment.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"Location"}},{"name":"assetCount","kind":1024,"kindString":"Property","comment":{"shortText":"Estimated number of assets in the album."},"type":{"type":"intrinsic","name":"number"}},{"name":"endTime","kind":1024,"kindString":"Property","comment":{"shortText":"Apply only to albums whose type is `\'moment\'`. Latest creation timestamp of all\\nassets in the moment.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Album ID."},"type":{"type":"intrinsic","name":"string"}},{"name":"locationNames","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Apply only to albums whose type is `\'moment\'`. Names of locations grouped\\nin the moment.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"startTime","kind":1024,"kindString":"Property","comment":{"shortText":"Apply only to albums whose type is `\'moment\'`. Earliest creation timestamp of all\\nassets in the moment.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"title","kind":1024,"kindString":"Property","comment":{"shortText":"Album title."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The type of the assets album.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"AlbumType"}}]}}},{"name":"AlbumRef","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"Album"},{"type":"intrinsic","name":"string"}]}},{"name":"AlbumType","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"album"},{"type":"literal","value":"moment"},{"type":"literal","value":"smartAlbum"}]}},{"name":"AlbumsOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"includeSmartAlbums","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"Asset","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"albumId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Album ID that the asset belongs to.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"creationTime","kind":1024,"kindString":"Property","comment":{"shortText":"File creation timestamp."},"type":{"type":"intrinsic","name":"number"}},{"name":"duration","kind":1024,"kindString":"Property","comment":{"shortText":"Duration of the video or audio asset in seconds."},"type":{"type":"intrinsic","name":"number"}},{"name":"filename","kind":1024,"kindString":"Property","comment":{"shortText":"Filename of the asset."},"type":{"type":"intrinsic","name":"string"}},{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"Height of the image or video."},"type":{"type":"intrinsic","name":"number"}},{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Internal ID that represents an asset."},"type":{"type":"intrinsic","name":"string"}},{"name":"mediaSubtypes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of media subtypes.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"reference","name":"MediaSubtype"}}},{"name":"mediaType","kind":1024,"kindString":"Property","comment":{"shortText":"Media type."},"type":{"type":"reference","name":"MediaTypeValue"}},{"name":"modificationTime","kind":1024,"kindString":"Property","comment":{"shortText":"Last modification timestamp."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"URI that points to the asset. `assets://*` (iOS), `file://*` (Android)"},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"Width of the image or video."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"AssetInfo","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"Asset"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"exif","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"EXIF metadata associated with the image."},"type":{"type":"intrinsic","name":"object"}},{"name":"isFavorite","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the asset is marked as favorite.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isNetworkAsset","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"This field is available only if flag `shouldDownloadFromNetwork` is set to `false`.\\nWhether the asset is stored on the network (iCloud on iOS).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"localUri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Local URI for the asset."},"type":{"type":"intrinsic","name":"string"}},{"name":"location","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"GPS location if available."},"type":{"type":"reference","name":"Location"}},{"name":"orientation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Display orientation of the image. Orientation is available only for assets whose\\n`mediaType` is `MediaType.photo`. Value will range from 1 to 8, see [EXIF orientation specification](http://sylvana.net/jpegcrop/exif_orientation.html)\\nfor more details.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"number"}}]}}]}},{"name":"AssetRef","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"Asset"},{"type":"intrinsic","name":"string"}]}},{"name":"AssetsOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"after","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Asset ID of the last item returned on the previous page."},"type":{"type":"reference","name":"AssetRef"}},{"name":"album","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"[Album](#album) or its ID to get assets from specific album."},"type":{"type":"reference","name":"AlbumRef"}},{"name":"createdAfter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"`Date` object or Unix timestamp in milliseconds limiting returned assets only to those that\\nwere created after this date."},"type":{"type":"union","types":[{"type":"reference","name":"Date"},{"type":"intrinsic","name":"number"}]}},{"name":"createdBefore","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Similarly as `createdAfter`, but limits assets only to those that were created before specified\\ndate."},"type":{"type":"union","types":[{"type":"reference","name":"Date"},{"type":"intrinsic","name":"number"}]}},{"name":"first","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The maximum number of items on a single page.","tags":[{"tag":"default","text":"`20`\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"mediaType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of [MediaTypeValue](#expomedialibrarymediatypevalue)s or a single `MediaTypeValue`.","tags":[{"tag":"default","text":"`MediaType.photo`\\n"}]},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"MediaTypeValue"}},{"type":"reference","name":"MediaTypeValue"}]}},{"name":"sortBy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of [`SortByValue`](#sortbyvalue)s or a single `SortByValue` value. By default, all\\nkeys are sorted in descending order, however you can also pass a pair `[key, ascending]` where\\nthe second item is a `boolean` value that means whether to use ascending order. Note that if\\nthe `SortBy.default` key is used, then `ascending` argument will not matter. Earlier items have\\nhigher priority when sorting out the results.\\nIf empty, this method will use the default sorting that is provided by the platform."},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"SortByValue"}},{"type":"reference","name":"SortByValue"}]}}]}}},{"name":"Location","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"latitude","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}},{"name":"MediaLibraryAssetInfoQueryOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"shouldDownloadFromNetwork","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether allow the asset to be downloaded from network. Only available in iOS with iCloud assets.","tags":[{"tag":"default","text":"`true`\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"MediaLibraryAssetsChangeEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"deletedAssets","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Available only if `hasIncrementalChanges` is `true`.\\nArray of [`Asset`](#asset)s that have been deleted from the library."},"type":{"type":"array","elementType":{"type":"reference","name":"Asset"}}},{"name":"hasIncrementalChanges","kind":1024,"kindString":"Property","comment":{"shortText":"Whether the media library\'s changes could be described as \\"incremental changes\\".\\n`true` indicates the changes are described by the `insertedAssets`, `deletedAssets` and\\n`updatedAssets` values. `false` indicates that the scope of changes is too large and you\\nshould perform a full assets reload (eg. a user has changed access to individual assets in the\\nmedia library)."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"insertedAssets","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Available only if `hasIncrementalChanges` is `true`.\\nArray of [`Asset`](#asset)s that have been inserted to the library."},"type":{"type":"array","elementType":{"type":"reference","name":"Asset"}}},{"name":"updatedAssets","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Available only if `hasIncrementalChanges` is `true`.\\nArray of [`Asset`](#asset)s that have been updated or completed downloading from network\\nstorage (iCloud on iOS)."},"type":{"type":"array","elementType":{"type":"reference","name":"Asset"}}}]}}},{"name":"MediaSubtype","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"depthEffect"},{"type":"literal","value":"hdr"},{"type":"literal","value":"highFrameRate"},{"type":"literal","value":"livePhoto"},{"type":"literal","value":"panorama"},{"type":"literal","value":"screenshot"},{"type":"literal","value":"stream"},{"type":"literal","value":"timelapse"}]}},{"name":"MediaTypeObject","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"audio","kind":1024,"kindString":"Property","type":{"type":"literal","value":"audio"}},{"name":"photo","kind":1024,"kindString":"Property","type":{"type":"literal","value":"photo"}},{"name":"unknown","kind":1024,"kindString":"Property","type":{"type":"literal","value":"unknown"}},{"name":"video","kind":1024,"kindString":"Property","type":{"type":"literal","value":"video"}}]}}},{"name":"MediaTypeValue","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"audio"},{"type":"literal","value":"photo"},{"type":"literal","value":"video"},{"type":"literal","value":"unknown"}]}},{"name":"PagedInfo","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter"}],"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"assets","kind":1024,"kindString":"Property","comment":{"shortText":"A page of [`Asset`](#asset)s fetched by the query."},"type":{"type":"array","elementType":{"type":"reference","name":"T"}}},{"name":"endCursor","kind":1024,"kindString":"Property","comment":{"shortText":"ID of the last fetched asset. It should be passed as `after` option in order to get the\\nnext page."},"type":{"type":"intrinsic","name":"string"}},{"name":"hasNextPage","kind":1024,"kindString":"Property","comment":{"shortText":"Whether there are more assets to fetch."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"totalCount","kind":1024,"kindString":"Property","comment":{"shortText":"Estimated total number of assets that match the query."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"PermissionResponse","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"EXPermissionResponse"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accessPrivileges","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates if your app has access to the whole or only part of the photo library. Possible values are:\\n- `\'all\'` if the user granted your app access to the whole photo library\\n- `\'limited\'` if the user granted your app access only to selected photos (only available on iOS 14.0+)\\n- `\'none\'` if user denied or hasn\'t yet granted the permission"},"type":{"type":"union","types":[{"type":"literal","value":"all"},{"type":"literal","value":"limited"},{"type":"literal","value":"none"}]}}]}}]}},{"name":"SortByKey","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"mediaType"},{"type":"literal","value":"width"},{"type":"literal","value":"height"},{"type":"literal","value":"creationTime"},{"type":"literal","value":"modificationTime"},{"type":"literal","value":"duration"}]}},{"name":"SortByObject","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"creationTime","kind":1024,"kindString":"Property","type":{"type":"literal","value":"creationTime"}},{"name":"default","kind":1024,"kindString":"Property","type":{"type":"literal","value":"default"}},{"name":"duration","kind":1024,"kindString":"Property","type":{"type":"literal","value":"duration"}},{"name":"height","kind":1024,"kindString":"Property","type":{"type":"literal","value":"height"}},{"name":"mediaType","kind":1024,"kindString":"Property","type":{"type":"literal","value":"mediaType"}},{"name":"modificationTime","kind":1024,"kindString":"Property","type":{"type":"literal","value":"modificationTime"}},{"name":"width","kind":1024,"kindString":"Property","type":{"type":"literal","value":"width"}}]}}},{"name":"SortByValue","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"tuple","elements":[{"type":"reference","name":"SortByKey"},{"type":"intrinsic","name":"boolean"}]},{"type":"reference","name":"SortByKey"}]}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"MediaType","kind":32,"kindString":"Variable","comment":{"shortText":"Possible media types."},"type":{"type":"reference","name":"MediaTypeObject"},"defaultValue":"MediaLibrary.MediaType"},{"name":"SortBy","kind":32,"kindString":"Variable","comment":{"shortText":"Supported keys that can be used to sort `getAssetsAsync` results."},"type":{"type":"reference","name":"SortByObject"},"defaultValue":"MediaLibrary.SortBy"},{"name":"addAssetsToAlbumAsync","kind":64,"kindString":"Function","signatures":[{"name":"addAssetsToAlbumAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Adds array of assets to the album.","text":"On Android, by default it copies assets from the current album to provided one, however it\'s also\\npossible to move them by passing `false` as `copyAssets` argument.In case they\'re copied you\\nshould keep in mind that `getAssetsAsync` will return duplicated assets.","returns":"Returns promise which fulfils with `true` if the assets were successfully added to\\nthe album.\\n"},"parameters":[{"name":"assets","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of [Asset](#asset) or their IDs."},"type":{"type":"union","types":[{"type":"reference","name":"AssetRef"},{"type":"array","elementType":{"type":"reference","name":"AssetRef"}}]}},{"name":"album","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [Album](#album) or its ID."},"type":{"type":"reference","name":"AlbumRef"}},{"name":"copy","kind":32768,"kindString":"Parameter","comment":{"shortText":"__Android only.__ Whether to copy assets to the new album instead of move them.\\nDefaults to `true`."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"true"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"addListener","kind":64,"kindString":"Function","signatures":[{"name":"addListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribes for updates in user\'s media library.","returns":"An [`Subscription`](#subscription) object that you can call `remove()` on when you would\\nlike to unsubscribe the listener.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"A callback that is fired when any assets have been inserted or deleted from the\\nlibrary, or when the user changes which assets they\'re allowing access to. On Android it\'s\\ninvoked with an empty object. On iOS it\'s invoked with [`MediaLibraryAssetsChangeEvent`](#medialibraryassetschangeevent)\\nobject."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"MediaLibraryAssetsChangeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"albumNeedsMigrationAsync","kind":64,"kindString":"Function","signatures":[{"name":"albumNeedsMigrationAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks if the album should be migrated to a different location. In other words, it checks if the\\napplication has the write permission to the album folder. If not, it returns `true`, otherwise `false`.\\n> Note: For **Android below R**, **web** or **iOS**, this function always returns `false`.","returns":"Returns a promise which fulfils with `true` if the album should be migrated.\\n"},"parameters":[{"name":"album","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [Album](#album) or its ID."},"type":{"type":"reference","name":"AlbumRef"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"createAlbumAsync","kind":64,"kindString":"Function","signatures":[{"name":"createAlbumAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates an album with given name and initial asset. The asset parameter is required on Android,\\nsince it\'s not possible to create empty album on this platform. On Android, by default it copies\\ngiven asset from the current album to the new one, however it\'s also possible to move it by\\npassing `false` as `copyAsset` argument.\\nIn case it\'s copied you should keep in mind that `getAssetsAsync` will return duplicated asset.","returns":"Newly created [`Album`](#album).\\n"},"parameters":[{"name":"albumName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the album to create."},"type":{"type":"intrinsic","name":"string"}},{"name":"asset","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"An [Asset](#asset) or its ID (required on Android)."},"type":{"type":"reference","name":"AssetRef"}},{"name":"copyAsset","kind":32768,"kindString":"Parameter","comment":{"shortText":"__Android Only.__ Whether to copy asset to the new album instead of move it.\\nDefaults to `true`."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"true"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Album"}],"name":"Promise"}}]},{"name":"createAssetAsync","kind":64,"kindString":"Function","signatures":[{"name":"createAssetAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates an asset from existing file. The most common use case is to save a picture taken by [Camera](./camera).\\nThis method requires `CAMERA_ROLL` permission.","returns":"A promise which fulfils with an object representing an [`Asset`](#asset).\\n","tags":[{"tag":"example","text":"\\n```js\\nconst { uri } = await Camera.takePictureAsync();\\nconst asset = await MediaLibrary.createAssetAsync(uri);\\n```"}]},"parameters":[{"name":"localUri","kind":32768,"kindString":"Parameter","comment":{"shortText":"A URI to the image or video file. It must contain an extension. On Android it\\nmust be a local path, so it must start with `file:///`"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Asset"}],"name":"Promise"}}]},{"name":"deleteAlbumsAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteAlbumsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Deletes given albums from the library. On Android by default it deletes assets belonging to given\\nalbums from the library. On iOS it doesn\'t delete these assets, however it\'s possible to do by\\npassing `true` as `deleteAssets`.","returns":"Returns a promise which fulfils with `true` if the albums were successfully deleted from\\nthe library.\\n"},"parameters":[{"name":"albums","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of [`Album`](#asset)s or their IDs."},"type":{"type":"union","types":[{"type":"reference","name":"AlbumRef"},{"type":"array","elementType":{"type":"reference","name":"AlbumRef"}}]}},{"name":"assetRemove","kind":32768,"kindString":"Parameter","comment":{"shortText":"__iOS Only.__ Whether to also delete assets belonging to given albums.\\nDefaults to `false`."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"deleteAssetsAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteAssetsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Deletes assets from the library. On iOS it deletes assets from all albums they belong to, while\\non Android it keeps all copies of them (album is strictly connected to the asset). Also, there is\\nadditional dialog on iOS that requires user to confirm this action.","returns":"Returns promise which fulfils with `true` if the assets were successfully deleted.\\n"},"parameters":[{"name":"assets","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of [Asset](#asset) or their IDs."},"type":{"type":"union","types":[{"type":"reference","name":"AssetRef"},{"type":"array","elementType":{"type":"reference","name":"AssetRef"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"getAlbumAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAlbumAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Queries for an album with a specific name.","returns":"An object representing an [`Album`](#album), if album with given name exists, otherwise\\nreturns `null`.\\n"},"parameters":[{"name":"title","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the album to look for."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Album"}],"name":"Promise"}}]},{"name":"getAlbumsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAlbumsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Queries for user-created albums in media gallery.","returns":"A promise which fulfils with an array of [`Album`](#asset)s. Depending on Android version,\\nroot directory of your storage may be listed as album titled `\\"0\\"` or unlisted at all.\\n"},"parameters":[{"name":"__namedParameters","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AlbumsOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Album"}}],"name":"Promise"}}]},{"name":"getAssetInfoAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAssetInfoAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Provides more information about an asset, including GPS location, local URI and EXIF metadata.","returns":"(#assetinfo) object, which is an `Asset` extended by an additional fields.\\n"},"parameters":[{"name":"asset","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [Asset](#asset) or its ID."},"type":{"type":"reference","name":"AssetRef"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"MediaLibraryAssetInfoQueryOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AssetInfo"}],"name":"Promise"}}]},{"name":"getAssetsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAssetsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Fetches a page of assets matching the provided criteria.","returns":"A promise that fulfils with to [`PagedInfo`](#pagedinfo) object with array of [`Asset`](#asset)s.\\n"},"parameters":[{"name":"assetsOptions","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"AssetsOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"Asset"}],"name":"PagedInfo"}],"name":"Promise"}}]},{"name":"getMomentsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMomentsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Fetches a list of moments, which is a group of assets taken around the same place\\nand time.","returns":"An array of [albums](#album) whose type is `moment`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing media library.","returns":"A promise that fulfils with [`PermissionResponse`](#permissionresponse) object.\\n"},"parameters":[{"name":"writeOnly","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the Media Library API is enabled on the current device.","returns":"A promise which fulfils with a `boolean`, indicating whether the Media Library API is\\navailable on the current device.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"migrateAlbumIfNeededAsync","kind":64,"kindString":"Function","signatures":[{"name":"migrateAlbumIfNeededAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Moves album content to the special media directories on **Android R** or **above** if needed.\\nThose new locations are in line with the Android `scoped storage` - so your application won\'t\\nlose write permission to those directories in the future.","text":"This method does nothing if:\\n- app is running on **iOS**, **web** or **Android below R**\\n- app has **write permission** to the album folder\\n\\nThe migration is possible when the album contains only compatible files types.\\nFor instance, movies and pictures are compatible with each other, but music and pictures are not.\\nIf automatic migration isn\'t possible, the function will be rejected.\\nIn that case, you can use methods from the `expo-file-system` to migrate all your files manually.\\n\\n# Why do you need to migrate files?\\n__Android R__ introduced a lot of changes in the storage system. Now applications can\'t save\\nanything to the root directory. The only available locations are from the `MediaStore` API.\\nUnfortunately, the media library stored albums in folders for which, because of those changes,\\nthe application doesn\'t have permissions anymore. However, it doesn\'t mean you need to migrate\\nall your albums. If your application doesn\'t add assets to albums, you don\'t have to migrate.\\nEverything will work as it used to. You can read more about scoped storage in [the Android documentation](https://developer.android.com/about/versions/11/privacy/storage).\\n","returns":"A promise which fulfils to `void`.\\n"},"parameters":[{"name":"album","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [Album](#album) or its ID."},"type":{"type":"reference","name":"AlbumRef"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"presentPermissionsPickerAsync","kind":64,"kindString":"Function","signatures":[{"name":"presentPermissionsPickerAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"__Available only on iOS >= 14.__ Allows the user to update the assets that your app has access to.\\nThe system modal is only displayed if the user originally allowed only `limited` access to their\\nmedia library, otherwise this method is a no-op.","returns":"A promise that either rejects if the method is unavailable (meaning the device is not\\nrunning iOS >= 14), or resolves to `void`.\\n> __Note:__ This method doesn\'t inform you if the user changes which assets your app has access to.\\nFor that information, you need to subscribe for updates to the user\'s media library using [addListener(listener)](#medialibraryaddlistenerlistener).\\nIf `hasIncrementalChanges` is `false`, the user changed their permissions.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"removeAllListeners","kind":64,"kindString":"Function","signatures":[{"name":"removeAllListeners","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes all listeners."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeAssetsFromAlbumAsync","kind":64,"kindString":"Function","signatures":[{"name":"removeAssetsFromAlbumAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes given assets from album.","text":"On Android, album will be automatically deleted if there are no more assets inside.","returns":"Returns promise which fulfils with `true` if the assets were successfully removed from\\nthe album.\\n"},"parameters":[{"name":"assets","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of [Asset](#asset) or their IDs."},"type":{"type":"union","types":[{"type":"reference","name":"AssetRef"},{"type":"array","elementType":{"type":"reference","name":"AssetRef"}}]}},{"name":"album","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [Album](#album) or its ID."},"type":{"type":"reference","name":"AlbumRef"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"removeSubscription","kind":64,"kindString":"Function","signatures":[{"name":"removeSubscription","kind":4096,"kindString":"Call signature","parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing media in user\'s media library.","returns":"A promise that fulfils with [`PermissionResponse`](#permissionresponse) object.\\n"},"parameters":[{"name":"writeOnly","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"saveToLibraryAsync","kind":64,"kindString":"Function","signatures":[{"name":"saveToLibraryAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Saves the file at given `localUri` to the user\'s media library. Unlike [`createAssetAsync()`](#medialibrarycreateassetasynclocaluri),\\nThis method doesn\'t return created asset.\\nOn __iOS 11+__, it\'s possible to use this method without asking for `CAMERA_ROLL` permission,\\nhowever then yours `Info.plist` should have `NSPhotoLibraryAddUsageDescription` key."},"parameters":[{"name":"localUri","kind":32768,"kindString":"Parameter","comment":{"shortText":"A URI to the image or video file. It must contain an extension. On Android it\\nmust be a local path, so it must start with `file:///`.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"usePermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"usePermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to access the media library.\\nThis uses both `requestPermissionsAsync` and `getPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = MediaLibrary.usePermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"writeOnly","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}]}}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}]}')},"3iNw":function(e,w,n){"use strict";var c=n("hq1P"),p=n("Ny5O"),d=n("E/Jm"),a=n("Q3zd"),m=n("2N74"),r=n("yRGd"),s={name:"htmlText",tokenize:i};function i(o,t,l){var k=this,g,h,f,S;return b;function b(T){return o.enter("htmlText"),o.enter("htmlTextData"),o.consume(T),P}function P(T){return T===33?(o.consume(T),y):T===47?(o.consume(T),V):T===63?(o.consume(T),D):c(T)?(o.consume(T),re):l(T)}function y(T){return T===45?(o.consume(T),v):T===91?(o.consume(T),h="CDATA[",f=0,j):c(T)?(o.consume(T),K):l(T)}function v(T){return T===45?(o.consume(T),u):l(T)}function u(T){return T===null||T===62?l(T):T===45?(o.consume(T),C):R(T)}function C(T){return T===null||T===62?l(T):R(T)}function R(T){return T===null?l(T):T===45?(o.consume(T),F):d(T)?(S=R,J(T)):(o.consume(T),R)}function F(T){return T===45?(o.consume(T),ae):R(T)}function j(T){return T===h.charCodeAt(f++)?(o.consume(T),f===h.length?I:j):l(T)}function I(T){return T===null?l(T):T===93?(o.consume(T),W):d(T)?(S=I,J(T)):(o.consume(T),I)}function W(T){return T===93?(o.consume(T),L):I(T)}function L(T){return T===62?ae(T):T===93?(o.consume(T),L):I(T)}function K(T){return T===null||T===62?ae(T):d(T)?(S=K,J(T)):(o.consume(T),K)}function D(T){return T===null?l(T):T===63?(o.consume(T),ee):d(T)?(S=D,J(T)):(o.consume(T),D)}function ee(T){return T===62?ae(T):D(T)}function V(T){return c(T)?(o.consume(T),X):l(T)}function X(T){return T===45||p(T)?(o.consume(T),X):$(T)}function $(T){return d(T)?(S=$,J(T)):m(T)?(o.consume(T),$):ae(T)}function re(T){return T===45||p(T)?(o.consume(T),re):T===47||T===62||a(T)?ne(T):l(T)}function ne(T){return T===47?(o.consume(T),ae):T===58||T===95||c(T)?(o.consume(T),B):d(T)?(S=ne,J(T)):m(T)?(o.consume(T),ne):ae(T)}function B(T){return T===45||T===46||T===58||T===95||p(T)?(o.consume(T),B):N(T)}function N(T){return T===61?(o.consume(T),z):d(T)?(S=N,J(T)):m(T)?(o.consume(T),N):ne(T)}function z(T){return T===null||T===60||T===61||T===62||T===96?l(T):T===34||T===39?(o.consume(T),g=T,H):d(T)?(S=z,J(T)):m(T)?(o.consume(T),z):(o.consume(T),g=void 0,oe)}function H(T){return T===g?(o.consume(T),E):T===null?l(T):d(T)?(S=H,J(T)):(o.consume(T),H)}function E(T){return T===62||T===47||a(T)?ne(T):l(T)}function oe(T){return T===null||T===34||T===39||T===60||T===61||T===96?l(T):T===62||a(T)?ne(T):(o.consume(T),oe)}function J(T){return o.exit("htmlTextData"),o.enter("lineEnding"),o.consume(T),o.exit("lineEnding"),r(o,Y,"linePrefix",k.parser.constructs.disable.null.indexOf("codeIndented")>-1?void 0:4)}function Y(T){return o.enter("htmlTextData"),S(T)}function ae(T){return T===62?(o.consume(T),o.exit("htmlTextData"),o.exit("htmlText"),t):l(T)}}e.exports=s},"3jkV":function(e){e.exports=JSON.parse('{"name":"expo-status-bar","kind":1,"kindString":"Project","originalName":"","children":[{"name":"StatusBarAnimation","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"none"},{"type":"literal","value":"fade"},{"type":"literal","value":"slide"}]}},{"name":"StatusBarProps","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"animated","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the transition between status bar property changes should be\\nanimated. Supported for `backgroundColor`, `barStyle` and `hidden`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"backgroundColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The background color of the status bar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"hidden","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the status bar is hidden."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"hideTransitionAnimation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The transition effect when showing and hiding the status bar using\\nthe hidden prop.","tags":[{"tag":"default","text":"\'fade\'"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"StatusBarAnimation"}},{"name":"networkActivityIndicatorVisible","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the network activity indicator should be visible.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"style","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets the color of the status bar text. Default value is `\\"auto\\"` which\\npicks the appropriate value according to the active color scheme, eg:\\nif your app is dark mode, the style will be `\\"light\\"`.","tags":[{"tag":"default","text":"\'auto\'\\n"}]},"type":{"type":"reference","name":"StatusBarStyle"}},{"name":"translucent","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the status bar is translucent. When translucent is set to `true`,\\nthe app will draw under the status bar. This is the default behaviour in\\nprojects created with Expo tools because it is consistent with iOS.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"StatusBarStyle","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"auto"},{"type":"literal","value":"inverted"},{"type":"literal","value":"light"},{"type":"literal","value":"dark"}]}},{"name":"StatusBar","kind":64,"kindString":"Function","signatures":[{"name":"StatusBar","kind":4096,"kindString":"Call signature","comment":{"shortText":"A component that allows you to configure your status bar without directly calling imperative\\nmethods like `setBarStyle`.","text":"You will likely have multiple `StatusBar` components mounted in the same app at the same time.\\nFor example, if you have multiple screens in your app, you may end up using one per screen.\\nThe props of each `StatusBar` component will be merged in the order that they were mounted.\\nThis component is built on top of the [StatusBar](https://reactnative.dev/docs/statusbar)\\ncomponent exported from React Native, and it provides defaults that work better for Expo users.\\n"},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"StatusBarProps"}}],"type":{"type":"literal","value":null}}]},{"name":"setStatusBarBackgroundColor","kind":64,"kindString":"Function","signatures":[{"name":"setStatusBarBackgroundColor","kind":4096,"kindString":"Call signature","comment":{"shortText":"Set the background color of the status bar.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"backgroundColor","kind":32768,"kindString":"Parameter","comment":{"shortText":"The background color of the status bar."},"type":{"type":"intrinsic","name":"string"}},{"name":"animated","kind":32768,"kindString":"Parameter","comment":{"shortText":"`true` to animate the background color change, `false` to change immediately."},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setStatusBarHidden","kind":64,"kindString":"Function","signatures":[{"name":"setStatusBarHidden","kind":4096,"kindString":"Call signature","comment":{"shortText":"Toggle visibility of the status bar."},"parameters":[{"name":"hidden","kind":32768,"kindString":"Parameter","comment":{"shortText":"If the status bar should be hidden."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"animation","kind":32768,"kindString":"Parameter","comment":{"shortText":"Animation to use when toggling hidden, defaults to `\'none\'`.\\n"},"type":{"type":"reference","name":"StatusBarAnimation"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setStatusBarNetworkActivityIndicatorVisible","kind":64,"kindString":"Function","signatures":[{"name":"setStatusBarNetworkActivityIndicatorVisible","kind":4096,"kindString":"Call signature","comment":{"shortText":"Toggle visibility of the network activity indicator.","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"visible","kind":32768,"kindString":"Parameter","comment":{"shortText":"If the network activity indicator should be visible."},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setStatusBarStyle","kind":64,"kindString":"Function","signatures":[{"name":"setStatusBarStyle","kind":4096,"kindString":"Call signature","comment":{"shortText":"Set the bar style of the status bar."},"parameters":[{"name":"style","kind":32768,"kindString":"Parameter","comment":{"shortText":"The color of the status bar text.\\n"},"type":{"type":"reference","name":"StatusBarStyle"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setStatusBarTranslucent","kind":64,"kindString":"Function","signatures":[{"name":"setStatusBarTranslucent","kind":4096,"kindString":"Call signature","comment":{"shortText":"Set the translucency of the status bar.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"translucent","kind":32768,"kindString":"Parameter","comment":{"shortText":"Whether the app can draw under the status bar. When `true`, content will be\\nrendered under the status bar. This is always `true` on iOS and cannot be changed."},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]}]}')},"3w6F":function(e){e.exports=JSON.parse('{"name":"expo-sharing","kind":1,"kindString":"Project","originalName":"","children":[{"name":"SharingOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"UTI","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"([Uniform Type Identifier](https://developer.apple.com/library/archive/documentation/FileManagement/Conceptual/understanding_utis/understand_utis_conc/understand_utis_conc.html))\\nthe type of the target file *(iOS only)*"},"type":{"type":"intrinsic","name":"string"}},{"name":"dialogTitle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets share dialog title *(Android and Web only)*"},"type":{"type":"intrinsic","name":"string"}},{"name":"mimeType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets `mimeType` for `Intent` *(Android only)*"},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine if the sharing API can be used in this app.","returns":"A promise that fulfills with `true` if the sharing API can be used, and `false` otherwise.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"shareAsync","kind":64,"kindString":"Function","signatures":[{"name":"shareAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Opens action sheet to share file to different applications which can handle this type of file."},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"Local file URL to share."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of share options.\\n"},"type":{"type":"reference","name":"SharingOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"Promise"}}]}]}')},"3zYo":function(e){e.exports=JSON.parse('{"name":"expo-mail-composer","kind":1,"kindString":"Project","originalName":"","children":[{"name":"MailComposerStatus","kind":8,"kindString":"Enumeration","children":[{"name":"CANCELLED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"cancelled\\""},{"name":"SAVED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"saved\\""},{"name":"SENT","kind":16,"kindString":"Enumeration member","defaultValue":"\\"sent\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"MailComposerOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A map defining the data to fill the mail."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"attachments","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of app\'s internal file URIs to attach."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"bccRecipients","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of e-mail addresses of the BCC recipients."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"body","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Body of the e-mail."},"type":{"type":"intrinsic","name":"string"}},{"name":"ccRecipients","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of e-mail addresses of the CC recipients."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"isHtml","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the body contains HTML tags so it could be formatted properly.\\nNot working perfectly on Android."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"recipients","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of e-mail addresses of the recipients."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"subject","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Subject of the e-mail."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"MailComposerResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"MailComposerStatus"}}]}}},{"name":"composeAsync","kind":64,"kindString":"Function","signatures":[{"name":"composeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Opens a mail modal for iOS and a mail app intent for Android and fills the fields with provided\\ndata. On iOS you will need to be signed into the Mail app.","returns":"A promise fulfilled with an object containing a `status` field that specifies whether an\\nemail was sent, saved, or cancelled. Android does not provide this info, so the status is always\\nset as if the email were sent.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"MailComposerOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"MailComposerResult"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine if the `MailComposer` API can be used in this app.","returns":"A promise resolves to `true` if the API can be used, and `false` otherwise.\\n- Returns `true` on iOS when the device has a default email setup for sending mail.\\n- Can return `false` on iOS if an MDM profile is setup to block outgoing mail. If this is the\\ncase, you may want to use the Linking API instead.\\n- Always returns `true` in the browser and on Android.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}')},"42yH":function(e,w,n){"use strict";var c=n("WtKE"),p=n("Ny5O"),d=n("ljYj"),a=n("QB/b");function m(o){return o&&typeof o=="object"&&"default"in o?o:{default:o}}var r=m(c),s={name:"characterReference",tokenize:i};function i(o,t,l){var k=this,g=0,h,f;return S;function S(v){return o.enter("characterReference"),o.enter("characterReferenceMarker"),o.consume(v),o.exit("characterReferenceMarker"),b}function b(v){return v===35?(o.enter("characterReferenceMarkerNumeric"),o.consume(v),o.exit("characterReferenceMarkerNumeric"),P):(o.enter("characterReferenceValue"),h=31,f=p,y(v))}function P(v){return v===88||v===120?(o.enter("characterReferenceMarkerHexadecimal"),o.consume(v),o.exit("characterReferenceMarkerHexadecimal"),o.enter("characterReferenceValue"),h=6,f=a,y):(o.enter("characterReferenceValue"),h=7,f=d,y(v))}function y(v){var u;return v===59&&g?(u=o.exit("characterReferenceValue"),f===p&&!r.default(k.sliceSerialize(u))?l(v):(o.enter("characterReferenceMarker"),o.consume(v),o.exit("characterReferenceMarker"),o.exit("characterReference"),t)):f(v)&&g++<h?(o.consume(v),y):l(v)}}e.exports=s},"4L9f":function(e){e.exports=JSON.parse('{"name":"expo-system-ui","kind":1,"kindString":"Project","originalName":"","children":[{"name":"getBackgroundColorAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBackgroundColorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the root view background color.","returns":"Current root view background color in hex format. Returns `null` if the background color is not set.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst color = await SystemUI.getBackgroundColorAsync();\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","qualifiedName":"ColorValue","package":"@types/react-native","name":"ColorValue"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setBackgroundColorAsync","kind":64,"kindString":"Function","signatures":[{"name":"setBackgroundColorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Changes the root view background color.","tags":[{"tag":"example","text":"\\n```ts\\nSystemUI.setBackgroundColorAsync(\\"white\\");\\n```"}]},"parameters":[{"name":"color","kind":32768,"kindString":"Parameter","comment":{"shortText":"Any valid [CSS 3 (SVG) color](http://www.w3.org/TR/css3-color/#svg-color).\\n"},"type":{"type":"reference","qualifiedName":"ColorValue","package":"@types/react-native","name":"ColorValue"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},"4Xk1":function(e){e.exports=JSON.parse('{"name":"expo-image-manipulator","kind":1,"kindString":"Project","originalName":"","children":[{"name":"FlipType","kind":8,"kindString":"Enumeration","children":[{"name":"Horizontal","kind":16,"kindString":"Enumeration member","defaultValue":"\\"horizontal\\""},{"name":"Vertical","kind":16,"kindString":"Enumeration member","defaultValue":"\\"vertical\\""}]},{"name":"SaveFormat","kind":8,"kindString":"Enumeration","children":[{"name":"JPEG","kind":16,"kindString":"Enumeration member","defaultValue":"\\"jpeg\\""},{"name":"PNG","kind":16,"kindString":"Enumeration member","defaultValue":"\\"png\\""},{"name":"WEBP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"__Web Only__"},"defaultValue":"\\"webp\\""}]},{"name":"Action","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"ActionResize"},{"type":"reference","name":"ActionRotate"},{"type":"reference","name":"ActionFlip"},{"type":"reference","name":"ActionCrop"}]}},{"name":"ActionCrop","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"crop","kind":1024,"kindString":"Property","comment":{"shortText":"Fields specify top-left corner and dimensions of a crop rectangle."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"originX","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"originY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}}]}}},{"name":"ActionFlip","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"flip","kind":1024,"kindString":"Property","comment":{"shortText":"An axis on which image will be flipped. Only one flip per transformation is available. If you\\nwant to flip according to both axes then provide two separate transformations."},"type":{"type":"reference","name":"FlipType"}}]}}},{"name":"ActionResize","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"resize","kind":1024,"kindString":"Property","comment":{"shortText":"Values correspond to the result image dimensions. If you specify only one value, the other will\\nbe calculated automatically to preserve image ratio."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}]}}}]}}},{"name":"ActionRotate","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"rotate","kind":1024,"kindString":"Property","comment":{"shortText":"Degrees to rotate the image. Rotation is clockwise when the value is positive and\\ncounter-clockwise when negative."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"ImageResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"It is included if the `base64` save option was truthy, and is a string containing the\\nJPEG/PNG (depending on `format`) data of the image in Base64. Prepend that with `\'data:image/xxx;base64,\'`\\nto get a data URI, which you can use as the source for an `Image` element for example\\n(where `xxx` is `jpeg` or `png`)."},"type":{"type":"intrinsic","name":"string"}},{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"Height of the image or video."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"An URI to the modified image (usable as the source for an `Image` or `Video` element)."},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"Width of the image or video."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"SaveOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A map defining how modified image should be saved."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to also include the image data in Base64 format."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"compress","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A value in range `0.0` - `1.0` specifying compression level of the result image. `1` means\\nno compression (highest quality) and `0` the highest compression (lowest quality)."},"type":{"type":"intrinsic","name":"number"}},{"name":"format","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specifies what type of compression should be used and what is the result file extension.\\n`SaveFormat.PNG` compression is lossless but slower, `SaveFormat.JPEG` is faster but the image\\nhas visible artifacts. Defaults to `SaveFormat.JPEG`"},"type":{"type":"reference","name":"SaveFormat"}}]}}},{"name":"manipulateAsync","kind":64,"kindString":"Function","signatures":[{"name":"manipulateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Manipulate the image provided via `uri`. Available modifications are rotating, flipping (mirroring),\\nresizing and cropping. Each invocation results in a new file. With one invocation you can provide\\na set of actions to perform over the image. Overwriting the source file would not have an effect\\nin displaying the result as images are cached.","returns":"Promise which fulfils with [`ImageResult`](#imageresult) object.\\n"},"parameters":[{"name":"uri","kind":32768,"kindString":"Parameter","comment":{"shortText":"URI of the file to manipulate. Should be on the local file system or a base64 data URI."},"type":{"type":"intrinsic","name":"string"}},{"name":"actions","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of objects representing manipulation options. Each object should have\\n__only one__ of the keys that corresponds to specific transformation."},"type":{"type":"array","elementType":{"type":"reference","name":"Action"}},"defaultValue":"[]"},{"name":"saveOptions","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map defining how modified image should be saved."},"type":{"type":"reference","name":"SaveOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImageResult"}],"name":"Promise"}}]}]}')},"4YI0":function(e){e.exports=JSON.parse('{"name":"expo-speech","kind":1,"kindString":"Project","originalName":"","children":[{"name":"VoiceQuality","kind":8,"kindString":"Enumeration","comment":{"shortText":"Enum representing the voice quality."},"children":[{"name":"Default","kind":16,"kindString":"Enumeration member","defaultValue":"\\"Default\\""},{"name":"Enhanced","kind":16,"kindString":"Enumeration member","defaultValue":"\\"Enhanced\\""}]},{"name":"SpeechEventCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"this","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SpeechSynthesisUtterance"}},{"name":"ev","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SpeechSynthesisEvent"}}],"type":{"type":"intrinsic","name":"any"}}]}}},{"name":"SpeechOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"_voiceIndex","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"language","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The code of a language that should be used to read the `text`, refer to IETF BCP 47 to see\\nvalid codes."},"type":{"type":"intrinsic","name":"string"}},{"name":"onBoundary","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SpeechEventCallback"},{"type":"literal","value":null}]}},{"name":"onMark","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SpeechEventCallback"},{"type":"literal","value":null}]}},{"name":"onPause","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SpeechEventCallback"},{"type":"literal","value":null}]}},{"name":"onResume","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SpeechEventCallback"},{"type":"literal","value":null}]}},{"name":"pitch","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Pitch of the voice to speak `text`. `1.0` is the normal pitch."},"type":{"type":"intrinsic","name":"number"}},{"name":"rate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Rate of the voice to speak `text`. `1.0` is the normal rate."},"type":{"type":"intrinsic","name":"number"}},{"name":"voice","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Voice identifier."},"type":{"type":"intrinsic","name":"string"}},{"name":"volume","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"onDone","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onDone","kind":4096,"kindString":"Call signature","comment":{"shortText":"A callback that is invoked when speaking finishes."},"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","name":"SpeechEventCallback"}]}}]},{"name":"onError","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onError","kind":4096,"kindString":"Call signature","comment":{"shortText":"__(Android only).__ A callback that is invoked when an error occurred while speaking."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"Error"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","name":"SpeechEventCallback"}]}}]},{"name":"onStart","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onStart","kind":4096,"kindString":"Call signature","comment":{"shortText":"A callback that is invoked when speaking starts."},"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","name":"SpeechEventCallback"}]}}]},{"name":"onStopped","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onStopped","kind":4096,"kindString":"Call signature","comment":{"shortText":"A callback that is invoked when speaking is stopped by calling `Speech.stop()`."},"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","name":"SpeechEventCallback"}]}}]}]}}},{"name":"Voice","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Object describing the available voices on the device."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"identifier","kind":1024,"kindString":"Property","comment":{"shortText":"Voice unique identifier."},"type":{"type":"intrinsic","name":"string"}},{"name":"language","kind":1024,"kindString":"Property","comment":{"shortText":"Voice language."},"type":{"type":"intrinsic","name":"string"}},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"Voice name."},"type":{"type":"intrinsic","name":"string"}},{"name":"quality","kind":1024,"kindString":"Property","comment":{"shortText":"Voice quality."},"type":{"type":"reference","name":"VoiceQuality"}}]}}},{"name":"WebVoice","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"Voice"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isDefault","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"localService","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"name","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"voiceURI","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"maxSpeechInputLength","kind":32,"kindString":"Variable","comment":{"shortText":"Maximum possible text length acceptable by `Speech.speak()` method. It is platform-dependent.\\nOn iOS, this returns `Number.MAX_VALUE`."},"type":{"type":"intrinsic","name":"number"},"defaultValue":"..."},{"name":"getAvailableVoicesAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAvailableVoicesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns list of all available voices.","returns":"List of `Voice` objects.\\n"},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Voice"}}],"name":"Promise"}}]},{"name":"isSpeakingAsync","kind":64,"kindString":"Function","signatures":[{"name":"isSpeakingAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine whether the Text-to-speech utility is currently speaking. Will return `true` if speaker\\nis paused.","returns":"Returns a Promise that fulfils with a boolean, `true` if speaking, `false` if not.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"pause","kind":64,"kindString":"Function","signatures":[{"name":"pause","kind":4096,"kindString":"Call signature","comment":{"shortText":"Pauses current speech. This method is not available on Android."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"resume","kind":64,"kindString":"Function","signatures":[{"name":"resume","kind":4096,"kindString":"Call signature","comment":{"shortText":"Resumes speaking previously paused speech or does nothing if there\'s none. This method is not\\navailable on Android."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"speak","kind":64,"kindString":"Function","signatures":[{"name":"speak","kind":4096,"kindString":"Call signature","comment":{"shortText":"Speak out loud the text given options. Calling this when another text is being spoken adds\\nan utterance to queue."},"parameters":[{"name":"text","kind":32768,"kindString":"Parameter","comment":{"shortText":"The text to be spoken. Cannot be longer than [`Speech.maxSpeechInputLength`](#speechmaxspeechinputlength)."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A `SpeechOptions` object.\\n"},"type":{"type":"reference","name":"SpeechOptions"},"defaultValue":"{}"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"stop","kind":64,"kindString":"Function","signatures":[{"name":"stop","kind":4096,"kindString":"Call signature","comment":{"shortText":"Interrupts current speech and deletes all in queue."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},"4iWs":function(e){e.exports=JSON.parse('{"name":"expo-network","kind":1,"kindString":"Project","originalName":"","children":[{"name":"NetworkStateType","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum of the different types of devices supported by Expo."},"children":[{"name":"BLUETOOTH","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over Bluetooth."},"defaultValue":"\\"BLUETOOTH\\""},{"name":"CELLULAR","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over mobile data or [`DUN-specific`](https://developer.android.com/reference/android/net/ConnectivityManager#TYPE_MOBILE_DUN)\\nmobile connection when setting an upstream connection for tethering."},"defaultValue":"\\"CELLULAR\\""},{"name":"ETHERNET","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over Ethernet."},"defaultValue":"\\"ETHERNET\\""},{"name":"NONE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"No active network connection detected."},"defaultValue":"\\"NONE\\""},{"name":"OTHER","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over other network connection types."},"defaultValue":"\\"OTHER\\""},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The connection type could not be determined."},"defaultValue":"\\"UNKNOWN\\""},{"name":"VPN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over VPN."},"defaultValue":"\\"VPN\\""},{"name":"WIFI","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over WiFi."},"defaultValue":"\\"WIFI\\""},{"name":"WIMAX","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over Wimax."},"defaultValue":"\\"WIMAX\\""}]},{"name":"NetworkState","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isConnected","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If there is an active network connection. Note that this does not mean that internet is reachable.\\nThis field is `false` if the type is either `Network.NetworkStateType.NONE` or `Network.NetworkStateType.UNKNOWN`,\\n`true` otherwise."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isInternetReachable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the internet is reachable with the currently active network connection. On Android, this\\ndepends on `NetInfo.isConnected()` (API level < 29) or `ConnectivityManager.getActiveNetwork()`\\n(API level >= 29). On iOS, this value will always be the same as `isConnected`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A [`NetworkStateType`](#networkstatetype) enum value that represents the current network\\nconnection type."},"type":{"type":"reference","name":"NetworkStateType"}}]}}},{"name":"getIpAddressAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIpAddressAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the device\'s current IPv4 address. Returns `0.0.0.0` if the IP address could not be retrieved.","text":"On web, this method uses the third-party [`ipify service`](https://www.ipify.org/) to get the\\npublic IP address of the current device.","returns":"A `Promise` that fulfils with a `string` of the current IP address of the device\'s main\\nnetwork interface. Can only be IPv4 address.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Network.getIpAddressAsync();\\n// \\"92.168.32.44\\"\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getMacAddressAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMacAddressAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the specified network interface\'s MAC address.","text":"> Beginning with iOS 7 and Android 11, non-system applications can no longer access the device\'s\\nMAC address. In SDK 41 and above, this method will always resolve to a predefined value that\\nisn\'t useful.\\n\\nIf you need to identify the device, use the `getIosIdForVendorAsync()` method / `androidId`\\nproperty of the `expo-application` unimodule instead.\\n","returns":"A `Promise` that fulfils with the value `\'02:00:00:00:00:00\'`.\\n","tags":[{"tag":"deprecated","text":"This method is deprecated and will be removed in a future SDK version.\\n"}]},"parameters":[{"name":"interfaceName","kind":32768,"kindString":"Parameter","comment":{"shortText":"A string representing interface name (`eth0`, `wlan0`) or `null` (default),\\nmeaning the method should fetch the MAC address of the first available interface.\\n"},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"null"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getNetworkStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getNetworkStateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the device\'s current network connection state.","text":"On web, `navigator.connection.type` is not available on browsers. So if there is an active\\nnetwork connection, the field `type` returns `NetworkStateType.UNKNOWN`. Otherwise, it returns\\n`NetworkStateType.NONE`.","returns":"A `Promise` that fulfils with a `NetworkState` object.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Network.getNetworkStateAsync();\\n// {\\n//   type: NetworkStateType.CELLULAR,\\n//   isConnected: true,\\n//   isInternetReachable: true,\\n// }\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"NetworkState"}],"name":"Promise"}}]},{"name":"isAirplaneModeEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAirplaneModeEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Tells if the device is in airplane mode.","returns":"Returns a `Promise` that fulfils with a `boolean` value for whether the device is in\\nairplane mode or not.","tags":[{"tag":"platform","text":"android\\n"},{"tag":"example","text":"\\n```ts\\nawait Network.isAirplaneModeEnabledAsync();\\n// false\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}')},"4n5I":function(e){e.exports=JSON.parse('{"name":"expo-app-loading","kind":1,"kindString":"Project","originalName":"","children":[{"name":"default","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new default","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"reference","name":"AppLoadingProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}]}}],"type":{"type":"reference","name":"AppLoading"},"inheritedFrom":{"type":"reference","name":"React.Component<AppLoadingProps>.constructor"}},{"name":"new default","kind":16384,"kindString":"Constructor signature","comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AppLoadingProps"}},{"name":"context","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"AppLoading"},"inheritedFrom":{"type":"reference","name":"React.Component<AppLoadingProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<AppLoadingProps>.constructor"}},{"name":"_isMounted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoHideSplash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to hide the native splash screen as soon as you unmount the `AppLoading` component.\\nAuto-hiding is enabled by default. See [SplashScreen](./splash-screen) module for an example."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"onError","kind":2048,"kindString":"Method","signatures":[{"name":"onError","kind":4096,"kindString":"Call signature","comment":{"shortText":"If `startAsync` throws an error, it is caught and passed into the function provided to `onError`.","tags":[{"tag":"deprecated","text":"\\n"}]},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","type":{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onFinish","kind":2048,"kindString":"Method","signatures":[{"name":"onFinish","kind":4096,"kindString":"Call signature","comment":{"shortText":"__(Required if you provide startAsync).__ Called when `startAsync` resolves or rejects.\\nThis should be used to set state and unmount the `AppLoading` component.","tags":[{"tag":"deprecated","text":"\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"name":"startAsync","kind":2048,"kindString":"Method","signatures":[{"name":"startAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"A function that returns a `Promise`, and the `Promise` should fulfil when the app is done\\nloading required data and assets. You can do this process manually if you prefer.\\nThis is mainly for backwards compatibility and it is not recommended.","text":"When provided, requires providing `onError` prop as well.","tags":[{"tag":"deprecated","text":"\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"React.ReactNode","package":"@types/react","name":"ReactNode"}}]}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}]},{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoHideSplash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to hide the native splash screen as soon as you unmount the `AppLoading` component.\\nAuto-hiding is enabled by default. See [SplashScreen](./splash-screen) module for an example."},"type":{"type":"intrinsic","name":"boolean"}}]}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"React.ReactNode","package":"@types/react","name":"ReactNode"}}]}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}]}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","qualifiedName":"React.ReactInstance","package":"@types/react","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"React.Context","package":"@types/react","name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"React.ErrorInfo","package":"@types/react","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"},"overwrites":{"type":"reference","name":"React.Component.componentDidMount"}}],"overwrites":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"},"overwrites":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"overwrites":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"render","kind":2048,"kindString":"Method","signatures":[{"name":"render","kind":4096,"kindString":"Call signature","type":{"type":"reference","qualifiedName":"global.JSX.Element","package":"@types/react","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","qualifiedName":"K","package":"@types/react","name":"K"}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","qualifiedName":"K","package":"@types/react","name":"K"}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"qualifiedName":"React.Component","package":"@types/react","name":"Component"}]},{"name":"AppLoadingProps","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The following props are recommended, but optional. If you do not provide any props, you are\\nresponsible for coordinating loading assets, handling errors, and updating state to unmount\\nthe `AppLoading` component."},"type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoHideSplash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to hide the native splash screen as soon as you unmount the `AppLoading` component.\\nAuto-hiding is enabled by default. See [SplashScreen](./splash-screen) module for an example."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"onError","kind":2048,"kindString":"Method","signatures":[{"name":"onError","kind":4096,"kindString":"Call signature","comment":{"shortText":"If `startAsync` throws an error, it is caught and passed into the function provided to `onError`.","tags":[{"tag":"deprecated","text":"\\n"}]},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","type":{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onFinish","kind":2048,"kindString":"Method","signatures":[{"name":"onFinish","kind":4096,"kindString":"Call signature","comment":{"shortText":"__(Required if you provide startAsync).__ Called when `startAsync` resolves or rejects.\\nThis should be used to set state and unmount the `AppLoading` component.","tags":[{"tag":"deprecated","text":"\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"name":"startAsync","kind":2048,"kindString":"Method","signatures":[{"name":"startAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"A function that returns a `Promise`, and the `Promise` should fulfil when the app is done\\nloading required data and assets. You can do this process manually if you prefer.\\nThis is mainly for backwards compatibility and it is not recommended.","text":"When provided, requires providing `onError` prop as well.","tags":[{"tag":"deprecated","text":"\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoHideSplash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to hide the native splash screen as soon as you unmount the `AppLoading` component.\\nAuto-hiding is enabled by default. See [SplashScreen](./splash-screen) module for an example."},"type":{"type":"intrinsic","name":"boolean"}}]}}]}}]}')},"5+N5":function(e){e.exports=JSON.parse('{"name":"expo-splash-screen","kind":1,"kindString":"Project","originalName":"","children":[{"name":"hideAsync","kind":64,"kindString":"Function","signatures":[{"name":"hideAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Hides the native splash screen immediately. Be careful to ensure that your app has content ready\\nto display when you hide the splash screen, or you may see a blank screen briefly. See the\\n[\\"Usage\\"](#usage) section for an example."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"preventAutoHideAsync","kind":64,"kindString":"Function","signatures":[{"name":"preventAutoHideAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Makes the native splash screen (configured in `app.json`) remain visible until `hideAsync` is called."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}')},"5/8l":function(e){e.exports=JSON.parse('{"name":"expo-pedometer","kind":1,"kindString":"Project","originalName":"","children":[{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"PedometerResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"steps","kind":1024,"kindString":"Property","comment":{"shortText":"Number of steps taken between the given dates."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PedometerUpdateCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"result","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"PedometerResult"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getStepCountAsync","kind":64,"kindString":"Function","signatures":[{"name":"getStepCountAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the step count between two dates.","returns":"Returns a promise that fulfills with a [`PedometerResult`](#pedometerresult).\\n\\nAs [Apple documentation states](https://developer.apple.com/documentation/coremotion/cmpedometer/1613946-querypedometerdatafromdate?language=objc):\\n> Only the past seven days worth of data is stored and available for you to retrieve. Specifying\\n> a start date that is more than seven days in the past returns only the available data.\\n"},"parameters":[{"name":"start","kind":32768,"kindString":"Parameter","comment":{"text":"A date indicating the start of the range over which to measure steps."},"type":{"type":"reference","name":"Date"}},{"name":"end","kind":32768,"kindString":"Parameter","comment":{"text":"A date indicating the end of the range over which to measure steps."},"type":{"type":"reference","name":"Date"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PedometerResult"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the pedometer is enabled on the device.","returns":"Returns a promise that fulfills with a `boolean`, indicating whether the pedometer is\\navailable on this device.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"watchStepCount","kind":64,"kindString":"Function","signatures":[{"name":"watchStepCount","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to pedometer updates.","returns":"Returns a [`Subscription`](#subscription) that enables you to call\\n`remove()` when you would like to unsubscribe the listener.\\n"},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"text":"A callback that is invoked when new step count data is available. The callback is\\nprovided with a single argument that is [`PedometerResult`](#pedometerresult)."},"type":{"type":"reference","name":"PedometerUpdateCallback"}}],"type":{"type":"reference","name":"Subscription"}}]}]}')},"55fs":function(e,w,n){"use strict";var c=n("RjOF");e.exports=f;var p=/ +$/,d=" ",a=`
`,m="-",r=":",s="|",i=0,o=67,t=76,l=82,k=99,g=108,h=114;function f(y,v){for(var u=v||{},C=u.padding!==!1,R=u.delimiterStart!==!1,F=u.delimiterEnd!==!1,j=(u.align||[]).concat(),I=u.alignDelimiters!==!1,W=[],L=u.stringLength||b,K=-1,D=y.length,ee=[],V=[],X=[],$=[],re=[],ne=0,B,N,z,H,E,oe,J,Y,ae,T,fe;++K<D;){for(B=y[K],N=-1,z=B.length,X=[],$=[],z>ne&&(ne=z);++N<z;)oe=S(B[N]),I===!0&&(E=L(oe),$[N]=E,H=re[N],(H===void 0||E>H)&&(re[N]=E)),X.push(oe);ee[K]=X,V[K]=$}if(N=-1,z=ne,typeof j=="object"&&"length"in j)for(;++N<z;)W[N]=P(j[N]);else for(fe=P(j);++N<z;)W[N]=fe;for(N=-1,z=ne,X=[],$=[];++N<z;)fe=W[N],ae="",T="",fe===g?ae=r:fe===h?T=r:fe===k&&(ae=r,T=r),E=I?Math.max(1,re[N]-ae.length-T.length):1,oe=ae+c(m,E)+T,I===!0&&(E=ae.length+E+T.length,E>re[N]&&(re[N]=E),$[N]=E),X[N]=oe;for(ee.splice(1,0,X),V.splice(1,0,$),K=-1,D=ee.length,J=[];++K<D;){for(X=ee[K],$=V[K],N=-1,z=ne,Y=[];++N<z;)oe=X[N]||"",ae="",T="",I===!0&&(E=re[N]-($[N]||0),fe=W[N],fe===h?ae=c(d,E):fe===k?E%2===0?(ae=c(d,E/2),T=ae):(ae=c(d,E/2+.5),T=c(d,E/2-.5)):T=c(d,E)),R===!0&&N===0&&Y.push(s),C===!0&&!(I===!1&&oe==="")&&(R===!0||N!==0)&&Y.push(d),I===!0&&Y.push(ae),Y.push(oe),I===!0&&Y.push(T),C===!0&&Y.push(d),(F===!0||N!==z-1)&&Y.push(s);Y=Y.join(""),F===!1&&(Y=Y.replace(p,"")),J.push(Y)}return J.join(a)}function S(y){return y==null?"":String(y)}function b(y){return y.length}function P(y){var v=typeof y=="string"?y.charCodeAt(0):i;return v===t||v===g?g:v===l||v===h?h:v===o||v===k?k:i}},"57Mm":function(e){e.exports=JSON.parse('{"name":"expo-splash-screen","kind":1,"kindString":"Project","originalName":"","children":[{"name":"hideAsync","kind":64,"kindString":"Function","signatures":[{"name":"hideAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Hides the native splash screen immediately. Be careful to ensure that your app has content ready\\nto display when you hide the splash screen, or you may see a blank screen briefly. See the\\n[\\"Usage\\"](#usage) section for an example."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"preventAutoHideAsync","kind":64,"kindString":"Function","signatures":[{"name":"preventAutoHideAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Makes the native splash screen (configured in `app.json`) remain visible until `hideAsync` is called."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}')},"5BX9":function(e,w,n){"use strict";n.d(w,"a",function(){return a}),n.d(w,"b",function(){return m}),n.d(w,"c",function(){return r});var c=n("q1tI"),p=n.n(c),d=n("AeFk"),a=Object(c.createContext)({version:"latest",hasVersion:!1,setVersion:function(l){throw new Error("PageApiVersionContext not found")}});function m(t){var l=i(t.router.pathname),k=l!==null,g=Object(c.useCallback)(function(h){t.router.push(o(t.router.pathname,h))},[]);return Object(d.c)(a.Provider,{value:{setVersion:g,hasVersion:k,version:l||"latest"}},t.children)}function r(){return Object(c.useContext)(a)}function s(t){return t.startsWith("/versions/")}function i(t){return s(t)?t.split("/",3).pop():null}function o(t,l){var k=i(t);return k?t.replace(k,l):t}},"5Dam":function(e){e.exports=JSON.parse('{"name":"expo-local-authentication","kind":1,"kindString":"Project","originalName":"","children":[{"name":"AuthenticationType","kind":8,"kindString":"Enumeration","children":[{"name":"FACIAL_RECOGNITION","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates facial recognition support."},"defaultValue":"2"},{"name":"FINGERPRINT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates fingerprint support."},"defaultValue":"1"},{"name":"IRIS","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates iris recognition support.","tags":[{"tag":"platform","text":"android\\n"}]},"defaultValue":"3"}]},{"name":"SecurityLevel","kind":8,"kindString":"Enumeration","children":[{"name":"BIOMETRIC","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates biometric authentication."},"defaultValue":"2"},{"name":"NONE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates no enrolled authentication."},"defaultValue":"0"},{"name":"SECRET","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates non-biometric authentication (e.g. PIN, Pattern)."},"defaultValue":"1"}]},{"name":"LocalAuthenticationOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"cancelLabel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Allows to customize the default `Cancel` label shown."},"type":{"type":"intrinsic","name":"string"}},{"name":"disableDeviceFallback","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"After several failed attempts the system will fallback to the device passcode. This setting\\nallows you to disable this option and instead handle the fallback yourself. This can be\\npreferable in certain custom authentication workflows. This behaviour maps to using the iOS\\n[LAPolicyDeviceOwnerAuthenticationWithBiometrics](https://developer.apple.com/documentation/localauthentication/lapolicy/lapolicydeviceownerauthenticationwithbiometrics?language=objc)\\npolicy rather than the [LAPolicyDeviceOwnerAuthentication](https://developer.apple.com/documentation/localauthentication/lapolicy/lapolicydeviceownerauthentication?language=objc)\\npolicy. Defaults to `false`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"fallbackLabel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Allows to customize the default `Use Passcode` label shown after several failed\\nauthentication attempts. Setting this option to an empty string disables this button from\\nshowing in the prompt.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"promptMessage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A message that is shown alongside the TouchID or FaceID prompt."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"LocalAuthenticationResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"success","kind":1024,"kindString":"Property","type":{"type":"literal","value":true}}]}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"error","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"success","kind":1024,"kindString":"Property","type":{"type":"literal","value":false}},{"name":"warning","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"authenticateAsync","kind":64,"kindString":"Function","signatures":[{"name":"authenticateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Attempts to authenticate via Fingerprint/TouchID (or FaceID if available on the device).\\n> **Note:** Apple requires apps which use FaceID to provide a description of why they use this API.\\nIf you try to use FaceID on an iPhone with FaceID without providing `infoPlist.NSFaceIDUsageDescription`\\nin `app.json`, the module will authenticate using device passcode. For more information about\\nusage descriptions on iOS, see [Deploying to App Stores](/distribution/app-stores#system-permissions-dialogs-on-ios).","returns":"Returns a promise which fulfils with [`LocalAuthenticationResult`](#localauthenticationresult).\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"LocalAuthenticationOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocalAuthenticationResult"}],"name":"Promise"}}]},{"name":"cancelAuthenticate","kind":64,"kindString":"Function","signatures":[{"name":"cancelAuthenticate","kind":4096,"kindString":"Call signature","comment":{"shortText":"**(Android Only)** Cancels authentication flow."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"getEnrolledLevelAsync","kind":64,"kindString":"Function","signatures":[{"name":"getEnrolledLevelAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine what kind of authentication is enrolled on the device.","returns":"Returns a promise which fulfils with [`SecurityLevel`](#securitylevel).\\n> **Note:** On Android devices prior to M, `SECRET` can be returned if only the SIM lock has been\\nenrolled, which is not the method that [`authenticateAsync`](#localauthenticationauthenticateasyncoptions)\\nprompts.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"SecurityLevel"}],"name":"Promise"}}]},{"name":"hasHardwareAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasHardwareAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine whether a face or fingerprint scanner is available on the device.","returns":"Returns a promise which fulfils with a `boolean` value indicating whether a face or\\nfingerprint scanner is available on this device.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isEnrolledAsync","kind":64,"kindString":"Function","signatures":[{"name":"isEnrolledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine whether the device has saved fingerprints or facial data to use for authentication.","returns":"Returns a promise which fulfils to `boolean` value indicating whether the device has\\nsaved fingerprints or facial data for authentication.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"supportedAuthenticationTypesAsync","kind":64,"kindString":"Function","signatures":[{"name":"supportedAuthenticationTypesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine what kinds of authentications are available on the device.","returns":"Returns a promise which fulfils to an array containing [`AuthenticationType`s](#authenticationtype).\\n\\nDevices can support multiple authentication methods- i.e. `[1,2]` means the device supports both\\nfingerprint and facial recognition. If none are supported, this method returns an empty array.\\n"},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"AuthenticationType"}}],"name":"Promise"}}]}]}')},"5V+r":function(e){e.exports=JSON.parse('{"name":"expo-sms","kind":1,"kindString":"Project","originalName":"","children":[{"name":"SMSAttachment","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object that is used to describe an attachment that is included with a SMS message."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"filename","kind":1024,"kindString":"Property","comment":{"shortText":"The filename of the attachment."},"type":{"type":"intrinsic","name":"string"}},{"name":"mimeType","kind":1024,"kindString":"Property","comment":{"shortText":"The mime type of the attachment such as `image/png`."},"type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"The content URI of the attachment. The URI needs be a content URI so that it can be accessed by\\nother applications outside of Expo. (See [FileSystem.getContentUriAsync](../filesystem/#filesystemgetcontenturiasyncfileuri))"},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"SMSOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"attachments","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SMSAttachment"},{"type":"array","elementType":{"type":"reference","name":"SMSAttachment"}}]}}]}}},{"name":"SMSResponse","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"result","kind":1024,"kindString":"Property","comment":{"shortText":"Status of SMS action invoked by the user."},"type":{"type":"union","types":[{"type":"literal","value":"unknown"},{"type":"literal","value":"sent"},{"type":"literal","value":"cancelled"}]}}]}}},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determines whether SMS is available. Always returns `false` in the iOS simulator, and in browser.","returns":"Returns a promise that fulfils with a `boolean`, indicating whether SMS is available on this device.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst isAvailable = await SMS.isAvailableAsync();\\nif (isAvailable) {\\n  // do your SMS stuff here\\n} else {\\n  // misfortune... there\'s no SMS available on this device\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"sendSMSAsync","kind":64,"kindString":"Function","signatures":[{"name":"sendSMSAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Opens the default UI/app for sending SMS messages with prefilled addresses and message.","returns":"Returns a Promise that fulfils with the SMS action is invoked by the user, with corresponding result:\\n- If the user cancelled the SMS sending process: `{ result: \'cancelled\' }`.\\n- If the user has sent/scheduled message for sending: `{ result: \'sent\' }`.\\n- If the status of the SMS message cannot be determined: `{ result: \'unknown\' }`.\\n\\nAndroid does not provide information about the status of the SMS message, so on Android devices\\nthe Promise will always resolve with { result: \'unknown\' }.\\n\\n> Note: The only feedback collected by this module is whether any message has been sent. That\\nmeans we do not check actual content of message nor recipients list.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst { result } = await SMS.sendSMSAsync(\\n  [\'0123456789\', \'9876543210\'],\\n  \'My sample HelloWorld message\',\\n  {\\n    attachments: {\\n      uri: \'path/myfile.png\',\\n      mimeType: \'image/png\',\\n      filename: \'myfile.png\',\\n    },\\n  }\\n);\\n```\\n"}]},"parameters":[{"name":"addresses","kind":32768,"kindString":"Parameter","comment":{"text":"An array of addresses (phone numbers) or single address passed as strings. Those\\nwould appear as recipients of the prepared message."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"name":"message","kind":32768,"kindString":"Parameter","comment":{"text":"Message to be sent."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"A `SMSOptions` object defining additional SMS configuration options.\\n"},"type":{"type":"reference","name":"SMSOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"SMSResponse"}],"name":"Promise"}}]}]}')},"5bit":function(e,w,n){"use strict";var c=n("ljYj"),p=n("2N74"),d=n("O+c1"),a=n("jeK3"),m=n("yRGd"),r=n("VLot"),s=n("33Zt"),i={name:"list",tokenize:l,continuation:{tokenize:k},exit:h},o={tokenize:f,partial:!0},t={tokenize:g,partial:!0};function l(S,b,P){var y=this,v=d(y.events,"linePrefix"),u=0;return C;function C(L){var K=y.containerState.type||(L===42||L===43||L===45?"listUnordered":"listOrdered");if(K==="listUnordered"?!y.containerState.marker||L===y.containerState.marker:c(L)){if(y.containerState.type||(y.containerState.type=K,S.enter(K,{_container:!0})),K==="listUnordered")return S.enter("listItemPrefix"),L===42||L===45?S.check(s,P,F)(L):F(L);if(!y.interrupt||L===49)return S.enter("listItemPrefix"),S.enter("listItemValue"),R(L)}return P(L)}function R(L){return c(L)&&++u<10?(S.consume(L),R):(!y.interrupt||u<2)&&(y.containerState.marker?L===y.containerState.marker:L===41||L===46)?(S.exit("listItemValue"),F(L)):P(L)}function F(L){return S.enter("listItemMarker"),S.consume(L),S.exit("listItemMarker"),y.containerState.marker=y.containerState.marker||L,S.check(r,y.interrupt?P:j,S.attempt(o,W,I))}function j(L){return y.containerState.initialBlankLine=!0,v++,W(L)}function I(L){return p(L)?(S.enter("listItemPrefixWhitespace"),S.consume(L),S.exit("listItemPrefixWhitespace"),W):P(L)}function W(L){return y.containerState.size=v+a(y.sliceStream(S.exit("listItemPrefix"))),b(L)}}function k(S,b,P){var y=this;return y.containerState._closeFlow=void 0,S.check(r,v,u);function v(R){return y.containerState.furtherBlankLines=y.containerState.furtherBlankLines||y.containerState.initialBlankLine,m(S,b,"listItemIndent",y.containerState.size+1)(R)}function u(R){return y.containerState.furtherBlankLines||!p(R)?(y.containerState.furtherBlankLines=y.containerState.initialBlankLine=void 0,C(R)):(y.containerState.furtherBlankLines=y.containerState.initialBlankLine=void 0,S.attempt(t,b,C)(R))}function C(R){return y.containerState._closeFlow=!0,y.interrupt=void 0,m(S,S.attempt(i,b,P),"linePrefix",y.parser.constructs.disable.null.indexOf("codeIndented")>-1?void 0:4)(R)}}function g(S,b,P){var y=this;return m(S,v,"listItemIndent",y.containerState.size+1);function v(u){return d(y.events,"listItemIndent")===y.containerState.size?b(u):P(u)}}function h(S){S.exit(this.containerState.type)}function f(S,b,P){var y=this;return m(S,v,"listItemPrefixWhitespace",y.parser.constructs.disable.null.indexOf("codeIndented")>-1?void 0:4+1);function v(u){return p(u)||!d(y.events,"listItemPrefixWhitespace")?P(u):b(u)}}e.exports=i},"5fiV":function(e){e.exports=JSON.parse('{"name":"expo-constants","kind":1,"originalName":"","children":[{"name":"AndroidManifest","kind":16777216,"kindString":"Reference"},{"name":"AndroidManifest","kind":256,"kindString":"Interface","children":[{"name":"versionCode","kind":1024,"kindString":"Property","comment":{"shortText":"The version code set by `android.versionCode` in app.json.\\nThe value is set to `null` in case you run your app in Expo Go.","tags":[{"tag":"deprecated","text":"Use `expo-application`\'s [`Application.nativeBuildVersion`](./application/#applicationnativebuildversion).\\n"}]},"type":{"type":"intrinsic","name":"number"}}],"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}},{"name":"AppOwnership","kind":16777216,"kindString":"Reference"},{"name":"AppOwnership","kind":8,"kindString":"Enumeration","children":[{"name":"Expo","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The experience is running inside of the Expo Go app."},"defaultValue":"\\"expo\\""},{"name":"Guest","kind":16,"kindString":"Enumeration member","comment":{"shortText":"It has been opened through a link from a standalone app."},"defaultValue":"\\"guest\\""},{"name":"Standalone","kind":16,"kindString":"Enumeration member","comment":{"shortText":"It is a [standalone app](/classic/building-standalone-apps#building-standalone-apps)."},"defaultValue":"\\"standalone\\""}]},{"name":"ClientScopingConfig","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"scopeKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An opaque unique string for scoping client-side data to this project. This value\\nwill not change when a project is transferred between accounts or renamed."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Constants","kind":16777216,"kindString":"Reference"},{"name":"Constants","kind":256,"kindString":"Interface","children":[{"name":"appOwnership","kind":1024,"kindString":"Property","comment":{"shortText":"Returns `expo`, `standalone`, or `guest`. This property only applies to the managed workflow\\nand classic builds; for apps built with EAS Build and in bare workflow, the result is\\nalways `null`."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"AppOwnership"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.appOwnership"}},{"name":"debugMode","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"NativeConstants.debugMode"}},{"name":"deviceName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A human-readable name for the device type."},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"NativeConstants.deviceName"}},{"name":"deviceYearClass","kind":1024,"kindString":"Property","comment":{"shortText":"The [device year class](https://github.com/facebook/device-year-class) of this device.","tags":[{"tag":"deprecated","text":"Moved to `expo-device` as [`Device.deviceYearClass`](./device/#deviceyearclass).\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"number"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.deviceYearClass"}},{"name":"executionEnvironment","kind":1024,"kindString":"Property","type":{"type":"reference","name":"ExecutionEnvironment"},"inheritedFrom":{"type":"reference","name":"NativeConstants.executionEnvironment"}},{"name":"experienceUrl","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"NativeConstants.experienceUrl"}},{"name":"expoRuntimeVersion","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.expoRuntimeVersion"}},{"name":"expoVersion","kind":1024,"kindString":"Property","comment":{"shortText":"The version string of the Expo Go app currently running.\\nReturns `null` in bare workflow and web."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.expoVersion"}},{"name":"installationId","kind":1024,"kindString":"Property","comment":{"shortText":"An identifier that is unique to this particular device and whose lifetime is at least as long\\nas the installation of the app.","tags":[{"tag":"deprecated","text":"`Constants.installationId` is deprecated in favor of generating your own ID and\\nstoring it.\\n"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"NativeConstants.installationId"}},{"name":"intentUri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"NativeConstants.intentUri"}},{"name":"isDetached","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"NativeConstants.isDetached"}},{"name":"isDevice","kind":1024,"kindString":"Property","comment":{"shortText":"`true` if the app is running on a device, `false` if running in a simulator or emulator.","tags":[{"tag":"deprecated","text":"Use `expo-device`\'s [`Device.isDevice`](./device/#deviceisdevice).\\n"}]},"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"NativeConstants.isDevice"}},{"name":"isHeadless","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"NativeConstants.isHeadless"}},{"name":"linkingUri","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"NativeConstants.linkingUri"}},{"name":"manifest","kind":1024,"kindString":"Property","comment":{"shortText":"Classic manifest for Expo apps using classic updates.\\nReturns `null` in bare workflow and when `manifest2` is non-null."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"AppManifest"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.manifest"}},{"name":"manifest2","kind":1024,"kindString":"Property","comment":{"shortText":"New manifest for Expo apps using modern Expo Updates.\\nReturns `null` in bare workflow and when `manifest` is non-null."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"Manifest"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.manifest2"}},{"name":"name","kind":1024,"kindString":"Property","type":{"type":"literal","value":"ExponentConstants"},"inheritedFrom":{"type":"reference","name":"NativeConstants.name"}},{"name":"nativeAppVersion","kind":1024,"kindString":"Property","comment":{"shortText":"The **Info.plist** value for `CFBundleShortVersionString` on iOS and the version name set\\nby `version` in app.json on Android at the time the native app was built.","tags":[{"tag":"deprecated","text":"Use `expo-application`\'s [`Application.nativeApplicationVersion`](./application/#applicationnativeapplicationversion).\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.nativeAppVersion"}},{"name":"nativeBuildVersion","kind":1024,"kindString":"Property","comment":{"shortText":"The **Info.plist** value for `CFBundleVersion` on iOS (set with `ios.buildNumber` value in\\n**app.json** in a standalone app) and the version code set by `android.versionCode` in\\n**app.json** on Android at the time the native app was built.","tags":[{"tag":"deprecated","text":"Use `expo-application`\'s [`Application.nativeBuildVersion`](./application/#applicationnativebuildversion).\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.nativeBuildVersion"}},{"name":"platform","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"PlatformManifest"},"inheritedFrom":{"type":"reference","name":"NativeConstants.platform"}},{"name":"sessionId","kind":1024,"kindString":"Property","comment":{"shortText":"A string that is unique to the current session of your app. It is different across apps and\\nacross multiple launches of the same app."},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"NativeConstants.sessionId"}},{"name":"statusBarHeight","kind":1024,"kindString":"Property","comment":{"shortText":"The default status bar height for the device. Does not factor in changes when location tracking\\nis in use or a phone call is active."},"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"NativeConstants.statusBarHeight"}},{"name":"systemFonts","kind":1024,"kindString":"Property","comment":{"shortText":"A list of the system font names available on the current device."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"NativeConstants.systemFonts"}},{"name":"systemVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"NativeConstants.systemVersion"}},{"name":"getWebViewUserAgentAsync","kind":2048,"kindString":"Method","signatures":[{"name":"getWebViewUserAgentAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the user agent string which would be included in requests sent by a web view running on\\nthis device. This is probably not the same user agent you might be providing in your JS `fetch`\\nrequests."},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}],"name":"Promise"},"inheritedFrom":{"type":"reference","name":"NativeConstants.getWebViewUserAgentAsync"}}],"inheritedFrom":{"type":"reference","name":"NativeConstants.getWebViewUserAgentAsync"}}],"extendedTypes":[{"type":"reference","name":"NativeConstants"}]},{"name":"default","kind":1024,"kindString":"Property","type":{"type":"reference","name":"Constants"}},{"name":"EASConfig","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"projectId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The ID for this project if it\'s using EAS. UUID. This value will not change when a project is\\ntransferred between accounts or renamed."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"ExecutionEnvironment","kind":16777216,"kindString":"Reference"},{"name":"ExecutionEnvironment","kind":8,"kindString":"Enumeration","children":[{"name":"Bare","kind":16,"kindString":"Enumeration member","defaultValue":"\\"bare\\""},{"name":"Standalone","kind":16,"kindString":"Enumeration member","defaultValue":"\\"standalone\\""},{"name":"StoreClient","kind":16,"kindString":"Enumeration member","defaultValue":"\\"storeClient\\""}]},{"name":"ExpoClientConfig","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ExpoConfig"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"bundleUrl","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"currentFullName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The Expo account name and slug used for display purposes. Formatted like `@username/slug`.\\nWhen unauthenticated, the username is `@anonymous`. For published projects, this value\\nmay change when a project is transferred between accounts or renamed."},"type":{"type":"intrinsic","name":"string"}},{"name":"hostUri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"id","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The Expo account name and slug for this project.","tags":[{"tag":"deprecated","text":"Prefer `projectId` or `originalFullName` instead for identification and\\n`scopeKey` for scoping due to immutability.\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"originalFullName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The original Expo account name and slug for this project. Formatted like `@username/slug`.\\nWhen unauthenticated, the username is `@anonymous`. For published projects, this value\\nwill not change when a project is transferred between accounts or renamed."},"type":{"type":"intrinsic","name":"string"}},{"name":"publishedTime","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"releaseChannel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"releaseId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Published apps only."},"type":{"type":"intrinsic","name":"string"}},{"name":"revisionId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"ExpoGoConfig","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"debuggerHost","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"developer","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"tool","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}},{"name":"logUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"mainModuleName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"packagerOpts","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"ExpoGoPackagerOpts"}}]}}},{"name":"ExpoGoPackagerOpts","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"dev","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"hostType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"lanType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"minify","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"strict","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"urlRandomness","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"urlType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}},{"name":"IOSManifest","kind":16777216,"kindString":"Reference"},{"name":"IOSManifest","kind":256,"kindString":"Interface","children":[{"name":"buildNumber","kind":1024,"kindString":"Property","comment":{"shortText":"The build number specified in the embedded **Info.plist** value for `CFBundleVersion` in this app.\\nIn a standalone app, you can set this with the `ios.buildNumber` value in **app.json**. This\\nmay differ from the value in `Constants.manifest.ios.buildNumber` because the manifest\\ncan be updated, whereas this value will never change for a given native binary.\\nThe value is set to `null` in case you run your app in Expo Go."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"name":"model","kind":1024,"kindString":"Property","comment":{"shortText":"The human-readable model name of this device, e.g. `\\"iPhone 7 Plus\\"` if it can be determined,\\notherwise will be `null`.","tags":[{"tag":"deprecated","text":"Moved to `expo-device` as [`Device.modelName`](./device/#devicemodelname).\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"name":"platform","kind":1024,"kindString":"Property","comment":{"shortText":"The Apple internal model identifier for this device, e.g. `iPhone1,1`.","tags":[{"tag":"deprecated","text":"Use `expo-device`\'s [`Device.modelId`](./device/#devicemodelid).\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"systemVersion","kind":1024,"kindString":"Property","comment":{"shortText":"The version of iOS running on this device, e.g. `10.3`.","tags":[{"tag":"deprecated","text":"Use `expo-device`\'s [`Device.osVersion`](./device/#deviceosversion).\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"userInterfaceIdiom","kind":1024,"kindString":"Property","comment":{"shortText":"The user interface idiom of this device, i.e. whether the app is running on an iPhone or an iPad.","tags":[{"tag":"deprecated","text":"Use `expo-device`\'s [`Device.getDeviceTypeAsync()`](./device/#devicegetdevicetypeasync).\\n"}]},"type":{"type":"reference","name":"UserInterfaceIdiom"}}],"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}},{"name":"Manifest","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A modern manifest."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"assets","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"reference","name":"ManifestAsset"}}},{"name":"createdAt","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"extra","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"ManifestExtra"}},{"name":"id","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"launchAsset","kind":1024,"kindString":"Property","type":{"type":"reference","name":"ManifestAsset"}},{"name":"metadata","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"object"}},{"name":"runtimeVersion","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"ManifestAsset","kind":256,"kindString":"Interface","children":[{"name":"url","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]},{"name":"ManifestExtra","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ClientScopingConfig"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"eas","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"EASConfig"}},{"name":"expoClient","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"ExpoClientConfig"}},{"name":"expoGo","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"ExpoGoConfig"}}]}}]}},{"name":"PlatformManifest","kind":16777216,"kindString":"Reference"},{"name":"PlatformManifest","kind":256,"kindString":"Interface","children":[{"name":"android","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"AndroidManifest"}},{"name":"detach","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"scheme","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}},{"name":"developer","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"hostUri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"ios","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"IOSManifest"}},{"name":"logUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"scheme","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"web","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"WebManifest"}}],"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}},{"name":"UserInterfaceIdiom","kind":16777216,"kindString":"Reference"},{"name":"UserInterfaceIdiom","kind":8,"kindString":"Enumeration","comment":{"shortText":"Current supported values are `handset` and `tablet`. Apple TV and CarPlay will show up\\nas `unsupported`."},"children":[{"name":"Handset","kind":16,"kindString":"Enumeration member","defaultValue":"\\"handset\\""},{"name":"Tablet","kind":16,"kindString":"Enumeration member","defaultValue":"\\"tablet\\""},{"name":"Unsupported","kind":16,"kindString":"Enumeration member","defaultValue":"\\"unsupported\\""}]},{"name":"WebManifest","kind":16777216,"kindString":"Reference"},{"name":"WebManifest","kind":256,"kindString":"Interface","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}]}')},"5pEW":function(e,w,n){"use strict";var c=n("NOby"),p=n("E/Jm"),d=n("HtLg"),a=n("Vx/6"),m=n("pe0m"),r=n("Ig3s"),s=n("FE4A"),i=n("T0BQ"),o=n("20u5");function t(l,k,g){var h=g?i(g):{line:1,column:1,offset:0},f={},S=[],b=[],P=[],y={consume:K,enter:D,exit:ee,attempt:$(V),check:$(X),interrupt:$(X,{interrupt:!0}),lazy:$(X,{lazy:!0})},v={previous:null,events:[],parser:l,sliceStream:F,sliceSerialize:R,now:j,defineSkip:I,write:C},u=k.tokenize.call(v,y);return k.resolveAll&&S.push(k),h._index=0,h._bufferIndex=-1,v;function C(N){return b=d(b,N),W(),b[b.length-1]!==null?[]:(re(k,0),v.events=r(S,v.events,v),v.events)}function R(N){return s(F(N))}function F(N){return o(b,N)}function j(){return i(h)}function I(N){f[N.line]=N.column,B()}function W(){for(var N,z;h._index<b.length;)if(z=b[h._index],typeof z=="string")for(N=h._index,h._bufferIndex<0&&(h._bufferIndex=0);h._index===N&&h._bufferIndex<z.length;)L(z.charCodeAt(h._bufferIndex));else L(z)}function L(N){u=u(N)}function K(N){p(N)?(h.line++,h.column=1,h.offset+=N===-3?2:1,B()):N!==-1&&(h.column++,h.offset++),h._bufferIndex<0?h._index++:(h._bufferIndex++,h._bufferIndex===b[h._index].length&&(h._bufferIndex=-1,h._index++)),v.previous=N}function D(N,z){var H=z||{};return H.type=N,H.start=j(),v.events.push(["enter",H,v]),P.push(H),H}function ee(N){var z=P.pop();return z.end=j(),v.events.push(["exit",z,v]),z}function V(N,z){re(N,z.from)}function X(N,z){z.restore()}function $(N,z){return H;function H(E,oe,J){var Y,ae,T,fe;return E.tokenize||"length"in E?Ae(m(E)):je;function je(ce){return ce in E||null in E?Ae(E.null?m(E[ce]).concat(m(E.null)):E[ce])(ce):J(ce)}function Ae(ce){return Y=ce,ae=0,we(ce[ae])}function we(ce){return ze;function ze(We){return fe=ne(),T=ce,ce.partial||(v.currentConstruct=ce),ce.name&&v.parser.constructs.disable.null.indexOf(ce.name)>-1?O():ce.tokenize.call(z?c({},v,z):v,y,_e,O)(We)}}function _e(ce){return N(T,fe),oe}function O(ce){return fe.restore(),++ae<Y.length?we(Y[ae]):J}}}function re(N,z){N.resolveAll&&S.indexOf(N)<0&&S.push(N),N.resolve&&a(v.events,z,v.events.length-z,N.resolve(v.events.slice(z),v)),N.resolveTo&&(v.events=N.resolveTo(v.events,v))}function ne(){var N=j(),z=v.previous,H=v.currentConstruct,E=v.events.length,oe=Array.from(P);return{restore:J,from:E};function J(){h=N,v.previous=z,v.currentConstruct=H,v.events.length=E,P=oe,B()}}function B(){h.line in f&&h.column<2&&(h.column=f[h.line],h.offset+=f[h.line]-1)}}e.exports=t},"5qE1":function(e){e.exports=JSON.parse('{"name":"expo-task-manager","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"TaskManagerError","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"Error object that can be received through [`TaskManagerTaskBody`](#taskmanagertaskbody) when the\\ntask fails."},"children":[{"name":"code","kind":1024,"kindString":"Property","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}},{"name":"message","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"}}]},{"name":"TaskManagerTask","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"Represents an already registered task."},"children":[{"name":"options","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Provides `options` that the task was registered with."},"type":{"type":"intrinsic","name":"any"}},{"name":"taskName","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Name that the task is registered with."},"type":{"type":"intrinsic","name":"string"}},{"name":"taskType","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Type of the task which depends on how the task was registered."},"type":{"type":"intrinsic","name":"string"}}]},{"name":"TaskManagerTaskBody","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"Represents the object that is passed to the task executor."},"children":[{"name":"data","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"An object of data passed to the task executor. Its properties depends on the type of the task."},"type":{"type":"reference","name":"T"}},{"name":"error","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Error object if the task failed or `null` otherwise."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"TaskManagerError"}]}},{"name":"executionInfo","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Additional details containing unique ID of task event and name of the task."},"type":{"type":"reference","name":"TaskManagerTaskBodyExecutionInfo"}}],"typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"object"}}]},{"name":"TaskManagerTaskBodyExecutionInfo","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"Additional details about execution provided in `TaskManagerTaskBody`."},"children":[{"name":"appState","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(iOS only)__ State of the application."},"type":{"type":"union","types":[{"type":"literal","value":"active"},{"type":"literal","value":"background"},{"type":"literal","value":"inactive"}]}},{"name":"eventId","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Unique ID of task event."},"type":{"type":"intrinsic","name":"string"}},{"name":"taskName","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Name of the task."},"type":{"type":"intrinsic","name":"string"}}]},{"name":"TaskManagerTaskExecutor","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"Type of task executor \u2013 a function that handles the task."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"name":"body","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TaskManagerTaskBody"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"defineTask","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"defineTask","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Defines task function. It must be called in the global scope of your JavaScript bundle.\\nIn particular, it cannot be called in any of React lifecycle methods like `componentDidMount`.\\nThis limitation is due to the fact that when the application is launched in the background,\\nwe need to spin up your JavaScript app, run your task and then shut down \u2014 no views are mounted\\nin this scenario."},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Name of the task. It must be the same as the name you provided when registering the task."},"type":{"type":"intrinsic","name":"string"}},{"name":"taskExecutor","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A function that will be invoked when the task with given `taskName` is executed.\\n"},"type":{"type":"reference","name":"TaskManagerTaskExecutor"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"getRegisteredTasksAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getRegisteredTasksAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Provides information about tasks registered in the app.","returns":"A promise which fulfills with an array of tasks registered in the app. Example:\\n```json\\n[\\n  {\\n    taskName: \'location-updates-task-name\',\\n    taskType: \'location\',\\n    options: {\\n      accuracy: Location.Accuracy.High,\\n      showsBackgroundLocationIndicator: false,\\n    },\\n  },\\n  {\\n    taskName: \'geofencing-task-name\',\\n    taskType: \'geofencing\',\\n    options: {\\n      regions: [...],\\n    },\\n  },\\n]\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"TaskManagerTask"}}],"name":"Promise"}}]},{"name":"getTaskOptionsAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getTaskOptionsAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Retrieves `options` associated with the task, that were passed to the function registering the task\\n(eg. `Location.startLocationUpdatesAsync`).","returns":"A promise which fulfills with the `options` object that was passed while registering task\\nwith given name or `null` if task couldn\'t be found.\\n"},"typeParameter":[{"name":"TaskOptions","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Name of the task."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TaskOptions"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Determine if the `TaskManager` API can be used in this app.","returns":"A promise fulfills with `true` if the API can be used, and `false` otherwise.\\nOn the web it always returns `false`.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isTaskDefined","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"isTaskDefined","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Checks whether the task is already defined."},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Name of the task.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"isTaskRegisteredAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"isTaskRegisteredAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Determine whether the task is registered. Registered tasks are stored in a persistent storage and\\npreserved between sessions.","returns":"A promise which fulfills with a `boolean` value whether or not the task with given name\\nis already registered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Name of the task."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"unregisterAllTasksAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"unregisterAllTasksAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Unregisters all tasks registered for the running app. You may want to call this when the user is\\nsigning out and you no longer need to track his location or run any other background tasks.","returns":"A promise which fulfills as soon as all tasks are completely unregistered.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"unregisterTaskAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"unregisterTaskAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Unregisters task from the app, so the app will not be receiving updates for that task anymore.\\n_It is recommended to use methods specialized by modules that registered the task, eg.\\n[`Location.stopLocationUpdatesAsync`](./location/#expolocationstoplocationupdatesasynctaskname)._","returns":"A promise which fulfills as soon as the task is unregistered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Name of the task to unregister."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},"5rbR":function(e){e.exports=JSON.parse('{"name":"expo-screen-orientation","kind":1,"kindString":"Project","originalName":"","children":[{"name":"Orientation","kind":8,"kindString":"Enumeration","children":[{"name":"LANDSCAPE_LEFT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Left landscape interface orientation."},"defaultValue":"3"},{"name":"LANDSCAPE_RIGHT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Right landscape interface orientation."},"defaultValue":"4"},{"name":"PORTRAIT_DOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Upside down portrait interface orientation."},"defaultValue":"2"},{"name":"PORTRAIT_UP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Right-side up portrait interface orientation."},"defaultValue":"1"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An unknown screen orientation. For example, the device is flat, perhaps on a table."},"defaultValue":"0"}]},{"name":"OrientationLock","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values can be passed to the [`lockAsync`](#screenorientationlockasyncorientationlock)\\nmethod.\\n> __Note:__ `OrientationLock.ALL` and `OrientationLock.PORTRAIT` are invalid on devices which\\n> don\'t support `OrientationLock.PORTRAIT_DOWN`."},"children":[{"name":"ALL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"All four possible orientations"},"defaultValue":"1"},{"name":"DEFAULT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The default orientation. On iOS, this will allow all orientations except `Orientation.PORTRAIT_DOWN`.\\nOn Android, this lets the system decide the best orientation."},"defaultValue":"0"},{"name":"LANDSCAPE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Any landscape orientation."},"defaultValue":"5"},{"name":"LANDSCAPE_LEFT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Left landscape only."},"defaultValue":"6"},{"name":"LANDSCAPE_RIGHT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Right landscape only."},"defaultValue":"7"},{"name":"OTHER","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A platform specific orientation. This is not a valid policy that can be applied in [`lockAsync`](#screenorientationlockasyncorientationlock)."},"defaultValue":"8"},{"name":"PORTRAIT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Any portrait orientation."},"defaultValue":"2"},{"name":"PORTRAIT_DOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Upside down portrait only."},"defaultValue":"4"},{"name":"PORTRAIT_UP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Right-side up portrait only."},"defaultValue":"3"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An unknown screen orientation lock. This is not a valid policy that can be applied in [`lockAsync`](#screenorientationlockasyncorientationlock)."},"defaultValue":"9"}]},{"name":"SizeClassIOS","kind":8,"kindString":"Enumeration","comment":{"shortText":"Each iOS device has a default set of [size classes](https://developer.apple.com/library/archive/featuredarticles/ViewControllerPGforiPhoneOS/TheAdaptiveModel.html)\\nthat you can use as a guide when designing your interface."},"children":[{"name":"COMPACT","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"REGULAR","kind":16,"kindString":"Enumeration member","defaultValue":"0"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","defaultValue":"2"}]},{"name":"WebOrientation","kind":8,"kindString":"Enumeration","children":[{"name":"LANDSCAPE_PRIMARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"landscape-primary\\""},{"name":"LANDSCAPE_SECONDARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"landscape-secondary\\""},{"name":"PORTRAIT_PRIMARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"portrait-primary\\""},{"name":"PORTRAIT_SECONDARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"portrait-secondary\\""}]},{"name":"WebOrientationLock","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum representing the lock policies that can be applied on the web platform, modelled after\\nthe [W3C specification](https://w3c.github.io/screen-orientation/#dom-orientationlocktype).\\nThese values can be applied through the [`lockPlatformAsync`](#screenorientationlockplatformasyncoptions)\\nmethod."},"children":[{"name":"ANY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"any\\""},{"name":"LANDSCAPE","kind":16,"kindString":"Enumeration member","defaultValue":"\\"landscape\\""},{"name":"LANDSCAPE_PRIMARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"landscape-primary\\""},{"name":"LANDSCAPE_SECONDARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"landscape-secondary\\""},{"name":"NATURAL","kind":16,"kindString":"Enumeration member","defaultValue":"\\"natural\\""},{"name":"PORTRAIT","kind":16,"kindString":"Enumeration member","defaultValue":"\\"portrait\\""},{"name":"PORTRAIT_PRIMARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"portrait-primary\\""},{"name":"PORTRAIT_SECONDARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"portrait-secondary\\""},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","defaultValue":"\\"unknown\\""}]},{"name":"OrientationChangeEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"orientationInfo","kind":1024,"kindString":"Property","comment":{"shortText":"The current `ScreenOrientationInfo` of the device."},"type":{"type":"reference","name":"ScreenOrientationInfo"}},{"name":"orientationLock","kind":1024,"kindString":"Property","comment":{"shortText":"The current `OrientationLock` of the device."},"type":{"type":"reference","name":"OrientationLock"}}]}}},{"name":"OrientationChangeListener","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"OrientationChangeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"PlatformOrientationInfo","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"screenOrientationArrayIOS","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of orientations to allow on the iOS platform.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"reference","name":"Orientation"}}},{"name":"screenOrientationConstantAndroid","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A constant to set using the Android native [API](https://developer.android.com/reference/android/R.attr.html#screenOrientation).\\nFor example, in order to set the lock policy to [unspecified](https://developer.android.com/reference/android/content/pm/ActivityInfo.html#SCREEN_ORIENTATION_UNSPECIFIED),\\n`-1` should be passed in.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"screenOrientationLockWeb","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A web orientation lock to apply in the browser.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"reference","name":"WebOrientationLock"}}]}}},{"name":"ScreenOrientationInfo","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"horizontalSizeClass","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The [horizontal size class](https://developer.apple.com/library/archive/featuredarticles/ViewControllerPGforiPhoneOS/TheAdaptiveModel.html)\\nof the device.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"SizeClassIOS"}},{"name":"orientation","kind":1024,"kindString":"Property","comment":{"shortText":"The current orientation of the device."},"type":{"type":"reference","name":"Orientation"}},{"name":"verticalSizeClass","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The [vertical size class](https://developer.apple.com/library/archive/featuredarticles/ViewControllerPGforiPhoneOS/TheAdaptiveModel.html)\\nof the device.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"SizeClassIOS"}}]}}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"addOrientationChangeListener","kind":64,"kindString":"Function","signatures":[{"name":"addOrientationChangeListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Invokes the `listener` function when the screen orientation changes from `portrait` to `landscape`\\nor from `landscape` to `portrait`. For example, it won\'t be invoked when screen orientation\\nchange from `portrait up` to `portrait down`, but it will be called when there was a change from\\n`portrait up` to `landscape left`."},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"Each orientation update will pass an object with the new [`OrientationChangeEvent`](#orientationchangeevent)\\nto the listener.\\n"},"type":{"type":"reference","name":"OrientationChangeListener"}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getOrientationAsync","kind":64,"kindString":"Function","signatures":[{"name":"getOrientationAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current screen orientation.","returns":"Returns a promise that fulfils with an [`Orientation`](#screenorientationorientation)\\nvalue that reflects the current screen orientation.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_GET_ORIENTATION_LOCK` - __Android Only.__ An unknown error occurred\\n  when trying to get the system lock.\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Orientation"}],"name":"Promise"}}]},{"name":"getOrientationLockAsync","kind":64,"kindString":"Function","signatures":[{"name":"getOrientationLockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current screen orientation lock type.","returns":"Returns a promise which fulfils with an [`OrientationLock`](#orientationlock)\\nvalue.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"OrientationLock"}],"name":"Promise"}}]},{"name":"getPlatformOrientationLockAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPlatformOrientationLockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the platform specific screen orientation lock type.","returns":"Returns a promise which fulfils with a [`PlatformOrientationInfo`](#platformorientationinfo)\\nvalue.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_GET_PLATFORM_ORIENTATION_LOCK`\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PlatformOrientationInfo"}],"name":"Promise"}}]},{"name":"lockAsync","kind":64,"kindString":"Function","signatures":[{"name":"lockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Lock the screen orientation to a particular `OrientationLock`.","returns":"Returns a promise with `void` value, which fulfils when the orientation is set.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_INVALID_ORIENTATION_LOCK` - An invalid [`OrientationLock`](#orientationlock)\\n  was passed in.\\n- `ERR_SCREEN_ORIENTATION_UNSUPPORTED_ORIENTATION_LOCK` - The platform does not support the\\n  orientation lock policy.\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n","tags":[{"tag":"example","text":"\\n```ts\\nasync function changeScreenOrientation() {\\n  await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE_LEFT);\\n}\\n```\\n"}]},"parameters":[{"name":"orientationLock","kind":32768,"kindString":"Parameter","comment":{"shortText":"The orientation lock to apply. See the [`OrientationLock`](#orientationlock)\\nenum for possible values."},"type":{"type":"reference","name":"OrientationLock"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"lockPlatformAsync","kind":64,"kindString":"Function","signatures":[{"name":"lockPlatformAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns a promise with `void` value, resolving when the orientation is set and rejecting\\nif an invalid option or value is passed.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_INVALID_ORIENTATION_LOCK` - __iOS Only.__ An invalid [`OrientationLock`](#orientationlock)\\n  was passed in.\\n- `ERR_SCREEN_ORIENTATION_UNSUPPORTED_ORIENTATION_LOCK` - The platform does not support the\\n  orientation lock policy.\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"The platform specific lock to apply. See the [`PlatformOrientationInfo`](#platformorientationinfo)\\nobject type for the different platform formats."},"type":{"type":"reference","name":"PlatformOrientationInfo"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"removeOrientationChangeListener","kind":64,"kindString":"Function","signatures":[{"name":"removeOrientationChangeListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unsubscribes the listener associated with the `Subscription` object from all orientation change\\nupdates."},"parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","comment":{"shortText":"A subscription object that manages the updates passed to a listener function\\non an orientation change.\\n"},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeOrientationChangeListeners","kind":64,"kindString":"Function","signatures":[{"name":"removeOrientationChangeListeners","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes all listeners subscribed to orientation change updates."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"supportsOrientationLockAsync","kind":64,"kindString":"Function","signatures":[{"name":"supportsOrientationLockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the [`OrientationLock`](#orientationlock) policy is supported on\\nthe device.","returns":"Returns a promise that resolves to a `boolean` value that reflects whether or not the\\norientationLock is supported.\\n"},"parameters":[{"name":"orientationLock","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"OrientationLock"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"unlockAsync","kind":64,"kindString":"Function","signatures":[{"name":"unlockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the screen orientation back to the `OrientationLock.DEFAULT` policy.","returns":"Returns a promise with `void` value, which fulfils when the orientation is set.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},"6+oe":function(e){e.exports=JSON.parse('{"name":"expo-battery","kind":1,"kindString":"Project","originalName":"","children":[{"name":"BatteryState","kind":8,"kindString":"Enumeration","children":[{"name":"CHARGING","kind":16,"kindString":"Enumeration member","comment":{"shortText":"if battery is charging."},"defaultValue":"2"},{"name":"FULL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"if the battery level is full."},"defaultValue":"3"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"if the battery state is unknown or inaccessible."},"defaultValue":"0"},{"name":"UNPLUGGED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"if battery is not charging or discharging."},"defaultValue":"1"}]},{"name":"BatteryLevelEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"batteryLevel","kind":1024,"kindString":"Property","comment":{"shortText":"A number between `0` and `1`, inclusive, or `-1` if the battery level is unknown."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"BatteryStateEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"batteryState","kind":1024,"kindString":"Property","comment":{"shortText":"An enum value representing the battery state."},"type":{"type":"reference","name":"BatteryState"}}]}}},{"name":"PowerModeEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"lowPowerMode","kind":1024,"kindString":"Property","comment":{"shortText":"A boolean value, `true` if lowPowerMode is on, `false` if lowPowerMode is off"},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"PowerState","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"batteryLevel","kind":1024,"kindString":"Property","comment":{"shortText":"A number between `0` and `1`, inclusive, or `-1` if the battery level is unknown."},"type":{"type":"intrinsic","name":"number"}},{"name":"batteryState","kind":1024,"kindString":"Property","comment":{"shortText":"An enum value representing the battery state."},"type":{"type":"reference","name":"BatteryState"}},{"name":"lowPowerMode","kind":1024,"kindString":"Property","comment":{"shortText":"A boolean value, `true` if lowPowerMode is on, `false` if lowPowerMode is off"},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"addBatteryLevelListener","kind":64,"kindString":"Function","signatures":[{"name":"addBatteryLevelListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to the battery level change updates.","text":"On iOS devices, the event fires when the battery level drops one percent or more, but is only\\nfired once per minute at maximum.\\n\\nOn Android devices, the event fires only when significant changes happens, which is when the\\nbattery level drops below [`\\"android.intent.action.BATTERY_LOW\\"`](https://developer.android.com/reference/android/content/Intent#ACTION_BATTERY_LOW)\\nor rises above [`\\"android.intent.action.BATTERY_OKAY\\"`](https://developer.android.com/reference/android/content/Intent#ACTION_BATTERY_OKAY)\\nfrom a low battery level. See [here](https://developer.android.com/training/monitoring-device-state/battery-monitoring)\\nto read more from the Android docs.\\n\\nOn web, the event never fires.","returns":"A `Subscription` object on which you can call `remove()` to unsubscribe from the listener.s\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"A callback that is invoked when battery level changes. The callback is provided a\\nsingle argument that is an object with a `batteryLevel` key."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BatteryLevelEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"addBatteryStateListener","kind":64,"kindString":"Function","signatures":[{"name":"addBatteryStateListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to the battery state change updates to receive an object with a [`Battery.BatteryState`](#batterystate)\\nenum value for whether the device is any of the four states.","text":"On web, the event never fires.","returns":"A `Subscription` object on which you can call `remove()` to unsubscribe from the listener.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"A callback that is invoked when battery state changes. The callback is provided a\\nsingle argument that is an object with a `batteryState` key."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BatteryStateEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"addLowPowerModeListener","kind":64,"kindString":"Function","signatures":[{"name":"addLowPowerModeListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to Low Power Mode (iOS) or Power Saver Mode (Android) updates. The event fires whenever\\nthe power mode is toggled.","text":"On web, the event never fires.","returns":"A `Subscription` object on which you can call `remove()` to unsubscribe from the listener.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"A callback that is invoked when Low Power Mode (iOS) or Power Saver Mode (Android)\\nchanges. The callback is provided a single argument that is an object with a `lowPowerMode` key."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"PowerModeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getBatteryLevelAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBatteryLevelAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the battery level of the device as a number between `0` and `1`, inclusive. If the device\\ndoes not support retrieving the battery level, this method returns `-1`. On web, this method\\nalways returns `-1`.","returns":"A `Promise` that fulfils with a number between `0` and `1` representing the battery level,\\nor `-1` if the device does not provide it.","tags":[{"tag":"example","text":"\\n```ts\\nawait Battery.getBatteryLevelAsync();\\n// 0.759999\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getBatteryStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBatteryStateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Tells the battery\'s current state. On web, this always returns `BatteryState.UNKNOWN`.","returns":"Returns a `Promise` which fulfills with a [`Battery.BatteryState`](#batterystate) enum\\nvalue for whether the device is any of the four states.","tags":[{"tag":"example","text":"\\n```ts\\nawait Battery.getBatteryStateAsync();\\n// BatteryState.CHARGING\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BatteryState"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getPowerStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPowerStateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the power state of the device including the battery level, whether it is plugged in, and if\\nthe system is currently operating in Low Power Mode (iOS) or Power Saver Mode (Android). This\\nmethod re-throws any errors that occur when retrieving any of the power-state information.","returns":"Returns a `Promise` which fulfills with [`PowerState`](#powerstate) object.","tags":[{"tag":"example","text":"\\n```ts\\nawait Battery.getPowerStateAsync();\\n// {\\n//   batteryLevel: 0.759999,\\n//   batteryState: BatteryState.UNPLUGGED,\\n//   lowPowerMode: true,\\n// }\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PowerState"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Resolves with whether the battery API is available on the current device. The value of this\\nproperty is `true` on Android and physical iOS devices and `false` on iOS simulators. On web,\\nit depends on whether the browser supports the web battery API."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isBatteryOptimizationEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"isBatteryOptimizationEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks whether battery optimization is enabled for your application.\\nIf battery optimization is enabled for your app, background tasks might be affected\\nwhen your app goes into doze mode state. (only on Android 6.0 or later)","returns":"Returns a `Promise` which fulfills with a `boolean` value of either `true` or `false`,\\nindicating whether the battery optimization is enabled or disabled, respectively. (Android only)","tags":[{"tag":"example","text":"\\n```ts\\nawait Battery.isBatteryOptimizationEnabledAsync();\\n// true\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isLowPowerModeEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"isLowPowerModeEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current status of Low Power mode on iOS and Power Saver mode on Android. If a platform\\ndoesn\'t support Low Power mode reporting (like web, older Android devices), the reported low-power\\nstate is always `false`, even if the device is actually in low-power mode.","returns":"Returns a `Promise` which fulfills with a `boolean` value of either `true` or `false`,\\nindicating whether low power mode is enabled or disabled, respectively.","tags":[{"tag":"example","text":"\\nLow Power Mode (iOS) or Power Saver Mode (Android) are enabled.\\n```ts\\nawait Battery.isLowPowerModeEnabledAsync();\\n// true\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},"67vQ":function(e){e.exports=JSON.parse('{"name":"expo-firebase-core","kind":1,"kindString":"Project","originalName":"","children":[{"name":"FirebaseOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"apiKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Firebase API key."},"type":{"type":"intrinsic","name":"string"}},{"name":"appId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Unique identifier of the Firebase app."},"type":{"type":"intrinsic","name":"string"}},{"name":"authDomain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"databaseURL","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Firebase database URL."},"type":{"type":"intrinsic","name":"string"}},{"name":"measurementId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"messagingSenderId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"projectId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Unique identifier of the Firebase project."},"type":{"type":"intrinsic","name":"string"}},{"name":"storageBucket","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Google Cloud Storage bucket name."},"type":{"type":"intrinsic","name":"string"}},{"name":"trackingId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Tracking identifier for Google Analytics."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"DEFAULT_APP_NAME","kind":32,"kindString":"Variable","comment":{"shortText":"Name of the default Firebase app (e.g. `[DEFAULT]`).","text":"In Expo Go, a Firebase App is created for each project that is loaded, and a unique name for each\\nproject is returned.\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"void"}]},"defaultValue":"..."},{"name":"DEFAULT_APP_OPTIONS","kind":32,"kindString":"Variable","comment":{"shortText":"Firebase options with which the default app was initialized. If no Google services configuration\\nwas provided, `undefined` is returned.","text":"Depending on the platform, the options are read from the following files and `app.json` keys.\\n\\n| Platform | File                       | App.json key                 |\\n| -------- | -------------------------- | ---------------------------- |\\n| iOS      | `GoogleService-Info.plist` | `ios.googleServicesFile`     |\\n| Android  | `google-services.json`     | `android.googleServicesFile` |\\n| Web      | -                          | `web.config.firebase`        |\\n\\n# Example\\n\\n```js\\nconsole.log(FirebaseCore.DEFAULT_APP_OPTIONS);\\n{\\n  appId: \\"1:1082251606918:ios:a2800bc715889446e24a07\\",\\n  apiKey: \\"AIzaXXXXXXXX-xxxxxxxxxxxxxxxxxxx\\",\\n  clientId: \\"000000000000-0000000000000.apps.googleusercontent.com\\",\\n  trackingId: 12345567890,\\n  databaseURL: \\"https://myexpoapp777.firebaseio.com\\",\\n  storageBucket:  \\"myexpoapp777.appspot.com\\",\\n  projectId: \\"myexpoapp777\\",\\n  messagingSenderId:  123454321\\n}\\n```\\n"},"type":{"type":"union","types":[{"type":"reference","name":"FirebaseOptions"},{"type":"intrinsic","name":"void"}]},"defaultValue":"..."},{"name":"DEFAULT_WEB_APP_OPTIONS","kind":32,"kindString":"Variable","comment":{"shortText":"The default Firebase options as defined in `web.config.firebase` in `app.json`."},"type":{"type":"union","types":[{"type":"reference","name":"FirebaseOptions"},{"type":"intrinsic","name":"void"}]},"defaultValue":"..."}]}')},"6LYA":function(e){e.exports=JSON.parse('{"name":"expo-clipboard","kind":1,"originalName":"","children":[{"name":"addClipboardListener","kind":64,"kindString":"Function","signatures":[{"name":"addClipboardListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Adds a listener that will fire whenever the content of the user\'s clipboard changes. This method\\nis a no-op on Web.","tags":[{"tag":"example","text":"\\n```typescript\\nClipboard.addClipboardListener(({ contentTypes }: ClipboardEvent) => {\\n  if (contentTypes.includes(Clipboard.ContentType.PLAIN_TEXT)) {\\n    Clipboard.getStringAsync().then(content => {\\n      alert(\'Copy pasta! Here\\\\\'s the string that was copied: \' + content)\\n    });\\n  } else if (contentTypes.includes(Clipboard.ContentType.IMAGE)) {\\n    alert(\'Yay! Clipboard contains an image\');\\n  }\\n});\\n```\\n"}]},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"Callback to execute when listener is triggered. The callback is provided a\\nsingle argument that is an object containing information about clipboard contents.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"ClipboardEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"ClipboardEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"content","kind":1024,"kindString":"Property","comment":{"tags":[{"tag":"deprecated","text":"Returns empty string. Use [`getStringAsync()`](#getstringasyncoptions) instead to retrieve clipboard content.\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"contentTypes","kind":1024,"kindString":"Property","comment":{"shortText":"An array of content types that are available on the clipboard."},"type":{"type":"array","elementType":{"type":"reference","name":"ContentType"}}}]}}},{"name":"ClipboardImage","kind":16777216,"kindString":"Reference"},{"name":"ClipboardImage","kind":256,"kindString":"Interface","children":[{"name":"data","kind":1024,"kindString":"Property","comment":{"shortText":"A Base64-encoded string of the image data.\\nIts format is dependent on the `format` option.","text":"> **NOTE:** The string is already prepended with `data:image/png;base64,` or `data:image/jpeg;base64,` prefix.\\n\\nYou can use it directly as the source of an `Image` element.","tags":[{"tag":"example","text":"\\n```ts\\n<Image\\n  source={{ uri: clipboardImage.data }}\\n  style={{ width: 200, height: 200 }}\\n/>\\n```\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"size","kind":1024,"kindString":"Property","comment":{"shortText":"Dimensions (`width` and `height`) of the image pasted from clipboard."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}}]},{"name":"ContentType","kind":16777216,"kindString":"Reference"},{"name":"ContentType","kind":8,"kindString":"Enumeration","comment":{"shortText":"Type used to define what type of data is stored in the clipboard."},"children":[{"name":"HTML","kind":16,"kindString":"Enumeration member","defaultValue":"\\"html\\""},{"name":"IMAGE","kind":16,"kindString":"Enumeration member","defaultValue":"\\"image\\""},{"name":"PLAIN_TEXT","kind":16,"kindString":"Enumeration member","defaultValue":"\\"plain-text\\""},{"name":"URL","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"iOS\\n"}]},"defaultValue":"\\"url\\""}]},{"name":"getImageAsync","kind":64,"kindString":"Function","signatures":[{"name":"getImageAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the image from the user\'s clipboard and returns it in the specified format. Please note that calling\\nthis method on web will prompt the user to grant your app permission to \\"see text and images copied to the clipboard.\\"","returns":"If there was an image in the clipboard, the promise resolves to\\na [`ClipboardImage`](#clipboardimage) object containing the base64 string and metadata of the image.\\nOtherwise, it resolves to `null`.\\n","tags":[{"tag":"example","text":"\\n```tsx\\nconst img = await Clipboard.getImageAsync({ format: \'png\' });\\n// ...\\n<Image source={{ uri: img?.data }} style={{ width: 200, height: 200 }} />\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A `GetImageOptions` object to specify the desired format of the image."},"type":{"type":"reference","name":"GetImageOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"ClipboardImage"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"GetImageOptions","kind":16777216,"kindString":"Reference"},{"name":"GetImageOptions","kind":256,"kindString":"Interface","children":[{"name":"format","kind":1024,"kindString":"Property","comment":{"shortText":"The format of the clipboard image to be converted to."},"type":{"type":"union","types":[{"type":"literal","value":"png"},{"type":"literal","value":"jpeg"}]}},{"name":"jpegQuality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specify the quality of the returned image, between `0` and `1`. Defaults to `1` (highest quality).\\nApplicable only when `format` is set to `jpeg`, ignored otherwise.","tags":[{"tag":"default","text":"1\\n"}]},"type":{"type":"intrinsic","name":"number"}}]},{"name":"getStringAsync","kind":64,"kindString":"Function","signatures":[{"name":"getStringAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the content of the user\'s clipboard. Please note that calling this method on web will prompt\\nthe user to grant your app permission to \\"see text and images copied to the clipboard.\\"","returns":"A promise that resolves to the content of the clipboard.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"Options for the clipboard content to be retrieved."},"type":{"type":"reference","name":"GetStringOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"GetStringOptions","kind":16777216,"kindString":"Reference"},{"name":"GetStringOptions","kind":256,"kindString":"Interface","children":[{"name":"preferredFormat","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The target format of the clipboard string to be converted to, if possible.","tags":[{"tag":"default","text":"StringFormat.PLAIN_TEXT\\n"}]},"type":{"type":"reference","name":"StringFormat"}}]},{"name":"getUrlAsync","kind":64,"kindString":"Function","signatures":[{"name":"getUrlAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the URL from the user\'s clipboard.","returns":"A promise that fulfills to the URL in the clipboard.","tags":[{"tag":"platform","text":"iOS\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"hasImageAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasImageAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the clipboard has a image content.","text":"On web, this requires the user to grant your app permission to _\\"see text and images copied to the clipboard\\"_.\\n","returns":"A promise that fulfills to `true` if clipboard has image content, resolves to `false` otherwise.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"hasStringAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasStringAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the clipboard has text content. Returns true for both plain text and rich text (e.g. HTML).","text":"On web, this requires the user to grant your app permission to _\\"see text and images copied to the clipboard\\"_.\\n","returns":"A promise that fulfills to `true` if clipboard has text content, resolves to `false` otherwise.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"hasUrlAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasUrlAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the clipboard has a URL content.","returns":"A promise that fulfills to `true` if clipboard has URL content, resolves to `false` otherwise.","tags":[{"tag":"platform","text":"iOS\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"removeClipboardListener","kind":64,"kindString":"Function","signatures":[{"name":"removeClipboardListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes the listener added by addClipboardListener. This method is a no-op on Web.","tags":[{"tag":"example","text":"\\n```typescript\\nconst subscription = addClipboardListener(() => {\\n  alert(\'Copy pasta!\');\\n});\\nremoveClipboardListener(subscription);\\n```\\n"}]},"parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","comment":{"shortText":"The subscription to remove (created by addClipboardListener).\\n"},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setImageAsync","kind":64,"kindString":"Function","signatures":[{"name":"setImageAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets an image in the user\'s clipboard.","tags":[{"tag":"example","text":"\\n```tsx\\nconst result = await ImagePicker.launchImageLibraryAsync({\\n  mediaTypes: ImagePicker.MediaTypeOptions.Images,\\n  base64: true,\\n});\\nawait Clipboard.setImageAsync(result.base64);\\n```\\n"}]},"parameters":[{"name":"base64Image","kind":32768,"kindString":"Parameter","comment":{"shortText":"Image encoded as a base64 string, without MIME type.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setString","kind":64,"kindString":"Function","signatures":[{"name":"setString","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the content of the user\'s clipboard.","returns":"On web, this returns a boolean value indicating whether or not the string was saved to\\nthe user\'s clipboard. On iOS and Android, nothing is returned.\\n","tags":[{"tag":"deprecated","text":"Use [`setStringAsync()`](#setstringasynctext-options) instead.\\n"}]},"parameters":[{"name":"text","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setStringAsync","kind":64,"kindString":"Function","signatures":[{"name":"setStringAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the content of the user\'s clipboard.","returns":"On web, this returns a promise that fulfills to a boolean value indicating whether or not\\nthe string was saved to the user\'s clipboard. On iOS and Android, the promise always resolves to `true`.\\n"},"parameters":[{"name":"text","kind":32768,"kindString":"Parameter","comment":{"shortText":"The string to save to the clipboard."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"Options for the clipboard content to be set."},"type":{"type":"reference","name":"SetStringOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"SetStringOptions","kind":16777216,"kindString":"Reference"},{"name":"SetStringOptions","kind":256,"kindString":"Interface","children":[{"name":"inputFormat","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The input format of the provided string.\\nAdjusting this option can help other applications interpret copied string properly.","tags":[{"tag":"default","text":"StringFormat.PLAIN_TEXT\\n"}]},"type":{"type":"reference","name":"StringFormat"}}]},{"name":"setUrlAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUrlAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a URL in the user\'s clipboard.","tags":[{"tag":"platform","text":"iOS\\n"}]},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"The URL to save to the clipboard."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"StringFormat","kind":16777216,"kindString":"Reference"},{"name":"StringFormat","kind":8,"kindString":"Enumeration","comment":{"shortText":"Type used to determine string format stored in the clipboard."},"children":[{"name":"HTML","kind":16,"kindString":"Enumeration member","defaultValue":"\\"html\\""},{"name":"PLAIN_TEXT","kind":16,"kindString":"Enumeration member","defaultValue":"\\"plainText\\""}]},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}}]}')},"6LaW":function(e,w,n){"use strict";n.d(w,"a",function(){return h}),n.d(w,"b",function(){return f}),n.d(w,"d",function(){return S}),n.d(w,"c",function(){return b}),n.d(w,"e",function(){return P});var c=n("cpVT"),p=n("dhJC"),d=n("q1tI"),a=n.n(d),m=n("Z0rC"),r=n("uXm5"),s=n("ky+X"),i=n("AeFk"),o=["children"];function t(y,v){var u=Object.keys(y);if(Object.getOwnPropertySymbols){var C=Object.getOwnPropertySymbols(y);v&&(C=C.filter(function(R){return Object.getOwnPropertyDescriptor(y,R).enumerable})),u.push.apply(u,C)}return u}function l(y){for(var v=1;v<arguments.length;v++){var u=arguments[v]!=null?arguments[v]:{};v%2?t(Object(u),!0).forEach(function(C){Object(c.a)(y,C,u[C])}):Object.getOwnPropertyDescriptors?Object.defineProperties(y,Object.getOwnPropertyDescriptors(u)):t(Object(u)).forEach(function(C){Object.defineProperty(y,C,Object.getOwnPropertyDescriptor(u,C))})}return y}var k=function(v,u){var C=arguments.length>2&&arguments[2]!==void 0?arguments[2]:r.c.Text;return function(R){var F=R.children,j=Object(p.a)(R,o);return Object(i.c)(m.a,{nestingLevel:u,additionalProps:l({sidebarType:C},j)},Object(i.c)(v,null,F))}},g=k(s.a,1),h=k(s.b,2),f=k(s.c,3),S=k(s.d,4),b=k(s.c,3,r.c.InlineCode),P=k(s.d,4,r.c.InlineCode)},"6x+I":function(e,w,n){"use strict";const c=n("q1tI"),p=n("Esvb"),d=n("ZEx/"),a=n("v0oL"),m=n("ecSx"),r=n("KXJf"),s=n("7+hk"),i=n("EfL/"),o=n("REpm"),t=n("Avva").hastChildrenToReact;e.exports=h;const l={}.hasOwnProperty,k="https://github.com/remarkjs/react-markdown/blob/main/changelog.md",g={renderers:{to:"components",id:"change-renderers-to-components"},astPlugins:{id:"remove-buggy-html-in-markdown-parser"},allowDangerousHtml:{id:"remove-buggy-html-in-markdown-parser"},escapeHtml:{id:"remove-buggy-html-in-markdown-parser"},source:{to:"children",id:"change-source-to-children"},allowNode:{to:"allowElement",id:"replace-allownode-allowedtypes-and-disallowedtypes"},allowedTypes:{to:"allowedElements",id:"replace-allownode-allowedtypes-and-disallowedtypes"},disallowedTypes:{to:"disallowedElements",id:"replace-allownode-allowedtypes-and-disallowedtypes"},includeNodeIndex:{to:"includeElementIndex",id:"change-includenodeindex-to-includeelementindex"}};function h(f){for(const v in g)if(l.call(g,v)&&l.call(f,v)){const u=g[v];console.warn(`[react-markdown] Warning: please ${u.to?`use \`${u.to}\` instead of`:"remove"} \`${v}\` (see <${k}#${u.id}> for more info)`),delete g[v]}const S=d().use(a).use(f.remarkPlugins||f.plugins||[]).use(m,{allowDangerousHtml:!0}).use(f.rehypePlugins||[]).use(i,f);let b;typeof f.children=="string"?b=p(f.children):(f.children!==void 0&&f.children!==null&&console.warn(`[react-markdown] Warning: please pass a string as \`children\` (not: \`${f.children}\`)`),b=p());const P=S.runSync(S.parse(b),b);if(P.type!=="root")throw new TypeError("Expected a `root` node");let y=c.createElement(c.Fragment,{},t({options:f,schema:s,listDepth:0},P));return f.className&&(y=c.createElement("div",{className:f.className},y)),y}h.defaultProps={transformLinkUri:o},h.propTypes={children:r.string,className:r.string,allowElement:r.func,allowedElements:r.arrayOf(r.string),disallowedElements:r.arrayOf(r.string),unwrapDisallowed:r.bool,remarkPlugins:r.arrayOf(r.oneOfType([r.object,r.func,r.arrayOf(r.oneOfType([r.object,r.func]))])),rehypePlugins:r.arrayOf(r.oneOfType([r.object,r.func,r.arrayOf(r.oneOfType([r.object,r.func]))])),sourcePos:r.bool,rawSourcePos:r.bool,skipHtml:r.bool,includeElementIndex:r.bool,transformLinkUri:r.oneOfType([r.func,r.bool]),linkTarget:r.oneOfType([r.func,r.string]),transformImageUri:r.func,components:r.object},h.uriTransformer=o},"7J+x":function(e,w){e.exports=n;function n(c){var p,d;return c._compiled||(p=c.before?"(?:"+c.before+")":"",d=c.after?"(?:"+c.after+")":"",c.atBreak&&(p="[\\r\\n][\\t ]*"+p),c._compiled=new RegExp((p?"("+p+")":"")+(/[|\\{}()[\]^$+*?.-]/.test(c.character)?"\\":"")+c.character+(d||""),"g")),c._compiled}},"7Up6":function(e){e.exports=JSON.parse('{"name":"expo-app-loading","kind":1,"kindString":"Project","originalName":"","children":[{"name":"default","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new default","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"reference","name":"AppLoadingProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}]}}],"type":{"type":"reference","name":"AppLoading"},"inheritedFrom":{"type":"reference","name":"React.Component<AppLoadingProps>.constructor"}},{"name":"new default","kind":16384,"kindString":"Constructor signature","comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AppLoadingProps"}},{"name":"context","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"AppLoading"},"inheritedFrom":{"type":"reference","name":"React.Component<AppLoadingProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<AppLoadingProps>.constructor"}},{"name":"_isMounted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoHideSplash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to hide the native splash screen as soon as you unmount the `AppLoading` component.\\nAuto-hiding is enabled by default. See [SplashScreen](./splash-screen) module for an example."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"onError","kind":2048,"kindString":"Method","signatures":[{"name":"onError","kind":4096,"kindString":"Call signature","comment":{"shortText":"If `startAsync` throws an error, it is caught and passed into the function provided to `onError`.","tags":[{"tag":"deprecated","text":"\\n"}]},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Error"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onFinish","kind":2048,"kindString":"Method","signatures":[{"name":"onFinish","kind":4096,"kindString":"Call signature","comment":{"shortText":"__(Required if you provide startAsync).__ Called when `startAsync` resolves or rejects.\\nThis should be used to set state and unmount the `AppLoading` component.","tags":[{"tag":"deprecated","text":"\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"name":"startAsync","kind":2048,"kindString":"Method","signatures":[{"name":"startAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"A function that returns a `Promise`, and the `Promise` should fulfil when the app is done\\nloading required data and assets. You can do this process manually if you prefer.\\nThis is mainly for backwards compatibility and it is not recommended.","text":"When provided, requires providing `onError` prop as well.","tags":[{"tag":"deprecated","text":"\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"ReactNode"}}]}}],"name":"Readonly"}]},{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoHideSplash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to hide the native splash screen as soon as you unmount the `AppLoading` component.\\nAuto-hiding is enabled by default. See [SplashScreen](./splash-screen) module for an example."},"type":{"type":"intrinsic","name":"boolean"}}]}}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"ReactNode"}}]}}],"name":"Readonly"}]}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}}],"name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"},"overwrites":{"type":"reference","name":"React.Component.componentDidMount"}}],"overwrites":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"},"overwrites":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"overwrites":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"render","kind":2048,"kindString":"Method","signatures":[{"name":"render","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Component"}]},{"name":"AppLoadingProps","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The following props are recommended, but optional. If you do not provide any props, you are\\nresponsible for coordinating loading assets, handling errors, and updating state to unmount\\nthe `AppLoading` component."},"type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoHideSplash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to hide the native splash screen as soon as you unmount the `AppLoading` component.\\nAuto-hiding is enabled by default. See [SplashScreen](./splash-screen) module for an example."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"onError","kind":2048,"kindString":"Method","signatures":[{"name":"onError","kind":4096,"kindString":"Call signature","comment":{"shortText":"If `startAsync` throws an error, it is caught and passed into the function provided to `onError`.","tags":[{"tag":"deprecated","text":"\\n"}]},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Error"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onFinish","kind":2048,"kindString":"Method","signatures":[{"name":"onFinish","kind":4096,"kindString":"Call signature","comment":{"shortText":"__(Required if you provide startAsync).__ Called when `startAsync` resolves or rejects.\\nThis should be used to set state and unmount the `AppLoading` component.","tags":[{"tag":"deprecated","text":"\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"name":"startAsync","kind":2048,"kindString":"Method","signatures":[{"name":"startAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"A function that returns a `Promise`, and the `Promise` should fulfil when the app is done\\nloading required data and assets. You can do this process manually if you prefer.\\nThis is mainly for backwards compatibility and it is not recommended.","text":"When provided, requires providing `onError` prop as well.","tags":[{"tag":"deprecated","text":"\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoHideSplash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to hide the native splash screen as soon as you unmount the `AppLoading` component.\\nAuto-hiding is enabled by default. See [SplashScreen](./splash-screen) module for an example."},"type":{"type":"intrinsic","name":"boolean"}}]}}]}}]}')},"7enW":function(e,w,n){"use strict";var c=n("OaLn"),p={name:"labelStartImage",tokenize:d,resolveAll:c.resolveAll};function d(a,m,r){var s=this;return i;function i(l){return a.enter("labelImage"),a.enter("labelImageMarker"),a.consume(l),a.exit("labelImageMarker"),o}function o(l){return l===91?(a.enter("labelMarker"),a.consume(l),a.exit("labelMarker"),a.exit("labelImage"),t):r(l)}function t(l){return l===94&&"_hiddenFootnoteSupport"in s.parser.constructs?r(l):m(l)}}e.exports=p},"7npz":function(e){e.exports=JSON.parse('{"name":"expo-speech","kind":1,"kindString":"Project","originalName":"","children":[{"name":"VoiceQuality","kind":8,"kindString":"Enumeration","comment":{"shortText":"Enum representing the voice quality."},"children":[{"name":"Default","kind":16,"kindString":"Enumeration member","defaultValue":"\\"Default\\""},{"name":"Enhanced","kind":16,"kindString":"Enumeration member","defaultValue":"\\"Enhanced\\""}]},{"name":"SpeechEventCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"this","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SpeechSynthesisUtterance"}},{"name":"ev","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SpeechSynthesisEvent"}}],"type":{"type":"intrinsic","name":"any"}}]}}},{"name":"SpeechOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"_voiceIndex","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"language","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The code of a language that should be used to read the `text`, refer to IETF BCP 47 to see\\nvalid codes."},"type":{"type":"intrinsic","name":"string"}},{"name":"onBoundary","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SpeechEventCallback"},{"type":"literal","value":null}]}},{"name":"onMark","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SpeechEventCallback"},{"type":"literal","value":null}]}},{"name":"onPause","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SpeechEventCallback"},{"type":"literal","value":null}]}},{"name":"onResume","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SpeechEventCallback"},{"type":"literal","value":null}]}},{"name":"pitch","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Pitch of the voice to speak `text`. `1.0` is the normal pitch."},"type":{"type":"intrinsic","name":"number"}},{"name":"rate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Rate of the voice to speak `text`. `1.0` is the normal rate."},"type":{"type":"intrinsic","name":"number"}},{"name":"voice","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Voice identifier."},"type":{"type":"intrinsic","name":"string"}},{"name":"volume","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"onDone","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onDone","kind":4096,"kindString":"Call signature","comment":{"shortText":"A callback that is invoked when speaking finishes."},"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","name":"SpeechEventCallback"}]}}]},{"name":"onError","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onError","kind":4096,"kindString":"Call signature","comment":{"shortText":"A callback that is invoked when an error occurred while speaking.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"Error"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","name":"SpeechEventCallback"}]}}]},{"name":"onStart","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onStart","kind":4096,"kindString":"Call signature","comment":{"shortText":"A callback that is invoked when speaking starts."},"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","name":"SpeechEventCallback"}]}}]},{"name":"onStopped","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onStopped","kind":4096,"kindString":"Call signature","comment":{"shortText":"A callback that is invoked when speaking is stopped by calling `Speech.stop()`."},"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","name":"SpeechEventCallback"}]}}]}]}}},{"name":"Voice","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Object describing the available voices on the device."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"identifier","kind":1024,"kindString":"Property","comment":{"shortText":"Voice unique identifier."},"type":{"type":"intrinsic","name":"string"}},{"name":"language","kind":1024,"kindString":"Property","comment":{"shortText":"Voice language."},"type":{"type":"intrinsic","name":"string"}},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"Voice name."},"type":{"type":"intrinsic","name":"string"}},{"name":"quality","kind":1024,"kindString":"Property","comment":{"shortText":"Voice quality."},"type":{"type":"reference","name":"VoiceQuality"}}]}}},{"name":"WebVoice","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"Voice"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isDefault","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"localService","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"name","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"voiceURI","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"maxSpeechInputLength","kind":32,"kindString":"Variable","comment":{"shortText":"Maximum possible text length acceptable by `Speech.speak()` method. It is platform-dependent.\\nOn iOS, this returns `Number.MAX_VALUE`."},"type":{"type":"intrinsic","name":"number"},"defaultValue":"..."},{"name":"getAvailableVoicesAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAvailableVoicesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns list of all available voices.","returns":"List of `Voice` objects.\\n"},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Voice"}}],"name":"Promise"}}]},{"name":"isSpeakingAsync","kind":64,"kindString":"Function","signatures":[{"name":"isSpeakingAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine whether the Text-to-speech utility is currently speaking. Will return `true` if speaker\\nis paused.","returns":"Returns a Promise that fulfils with a boolean, `true` if speaking, `false` if not.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"pause","kind":64,"kindString":"Function","signatures":[{"name":"pause","kind":4096,"kindString":"Call signature","comment":{"shortText":"Pauses current speech. This method is not available on Android."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"resume","kind":64,"kindString":"Function","signatures":[{"name":"resume","kind":4096,"kindString":"Call signature","comment":{"shortText":"Resumes speaking previously paused speech or does nothing if there\'s none. This method is not\\navailable on Android."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"speak","kind":64,"kindString":"Function","signatures":[{"name":"speak","kind":4096,"kindString":"Call signature","comment":{"shortText":"Speak out loud the text given options. Calling this when another text is being spoken adds\\nan utterance to queue."},"parameters":[{"name":"text","kind":32768,"kindString":"Parameter","comment":{"shortText":"The text to be spoken. Cannot be longer than [`Speech.maxSpeechInputLength`](#speechmaxspeechinputlength)."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A `SpeechOptions` object.\\n"},"type":{"type":"reference","name":"SpeechOptions"},"defaultValue":"{}"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"stop","kind":64,"kindString":"Function","signatures":[{"name":"stop","kind":4096,"kindString":"Call signature","comment":{"shortText":"Interrupts current speech and deletes all in queue."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},"8Adp":function(e){e.exports=JSON.parse('{"name":"expo-firebase-core","kind":0,"kindString":"Project","originalName":"","children":[{"name":"FirebaseOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"apiKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Firebase API key."},"type":{"type":"intrinsic","name":"string"}},{"name":"appId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Unique identifier of the Firebase app."},"type":{"type":"intrinsic","name":"string"}},{"name":"authDomain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"databaseURL","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Firebase database URL."},"type":{"type":"intrinsic","name":"string"}},{"name":"measurementId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"messagingSenderId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"projectId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Unique identifier of the Firebase project."},"type":{"type":"intrinsic","name":"string"}},{"name":"storageBucket","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Google Cloud Storage bucket name."},"type":{"type":"intrinsic","name":"string"}},{"name":"trackingId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Tracking identifier for Google Analytics."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"DEFAULT_APP_NAME","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Name of the default Firebase app (e.g. `[DEFAULT]`).","text":"In Expo Go, a Firebase App is created for each project that is loaded, and a unique name for each\\nproject is returned.\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"void"}]},"defaultValue":"..."},{"name":"DEFAULT_APP_OPTIONS","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Firebase options with which the default app was initialized. If no Google services configuration\\nwas provided, `undefined` is returned.","text":"Depending on the platform, the options are read from the following files and `app.json` keys.\\n\\n| Platform | File                       | App.json key                 |\\n| -------- | -------------------------- | ---------------------------- |\\n| iOS      | `GoogleService-Info.plist` | `ios.googleServicesFile`     |\\n| Android  | `google-services.json`     | `android.googleServicesFile` |\\n| Web      | -                          | `web.config.firebase`        |\\n\\n# Example\\n\\n```js\\nconsole.log(FirebaseCore.DEFAULT_APP_OPTIONS);\\n{\\n  appId: \\"1:1082251606918:ios:a2800bc715889446e24a07\\",\\n  apiKey: \\"AIzaXXXXXXXX-xxxxxxxxxxxxxxxxxxx\\",\\n  clientId: \\"000000000000-0000000000000.apps.googleusercontent.com\\",\\n  trackingId: 12345567890,\\n  databaseURL: \\"https://myexpoapp777.firebaseio.com\\",\\n  storageBucket:  \\"myexpoapp777.appspot.com\\",\\n  projectId: \\"myexpoapp777\\",\\n  messagingSenderId:  123454321\\n}\\n```\\n"},"type":{"type":"union","types":[{"type":"reference","name":"FirebaseOptions"},{"type":"intrinsic","name":"void"}]},"defaultValue":"..."},{"name":"DEFAULT_WEB_APP_OPTIONS","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The default Firebase options as defined in `web.config.firebase` in `app.json`."},"type":{"type":"union","types":[{"type":"reference","name":"FirebaseOptions"},{"type":"intrinsic","name":"void"}]},"defaultValue":"..."}]}')},"8Ox7":function(e){e.exports=JSON.parse('{"name":"expo-barcode-scanner","kind":1,"kindString":"Project","originalName":"","children":[{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"BarCodeScanner","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new BarCodeScanner","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"reference","name":"BarCodeScannerProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}]}}],"type":{"type":"reference","name":"BarCodeScanner"},"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}},{"name":"new BarCodeScanner","kind":16384,"kindString":"Constructor signature","comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BarCodeScannerProps"}},{"name":"context","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"BarCodeScanner"},"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"lastEvents","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"defaultValue":"{}"},{"name":"lastEventsTimes","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"defaultValue":"{}"},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"ReactNode"}}]}}],"name":"Readonly"}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}}],"name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"Constants","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"BarCodeType","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}},{"name":"Type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}}]}},"defaultValue":"..."},{"name":"ConversionTables","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"},"defaultValue":"Type"}]}},"defaultValue":"..."},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"defaultProps","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"barCodeTypes","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}},"defaultValue":"..."},{"name":"type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"},"defaultValue":"Type.back"}]}},"defaultValue":"..."},{"name":"usePermissions","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a new permission hook with the permission methods built-in.\\nThis can be used to quickly create specific permission hooks in every module.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = BarCodeScanner.usePermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}},"defaultValue":"..."},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"convertNativeProps","kind":2048,"kindString":"Method","signatures":[{"name":"convertNativeProps","kind":4096,"kindString":"Call signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BarCodeScannerProps"}}],"type":{"type":"reference","name":"BarCodeScannerProps"}}]},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"onObjectDetected","kind":2048,"kindString":"Method","signatures":[{"name":"onObjectDetected","kind":4096,"kindString":"Call signature","parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"BarCodeScannedCallback"}}],"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"__namedParameters","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BarCodeEventCallbackArguments"}}],"type":{"type":"intrinsic","name":"void"}}]}}}]},{"name":"render","kind":2048,"kindString":"Method","signatures":[{"name":"render","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}},{"name":"getPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing the camera.","returns":"Return a promise that fulfills to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing the camera.","text":"On iOS this will require apps to specify the `NSCameraUsageDescription` entry in the `Info.plist`.","returns":"Return a promise that fulfills to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"scanFromURLAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"scanFromURLAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Scan bar codes from the image given by the URL.","returns":"A possibly empty array of objects of the `BarCodeScannerResult` shape, where the type\\nrefers to the bar code type that was scanned and the data is the information encoded in the bar\\ncode.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"URL to get the image from."},"type":{"type":"intrinsic","name":"string"}},{"name":"barCodeTypes","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of bar code types. Defaults to all supported bar code types on\\nthe platform.\\n> __Note:__ Only QR codes are supported on iOS."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"BarCodeScannerResult"}}],"name":"Promise"}}]}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Component"}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"BarCodeBounds","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"origin","kind":1024,"kindString":"Property","comment":{"shortText":"The origin point of the bounding box."},"type":{"type":"reference","name":"BarCodePoint"}},{"name":"size","kind":1024,"kindString":"Property","comment":{"shortText":"The size of the bounding box."},"type":{"type":"reference","name":"BarCodeSize"}}]}}},{"name":"BarCodeEvent","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"BarCodeScannerResult"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"target","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}]}}]}},{"name":"BarCodeEventCallbackArguments","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"BarCodeEvent"}}]}}},{"name":"BarCodePoint","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Those coordinates are represented in the coordinate space of the barcode source (e.g. when you\\nare using the barcode scanner view, these values are adjusted to the dimensions of the view)."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"x","kind":1024,"kindString":"Property","comment":{"shortText":"The `x` coordinate value."},"type":{"type":"intrinsic","name":"number"}},{"name":"y","kind":1024,"kindString":"Property","comment":{"shortText":"The `y` coordinate value."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"BarCodeScannedCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"params","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BarCodeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"BarCodeScannerProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"barCodeTypes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of bar code types. Usage: `BarCodeScanner.Constants.BarCodeType.<codeType>` where\\n`codeType` is one of these [listed above](#supported-formats). Defaults to all supported bar\\ncode types. It is recommended to provide only the bar code formats you expect to scan to\\nminimize battery usage.","text":"For example: `barCodeTypes={[BarCodeScanner.Constants.BarCodeType.qr]}`.\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"onBarCodeScanned","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A callback that is invoked when a bar code has been successfully scanned. The callback is\\nprovided with an [BarCodeScannerResult](#barcodescannerresult).\\n> __Note:__ Passing `undefined` to the `onBarCodeScanned` prop will result in no scanning. This\\n> can be used to effectively \\"pause\\" the scanner so that it doesn\'t continually scan even after\\n> data has been retrieved."},"type":{"type":"reference","name":"BarCodeScannedCallback"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Camera facing. Use one of `BarCodeScanner.Constants.Type`. Use either `Type.front` or `Type.back`.\\nSame as `Camera.Constants.Type`.","tags":[{"tag":"default","text":"Type.back\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":"front"},{"type":"literal","value":"back"},{"type":"intrinsic","name":"number"}]}}]}}]}},{"name":"BarCodeScannerResult","kind":4194304,"kindString":"Type alias","comment":{"shortText":"> __Note:__ `bounds` and `cornerPoints` are not always available. On iOS, for `code39` and `pdf417`\\n> you don\'t get those values. Moreover, on iOS, those values don\'t have to bounds the whole barcode.\\n> For some types, they will represent the area used by the scanner."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"bounds","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The [BarCodeBounds](#barcodebounds) object."},"type":{"type":"reference","name":"BarCodeBounds"}},{"name":"cornerPoints","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Corner points of the bounding box."},"type":{"type":"array","elementType":{"type":"reference","name":"BarCodePoint"}}},{"name":"data","kind":1024,"kindString":"Property","comment":{"shortText":"The information encoded in the bar code."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"The barcode type."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"BarCodeSize","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"The height value."},"type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"The width value."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"Constants","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"BarCodeType","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}},{"name":"Type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}}]}}},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing the camera.","returns":"Return a promise that fulfills to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing the camera.","text":"On iOS this will require apps to specify the `NSCameraUsageDescription` entry in the `Info.plist`.","returns":"Return a promise that fulfills to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"scanFromURLAsync","kind":64,"kindString":"Function","signatures":[{"name":"scanFromURLAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Scan bar codes from the image given by the URL.","returns":"A possibly empty array of objects of the `BarCodeScannerResult` shape, where the type\\nrefers to the bar code type that was scanned and the data is the information encoded in the bar\\ncode.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"URL to get the image from."},"type":{"type":"intrinsic","name":"string"}},{"name":"barCodeTypes","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of bar code types. Defaults to all supported bar code types on\\nthe platform.\\n> __Note:__ Only QR codes are supported on iOS."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"BarCodeScannerResult"}}],"name":"Promise"}}]},{"name":"usePermissions","kind":64,"kindString":"Function","signatures":[{"name":"usePermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a new permission hook with the permission methods built-in.\\nThis can be used to quickly create specific permission hooks in every module."},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}]}')},"8j0n":function(e){e.exports=JSON.parse('{"name":"expo-localization","kind":1,"kindString":"Project","originalName":"","children":[{"name":"Localization","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"currency","kind":1024,"kindString":"Property","comment":{"shortText":"Three-character ISO 4217 currency code. Returns `null` on web.","tags":[{"tag":"example","text":"`USD`, `EUR`, `CNY`, null\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"decimalSeparator","kind":1024,"kindString":"Property","comment":{"shortText":"Decimal separator used for formatting numbers.","tags":[{"tag":"example","text":"`,`, \'.\'\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"digitGroupingSeparator","kind":1024,"kindString":"Property","comment":{"shortText":"Digit grouping separator used when formatting numbers larger than 1000.","tags":[{"tag":"example","text":"`.`, \'\', \',\'\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"isMetric","kind":1024,"kindString":"Property","comment":{"shortText":"Boolean value that indicates whether the system uses the metric system.\\nOn Android and web, this is inferred from the current region."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isRTL","kind":1024,"kindString":"Property","comment":{"shortText":"Returns if the system\'s language is written from Right-to-Left.\\nThis can be used to build features like [bidirectional icons](https://material.io/design/usability/bidirectionality.html).","text":"Returns `false` in SSR environments.\\n"},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isoCurrencyCodes","kind":1024,"kindString":"Property","comment":{"shortText":"List of all the supported language ISO codes."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"locale","kind":1024,"kindString":"Property","comment":{"shortText":"An [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag),\\nconsisting of a two-character language code and optional script, region and variant codes.","tags":[{"tag":"example","text":"`en`, `en-US`, `zh-Hans`, `zh-Hans-CN`, `en-emodeng`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"locales","kind":1024,"kindString":"Property","comment":{"shortText":"List of all the languages provided by the user settings.\\nThese are returned in the order the user defines in their device settings.","tags":[{"tag":"example","text":"[`en`, `en-US`, `zh-Hans`, `zh-Hans-CN`, `en-emodeng`]\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"region","kind":1024,"kindString":"Property","comment":{"shortText":"The region code for your device that comes from the Region setting under Language & Region on iOS.\\nThis value is always available on iOS, but might return `null` on Android or web.","tags":[{"tag":"example","text":"`US`, `NZ`, null\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"timezone","kind":1024,"kindString":"Property","comment":{"shortText":"The current timezone in display format.\\nOn Web timezone is calculated with Intl.DateTimeFormat().resolvedOptions().timeZone. For a better estimation you could use the moment-timezone package but it will add significant bloat to your website\'s bundle size.","tags":[{"tag":"example","text":"`America/Los_Angeles`\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"currency","kind":32,"kindString":"Variable","comment":{"shortText":"Three-character ISO 4217 currency code. Returns `null` on web.","tags":[{"tag":"example","text":"`\'USD\'`, `\'EUR\'`, `\'CNY\'`, `null`\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"ExpoLocalization.currency"},{"name":"decimalSeparator","kind":32,"kindString":"Variable","comment":{"shortText":"Decimal separator used for formatting numbers.","tags":[{"tag":"example","text":"`\',\'`, `\'.\'`\\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoLocalization.decimalSeparator"},{"name":"digitGroupingSeparator","kind":32,"kindString":"Variable","comment":{"shortText":"Digit grouping separator used when formatting numbers larger than 1000.","tags":[{"tag":"example","text":"`\'.\'`, `\'\'`, `\',\'`\\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoLocalization.digitGroupingSeparator"},{"name":"isMetric","kind":32,"kindString":"Variable","comment":{"shortText":"Boolean value that indicates whether the system uses the metric system.\\nOn Android and web, this is inferred from the current region."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"ExpoLocalization.isMetric"},{"name":"isRTL","kind":32,"kindString":"Variable","comment":{"shortText":"Returns if the system\'s language is written from Right-to-Left.\\nThis can be used to build features like [bidirectional icons](https://material.io/design/usability/bidirectionality.html).","text":"Returns `false` in Server Side Rendering (SSR) environments.\\n"},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"ExpoLocalization.isRTL"},{"name":"isoCurrencyCodes","kind":32,"kindString":"Variable","comment":{"shortText":"A list of all the supported language ISO codes."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"ExpoLocalization.isoCurrencyCodes"},{"name":"locale","kind":32,"kindString":"Variable","comment":{"shortText":"An [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag),\\nconsisting of a two-character language code and optional script, region and variant codes.","tags":[{"tag":"example","text":"`\'en\'`, `\'en-US\'`, `\'zh-Hans\'`, `\'zh-Hans-CN\'`, `\'en-emodeng\'`\\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoLocalization.locale"},{"name":"locales","kind":32,"kindString":"Variable","comment":{"shortText":"List of all the native languages provided by the user settings.\\nThese are returned in the order the user defines in their device settings."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"ExpoLocalization.locales"},{"name":"region","kind":32,"kindString":"Variable","comment":{"shortText":"The region code for your device that comes from the Region setting under Language & Region on iOS.\\nThis value is always available on iOS, but might return `null` on Android or web.","tags":[{"tag":"example","text":"`\'US\'`, `\'NZ\'`, `null`\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"ExpoLocalization.region"},{"name":"timezone","kind":32,"kindString":"Variable","comment":{"shortText":"The current time zone in display format.\\nOn Web time zone is calculated with Intl.DateTimeFormat().resolvedOptions().timeZone. For a\\nbetter estimation you could use the moment-timezone package but it will add significant bloat to\\nyour website\'s bundle size.","tags":[{"tag":"example","text":"`\'America/Los_Angeles\'`\\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoLocalization.timezone"},{"name":"getLocalizationAsync","kind":64,"kindString":"Function","signatures":[{"name":"getLocalizationAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the latest native values from the device. Locale can be changed on some Android devices\\nwithout resetting the app.\\n> On iOS, changing the locale will cause the device to reset meaning the constants will always be\\ncorrect.","tags":[{"tag":"example","text":"\\n```ts\\n// When the app returns from the background on Android...\\n\\nconst { locale } = await Localization.getLocalizationAsync();\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Localization"}],"name":"Promise"}}]}]}')},"8lMe":function(e,w,n){"use strict";var c=n("rm/B"),p=c(/[#-'*+\--9=?A-Z^-~]/);e.exports=p},"9/+P":function(e){e.exports=JSON.parse('{"name":"expo-firebase-analytics","kind":1,"kindString":"Project","originalName":"","children":[{"name":"FirebaseAnalyticsJS","kind":128,"kindString":"Class","comment":{"shortText":"A pure JavaScript Google Firebase Analytics implementation that uses\\nthe HTTPS Measurement API 2 to send events to Google Analytics.","text":"This class provides an alternative for the Firebase Analytics module\\nshipped with the Firebase JS SDK. That library uses the gtag.js dependency\\nand requires certain browser features. This prevents the use\\nanalytics on other platforms, such as Node-js and react-native.\\n\\nFirebaseAnalyticsJS provides a bare-bone implementation of the new\\nHTTPS Measurement API 2 protocol (which is undocumented), with an API\\nthat follows the Firebase Analytics JS SDK.\\n"},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new FirebaseAnalyticsJS","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"config","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"FirebaseAnalyticsJSConfig"}},{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"FirebaseAnalyticsJSOptions"}}],"type":{"type":"reference","name":"FirebaseAnalyticsJS"}}]},{"name":"config","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"type":{"type":"reference","name":"FirebaseAnalyticsJSConfig"}},{"name":"url","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"type":{"type":"intrinsic","name":"string"}},{"name":"clearEvents","kind":2048,"kindString":"Method","signatures":[{"name":"clearEvents","kind":4096,"kindString":"Call signature","comment":{"shortText":"Clears any queued events and cancels the flush timer."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"logEvent","kind":2048,"kindString":"Method","signatures":[{"name":"logEvent","kind":4096,"kindString":"Call signature","comment":{"shortText":"https://firebase.google.com/docs/reference/js/firebase.analytics.Analytics#log-event"},"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"eventParams","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"resetAnalyticsData","kind":2048,"kindString":"Method","signatures":[{"name":"resetAnalyticsData","kind":4096,"kindString":"Call signature","comment":{"shortText":"Clears all analytics data for this instance."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setAnalyticsCollectionEnabled","kind":2048,"kindString":"Method","signatures":[{"name":"setAnalyticsCollectionEnabled","kind":4096,"kindString":"Call signature","comment":{"shortText":"https://firebase.google.com/docs/reference/js/firebase.analytics.Analytics#set-analytics-collection-enabled"},"parameters":[{"name":"isEnabled","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setClientId","kind":2048,"kindString":"Method","signatures":[{"name":"setClientId","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a new value for the client ID."},"parameters":[{"name":"clientId","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setDebugModeEnabled","kind":2048,"kindString":"Method","signatures":[{"name":"setDebugModeEnabled","kind":4096,"kindString":"Call signature","comment":{"shortText":"Enables or disabled debug mode."},"parameters":[{"name":"isEnabled","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setSessionTimeoutDuration","kind":2048,"kindString":"Method","signatures":[{"name":"setSessionTimeoutDuration","kind":4096,"kindString":"Call signature","comment":{"shortText":"Not supported, this method is a no-op"},"parameters":[{"name":"_sessionTimeoutInterval","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setUserId","kind":2048,"kindString":"Method","signatures":[{"name":"setUserId","kind":4096,"kindString":"Call signature","comment":{"shortText":"https://firebase.google.com/docs/reference/js/firebase.analytics.Analytics#set-user-id"},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setUserProperties","kind":2048,"kindString":"Method","signatures":[{"name":"setUserProperties","kind":4096,"kindString":"Call signature","comment":{"shortText":"https://firebase.google.com/docs/reference/js/firebase.analytics.Analytics#set-user-properties"},"parameters":[{"name":"userProperties","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"parseEvent","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"parseEvent","kind":4096,"kindString":"Call signature","comment":{"shortText":"Parses an event (as passed to logEvent) and throws an error when the\\nevent-name or parameters are invalid.","text":"Upon success, returns the event in encoded format, ready to be send\\nthrough the Google Measurement API v2.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"FirebaseAnalyticsJSOptions"}},{"name":"eventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"eventParams","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}}],"type":{"type":"reference","name":"FirebaseAnalyticsJSCodedEvent"}}]},{"name":"parseUserProperty","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"parseUserProperty","kind":4096,"kindString":"Call signature","comment":{"shortText":"Parses user-properties (as passed to setUserProperties) and throws an error when\\none of the user properties is invalid.","text":"Upon success, returns the user-properties in encoded format, ready to be send\\nthrough the Google Measurement API v2.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"FirebaseAnalyticsJSOptions"}},{"name":"userPropertyName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"userPropertyValue","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"string"}}]}]},{"name":"logEvent","kind":64,"kindString":"Function","signatures":[{"name":"logEvent","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs an app event. The event can have up to 25 parameters. Events with the same name must have\\nthe same parameters. Up to 500 event names are supported. Using predefined events and/or\\nparameters is recommended for optimal reporting. See [the Google Analytics event reference](https://developers.google.com/gtagjs/reference/event)\\nfor a list of all predefined events.","text":"> The following event names are reserved for the native SDKs automatic collection and cannot be used: `ad_activeview, ad_click, ad_exposure, ad_query, ad_reward, adunit_exposure, app_background, app_clear_data, app_exception, app_remove, app_store_refund, app_store_subscription_cancel, ad_activeview, ad_click, ad_exposure, ad_query, ad_reward, adunit_exposure, app_background, app_clear_data, app_exception, app_remove, app_store_refund, app_store_subscription_cancel, app_store_subscription_convert, app_store_subscription_renew, app_update, app_upgrade, dynamic_link_app_open, dynamic_link_app_update, dynamic_link_first_open, error, firebase_campaign, first_open, first_visit, in_app_purchase, notification_dismiss, notification_foreground, notification_open, notification_receive, os_update, session_start, session_start_with_rollout, user_engagement`\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Analytics.logEvent(\'add_to_cart\', {\\n  currency: \'USD\',\\n  value: 29.98\\n  items: [{\\n    id: \\"P12345\\",\\n    name: \\"Expo Warhol T-Shirt\\",\\n    brand: \\"Expo\\",\\n    category: \\"Apparel/T-Shirts\\",\\n    coupon: \\"SUMMER_DISCOUNT\\",\\n    list_name: \\"Search Results\\",\\n    list_position: 1,\\n    price: 14.99,\\n    quantity: 2,\\n    variant: \\"Blue\\"\\n  }]\\n});\\n```\\n"}]},"parameters":[{"name":"name","kind":32768,"kindString":"Parameter","comment":{"shortText":"The name of the event. Should contain 1 to 40 alphanumeric characters or underscores.\\nThe name must start with an alphabetic character. Some event names are  reserved. The `firebase_`,\\n`google_`, and `ga_` prefixes are reserved and should not be used. Note that event names are\\ncase-sensitive and that logging two events whose names differ only in case will result in two\\ndistinct events. To manually log screen view events, use the `screen_view` event name."},"type":{"type":"intrinsic","name":"string"}},{"name":"properties","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The dictionary of event parameters. Passing `undefined` indicates that the\\nevent has no parameters. Parameter names can be up to 40 characters long and must start with an\\nalphabetic character and contain only alphanumeric characters and underscores. Only `String` and\\n`Number` parameter types are supported; and `items` arrays containing dictionaries.\\n`String` parameter values can be up to 100 characters long. The `firebase_`,  `google_`, and\\n`ga_` prefixes are reserved and should not be used for parameter names.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"resetAnalyticsData","kind":64,"kindString":"Function","signatures":[{"name":"resetAnalyticsData","kind":4096,"kindString":"Call signature","comment":{"shortText":"Clears all analytics data for this instance from the device and resets the app instance ID."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setAnalyticsCollectionEnabled","kind":64,"kindString":"Function","signatures":[{"name":"setAnalyticsCollectionEnabled","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets whether analytics collection is enabled for this app on this device. This setting is\\npersisted across app sessions. __By default it is enabled__."},"parameters":[{"name":"isEnabled","kind":32768,"kindString":"Parameter","comment":{"shortText":"A flag that enables or disables Analytics collection.\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setClientId","kind":64,"kindString":"Function","signatures":[{"name":"setClientId","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the clientId to the given value. For best results, set this value before\\ncalling any other functions on this module.","text":"By default, the clientId is set to `Constants.installationId` in Expo Go, which is deprecated and\\nwill be removed in SDK 44. At that time, this method will need to be used to set the `clientId`\\nwhen using Expo Go.\\n","tags":[{"tag":"platform","text":"expo\\n"}]},"parameters":[{"name":"clientId","kind":32768,"kindString":"Parameter","comment":{"shortText":"UUIDv4 string value to set for the current session in Expo Go."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setDebugModeEnabled","kind":64,"kindString":"Function","signatures":[{"name":"setDebugModeEnabled","kind":4096,"kindString":"Call signature","comment":{"shortText":"Enables or disabled debug mode on the Expo client, so events can\\nbe tracked using the [DebugView in the Analytics dashboard](https://firebase.google.com/docs/analytics/debugview#reporting).","text":"This option is only available in Expo Go. When using a custom development app, a standalone app,\\nthe bare workflow or web, use the [natively available options](https://firebase.google.com/docs/analytics/debugview).\\n","tags":[{"tag":"platform","text":"expo\\n"}]},"parameters":[{"name":"isEnabled","kind":32768,"kindString":"Parameter","comment":{"shortText":"A flag that enables or disables debug mode."},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setSessionTimeoutDuration","kind":64,"kindString":"Function","signatures":[{"name":"setSessionTimeoutDuration","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the interval of inactivity in seconds that terminates the current session. The default\\nvalue is 1800000 milliseconds (30 minutes).","text":"> Setting the session timeout only applies to the native iOS and Android SDKs. Calling this\\n> method does nothing on Expo Go or web.\\n"},"parameters":[{"name":"sessionTimeoutInterval","kind":32768,"kindString":"Parameter","comment":{"shortText":"The custom time of inactivity in milliseconds before the current\\nsession terminates.\\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setUnavailabilityLogging","kind":64,"kindString":"Function","signatures":[{"name":"setUnavailabilityLogging","kind":4096,"kindString":"Call signature","comment":{"shortText":"Enables or disables the warning and log messages when using Firebase Analytics on the Expo client.","text":"Firebase Analytics is not available on the Expo client and therefore logs the requests to the\\nconsole for development purposes. To test Firebase Analytics, create a standalone build or custom\\nclient. Use this function to suppress the warning and log messages.\\n"},"parameters":[{"name":"isEnabled","kind":32768,"kindString":"Parameter","comment":{"shortText":"A flag that enables or disables unavailability logging.\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setUserId","kind":64,"kindString":"Function","signatures":[{"name":"setUserId","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the user ID property. This feature must be used in accordance with [Google\'s Privacy Policy](https://www.google.com/policies/privacy)"},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","comment":{"shortText":"The user ID to ascribe to the user of this app on this device, which must be\\nnon-empty and no more than 256 characters long. Setting userID to null removes the user ID.\\n"},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setUserProperties","kind":64,"kindString":"Function","signatures":[{"name":"setUserProperties","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets multiple user properties to the supplied values.","tags":[{"tag":"example","text":"\\n```ts\\nawait Analytics.setUserProperties({\\n  loves_expo: \'a lot\',\\n});\\n```\\n"}]},"parameters":[{"name":"properties","kind":32768,"kindString":"Parameter","comment":{"shortText":"Key/value set of user properties. Values can be up to 36 characters long.\\nSetting the value to null removes the user property.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}],"qualifiedName":"Record","package":"typescript","name":"Record"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setUserProperty","kind":64,"kindString":"Function","signatures":[{"name":"setUserProperty","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a user property to a given value. Up to 25 user property names are supported. Once set,\\nuser property values persist throughout the app life-cycle and across sessions.","text":"The following user property names are reserved and cannot be used:\\n- `first_open_time`\\n- `last_deep_link_referrer`\\n- `user_id`\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Analytics.setUserProperty(\'favorite_batmobile\', \'1989 Burton-mobile\');\\n```\\n"}]},"parameters":[{"name":"name","kind":32768,"kindString":"Parameter","comment":{"shortText":"The name of the user property to set. Should contain 1 to 24 alphanumeric characters\\nor underscores and must start with an alphabetic character. The `firebase_`, `google_`, and\\n`ga_` prefixes are reserved and should not be used for user property names."},"type":{"type":"intrinsic","name":"string"}},{"name":"value","kind":32768,"kindString":"Parameter","comment":{"shortText":"The value of the user property. Values can be up to 36 characters long. Setting the\\nvalue to null removes the user property.\\n"},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},"994R":function(e,w,n){"use strict";e.exports=p;var c=n("S872");function p(d,a){for(var m=d.footnoteById,r=d.footnoteOrder,s=1;s in m;)s++;return s=String(s),r.push(s),m[s]={type:"footnoteDefinition",identifier:s,children:[{type:"paragraph",children:a.children}],position:a.position},c(d,{type:"footnoteReference",identifier:s,position:a.position})}},"9SNS":function(e,w,n){"use strict";function c(p){return p<32||p===127}e.exports=c},"9gYW":function(e){e.exports=JSON.parse('{"name":"expo-sqlite","kind":1,"kindString":"Project","originalName":"","children":[{"name":"SQLError","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new SQLError","kind":16384,"kindString":"Constructor signature","type":{"type":"reference","name":"SQLError"}}]},{"name":"code","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"message","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"CONSTRAINT_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"DATABASE_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"QUOTA_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"SYNTAX_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"TIMEOUT_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"TOO_LARGE_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"UNKNOWN_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"VERSION_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}}]},{"name":"Database","kind":256,"kindString":"Interface","comment":{"shortText":"`Database` objects are returned by calls to `SQLite.openDatabase()`. Such an object represents a\\nconnection to a database on your device."},"children":[{"name":"version","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"readTransaction","kind":2048,"kindString":"Method","signatures":[{"name":"readTransaction","kind":4096,"kindString":"Call signature","parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLTransactionCallback"}},{"name":"errorCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"SQLTransactionErrorCallback"}},{"name":"successCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"transaction","kind":2048,"kindString":"Method","signatures":[{"name":"transaction","kind":4096,"kindString":"Call signature","comment":{"shortText":"Execute a database transaction."},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"shortText":"A function representing the transaction to perform. Takes a Transaction\\n(see below) as its only parameter, on which it can add SQL statements to execute."},"type":{"type":"reference","name":"SQLTransactionCallback"}},{"name":"errorCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Called if an error occurred processing this transaction. Takes a single\\nparameter describing the error."},"type":{"type":"reference","name":"SQLTransactionErrorCallback"}},{"name":"successCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Called when the transaction has completed executing on the database.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}],"extendedBy":[{"type":"reference","name":"WebSQLDatabase"}]},{"name":"SQLResultSetRowList","kind":256,"kindString":"Interface","children":[{"name":"_array","kind":1024,"kindString":"Property","comment":{"shortText":"The actual array of rows returned by the query. Can be used directly instead of\\ngetting rows through rows.item()."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"name":"length","kind":1024,"kindString":"Property","comment":{"shortText":"The number of rows returned by the query."},"type":{"type":"intrinsic","name":"number"}},{"name":"item","kind":2048,"kindString":"Method","signatures":[{"name":"item","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns the row with the given `index`. If there is no such row, returns `null`."},"parameters":[{"name":"index","kind":32768,"kindString":"Parameter","comment":{"shortText":"Index of row to get.\\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"any"}}]}]},{"name":"SQLTransaction","kind":256,"kindString":"Interface","comment":{"shortText":"A `SQLTransaction` object is passed in as a parameter to the `callback` parameter for the\\n`db.transaction()` method on a `Database` (see above). It allows enqueuing SQL statements to\\nperform in a database transaction."},"children":[{"name":"executeSql","kind":2048,"kindString":"Method","signatures":[{"name":"executeSql","kind":4096,"kindString":"Call signature","comment":{"shortText":"Enqueue a SQL statement to execute in the transaction. Authors are strongly recommended to make\\nuse of the `?` placeholder feature of the method to avoid against SQL injection attacks, and to\\nnever construct SQL statements on the fly."},"parameters":[{"name":"sqlStatement","kind":32768,"kindString":"Parameter","comment":{"shortText":"A string containing a database query to execute expressed as SQL. The string\\nmay contain `?` placeholders, with values to be substituted listed in the `arguments` parameter."},"type":{"type":"intrinsic","name":"string"}},{"name":"args","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"An array of values (numbers or strings) to substitute for `?` placeholders in the\\nSQL statement."},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Called when the query is successfully completed during the transaction. Takes\\ntwo parameters: the transaction itself, and a `ResultSet` object (see below) with the results\\nof the query."},"type":{"type":"reference","name":"SQLStatementCallback"}},{"name":"errorCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Called if an error occurred executing this particular query in the\\ntransaction. Takes two parameters: the transaction itself, and the error object.\\n"},"type":{"type":"reference","name":"SQLStatementErrorCallback"}}],"type":{"type":"intrinsic","name":"void"}}]}]},{"name":"WebSQLDatabase","kind":256,"kindString":"Interface","children":[{"name":"version","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Database.version"}},{"name":"exec","kind":2048,"kindString":"Method","signatures":[{"name":"exec","kind":4096,"kindString":"Call signature","parameters":[{"name":"queries","kind":32768,"kindString":"Parameter","type":{"type":"array","elementType":{"type":"reference","name":"Query"}}},{"name":"readOnly","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}},{"name":"callback","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLiteCallback"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"readTransaction","kind":2048,"kindString":"Method","signatures":[{"name":"readTransaction","kind":4096,"kindString":"Call signature","parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLTransactionCallback"}},{"name":"errorCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"SQLTransactionErrorCallback"}},{"name":"successCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"Database.readTransaction"}}],"inheritedFrom":{"type":"reference","name":"Database.readTransaction"}},{"name":"transaction","kind":2048,"kindString":"Method","signatures":[{"name":"transaction","kind":4096,"kindString":"Call signature","comment":{"shortText":"Execute a database transaction."},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"shortText":"A function representing the transaction to perform. Takes a Transaction\\n(see below) as its only parameter, on which it can add SQL statements to execute."},"type":{"type":"reference","name":"SQLTransactionCallback"}},{"name":"errorCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Called if an error occurred processing this transaction. Takes a single\\nparameter describing the error."},"type":{"type":"reference","name":"SQLTransactionErrorCallback"}},{"name":"successCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Called when the transaction has completed executing on the database.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"Database.transaction"}}],"inheritedFrom":{"type":"reference","name":"Database.transaction"}}],"extendedTypes":[{"type":"reference","name":"Database"}]},{"name":"Window","kind":256,"kindString":"Interface","children":[{"name":"openDatabase","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"openDatabase","kind":4096,"kindString":"Call signature","parameters":[{"name":"name","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"version","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"displayName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"estimatedSize","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}},{"name":"creationCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"DatabaseCallback"}}],"type":{"type":"reference","name":"Database"}}]}]},{"name":"DatabaseCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"database","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Database"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"Query","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"args","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}},{"name":"sql","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"ResultSet","kind":4194304,"kindString":"Type alias","comment":{"shortText":"`ResultSet` objects are returned through second parameter of the `success` callback for the\\n`tx.executeSql()` method on a `SQLTransaction` (see above)."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"insertId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The row ID of the row that the SQL statement inserted into the database, if a row was inserted."},"type":{"type":"intrinsic","name":"number"}},{"name":"rows","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"column","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}}},{"name":"rowsAffected","kind":1024,"kindString":"Property","comment":{"shortText":"The number of rows that were changed by the SQL statement."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"ResultSetError","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"error","kind":1024,"kindString":"Property","type":{"type":"reference","name":"Error"}}]}}},{"name":"SQLResultSet","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"insertId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The row ID of the row that the SQL statement inserted into the database, if a row was inserted."},"type":{"type":"intrinsic","name":"number"}},{"name":"rows","kind":1024,"kindString":"Property","type":{"type":"reference","name":"SQLResultSetRowList"}},{"name":"rowsAffected","kind":1024,"kindString":"Property","comment":{"shortText":"The number of rows that were changed by the SQL statement."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"SQLStatementCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"transaction","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLTransaction"}},{"name":"resultSet","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLResultSet"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"SQLStatementErrorCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"transaction","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLTransaction"}},{"name":"error","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLError"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"SQLTransactionCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"transaction","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLTransaction"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"SQLTransactionErrorCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"error","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLError"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"SQLiteCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"Error"},{"type":"literal","value":null}]}},{"name":"resultSet","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","name":"ResultSetError"},{"type":"reference","name":"ResultSet"}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"openDatabase","kind":64,"kindString":"Function","signatures":[{"name":"openDatabase","kind":4096,"kindString":"Call signature","comment":{"shortText":"Open a database, creating it if it doesn\'t exist, and return a `Database` object. On disk,\\nthe database will be created under the app\'s [documents directory](./filesystem), i.e.\\n`${FileSystem.documentDirectory}/SQLite/${name}`.\\n> The `version`, `description` and `size` arguments are ignored, but are accepted by the function\\nfor compatibility with the WebSQL specification.","returns":"\\n"},"parameters":[{"name":"name","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the database file to open."},"type":{"type":"intrinsic","name":"string"}},{"name":"version","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'1.0\'"},{"name":"description","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"intrinsic","name":"string"},"defaultValue":"name"},{"name":"size","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"intrinsic","name":"number"},"defaultValue":"1"},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"db","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"WebSQLDatabase"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"WebSQLDatabase"}}]}]}')},"9jIY":function(e){e.exports=JSON.parse('{"name":"expo-facebook","kind":1,"originalName":"","children":[{"name":"FacebookAuthenticationCredential","kind":16777216,"kindString":"Reference"},{"name":"FacebookAuthenticationCredential","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"appId","kind":1024,"kindString":"Property","comment":{"shortText":"Application ID used to initialize the Facebook SDK app."},"type":{"type":"intrinsic","name":"string"}},{"name":"dataAccessExpirationDate","kind":1024,"kindString":"Property","comment":{"shortText":"Time at which the current user data access expires."},"type":{"type":"reference","name":"Date"}},{"name":"declinedPermissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of requested permissions that the user has declined."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"expirationDate","kind":1024,"kindString":"Property","comment":{"shortText":"Time at which the `token` expires."},"type":{"type":"reference","name":"Date"}},{"name":"expiredPermissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of permissions that were expired with this access token."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"graphDomain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A website domain within the Graph API.","tags":[{"tag":"see","text":"https://developers.facebook.com/docs/graph-api/reference/v5.0/domain\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"permissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of granted permissions."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"refreshDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The last time the `token` was refreshed (or when it was first obtained)."},"type":{"type":"reference","name":"Date"}},{"name":"signedRequest","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A valid raw signed request as a string."},"type":{"type":"intrinsic","name":"string"}},{"name":"token","kind":1024,"kindString":"Property","comment":{"shortText":"Access token for the authenticated session. This token provides access to the Facebook Graph API."},"type":{"type":"intrinsic","name":"string"}},{"name":"tokenSource","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates how this `token` was obtained.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"userId","kind":1024,"kindString":"Property","comment":{"shortText":"App-scoped Facebook ID of the user."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"FacebookInitializationOptions","kind":16777216,"kindString":"Reference"},{"name":"FacebookInitializationOptions","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"FacebookSDKScriptURLOptions"},{"type":"reference","name":"FacebookSDKInitializationOptions"},{"type":"reference","name":"FacebookNativeInitializationOptions"}]}},{"name":"FacebookLoginResult","kind":16777216,"kindString":"Reference"},{"name":"FacebookLoginResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","type":{"type":"literal","value":"cancel"}}]}},{"type":"intersection","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","type":{"type":"literal","value":"success"}}]}},{"type":"reference","name":"FacebookAuthenticationCredential"}]}]}},{"name":"FacebookNativeInitializationOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"appName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An optional Facebook App Name argument for iOS and Android."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"FacebookOptions","kind":16777216,"kindString":"Reference"},{"name":"FacebookOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"permissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}}},{"name":"FacebookSDKInitializationOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"appId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Application ID used to initialize the FBSDK app.","text":"On Android and iOS if you don\'t provide this, Facebook SDK will try to use `appId` from Android and iOS.\\napp resources (which in standalone apps you would define in `app.json`, in the Expo client are unavailable,\\nand in bare you configure yourself according to Facebook setup documentation\\nfor [iOS](https://developers.facebook.com/docs/facebook-login/ios#4--configure-your-project)\\nand [Android](https://developers.facebook.com/docs/facebook-login/android#manifest)).\\nIf it fails to find one, the promise will be rejected.\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"autoLogAppEvents","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets whether Facebook SDK should log app events. App events involve app eg. installs,\\napp launches (more info [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#auto-events)\\nand [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#auto-events)).\\nIn some cases, you may want to disable or delay the collection of automatically logged events,\\nsuch as to obtain user consent or fulfill legal obligations.","text":"This method corresponds to:\\n- [iOS disable auto events](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#disable-auto-events)\\n- [Android disable auto events](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#disable-auto-events)\\n"},"type":{"type":"intrinsic","name":"boolean"}},{"name":"version","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Selects the version of FBSDK to use.","tags":[{"tag":"see","text":"[Graph API Initialization](https://developers.facebook.com/docs/javascript/reference/FB.init/v13.0)\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"FacebookSDKScriptURLOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"domain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets the base Facebook domain to use when making network requests.","tags":[{"tag":"default","text":"\'connect.facebook.net\'"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"flushAsync","kind":64,"kindString":"Function","signatures":[{"name":"flushAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Explicitly kicks off flushing of events to Facebook."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"getAdvertiserIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAdvertiserIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the advertiser ID from Facebook.","returns":"A promise fulfilled with the advertiser id or null if not set.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getAnonymousIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAnonymousIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get an anonymous ID from Facebook.","returns":"A promise fulfilled with an anonymous id or null if not set.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getAttributionIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAttributionIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the attribution ID from Facebook.","returns":"A promise fulfilled with the attribution id or null if not set.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getAuthenticationCredentialAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAuthenticationCredentialAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns the `FacebookAuthenticationCredential` object if a user is authenticated, and `null` if no valid authentication exists.","text":"You can use this method to check if the user should sign in or not.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"FacebookAuthenticationCredential"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks application\'s permissions for using data for tracking the user or the device.","text":">iOS: it requires the NSUserTrackingUsageDescription message added to the info.plist.\\n","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getUserIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"getUserIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the user ID.","returns":"A promise fulfilled with the user id or null if not set.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"initializeAsync","kind":64,"kindString":"Function","signatures":[{"name":"initializeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Calling this method ensures that the SDK is initialized.\\nYou have to call this method before calling any method that uses\\nthe FBSDK (ex: `logInWithReadPermissionsAsync`, `logOutAsync`) to ensure that\\nFacebook support is initialized properly.","text":"- On Android and iOS you can optionally provide an `appId` argument.\\n  - If you don\'t provide `appId`, the Facebook SDK will try to use `appId` from native app resources (which in standalone apps you define in `app.json`, in app store development clients are unavailable, and in bare apps you configure yourself according to [Facebook\'s setup documentation for iOS](https://developers.facebook.com/docs/facebook-login/ios#4--configure-your-project) and [Android](https://developers.facebook.com/docs/facebook-login/android#manifest)). If the Facebook SDK fails to find an `appId` value, the returned promise will be rejected.\\n  - The same resolution mechanism works for `appName`.\\n- If you provide an explicit `appId`, it will override any other source.\\n"},"parameters":[{"name":"optionsOrAppId","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"FacebookInitializationOptions"}]}},{"name":"appName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"logEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs an event with eventName and optional parameters. Supports the optional parameter `valueToSum`,\\nwhich when reported, all of the valueToSum properties are summed together. For example, if 10 people purchased\\none item and each item cost $10 (and passed in valueToSum) then they would be added together to report $100.\\nParameters must be either strings or numbers, otherwise no event will be logged.","text":"To view and test app events, please visit Facebook\'s Event Manager- https://www.facebook.com/events_manager2/list/app/\\n"},"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"parameters","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Params"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logInWithReadPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"logInWithReadPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prompts the user to log into Facebook and grants your app permission to access their Facebook data. On iOS and Android, if the Facebook app isn\'t installed then a web view will be used to authenticate.","returns":"If the user or Facebook cancelled the login, returns { type: \'cancel\' }. Otherwise, returns { type: \'success\' } & [FacebookAuthenticationCredential](#facebookauthenticationcredential).\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of options:\\n - **permissions (array)** -- An array specifying the permissions to ask for from Facebook for this login. The permissions are strings as specified in the [Facebook API documentation](https://developers.facebook.com/docs/permissions/reference). The default permissions are [\'public_profile\', \'email\']."},"type":{"type":"reference","name":"FacebookOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"FacebookLoginResult"}],"name":"Promise"}}]},{"name":"logOutAsync","kind":64,"kindString":"Function","signatures":[{"name":"logOutAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs out of the currently authenticated session."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logPurchaseAsync","kind":64,"kindString":"Function","signatures":[{"name":"logPurchaseAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs a purchase event with the amount, currency code, and optional parameters.\\nParameters must be either strings or numbers, otherwise no event will be logged.\\nSee http://en.wikipedia.org/wiki/ISO_4217 for currencyCodes."},"parameters":[{"name":"purchaseAmount","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}},{"name":"currencyCode","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"parameters","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Params"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logPushNotificationOpenAsync","kind":64,"kindString":"Function","signatures":[{"name":"logPushNotificationOpenAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs an app event that tracks that the application was opened via Push Notification. Accepts\\na string describing the campaign of the Push Notification."},"parameters":[{"name":"campaign","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks for permissions to use data for tracking the user or the device.","text":"> iOS: it requires the NSUserTrackingUsageDescription message added to the info.plist.\\n","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"setAdvertiserIDCollectionEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setAdvertiserIDCollectionEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Whether the Facebook SDK should collect advertiser ID properties, like the Apple IDFA\\nand Android Advertising ID, automatically. Advertiser IDs let you identify and target specific customers.\\nTo learn more visit [Facebook documentation](https://developers.facebook.com/docs/app-ads/targeting/mobile-advertiser-ids)\\ndescribing that topic.","text":"In some cases, you may want to disable or delay the collection of `advertiser-id`,\\nsuch as to obtain user consent or fulfill legal obligations.\\n\\nThis method corresponds to [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#disable-advertiser-id)\\nand [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#disable-advertiser-id) native SDK methods."},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","comment":{"shortText":"Whether `advertiser-id` should be collected\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setAdvertiserTrackingEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setAdvertiserTrackingEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets whether Facebook SDK should enable advertising tracking,\\n(more info [here](https://developers.facebook.com/docs/app-events/guides/advertising-tracking-enabled)).","text":"Limitations:\\n1. AdvertiserTrackingEnabled is only available for iOS 14+.\\n2. For iOS 13 or earlier, AdvertiserTrackingEnabled uses the Limit Ad Tracking setting as its value.\\n\\nThis method corresponds to [this](https://developers.facebook.com/docs/app-events/guides/advertising-tracking-enabled)\\n","returns":"Whether the value is set successfully. It will always return false in Android, iOS 13 and below.\\n"},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","comment":{"shortText":"Whether advertising tracking of the Facebook SDK should be enabled"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"setAutoInitEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setAutoInitEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"Explicitly call `initializeAsync` instead.\\n"}]},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setAutoLogAppEventsEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setAutoLogAppEventsEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets whether Facebook SDK should log app events. App events involve eg. app installs,\\napp launches (more info [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#auto-events)\\nand [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#auto-events)).","text":"In some cases, you may want to disable or delay the collection of automatically logged events,\\nsuch as to obtain user consent or fulfill legal obligations.\\n\\nThis method corresponds to [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#disable-auto-events)\\nand [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#disable-auto-events) native SDK methods.\\n"},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","comment":{"shortText":"Whether automatic events logging of the Facebook SDK should be enabled\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserDataAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUserDataAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets additional data about the user to increase the chances of matching a Facebook user."},"parameters":[{"name":"userData","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"UserData"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUserIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a custom user ID to associate with all app events.\\nThe userID is persisted until it is cleared by passing nil."},"parameters":[{"name":"userID","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"usePermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"usePermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to use data tracking.\\nThis uses both `requestPermissionsAsync` and `getPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Facebook.usePermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"UserData","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Info about a user to increase chances of matching a Facebook user.\\nSee https://developers.facebook.com/docs/app-events/advanced-matching for\\nmore info about the expected format of each field."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"city","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"country","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"dateOfBirth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"email","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"firstName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"gender","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":"m"},{"type":"literal","value":"f"}]}},{"name":"lastName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"phone","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"zip","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}]}}}]}')},"9ppO":function(e,w,n){"use strict";var c=n("E/Jm"),p=n("yRGd");function d(a,m,r,s,i,o){var t;return l;function l(S){return a.enter(s),a.enter(i),a.consume(S),a.exit(i),t=S===40?41:S,k}function k(S){return S===t?(a.enter(i),a.consume(S),a.exit(i),a.exit(s),m):(a.enter(o),g(S))}function g(S){return S===t?(a.exit(o),k(t)):S===null?r(S):c(S)?(a.enter("lineEnding"),a.consume(S),a.exit("lineEnding"),p(a,g,"linePrefix")):(a.enter("chunkString",{contentType:"string"}),h(S))}function h(S){return S===t||S===null||c(S)?(a.exit("chunkString"),g(S)):(a.consume(S),S===92?f:h)}function f(S){return S===t||S===92?(a.consume(S),h):h(S)}}e.exports=d},"9tKq":function(e){e.exports=JSON.parse('{"name":"expo-checkbox","kind":1,"kindString":"Project","originalName":"","children":[{"name":"default","kind":4,"kindString":"Namespace","children":[{"name":"displayName","kind":32,"kindString":"Variable","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"literal","value":true}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]},{"name":"CheckboxComponent","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"CheckboxProps"}],"qualifiedName":"React.FC","package":"@types/react","name":"React.FC"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isAvailableAsync","kind":2048,"kindString":"Method","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}}]}},{"name":"CheckboxEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"target","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"value","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}}]}}],"qualifiedName":"NativeSyntheticEvent","package":"@types/react-native","name":"NativeSyntheticEvent"}},{"name":"CheckboxProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"ViewProps","package":"@types/react-native","name":"ViewProps"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"color","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The tint or color of the checkbox. This overrides the disabled opaque style."},"type":{"type":"reference","qualifiedName":"ColorValue","package":"@types/react-native","name":"ColorValue"}},{"name":"disabled","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the checkbox is disabled, it becomes opaque and uncheckable."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"value","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Value indicating if the checkbox should be rendered as checked or not. Default value is `false`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"onChange","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onChange","kind":4096,"kindString":"Call signature","comment":{"shortText":"Callback that is invoked when the user presses the checkbox."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","comment":{"shortText":"A native event containing the checkbox change.\\n"},"type":{"type":"reference","name":"CheckboxEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onValueChange","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onValueChange","kind":4096,"kindString":"Call signature","comment":{"shortText":"Callback that is invoked when the user presses the checkbox."},"parameters":[{"name":"value","kind":32768,"kindString":"Parameter","comment":{"shortText":"A boolean indicating the new checked state of the checkbox.\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]}]}}]}},{"name":"default","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"reference","name":"CheckboxComponent"},"defaultValue":"..."}]}')},"9zCd":function(e,w,n){"use strict";e.exports=d;var c=n("vUGn"),p=n("2jS9");function d(a,m){var r=m.referenceType,s="]",i,o,t;return r==="collapsed"?s+="[]":r==="full"&&(s+="["+(m.label||m.identifier)+"]"),m.type==="imageReference"?c("text","!["+m.alt+s):(i=p(a,m),o=i[0],o&&o.type==="text"?o.value="["+o.value:i.unshift(c("text","[")),t=i[i.length-1],t&&t.type==="text"?t.value+=s:i.push(c("text",s)),i)}},ADT3:function(e,w,n){"use strict";e.exports=m;var c=n("uzq8"),p=n("Zasy"),d=n("oxjq"),a=[].splice;function m(t,l,k,g){var h,f;return typeof l=="string"||l&&typeof l.exec=="function"?f=[[l,k]]:(f=l,g=k),h=g||{},r(t,h,S(s(f))),t;function S(b){var P=b[0];return y;function y(v,u){var C=P[0],R=P[1],F=[],j=0,I=u.children.indexOf(v),W,L,K,D;for(C.lastIndex=0,L=C.exec(v.value);L&&(W=L.index,D=R.apply(null,[].concat(L,{index:L.index,input:L.input})),D!==!1&&(j!==W&&F.push({type:"text",value:v.value.slice(j,W)}),typeof D=="string"&&D.length>0&&(D={type:"text",value:D}),D&&(F=[].concat(F,D)),j=W+L[0].length),!!C.global);)L=C.exec(v.value);if(W===void 0?(F=[v],I--):(j<v.value.length&&F.push({type:"text",value:v.value.slice(j)}),F.unshift(I,1),a.apply(u.children,F)),b.length>1)for(K=S(b.slice(1)),W=-1;++W<F.length;)v=F[W],v.type==="text"?K(v,u):r(v,h,K);return I+F.length+1}}}function r(t,l,k){var g=p(l.ignore||[]),h=[];return c(t,"text",f),h;function f(S,b){for(var P=-1,y,v;++P<b.length;){if(y=b[P],g(y,v?v.children.indexOf(y):void 0,v))return;v=y}return k(S,v)}}function s(t){var l=[],k,g;if(typeof t!="object")throw new Error("Expected array or object as schema");if("length"in t)for(g=-1;++g<t.length;)l.push([i(t[g][0]),o(t[g][1])]);else for(k in t)l.push([i(k),o(t[k])]);return l}function i(t){return typeof t=="string"?new RegExp(d(t),"g"):t}function o(t){return typeof t=="function"?t:l;function l(){return t}}},Ac4N:function(e){e.exports=JSON.parse(`{"name":"expo-analytics-amplitude","kind":1,"kindString":"Project","originalName":"","children":[{"name":"AmplitudeTrackingOptions","kind":256,"kindString":"Interface","children":[{"name":"disableAdid","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableCarrier","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device's carrier."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableCity","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's city."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableCountry","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's country."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableDMA","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's DMA."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableDeviceBrand","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device brand."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableDeviceManufacturer","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device manufacturer."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableDeviceModel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device model."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableIDFV","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's IDFV."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableIPAddress","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's IP address."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableLanguage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device's language."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableLatLng","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's current latitude and longitude coordinates."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableOSName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device's OS name."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableOSVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device's OS version."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disablePlatform","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device's platform."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableRegion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's region."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableVersionName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the app version the user is on for your app."},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"clearUserPropertiesAsync","kind":64,"kindString":"Function","signatures":[{"name":"clearUserPropertiesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Clear properties set by [\`setUserPropertiesAsync()\`](#amplitudesetuserpropertiesasyncuserproperties)."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"initializeAsync","kind":64,"kindString":"Function","signatures":[{"name":"initializeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Initializes Amplitude with your Amplitude API key. If you're having trouble finding your API key,\\nsee [step 4 of these instructions](https://amplitude.zendesk.com/hc/en-us/articles/207108137-Introduction-Getting-Started#getting-started)."},"parameters":[{"name":"apiKey","kind":32768,"kindString":"Parameter","comment":{"text":"Your Amplitude application's API key.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"logEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Log an event to Amplitude. For more information about what kind of events to track,\\n[see here](https://amplitude.zendesk.com/hc/en-us/articles/206404698-Step-3-Track-Events-and-Understand-the-Actions-Users-Take)."},"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","comment":{"text":"The event name.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logEventWithPropertiesAsync","kind":64,"kindString":"Function","signatures":[{"name":"logEventWithPropertiesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Log an event to Amplitude with custom properties. For more information about what kind of events\\nto track, [see here](https://amplitude.zendesk.com/hc/en-us/articles/206404698-Step-3-Track-Events-and-Understand-the-Actions-Users-Take)."},"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","comment":{"text":"The event name."},"type":{"type":"intrinsic","name":"string"}},{"name":"properties","kind":32768,"kindString":"Parameter","comment":{"text":"A map of custom properties.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setGroupAsync","kind":64,"kindString":"Function","signatures":[{"name":"setGroupAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Add the current user to a group. For more information, see here for [iOS](https://github.com/amplitude/Amplitude-iOS#setting-groups)\\nand see here for [Android](https://github.com/amplitude/Amplitude-Android#setting-groups)."},"parameters":[{"name":"groupType","kind":32768,"kindString":"Parameter","comment":{"text":"The group name, e.g. \\"sports\\"."},"type":{"type":"intrinsic","name":"string"}},{"name":"groupNames","kind":32768,"kindString":"Parameter","comment":{"text":"An array of group names, e.g. [\\"tennis\\", \\"soccer\\"].\\n> **Note:** The iOS and Android Amplitude SDKs allow you to use a string or an array of strings. We\\nonly support an array of strings. Just use an array with one element if you only want one group\\nname.\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setTrackingOptionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"setTrackingOptionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"By default, the Amplitude SDK will track several user properties such as carrier and city. You\\ncan use this method to customize and disable individual fields.\\n> **Note:** These configurations will prevent default properties from being tracked on newly\\ncreated projects, where data has not yet been sent. Please contact [platform@amplitude.com](mailto:platform@amplitude.com)\\nif you would like default properties blocked (moving forward) on projects with existing data."},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"Options object for what should not be tracked. The table below describes what\\nproperties the object may contain. All properties are expected to be booleans. For example,\\npassing \`disableCarrier: true\` disables tracking the device's carrier.\\n"},"type":{"type":"reference","name":"AmplitudeTrackingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserIdAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUserIdAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Assign a user ID to the current user. If you don't have a system for user IDs you don't need to\\ncall this. See [this page](https://amplitude.zendesk.com/hc/en-us/articles/206404628-Step-2-Assign-User-IDs-and-Identify-your-Users)\\nfor details."},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","comment":{"text":"User ID for the current user.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserPropertiesAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUserPropertiesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Set properties for the current user. See [here for details](https://amplitude.zendesk.com/hc/en-us/articles/207108327-Step-4-Set-User-Properties-and-Event-Properties)."},"parameters":[{"name":"userProperties","kind":32768,"kindString":"Parameter","comment":{"text":"A map of custom properties.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}`)},Aieo:function(e){e.exports=JSON.parse('{"name":"expo-barcode-scanner","kind":1,"kindString":"Project","originalName":"","children":[{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"BarCodeScanner","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new BarCodeScanner","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"reference","name":"BarCodeScannerProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}]}}],"type":{"type":"reference","name":"BarCodeScanner"},"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}},{"name":"new BarCodeScanner","kind":16384,"kindString":"Constructor signature","comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BarCodeScannerProps"}},{"name":"context","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"BarCodeScanner"},"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"lastEvents","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"defaultValue":"{}"},{"name":"lastEventsTimes","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"defaultValue":"{}"},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"ReactNode"}}]}}],"name":"Readonly"}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}}],"name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"Constants","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"BarCodeType","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}},{"name":"Type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}}]}},"defaultValue":"..."},{"name":"ConversionTables","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"},"defaultValue":"..."}]}},"defaultValue":"..."},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"defaultProps","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"barCodeTypes","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}},"defaultValue":"..."},{"name":"type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"},"defaultValue":"..."}]}},"defaultValue":"..."},{"name":"usePermissions","kind":1024,"kindString":"Property","flags":{"isStatic":true},"comment":{"shortText":"Check or request permissions for the barcode scanner.\\nThis uses both `requestPermissionAsync` and `getPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = BarCodeScanner.usePermissions();\\n```\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a new permission hook with the permission methods built-in.\\nThis can be used to quickly create specific permission hooks in every module."},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}},"defaultValue":"..."},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"convertNativeProps","kind":2048,"kindString":"Method","signatures":[{"name":"convertNativeProps","kind":4096,"kindString":"Call signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BarCodeScannerProps"}}],"type":{"type":"reference","name":"BarCodeScannerProps"}}]},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"onObjectDetected","kind":2048,"kindString":"Method","signatures":[{"name":"onObjectDetected","kind":4096,"kindString":"Call signature","parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"BarCodeScannedCallback"}}],"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"__namedParameters","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BarCodeEventCallbackArguments"}}],"type":{"type":"intrinsic","name":"void"}}]}}}]},{"name":"render","kind":2048,"kindString":"Method","signatures":[{"name":"render","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}},{"name":"getPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing the camera.","returns":"Return a promise that fulfills to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing the camera.","text":"On iOS this will require apps to specify the `NSCameraUsageDescription` entry in the `Info.plist`.","returns":"Return a promise that fulfills to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"scanFromURLAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"scanFromURLAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Scan bar codes from the image given by the URL.","returns":"A possibly empty array of objects of the `BarCodeScannerResult` shape, where the type\\nrefers to the bar code type that was scanned and the data is the information encoded in the bar\\ncode.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"text":"URL to get the image from."},"type":{"type":"intrinsic","name":"string"}},{"name":"barCodeTypes","kind":32768,"kindString":"Parameter","comment":{"text":"An array of bar code types. Defaults to all supported bar code types on\\nthe platform.\\n> __Note:__ Only QR codes are supported on iOS."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"BarCodeScannerResult"}}],"name":"Promise"}}]}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Component"}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"BarCodeBounds","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"origin","kind":1024,"kindString":"Property","comment":{"shortText":"The origin point of the bounding box."},"type":{"type":"reference","name":"BarCodePoint"}},{"name":"size","kind":1024,"kindString":"Property","comment":{"shortText":"The size of the bounding box."},"type":{"type":"reference","name":"BarCodeSize"}}]}}},{"name":"BarCodeEvent","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"BarCodeScannerResult"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"target","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}]}}]}},{"name":"BarCodeEventCallbackArguments","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"BarCodeEvent"}}]}}},{"name":"BarCodePoint","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Those coordinates are represented in the coordinate space of the barcode source (e.g. when you\\nare using the barcode scanner view, these values are adjusted to the dimensions of the view)."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"x","kind":1024,"kindString":"Property","comment":{"shortText":"The `x` coordinate value."},"type":{"type":"intrinsic","name":"number"}},{"name":"y","kind":1024,"kindString":"Property","comment":{"shortText":"The `y` coordinate value."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"BarCodeScannedCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"params","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BarCodeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"BarCodeScannerProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"barCodeTypes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of bar code types. Usage: `BarCodeScanner.Constants.BarCodeType.<codeType>` where\\n`codeType` is one of these [listed above](#supported-formats). Defaults to all supported bar\\ncode types. It is recommended to provide only the bar code formats you expect to scan to\\nminimize battery usage.","text":"For example: `barCodeTypes={[BarCodeScanner.Constants.BarCodeType.qr]}`.\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"onBarCodeScanned","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A callback that is invoked when a bar code has been successfully scanned. The callback is\\nprovided with an [BarCodeScannerResult](#barcodescannerresult).\\n> __Note:__ Passing `undefined` to the `onBarCodeScanned` prop will result in no scanning. This\\n> can be used to effectively \\"pause\\" the scanner so that it doesn\'t continually scan even after\\n> data has been retrieved."},"type":{"type":"reference","name":"BarCodeScannedCallback"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Camera facing. Use one of `BarCodeScanner.Constants.Type`. Use either `Type.front` or `Type.back`.\\nSame as `Camera.Constants.Type`.","tags":[{"tag":"default","text":"Type.back\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":"front"},{"type":"literal","value":"back"},{"type":"intrinsic","name":"number"}]}}]}}]}},{"name":"BarCodeScannerResult","kind":4194304,"kindString":"Type alias","comment":{"shortText":"> __Note:__ `bounds` and `cornerPoints` are not always available. On iOS, for `code39` and `pdf417`\\n> you don\'t get those values. Moreover, on iOS, those values don\'t have to bounds the whole barcode.\\n> For some types, they will represent the area used by the scanner."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"bounds","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The [BarCodeBounds](#barcodebounds) object."},"type":{"type":"reference","name":"BarCodeBounds"}},{"name":"cornerPoints","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Corner points of the bounding box."},"type":{"type":"array","elementType":{"type":"reference","name":"BarCodePoint"}}},{"name":"data","kind":1024,"kindString":"Property","comment":{"shortText":"The information encoded in the bar code."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"The barcode type."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"BarCodeSize","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"The height value."},"type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"The width value."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"Constants","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"BarCodeType","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}},{"name":"Type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}}]}}},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing the camera.","returns":"Return a promise that fulfills to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing the camera.","text":"On iOS this will require apps to specify the `NSCameraUsageDescription` entry in the `Info.plist`.","returns":"Return a promise that fulfills to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"scanFromURLAsync","kind":64,"kindString":"Function","signatures":[{"name":"scanFromURLAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Scan bar codes from the image given by the URL.","returns":"A possibly empty array of objects of the `BarCodeScannerResult` shape, where the type\\nrefers to the bar code type that was scanned and the data is the information encoded in the bar\\ncode.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"text":"URL to get the image from."},"type":{"type":"intrinsic","name":"string"}},{"name":"barCodeTypes","kind":32768,"kindString":"Parameter","comment":{"text":"An array of bar code types. Defaults to all supported bar code types on\\nthe platform.\\n> __Note:__ Only QR codes are supported on iOS."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"BarCodeScannerResult"}}],"name":"Promise"}}]},{"name":"usePermissions","kind":64,"kindString":"Function","signatures":[{"name":"usePermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a new permission hook with the permission methods built-in.\\nThis can be used to quickly create specific permission hooks in every module."},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}]}')},AssK:function(e){e.exports=JSON.parse('{"name":"expo-screen-capture","kind":1,"kindString":"Project","originalName":"","children":[{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"addScreenshotListener","kind":64,"kindString":"Function","signatures":[{"name":"addScreenshotListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Adds a listener that will fire whenever the user takes a screenshot while the app is foregrounded.\\nOn Android, this method requires the `READ_EXTERNAL_STORAGE` permission. You can request this\\nwith [`MediaLibrary.requestPermissionsAsync()`](./media-library/#medialibraryrequestpermissionsasync).","returns":"A `Subscription` object that you can use to unregister the listener, either by calling\\n`remove()` or passing it to `removeScreenshotListener`.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"The function that will be executed when the user takes a screenshot.\\nThis function accepts no arguments.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"allowScreenCaptureAsync","kind":64,"kindString":"Function","signatures":[{"name":"allowScreenCaptureAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Re-allows the user to screen record or screenshot your app. If you haven\'t called\\n`preventScreenCapture()` yet, this method does nothing."},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"shortText":"This will prevent multiple instances of the `preventScreenCaptureAsync` and\\n`allowScreenCaptureAsync` methods from conflicting with each other. If provided, the value must\\nbe the same as the key passed to `preventScreenCaptureAsync` in order to re-enable screen\\ncapturing. Defaults to \'default\'.\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'default\'"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the Screen Capture API is available on the current device.","returns":"A promise that resolves to a `boolean` indicating whether the Screen Capture API is available on the current\\ndevice. Currently, this resolves to `true` on Android and iOS only.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"preventScreenCaptureAsync","kind":64,"kindString":"Function","signatures":[{"name":"preventScreenCaptureAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prevents screenshots and screen recordings until `allowScreenCaptureAsync` is called or the app is restarted. If you are\\nalready preventing screen capture, this method does nothing (unless you pass a new and unique `key`).","text":"> Please note that on iOS, this will only prevent screen recordings, and is only available on\\niOS 11 and newer. On older iOS versions, this method does nothing.\\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"shortText":"Optional. If provided, this will help prevent multiple instances of the `preventScreenCaptureAsync`\\nand `allowScreenCaptureAsync` methods (and `usePreventScreenCapture` hook) from conflicting with each other.\\nWhen using multiple keys, you\'ll have to re-allow each one in order to re-enable screen capturing.\\nDefaults to `\'default\'`.\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'default\'"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"removeScreenshotListener","kind":64,"kindString":"Function","signatures":[{"name":"removeScreenshotListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes the subscription you provide, so that you are no longer listening for screenshots.","text":"If you prefer, you can also call `remove()` on that `Subscription` object, for example:\\n\\n```ts\\nlet mySubscription = addScreenshotListener(() => {\\n  console.log(\\"You took a screenshot!\\");\\n});\\n...\\nmySubscription.remove();\\n// OR\\nremoveScreenshotListener(mySubscription);\\n```\\n"},"parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","comment":{"shortText":"Subscription returned by `addScreenshotListener`.\\n"},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"usePreventScreenCapture","kind":64,"kindString":"Function","signatures":[{"name":"usePreventScreenCapture","kind":4096,"kindString":"Call signature","comment":{"shortText":"A React hook to prevent screen capturing for as long as the owner component is mounted."},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'default\'"}],"type":{"type":"intrinsic","name":"void"}}]}]}')},Atxm:function(e,w,n){"use strict";var c=n("hq1P"),p=n("Ny5O"),d=n("8lMe"),a=n("9SNS"),m={name:"autolink",tokenize:r};function r(s,i,o){var t=1;return l;function l(u){return s.enter("autolink"),s.enter("autolinkMarker"),s.consume(u),s.exit("autolinkMarker"),s.enter("autolinkProtocol"),k}function k(u){return c(u)?(s.consume(u),g):d(u)?S(u):o(u)}function g(u){return u===43||u===45||u===46||p(u)?h(u):S(u)}function h(u){return u===58?(s.consume(u),f):(u===43||u===45||u===46||p(u))&&t++<32?(s.consume(u),h):S(u)}function f(u){return u===62?(s.exit("autolinkProtocol"),v(u)):u===32||u===60||a(u)?o(u):(s.consume(u),f)}function S(u){return u===64?(s.consume(u),t=0,b):d(u)?(s.consume(u),S):o(u)}function b(u){return p(u)?P(u):o(u)}function P(u){return u===46?(s.consume(u),t=0,b):u===62?(s.exit("autolinkProtocol").type="autolinkEmail",v(u)):y(u)}function y(u){return(u===45||p(u))&&t++<63?(s.consume(u),u===45?y:P):o(u)}function v(u){return s.enter("autolinkMarker"),s.consume(u),s.exit("autolinkMarker"),s.exit("autolink"),i}}e.exports=m},Avva:function(e,w,n){"use strict";const c=n("q1tI"),p=n("TOwV"),d=n("IEZ+"),a=n("F6fn"),m=n("Ho5A"),r=n("TTG4"),s=n("vfP8"),i=n("CC3I");w.hastToReact=k,w.hastChildrenToReact=l;const o={}.hasOwnProperty,t=new Set(["table","thead","tbody","tfoot","tr"]);function l(y,v){const u=[];let C=-1,R;for(;++C<v.children.length;)R=v.children[C],R.type==="element"?u.push(k(y,R,C,v)):R.type==="text"?(v.type!=="element"||!t.has(v.tagName)||R.value!==`
`)&&u.push(R.value):R.type==="raw"&&!y.options.skipHtml&&u.push(R.value);return u}function k(y,v,u,C){const R=y.options,F=y.schema,j=v.tagName,I={};let W=F,L;if(F.space==="html"&&j==="svg"&&(W=d,y.schema=W),v.properties)for(L in v.properties)o.call(v.properties,L)&&f(I,L,v.properties[L],y);(j==="ol"||j==="ul")&&y.listDepth++;const K=l(y,v);(j==="ol"||j==="ul")&&y.listDepth--,y.schema=F;const D=v.position||{start:{line:null,column:null,offset:null},end:{line:null,column:null,offset:null}},ee=R.components&&o.call(R.components,j)?R.components[j]:j,V=typeof ee=="string"||ee===c.Fragment;if(!p.isValidElementType(ee))throw new TypeError(`Component for name \`${j}\` not defined or is not renderable`);if(I.key=[j,D.start.line,D.start.column,u].join("-"),j==="a"&&R.linkTarget&&(I.target=typeof R.linkTarget=="function"?R.linkTarget(I.href,v.children,I.title):R.linkTarget),j==="a"&&R.transformLinkUri&&(I.href=R.transformLinkUri(I.href,v.children,I.title)),!V&&j==="code"&&C.type==="element"&&C.tagName!=="pre"&&(I.inline=!0),!V&&(j==="h1"||j==="h2"||j==="h3"||j==="h4"||j==="h5"||j==="h6")&&(I.level=parseInt(j.charAt(1),10)),j==="img"&&R.transformImageUri&&(I.src=R.transformImageUri(I.src,I.alt,I.title)),!V&&j==="li"&&C.type==="element"){const X=g(v);I.checked=X&&X.properties?Boolean(X.properties.checked):null,I.index=h(C,v),I.ordered=C.tagName==="ol"}return!V&&(j==="ol"||j==="ul")&&(I.ordered=j==="ol",I.depth=y.listDepth),(j==="td"||j==="th")&&(I.align&&(I.style||(I.style={}),I.style.textAlign=I.align,delete I.align),V||(I.isHeader=j==="th")),!V&&j==="tr"&&C.type==="element"&&(I.isHeader=Boolean(C.tagName==="thead")),R.sourcePos&&(I["data-sourcepos"]=P(D)),!V&&R.rawSourcePos&&(I.sourcePosition=v.position),!V&&R.includeElementIndex&&(I.index=h(C,v),I.siblingCount=h(C)),V||(I.node=v),K.length>0?c.createElement(ee,I,K):c.createElement(ee,I)}function g(y){let v=-1;for(;++v<y.children.length;){const u=y.children[v];if(u.type==="element"&&u.tagName==="input")return u}return null}function h(y,v){let u=-1,C=0;for(;++u<y.children.length&&y.children[u]!==v;)y.children[u].type==="element"&&C++;return C}function f(y,v,u,C){const R=a(C.schema,v);let F=u;F==null||F!==F||(F&&typeof F=="object"&&"length"in F&&(F=(R.commaSeparated?s:r).stringify(F)),R.property==="style"&&typeof F=="string"&&(F=S(F)),R.space&&R.property?y[o.call(m,R.property)?m[R.property]:R.property]=F:R.attribute&&(y[R.attribute]=F))}function S(y){const v={};try{i(y,u)}catch(C){}return v;function u(C,R){const F=C.slice(0,4)==="-ms-"?`ms-${C.slice(4)}`:C;v[F.replace(/-([a-z])/g,b)]=R}}function b(y,v){return v.toUpperCase()}function P(y){return[y.start.line,":",y.start.column,"-",y.end.line,":",y.end.column].map(v=>String(v)).join("")}},B5Lt:function(e,w,n){e.exports=p;var c=n("RjOF");function p(d,a){for(var m=d.children||[],r=[],s=-1,i;++s<m.length;)i=m[s],r.push(a.handle(i,d,a,{before:`
`,after:`
`})),s+1<m.length&&r.push(o(i,m[s+1]));return r.join("");function o(t,l){for(var k=-1,g;++k<a.join.length&&(g=a.join[k](t,l,d,a),!(g===!0||g===1));){if(typeof g=="number")return c(`
`,1+Number(g));if(g===!1)return`

<!---->

`}return`

`}}},BMpi:function(e){e.exports=JSON.parse('{"name":"expo-mail-composer","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"MailComposerStatus","kind":4,"kindString":"Enumeration","flags":{},"children":[{"name":"CANCELLED","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"\\"cancelled\\""},{"name":"SAVED","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"\\"saved\\""},{"name":"SENT","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"\\"sent\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"\\"undetermined\\""}]},{"name":"MailComposerOptions","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"A map defining the data to fill the mail."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"attachments","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of app\'s internal file URIs to attach."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"bccRecipients","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of e-mail addresses of the BCC recipients."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"body","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Body of the e-mail."},"type":{"type":"intrinsic","name":"string"}},{"name":"ccRecipients","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of e-mail addresses of the CC recipients."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"isHtml","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the body contains HTML tags so it could be formatted properly.\\nNot working perfectly on Android."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"recipients","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of e-mail addresses of the recipients."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"subject","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Subject of the e-mail."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"MailComposerResult","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"status","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","name":"MailComposerStatus"}}]}}},{"name":"composeAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"composeAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens a mail modal for iOS and a mail app intent for Android and fills the fields with provided\\ndata. On iOS you will need to be signed into the Mail app.","returns":"A promise fulfilled with an object containing a `status` field that specifies whether an\\nemail was sent, saved, or cancelled. Android does not provide this info, so the status is always\\nset as if the email were sent.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"MailComposerOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"MailComposerResult"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Determine if the `MailComposer` API can be used in this app.","returns":"A promise resolves to `true` if the API can be used, and `false` otherwise.\\n- Returns `true` on iOS when the device has a default email setup for sending mail.\\n- Can return `false` on iOS if an MDM profile is setup to block outgoing mail. If this is the\\ncase, you may want to use the Linking API instead.\\n- Always returns `true` in the browser and on Android.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}')},Bh6z:function(e,w,n){"use strict";function c(p){return p.replace(/[\t\n\r ]+/g," ").replace(/^ | $/g,"").toLowerCase().toUpperCase()}e.exports=c},BjXi:function(e,w,n){"use strict";var c=n("M8+4"),p=n("rm/B"),d=p(c);e.exports=d},C1pd:function(e){e.exports=JSON.parse('{"name":"expo-auth-session","kind":1,"kindString":"Project","originalName":"","children":[{"name":"CodeChallengeMethod","kind":8,"kindString":"Enumeration","children":[{"name":"Plain","kind":16,"kindString":"Enumeration member","comment":{"shortText":"This should not be used. When used, the code verifier will be sent to the server as-is."},"defaultValue":"\\"plain\\""},{"name":"S256","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The default and recommended method for transforming the code verifier.\\n- Convert the code verifier to ASCII.\\n- Create a digest of the string using crypto method SHA256.\\n- Convert the digest to Base64 and URL encode it."},"defaultValue":"\\"S256\\""}]},{"name":"GrantType","kind":8,"kindString":"Enumeration","comment":{"shortText":"Grant type values used in dynamic client registration and auth requests.","tags":[{"tag":"see","text":"[Appendix A.10](https://tools.ietf.org/html/rfc6749#appendix-A.10)\\n"}]},"children":[{"name":"AuthorizationCode","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Used for exchanging an authorization code for one or more tokens.","text":"[Section 4.1.3](https://tools.ietf.org/html/rfc6749#section-4.1.3)\\n"},"defaultValue":"\\"authorization_code\\""},{"name":"ClientCredentials","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Used for client credentials flow.","text":"[Section 4.4.2](https://tools.ietf.org/html/rfc6749#section-4.4.2)\\n"},"defaultValue":"\\"client_credentials\\""},{"name":"Implicit","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Used when obtaining an access token.","text":"[Section 4.2](https://tools.ietf.org/html/rfc6749#section-4.2)\\n"},"defaultValue":"\\"implicit\\""},{"name":"RefreshToken","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Used when exchanging a refresh token for a new token.","text":"[Section 6](https://tools.ietf.org/html/rfc6749#section-6)\\n"},"defaultValue":"\\"refresh_token\\""}]},{"name":"Prompt","kind":8,"kindString":"Enumeration","comment":{"shortText":"Informs the server if the user should be prompted to login or consent again.\\nThis can be used to present a dialog for switching accounts after the user has already been logged in.\\nYou should use this in favor of clearing cookies (which is mostly not possible on iOS).","tags":[{"tag":"see","text":"[Section 3.1.2.1](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationRequest).\\n"}]},"children":[{"name":"Consent","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Server should prompt the user for consent before returning information to the client.\\nIf it cannot obtain consent, it must return an error, typically `consent_required`."},"defaultValue":"\\"consent\\""},{"name":"Login","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The server should prompt the user to reauthenticate.\\nIf it cannot reauthenticate the End-User, it must return an error, typically `login_required`."},"defaultValue":"\\"login\\""},{"name":"None","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Server must not display any auth or consent UI. Can be used to check for existing auth or consent.\\nAn error is returned if a user isn\'t already authenticated or the client doesn\'t have pre-configured consent for the requested claims, or does not fulfill other conditions for processing the request.\\nThe error code will typically be `login_required`, `interaction_required`, or another code defined in [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError)."},"defaultValue":"\\"none\\""},{"name":"SelectAccount","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Server should prompt the user to select an account. Can be used to switch accounts.\\nIf it can\'t obtain an account selection choice made by the user, it must return an error, typically `account_selection_required`."},"defaultValue":"\\"select_account\\""}]},{"name":"ResponseType","kind":8,"kindString":"Enumeration","comment":{"shortText":"The client informs the authorization server of the desired grant type by using the response type.","tags":[{"tag":"see","text":"[Section 3.1.1](https://tools.ietf.org/html/rfc6749#section-3.1.1).\\n"}]},"children":[{"name":"Code","kind":16,"kindString":"Enumeration member","comment":{"shortText":"For requesting an authorization code as described by [Section 4.1.1](https://tools.ietf.org/html/rfc6749#section-4.1.1)."},"defaultValue":"\\"code\\""},{"name":"IdToken","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A custom registered type for getting an `id_token` from Google OAuth."},"defaultValue":"\\"id_token\\""},{"name":"Token","kind":16,"kindString":"Enumeration member","comment":{"shortText":"For requesting an access token (implicit grant) as described by [Section 4.2.1](https://tools.ietf.org/html/rfc6749#section-4.2.1)."},"defaultValue":"\\"token\\""}]},{"name":"TokenTypeHint","kind":8,"kindString":"Enumeration","comment":{"shortText":"A hint about the type of the token submitted for revocation. If not included then the server should attempt to deduce the token type.","tags":[{"tag":"see","text":"[Section 2.1](https://tools.ietf.org/html/rfc7009#section-2.1)\\n"}]},"children":[{"name":"AccessToken","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Access token.","text":"[Section 1.4](https://tools.ietf.org/html/rfc6749#section-1.4)\\n"},"defaultValue":"\\"access_token\\""},{"name":"RefreshToken","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Refresh token.","text":"[Section 1.5](https://tools.ietf.org/html/rfc6749#section-1.5)\\n"},"defaultValue":"\\"refresh_token\\""}]},{"name":"AccessTokenRequest","kind":128,"kindString":"Class","comment":{"shortText":"Access token request. Exchange an authorization code for a user access token.","text":"[Section 4.1.3](https://tools.ietf.org/html/rfc6749#section-4.1.3)\\n"},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new AccessTokenRequest","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AccessTokenRequestConfig"}}],"type":{"type":"reference","name":"AccessTokenRequest"},"overwrites":{"type":"reference","name":"TokenRequest<AccessTokenRequestConfig>.constructor"}}],"overwrites":{"type":"reference","name":"TokenRequest<AccessTokenRequestConfig>.constructor"}},{"name":"clientId","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"shortText":"A unique string representing the registration information provided by the client.\\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn\'t be used\\nalone for client authentication.","text":"The client identifier is unique to the authorization server.\\n\\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TokenRequest.clientId"},"implementationOf":{"type":"reference","name":"AccessTokenRequestConfig.clientId"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"comment":{"shortText":"Client secret supplied by an auth provider.\\nThere is no secure way to store this on the client.","text":"[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TokenRequest.clientSecret"},"implementationOf":{"type":"reference","name":"AccessTokenRequestConfig.clientSecret"}},{"name":"code","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"shortText":"The authorization code received from the authorization server."},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"AccessTokenRequestConfig.code"}},{"name":"extraParams","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"comment":{"shortText":"Extra query params that\'ll be added to the query string."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"},"inheritedFrom":{"type":"reference","name":"TokenRequest.extraParams"},"implementationOf":{"type":"reference","name":"AccessTokenRequestConfig.extraParams"}},{"name":"grantType","kind":1024,"kindString":"Property","flags":{"isPublic":true},"type":{"type":"reference","name":"GrantType"},"inheritedFrom":{"type":"reference","name":"TokenRequest.grantType"}},{"name":"redirectUri","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"shortText":"If the `redirectUri` parameter was included in the `AuthRequest`, then it must be supplied here as well.","text":"[Section 3.1.2](https://tools.ietf.org/html/rfc6749#section-3.1.2)\\n"},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"AccessTokenRequestConfig.redirectUri"}},{"name":"scopes","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"comment":{"shortText":"List of strings to request access to.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"TokenRequest.scopes"},"implementationOf":{"type":"reference","name":"AccessTokenRequestConfig.scopes"}},{"name":"getHeaders","kind":2048,"kindString":"Method","signatures":[{"name":"getHeaders","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Headers"},"inheritedFrom":{"type":"reference","name":"TokenRequest.getHeaders"}}],"inheritedFrom":{"type":"reference","name":"TokenRequest.getHeaders"}},{"name":"getQueryBody","kind":2048,"kindString":"Method","signatures":[{"name":"getQueryBody","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"},"overwrites":{"type":"reference","name":"TokenRequest.getQueryBody"}}],"overwrites":{"type":"reference","name":"TokenRequest.getQueryBody"}},{"name":"getRequestConfig","kind":2048,"kindString":"Method","signatures":[{"name":"getRequestConfig","kind":4096,"kindString":"Call signature","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"clientId","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"clientSecret","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"code","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"extraParams","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"}]},"defaultValue":"..."},{"name":"grantType","kind":1024,"kindString":"Property","type":{"type":"reference","name":"GrantType"},"defaultValue":"..."},{"name":"redirectUri","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"scopes","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]},"defaultValue":"..."}]}},"overwrites":{"type":"reference","name":"TokenRequest.getRequestConfig"}}],"overwrites":{"type":"reference","name":"TokenRequest.getRequestConfig"}},{"name":"performAsync","kind":2048,"kindString":"Method","signatures":[{"name":"performAsync","kind":4096,"kindString":"Call signature","parameters":[{"name":"discovery","kind":32768,"kindString":"Parameter","type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument"},{"type":"literal","value":"tokenEndpoint"}],"name":"Pick"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse"}],"name":"Promise"},"inheritedFrom":{"type":"reference","name":"TokenRequest.performAsync"}}],"inheritedFrom":{"type":"reference","name":"TokenRequest.performAsync"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"AccessTokenRequestConfig"}],"name":"TokenRequest"}],"implementedTypes":[{"type":"reference","name":"AccessTokenRequestConfig"}]},{"name":"AuthError","kind":128,"kindString":"Class","comment":{"shortText":"Represents an authorization response error: [Section 5.2](https://tools.ietf.org/html/rfc6749#section-5.2).\\nOften times providers will fail to return the proper error message for a given error code.\\nThis error method will add the missing description for more context on what went wrong."},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new AuthError","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"response","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AuthErrorConfig"}}],"type":{"type":"reference","name":"AuthError"},"overwrites":{"type":"reference","name":"ResponseError.constructor"}}],"overwrites":{"type":"reference","name":"ResponseError.constructor"}},{"name":"code","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.code"}},{"name":"description","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Used to assist the client developer in\\nunderstanding the error that occurred."},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.description"}},{"name":"info","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"ResponseError.info"}},{"name":"message","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.message"}},{"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.name"}},{"name":"params","kind":1024,"kindString":"Property","comment":{"shortText":"Raw results of the error."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"},"inheritedFrom":{"type":"reference","name":"ResponseError.params"}},{"name":"stack","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.stack"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Required only if state is used in the initial request"},"type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A URI identifying a human-readable web page with\\ninformation about the error, used to provide the client\\ndeveloper with additional information about the error."},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.uri"}},{"name":"prepareStackTrace","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Optional override for formatting stack traces","tags":[{"tag":"see","text":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces\\n"}]},"parameters":[{"name":"err","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Error"}},{"name":"stackTraces","kind":32768,"kindString":"Parameter","type":{"type":"array","elementType":{"type":"reference","name":"CallSite"}}}],"type":{"type":"intrinsic","name":"any"}}]}},"inheritedFrom":{"type":"reference","name":"ResponseError.prepareStackTrace"}},{"name":"stackTraceLimit","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true},"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"ResponseError.stackTraceLimit"}},{"name":"captureStackTrace","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"signatures":[{"name":"captureStackTrace","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Create .stack property on a target object"},"parameters":[{"name":"targetObject","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}},{"name":"constructorOpt","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"Function"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"ResponseError.captureStackTrace"}}],"inheritedFrom":{"type":"reference","name":"ResponseError.captureStackTrace"}}],"extendedTypes":[{"type":"reference","name":"ResponseError"}]},{"name":"AuthRequest","kind":128,"kindString":"Class","comment":{"shortText":"Used to manage an authorization request according to the OAuth spec: [Section 4.1.1][https://tools.ietf.org/html/rfc6749#section-4.1.1].\\nYou can use this class directly for more info around the authorization.","text":"**Common use-cases:**\\n\\n- Parse a URL returned from the authorization server with `parseReturnUrlAsync()`.\\n- Get the built authorization URL with `makeAuthUrlAsync()`.\\n- Get a loaded JSON representation of the auth request with crypto state loaded with `getAuthRequestConfigAsync()`.\\n","tags":[{"tag":"example","text":"\\n```ts\\n// Create a request.\\nconst request = new AuthRequest({ ... });\\n\\n// Prompt for an auth code\\nconst result = await request.promptAsync(discovery, { useProxy: true });\\n\\n// Get the URL to invoke\\nconst url = await request.makeAuthUrlAsync(discovery);\\n\\n// Get the URL to invoke\\nconst parsed = await request.parseReturnUrlAsync(\\"<URL From Server>\\");\\n```\\n"}]},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new AuthRequest","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"request","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AuthRequestConfig"}}],"type":{"type":"reference","name":"AuthRequest"}}]},{"name":"clientId","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"Omit.clientId"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"Omit.clientSecret"}},{"name":"codeChallenge","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"Omit.codeChallenge"}},{"name":"codeChallengeMethod","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"type":{"type":"reference","name":"CodeChallengeMethod"},"implementationOf":{"type":"reference","name":"Omit.codeChallengeMethod"}},{"name":"codeVerifier","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"extraParams","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"},"implementationOf":{"type":"reference","name":"Omit.extraParams"}},{"name":"prompt","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"type":{"type":"reference","name":"Prompt"},"implementationOf":{"type":"reference","name":"Omit.prompt"}},{"name":"redirectUri","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"Omit.redirectUri"}},{"name":"responseType","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"Omit.responseType"}},{"name":"scopes","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"implementationOf":{"type":"reference","name":"Omit.scopes"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isPublic":true},"comment":{"shortText":"Used for protection against [Cross-Site Request Forgery](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"}},{"name":"url","kind":1024,"kindString":"Property","flags":{"isPublic":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"null"},{"name":"usePKCE","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"type":{"type":"intrinsic","name":"boolean"},"implementationOf":{"type":"reference","name":"Omit.usePKCE"}},{"name":"getAuthRequestConfigAsync","kind":2048,"kindString":"Method","signatures":[{"name":"getAuthRequestConfigAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Load and return a valid auth request based on the input config."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AuthRequestConfig"}],"name":"Promise"}}]},{"name":"makeAuthUrlAsync","kind":2048,"kindString":"Method","signatures":[{"name":"makeAuthUrlAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create the URL for authorization."},"parameters":[{"name":"discovery","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"AuthDiscoveryDocument"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"parseReturnUrl","kind":2048,"kindString":"Method","signatures":[{"name":"parseReturnUrl","kind":4096,"kindString":"Call signature","parameters":[{"name":"url","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"AuthSessionResult"}}]},{"name":"promptAsync","kind":2048,"kindString":"Method","signatures":[{"name":"promptAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prompt a user to authorize for a code."},"parameters":[{"name":"discovery","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"AuthDiscoveryDocument"}},{"name":"promptOptions","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"originalName":"__namedParameters","type":{"type":"reference","name":"AuthRequestPromptOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AuthSessionResult"}],"name":"Promise"}}]}],"implementedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"AuthRequestConfig"},{"type":"literal","value":"state"}],"name":"Omit"}]},{"name":"RefreshTokenRequest","kind":128,"kindString":"Class","comment":{"shortText":"Refresh request.","text":"[Section 6](https://tools.ietf.org/html/rfc6749#section-6)\\n"},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new RefreshTokenRequest","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"RefreshTokenRequestConfig"}}],"type":{"type":"reference","name":"RefreshTokenRequest"},"overwrites":{"type":"reference","name":"TokenRequest<RefreshTokenRequestConfig>.constructor"}}],"overwrites":{"type":"reference","name":"TokenRequest<RefreshTokenRequestConfig>.constructor"}},{"name":"clientId","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"shortText":"A unique string representing the registration information provided by the client.\\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn\'t be used\\nalone for client authentication.","text":"The client identifier is unique to the authorization server.\\n\\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TokenRequest.clientId"},"implementationOf":{"type":"reference","name":"RefreshTokenRequestConfig.clientId"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"comment":{"shortText":"Client secret supplied by an auth provider.\\nThere is no secure way to store this on the client.","text":"[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TokenRequest.clientSecret"},"implementationOf":{"type":"reference","name":"RefreshTokenRequestConfig.clientSecret"}},{"name":"extraParams","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"comment":{"shortText":"Extra query params that\'ll be added to the query string."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"},"inheritedFrom":{"type":"reference","name":"TokenRequest.extraParams"},"implementationOf":{"type":"reference","name":"RefreshTokenRequestConfig.extraParams"}},{"name":"grantType","kind":1024,"kindString":"Property","flags":{"isPublic":true},"type":{"type":"reference","name":"GrantType"},"inheritedFrom":{"type":"reference","name":"TokenRequest.grantType"}},{"name":"refreshToken","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"comment":{"shortText":"The refresh token issued to the client."},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"RefreshTokenRequestConfig.refreshToken"}},{"name":"scopes","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"comment":{"shortText":"List of strings to request access to.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"TokenRequest.scopes"},"implementationOf":{"type":"reference","name":"RefreshTokenRequestConfig.scopes"}},{"name":"getHeaders","kind":2048,"kindString":"Method","signatures":[{"name":"getHeaders","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Headers"},"inheritedFrom":{"type":"reference","name":"TokenRequest.getHeaders"}}],"inheritedFrom":{"type":"reference","name":"TokenRequest.getHeaders"}},{"name":"getQueryBody","kind":2048,"kindString":"Method","signatures":[{"name":"getQueryBody","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"},"overwrites":{"type":"reference","name":"TokenRequest.getQueryBody"}}],"overwrites":{"type":"reference","name":"TokenRequest.getQueryBody"}},{"name":"getRequestConfig","kind":2048,"kindString":"Method","signatures":[{"name":"getRequestConfig","kind":4096,"kindString":"Call signature","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"clientId","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"clientSecret","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"extraParams","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"}]},"defaultValue":"..."},{"name":"grantType","kind":1024,"kindString":"Property","type":{"type":"reference","name":"GrantType"},"defaultValue":"..."},{"name":"refreshToken","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"scopes","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]},"defaultValue":"..."}]}},"overwrites":{"type":"reference","name":"TokenRequest.getRequestConfig"}}],"overwrites":{"type":"reference","name":"TokenRequest.getRequestConfig"}},{"name":"performAsync","kind":2048,"kindString":"Method","signatures":[{"name":"performAsync","kind":4096,"kindString":"Call signature","parameters":[{"name":"discovery","kind":32768,"kindString":"Parameter","type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument"},{"type":"literal","value":"tokenEndpoint"}],"name":"Pick"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse"}],"name":"Promise"},"inheritedFrom":{"type":"reference","name":"TokenRequest.performAsync"}}],"inheritedFrom":{"type":"reference","name":"TokenRequest.performAsync"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"RefreshTokenRequestConfig"}],"name":"TokenRequest"}],"implementedTypes":[{"type":"reference","name":"RefreshTokenRequestConfig"}]},{"name":"RevokeTokenRequest","kind":128,"kindString":"Class","comment":{"shortText":"Revocation request for a given token.","text":"[Section 2.1](https://tools.ietf.org/html/rfc7009#section-2.1)\\n"},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new RevokeTokenRequest","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"request","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"RevokeTokenRequestConfig"}}],"type":{"type":"reference","name":"RevokeTokenRequest"},"overwrites":{"type":"reference","name":"Request<RevokeTokenRequestConfig, boolean>.constructor"}}],"overwrites":{"type":"reference","name":"Request<RevokeTokenRequestConfig, boolean>.constructor"}},{"name":"clientId","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"comment":{"shortText":"A unique string representing the registration information provided by the client.\\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn\'t be used\\nalone for client authentication.","text":"The client identifier is unique to the authorization server.\\n\\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)\\n"},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"RevokeTokenRequestConfig.clientId"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"comment":{"shortText":"Client secret supplied by an auth provider.\\nThere is no secure way to store this on the client.","text":"[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)\\n"},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"RevokeTokenRequestConfig.clientSecret"}},{"name":"token","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"shortText":"The token that the client wants to get revoked.","text":"[Section 3.1](https://tools.ietf.org/html/rfc6749#section-3.1)\\n"},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"RevokeTokenRequestConfig.token"}},{"name":"tokenTypeHint","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"comment":{"shortText":"A hint about the type of the token submitted for revocation.","text":"[Section 3.2](https://tools.ietf.org/html/rfc6749#section-3.2)\\n"},"type":{"type":"reference","name":"TokenTypeHint"},"implementationOf":{"type":"reference","name":"RevokeTokenRequestConfig.tokenTypeHint"}},{"name":"getHeaders","kind":2048,"kindString":"Method","signatures":[{"name":"getHeaders","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Headers"}}]},{"name":"getQueryBody","kind":2048,"kindString":"Method","signatures":[{"name":"getQueryBody","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"},"overwrites":{"type":"reference","name":"Request.getQueryBody"}}],"overwrites":{"type":"reference","name":"Request.getQueryBody"}},{"name":"getRequestConfig","kind":2048,"kindString":"Method","signatures":[{"name":"getRequestConfig","kind":4096,"kindString":"Call signature","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"clientId","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"clientSecret","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"token","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"tokenTypeHint","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"TokenTypeHint"}]},"defaultValue":"..."}]}},"overwrites":{"type":"reference","name":"Request.getRequestConfig"}}],"overwrites":{"type":"reference","name":"Request.getRequestConfig"}},{"name":"performAsync","kind":2048,"kindString":"Method","signatures":[{"name":"performAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Perform a token revocation request."},"parameters":[{"name":"discovery","kind":32768,"kindString":"Parameter","comment":{"shortText":"The `revocationEndpoint` for a provider.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument"},{"type":"literal","value":"revocationEndpoint"}],"name":"Pick"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"},"overwrites":{"type":"reference","name":"Request.performAsync"}}],"overwrites":{"type":"reference","name":"Request.performAsync"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"RevokeTokenRequestConfig"},{"type":"intrinsic","name":"boolean"}],"name":"Request"}],"implementedTypes":[{"type":"reference","name":"RevokeTokenRequestConfig"}]},{"name":"TokenError","kind":128,"kindString":"Class","comment":{"shortText":"[Section 4.1.2.1](https://tools.ietf.org/html/rfc6749#section-4.1.2.1)"},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new TokenError","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"response","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"ResponseErrorConfig"}}],"type":{"type":"reference","name":"TokenError"},"overwrites":{"type":"reference","name":"ResponseError.constructor"}}],"overwrites":{"type":"reference","name":"ResponseError.constructor"}},{"name":"code","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.code"}},{"name":"description","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Used to assist the client developer in\\nunderstanding the error that occurred."},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.description"}},{"name":"info","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"ResponseError.info"}},{"name":"message","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.message"}},{"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.name"}},{"name":"params","kind":1024,"kindString":"Property","comment":{"shortText":"Raw results of the error."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"},"inheritedFrom":{"type":"reference","name":"ResponseError.params"}},{"name":"stack","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.stack"}},{"name":"uri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A URI identifying a human-readable web page with\\ninformation about the error, used to provide the client\\ndeveloper with additional information about the error."},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.uri"}},{"name":"prepareStackTrace","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Optional override for formatting stack traces","tags":[{"tag":"see","text":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces\\n"}]},"parameters":[{"name":"err","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Error"}},{"name":"stackTraces","kind":32768,"kindString":"Parameter","type":{"type":"array","elementType":{"type":"reference","name":"CallSite"}}}],"type":{"type":"intrinsic","name":"any"}}]}},"inheritedFrom":{"type":"reference","name":"ResponseError.prepareStackTrace"}},{"name":"stackTraceLimit","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true},"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"ResponseError.stackTraceLimit"}},{"name":"captureStackTrace","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"signatures":[{"name":"captureStackTrace","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Create .stack property on a target object"},"parameters":[{"name":"targetObject","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}},{"name":"constructorOpt","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"Function"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"ResponseError.captureStackTrace"}}],"inheritedFrom":{"type":"reference","name":"ResponseError.captureStackTrace"}}],"extendedTypes":[{"type":"reference","name":"ResponseError"}]},{"name":"TokenResponse","kind":128,"kindString":"Class","comment":{"shortText":"Token Response.","text":"[Section 5.1](https://tools.ietf.org/html/rfc6749#section-5.1)\\n"},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new TokenResponse","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"response","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"TokenResponseConfig"}}],"type":{"type":"reference","name":"TokenResponse"}}]},{"name":"accessToken","kind":1024,"kindString":"Property","comment":{"shortText":"The access token issued by the authorization server.","text":"[Section 4.2.2](https://tools.ietf.org/html/rfc6749#section-4.2.2)\\n"},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.accessToken"}},{"name":"expiresIn","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The lifetime in seconds of the access token.","text":"For example, the value `3600` denotes that the access token will\\nexpire in one hour from the time the response was generated.\\n\\nIf omitted, the authorization server should provide the\\nexpiration time via other means or document the default value.\\n\\n[Section 4.2.2](https://tools.ietf.org/html/rfc6749#section-4.2.2)\\n"},"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.expiresIn"}},{"name":"idToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"ID Token value associated with the authenticated session.","text":"[TokenResponse](https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse)\\n"},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.idToken"}},{"name":"issuedAt","kind":1024,"kindString":"Property","comment":{"shortText":"Time in seconds when the token was received by the client."},"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.issuedAt"}},{"name":"refreshToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The refresh token, which can be used to obtain new access tokens using the same authorization grant.","text":"[Section 5.1](https://tools.ietf.org/html/rfc6749#section-5.1)\\n"},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.refreshToken"}},{"name":"scope","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The scope of the access token. Only required if it\'s different to the scope that was requested by the client.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.scope"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Required if the \\"state\\" parameter was present in the client\\nauthorization request.  The exact value received from the client.","text":"[Section 4.2.2](https://tools.ietf.org/html/rfc6749#section-4.2.2)\\n"},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.state"}},{"name":"tokenType","kind":1024,"kindString":"Property","comment":{"shortText":"The type of the token issued. Value is case insensitive.","text":"[Section 7.1](https://tools.ietf.org/html/rfc6749#section-7.1)\\n"},"type":{"type":"reference","name":"TokenType"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.tokenType"}},{"name":"getRequestConfig","kind":2048,"kindString":"Method","signatures":[{"name":"getRequestConfig","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"TokenResponseConfig"}}]},{"name":"refreshAsync","kind":2048,"kindString":"Method","signatures":[{"name":"refreshAsync","kind":4096,"kindString":"Call signature","parameters":[{"name":"config","kind":32768,"kindString":"Parameter","type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenRequestConfig"},{"type":"union","types":[{"type":"literal","value":"grantType"},{"type":"literal","value":"refreshToken"}]}],"name":"Omit"}},{"name":"discovery","kind":32768,"kindString":"Parameter","type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument"},{"type":"literal","value":"tokenEndpoint"}],"name":"Pick"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse"}],"name":"Promise"}}]},{"name":"shouldRefresh","kind":2048,"kindString":"Method","signatures":[{"name":"shouldRefresh","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"boolean"}}]},{"name":"fromQueryParams","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"fromQueryParams","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates a `TokenResponse` from query parameters returned from an `AuthRequest`."},"parameters":[{"name":"params","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}}],"type":{"type":"reference","name":"TokenResponse"}}]},{"name":"isTokenFresh","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"isTokenFresh","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determines whether a token refresh request must be made to refresh the tokens"},"parameters":[{"name":"token","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse"},{"type":"union","types":[{"type":"literal","value":"expiresIn"},{"type":"literal","value":"issuedAt"}]}],"name":"Pick"}},{"name":"secondsMargin","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"intrinsic","name":"number"},"defaultValue":"..."}],"type":{"type":"intrinsic","name":"boolean"}}]}],"implementedTypes":[{"type":"reference","name":"TokenResponseConfig"}]},{"name":"AccessTokenRequestConfig","kind":256,"kindString":"Interface","comment":{"shortText":"Config used to exchange an authorization code for an access token.","tags":[{"tag":"see","text":"[Section 4.1.3](https://tools.ietf.org/html/rfc6749#section-4.1.3)\\n"}]},"children":[{"name":"clientId","kind":1024,"kindString":"Property","comment":{"shortText":"A unique string representing the registration information provided by the client.\\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn\'t be used\\nalone for client authentication.","text":"The client identifier is unique to the authorization server.\\n\\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TokenRequestConfig.clientId"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Client secret supplied by an auth provider.\\nThere is no secure way to store this on the client.","text":"[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TokenRequestConfig.clientSecret"}},{"name":"code","kind":1024,"kindString":"Property","comment":{"shortText":"The authorization code received from the authorization server."},"type":{"type":"intrinsic","name":"string"}},{"name":"extraParams","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Extra query params that\'ll be added to the query string."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"},"inheritedFrom":{"type":"reference","name":"TokenRequestConfig.extraParams"}},{"name":"redirectUri","kind":1024,"kindString":"Property","comment":{"shortText":"If the `redirectUri` parameter was included in the `AuthRequest`, then it must be supplied here as well.","text":"[Section 3.1.2](https://tools.ietf.org/html/rfc6749#section-3.1.2)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"scopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of strings to request access to.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"TokenRequestConfig.scopes"}}],"extendedTypes":[{"type":"reference","name":"TokenRequestConfig"}],"implementedBy":[{"type":"reference","name":"AccessTokenRequest"}]},{"name":"AuthRequestConfig","kind":256,"kindString":"Interface","comment":{"shortText":"Represents an OAuth authorization request as JSON."},"children":[{"name":"clientId","kind":1024,"kindString":"Property","comment":{"shortText":"A unique string representing the registration information provided by the client.\\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn\'t be used\\nalone for client authentication.","text":"The client identifier is unique to the authorization server.\\n\\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Client secret supplied by an auth provider.\\nThere is no secure way to store this on the client.","text":"[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"codeChallenge","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Derived from the code verifier by using the `CodeChallengeMethod`.","text":"[Section 4.2](https://tools.ietf.org/html/rfc7636#section-4.2)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"codeChallengeMethod","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Method used to generate the code challenge. You should never use `Plain` as it\'s not good enough for secure verification.","tags":[{"tag":"default","text":"CodeChallengeMethod.S256\\n"}]},"type":{"type":"reference","name":"CodeChallengeMethod"}},{"name":"extraParams","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Extra query params that\'ll be added to the query string."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"}},{"name":"prompt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Informs the server if the user should be prompted to login or consent again.\\nThis can be used to present a dialog for switching accounts after the user has already been logged in.","text":"[Section 3.1.2.1](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationRequest)\\n"},"type":{"type":"reference","name":"Prompt"}},{"name":"redirectUri","kind":1024,"kindString":"Property","comment":{"shortText":"After completing an interaction with a resource owner the\\nserver will redirect to this URI. Learn more about [linking in Expo](https://docs.expo.dev/versions/latest/workflow/linking/).","text":"[Section 3.1.2](https://tools.ietf.org/html/rfc6749#section-3.1.2)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"responseType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specifies what is returned from the authorization server.","text":"[Section 3.1.1](https://tools.ietf.org/html/rfc6749#section-3.1.1)\\n","tags":[{"tag":"default","text":"ResponseType.Code\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"scopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of strings to request access to.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Used for protection against [Cross-Site Request Forgery](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"}},{"name":"usePKCE","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Should use [Proof Key for Code Exchange](https://oauth.net/2/pkce/).","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"DiscoveryDocument","kind":256,"kindString":"Interface","children":[{"name":"authorizationEndpoint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Used to interact with the resource owner and obtain an authorization grant.","text":"[Section 3.1](https://tools.ietf.org/html/rfc6749#section-3.1)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"discoveryDocument","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"All metadata about the provider."},"type":{"type":"reference","name":"ProviderMetadata"}},{"name":"endSessionEndpoint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL at the OP to which an RP can perform a redirect to request that the End-User be logged out at the OP.","text":"[OPMetadata](https://openid.net/specs/openid-connect-session-1_0-17.html#OPMetadata)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"registrationEndpoint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL of the OP\'s [Dynamic Client Registration](https://openid.net/specs/openid-connect-discovery-1_0.html#OpenID.Registration) Endpoint."},"type":{"type":"intrinsic","name":"string"}},{"name":"revocationEndpoint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Used to revoke a token (generally for signing out). The spec requires a revocation endpoint,\\nbut some providers (like Spotify) do not support one.","text":"[Section 2.1](https://tools.ietf.org/html/rfc7009#section-2.1)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"tokenEndpoint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Used by the client to obtain an access token by presenting its authorization grant or refresh token.\\nThe token endpoint is used with every authorization grant except for the\\nimplicit grant type (since an access token is issued directly).","text":"[Section 3.2](https://tools.ietf.org/html/rfc6749#section-3.2)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"userInfoEndpoint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL of the OP\'s UserInfo Endpoint used to return info about the authenticated user.","text":"[UserInfo](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo)\\n"},"type":{"type":"intrinsic","name":"string"}}]},{"name":"FacebookAuthRequestConfig","kind":256,"kindString":"Interface","children":[{"name":"androidClientId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"clientId","kind":1024,"kindString":"Property","comment":{"shortText":"A unique string representing the registration information provided by the client.\\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn\'t be used\\nalone for client authentication.","text":"The client identifier is unique to the authorization server.\\n\\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.clientId"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Client secret supplied by an auth provider.\\nThere is no secure way to store this on the client.","text":"[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.clientSecret"}},{"name":"codeChallenge","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Derived from the code verifier by using the `CodeChallengeMethod`.","text":"[Section 4.2](https://tools.ietf.org/html/rfc7636#section-4.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.codeChallenge"}},{"name":"codeChallengeMethod","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Method used to generate the code challenge. You should never use `Plain` as it\'s not good enough for secure verification.","tags":[{"tag":"default","text":"CodeChallengeMethod.S256\\n"}]},"type":{"type":"reference","name":"CodeChallengeMethod"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.codeChallengeMethod"}},{"name":"expoClientId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"extraParams","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Extra query params that\'ll be added to the query string."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.extraParams"}},{"name":"iosClientId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"language","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Language for the sign in UI, in the form of ISO 639-1 language code optionally followed by a dash\\nand ISO 3166-1 alpha-2 region code, such as \'it\' or \'pt-PT\'.\\nOnly set this value if it\'s different from the system default (which you can access via expo-localization)."},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.language"}},{"name":"prompt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Informs the server if the user should be prompted to login or consent again.\\nThis can be used to present a dialog for switching accounts after the user has already been logged in.","text":"[Section 3.1.2.1](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationRequest)\\n"},"type":{"type":"reference","name":"Prompt"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.prompt"}},{"name":"redirectUri","kind":1024,"kindString":"Property","comment":{"shortText":"After completing an interaction with a resource owner the\\nserver will redirect to this URI. Learn more about [linking in Expo](https://docs.expo.dev/versions/latest/workflow/linking/).","text":"[Section 3.1.2](https://tools.ietf.org/html/rfc6749#section-3.1.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.redirectUri"}},{"name":"responseType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specifies what is returned from the authorization server.","text":"[Section 3.1.1](https://tools.ietf.org/html/rfc6749#section-3.1.1)\\n","tags":[{"tag":"default","text":"ResponseType.Code\\n"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.responseType"}},{"name":"scopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of strings to request access to.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.scopes"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Used for protection against [Cross-Site Request Forgery](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.state"}},{"name":"usePKCE","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Should use [Proof Key for Code Exchange](https://oauth.net/2/pkce/).","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.usePKCE"}},{"name":"webClientId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"extendedTypes":[{"type":"reference","name":"ProviderAuthRequestConfig"}]},{"name":"GoogleAuthRequestConfig","kind":256,"kindString":"Interface","children":[{"name":"androidClientId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Android native client ID for use in standalone, and bare workflow.","text":"This Google Client ID must be setup as follows:\\n\\n- **Application Type**: Android Application\\n- Give it a name (e.g. \\"Android App\\").\\n- **Package name**: Must match the value of `android.package` in your `app.json`.\\n- Your app needs to conform to the URI scheme matching your `android.package` (ex. `com.myname.mycoolapp:/`).\\n  - _Standalone_: Automatically added, do nothing.\\n  - _Bare workflow_: Run `npx uri-scheme add <your android.package> --android`\\n- **Signing-certificate fingerprint**:\\n  - Run `expo credentials:manager -p android` then select \\"Update upload Keystore\\" -> \\"Generate new keystore\\" -> \\"Go back to experience overview\\"\\n  - Copy your \\"Google Certificate Fingerprint\\", it will output a string that looks like `A1:B2:C3` but longer.\\n- To test this you can:\\n  1. Eject to bare: `expo eject` and run `yarn ios`\\n  2. Build a production IPA: `expo build:android`\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"clientId","kind":1024,"kindString":"Property","comment":{"shortText":"A unique string representing the registration information provided by the client.\\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn\'t be used\\nalone for client authentication.","text":"The client identifier is unique to the authorization server.\\n\\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.clientId"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Client secret supplied by an auth provider.\\nThere is no secure way to store this on the client.","text":"[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.clientSecret"}},{"name":"codeChallenge","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Derived from the code verifier by using the `CodeChallengeMethod`.","text":"[Section 4.2](https://tools.ietf.org/html/rfc7636#section-4.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.codeChallenge"}},{"name":"codeChallengeMethod","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Method used to generate the code challenge. You should never use `Plain` as it\'s not good enough for secure verification.","tags":[{"tag":"default","text":"CodeChallengeMethod.S256\\n"}]},"type":{"type":"reference","name":"CodeChallengeMethod"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.codeChallengeMethod"}},{"name":"expoClientId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Proxy client ID for use in the Expo client on iOS and Android.","text":"This Google Client ID must be setup as follows:\\n\\n- **Application Type**: Web Application\\n- **URIs**: https://auth.expo.io\\n- **Authorized redirect URIs**: https://auth.expo.io/@your-username/your-project-slug\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"extraParams","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Extra query params that\'ll be added to the query string."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.extraParams"}},{"name":"iosClientId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"iOS native client ID for use in standalone, bare workflow, and custom clients.","text":"This Google Client ID must be setup as follows:\\n\\n- **Application Type**: iOS Application\\n- Give it a name (e.g. \\"iOS App\\").\\n- **Bundle ID**: Must match the value of `ios.bundleIdentifier` in your `app.json`.\\n- Your app needs to conform to the URI scheme matching your bundle identifier.\\n  - _Standalone_: Automatically added, do nothing.\\n  - _Bare workflow_: Run `npx uri-scheme add <your bundle id> --ios`\\n- To test this you can:\\n  1. Eject to bare: `expo eject` and run `yarn ios`\\n  2. Create a custom client: `expo client:ios`\\n  3. Build a production IPA: `expo build:ios`\\n- Whenever you change the values in `app.json` you\'ll need to rebuild the native app.\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"language","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Language code ISO 3166-1 alpha-2 region code, such as \'it\' or \'pt-PT\'."},"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"ProviderAuthRequestConfig.language"}},{"name":"loginHint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the user\'s email address is known ahead of time, it can be supplied to be the default option.\\nIf the user has approved access for this app in the past then auth may return without any further interaction."},"type":{"type":"intrinsic","name":"string"}},{"name":"prompt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Informs the server if the user should be prompted to login or consent again.\\nThis can be used to present a dialog for switching accounts after the user has already been logged in.","text":"[Section 3.1.2.1](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationRequest)\\n"},"type":{"type":"reference","name":"Prompt"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.prompt"}},{"name":"redirectUri","kind":1024,"kindString":"Property","comment":{"shortText":"After completing an interaction with a resource owner the\\nserver will redirect to this URI. Learn more about [linking in Expo](https://docs.expo.dev/versions/latest/workflow/linking/).","text":"[Section 3.1.2](https://tools.ietf.org/html/rfc6749#section-3.1.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.redirectUri"}},{"name":"responseType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specifies what is returned from the authorization server.","text":"[Section 3.1.1](https://tools.ietf.org/html/rfc6749#section-3.1.1)\\n","tags":[{"tag":"default","text":"ResponseType.Code\\n"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.responseType"}},{"name":"scopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of strings to request access to.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.scopes"}},{"name":"selectAccount","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"When `true`, the service will allow the user to switch between accounts (if possible).","tags":[{"tag":"default","text":"false.\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"shouldAutoExchangeCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Should the hook automatically exchange the response code for an authentication token.","text":"Defaults to `true` on installed apps (iOS, Android) when `ResponseType.Code` is used (default).\\n"},"type":{"type":"intrinsic","name":"boolean"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Used for protection against [Cross-Site Request Forgery](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.state"}},{"name":"usePKCE","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Should use [Proof Key for Code Exchange](https://oauth.net/2/pkce/).","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.usePKCE"}},{"name":"webClientId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Expo web client ID for use in the browser.","text":"This Google Client ID must be setup as follows:\\n\\n- **Application Type**: Web Application\\n- Give it a name (e.g. \\"Web App\\").\\n- **URIs** (Authorized JavaScript origins): https://localhost:19006 & https://yourwebsite.com\\n- **Authorized redirect URIs**: https://localhost:19006 & https://yourwebsite.com\\n- To test this be sure to start your app with `expo start:web --https`.\\n"},"type":{"type":"intrinsic","name":"string"}}],"extendedTypes":[{"type":"reference","name":"ProviderAuthRequestConfig"}]},{"name":"RefreshTokenRequestConfig","kind":256,"kindString":"Interface","comment":{"shortText":"Config used to request a token refresh, or code exchange.","tags":[{"tag":"see","text":"[Section 6](https://tools.ietf.org/html/rfc6749#section-6)\\n"}]},"children":[{"name":"clientId","kind":1024,"kindString":"Property","comment":{"shortText":"A unique string representing the registration information provided by the client.\\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn\'t be used\\nalone for client authentication.","text":"The client identifier is unique to the authorization server.\\n\\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TokenRequestConfig.clientId"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Client secret supplied by an auth provider.\\nThere is no secure way to store this on the client.","text":"[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TokenRequestConfig.clientSecret"}},{"name":"extraParams","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Extra query params that\'ll be added to the query string."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"},"inheritedFrom":{"type":"reference","name":"TokenRequestConfig.extraParams"}},{"name":"refreshToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The refresh token issued to the client."},"type":{"type":"intrinsic","name":"string"}},{"name":"scopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of strings to request access to.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"TokenRequestConfig.scopes"}}],"extendedTypes":[{"type":"reference","name":"TokenRequestConfig"}],"implementedBy":[{"type":"reference","name":"RefreshTokenRequest"}]},{"name":"RevokeTokenRequestConfig","kind":256,"kindString":"Interface","comment":{"shortText":"Config used to revoke a token.","tags":[{"tag":"see","text":"[Section 2.1](https://tools.ietf.org/html/rfc7009#section-2.1)\\n"}]},"children":[{"name":"clientId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A unique string representing the registration information provided by the client.\\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn\'t be used\\nalone for client authentication.","text":"The client identifier is unique to the authorization server.\\n\\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Partial.clientId"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Client secret supplied by an auth provider.\\nThere is no secure way to store this on the client.","text":"[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Partial.clientSecret"}},{"name":"extraParams","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Extra query params that\'ll be added to the query string."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"},"inheritedFrom":{"type":"reference","name":"Partial.extraParams"}},{"name":"scopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of strings to request access to.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"Partial.scopes"}},{"name":"token","kind":1024,"kindString":"Property","comment":{"shortText":"The token that the client wants to get revoked.","text":"[Section 3.1](https://tools.ietf.org/html/rfc6749#section-3.1)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"tokenTypeHint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A hint about the type of the token submitted for revocation.","text":"[Section 3.2](https://tools.ietf.org/html/rfc6749#section-3.2)\\n"},"type":{"type":"reference","name":"TokenTypeHint"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"TokenRequestConfig"}],"name":"Partial"}],"implementedBy":[{"type":"reference","name":"RevokeTokenRequest"}]},{"name":"ServerTokenResponseConfig","kind":256,"kindString":"Interface","comment":{"shortText":"Object returned from the server after a token response."},"children":[{"name":"access_token","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"expires_in","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"id_token","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"issued_at","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"refresh_token","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"scope","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"token_type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"TokenType"}}]},{"name":"TokenRequestConfig","kind":256,"kindString":"Interface","comment":{"shortText":"Config used to request a token refresh, revocation, or code exchange."},"children":[{"name":"clientId","kind":1024,"kindString":"Property","comment":{"shortText":"A unique string representing the registration information provided by the client.\\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn\'t be used\\nalone for client authentication.","text":"The client identifier is unique to the authorization server.\\n\\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Client secret supplied by an auth provider.\\nThere is no secure way to store this on the client.","text":"[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"extraParams","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Extra query params that\'ll be added to the query string."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"}},{"name":"scopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of strings to request access to.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"extendedBy":[{"type":"reference","name":"AccessTokenRequestConfig"},{"type":"reference","name":"RefreshTokenRequestConfig"}]},{"name":"TokenResponseConfig","kind":256,"kindString":"Interface","children":[{"name":"accessToken","kind":1024,"kindString":"Property","comment":{"shortText":"The access token issued by the authorization server.","text":"[Section 4.2.2](https://tools.ietf.org/html/rfc6749#section-4.2.2)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"expiresIn","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The lifetime in seconds of the access token.","text":"For example, the value `3600` denotes that the access token will\\nexpire in one hour from the time the response was generated.\\n\\nIf omitted, the authorization server should provide the\\nexpiration time via other means or document the default value.\\n\\n[Section 4.2.2](https://tools.ietf.org/html/rfc6749#section-4.2.2)\\n"},"type":{"type":"intrinsic","name":"number"}},{"name":"idToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"ID Token value associated with the authenticated session.","text":"[TokenResponse](https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"issuedAt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Time in seconds when the token was received by the client."},"type":{"type":"intrinsic","name":"number"}},{"name":"refreshToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The refresh token, which can be used to obtain new access tokens using the same authorization grant.","text":"[Section 5.1](https://tools.ietf.org/html/rfc6749#section-5.1)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"scope","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The scope of the access token. Only required if it\'s different to the scope that was requested by the client.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Required if the \\"state\\" parameter was present in the client\\nauthorization request.  The exact value received from the client.","text":"[Section 4.2.2](https://tools.ietf.org/html/rfc6749#section-4.2.2)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"tokenType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The type of the token issued. Value is case insensitive.","text":"[Section 7.1](https://tools.ietf.org/html/rfc6749#section-7.1)\\n"},"type":{"type":"reference","name":"TokenType"}}],"implementedBy":[{"type":"reference","name":"TokenResponse"}]},{"name":"AuthRequestPromptOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Options passed to the `promptAsync()` method of `AuthRequest`s.\\nThis can be used to configure how the web browser should look and behave."},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserOpenOptions"},{"type":"literal","value":"windowFeatures"}],"name":"Omit"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"projectNameForProxy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Project name to use for the \\\\`auth.expo.io\\\\` proxy when `useProxy` is true."},"type":{"type":"intrinsic","name":"string"}},{"name":"proxyOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL options to be used when creating the redirect URL for the auth proxy."},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"CreateURLOptions"},{"type":"literal","value":"queryParams"}],"name":"Omit"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"path","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"url","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL to open when prompting the user. This usually should be defined internally and left `undefined` in most cases."},"type":{"type":"intrinsic","name":"string"}},{"name":"useProxy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Should the authentication request use the Expo proxy service `auth.expo.io`.","tags":[{"tag":"default","text":"false\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"windowFeatures","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Features to use with `window.open()`.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"reference","name":"WebBrowserWindowFeatures"}}]}}]}},{"name":"AuthSessionOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"authUrl","kind":1024,"kindString":"Property","comment":{"shortText":"The URL that points to the sign in page that you would like to open the user to."},"type":{"type":"intrinsic","name":"string"}},{"name":"projectNameForProxy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Project name to use for the \\\\`auth.expo.io\\\\` proxy."},"type":{"type":"intrinsic","name":"string"}},{"name":"returnUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The URL to return to the application. In managed apps, it\'s optional and defaults to output of [`Linking.createURL(\'expo-auth-session\', params)`](./linking/#linkingcreateurlpath-namedparameters)\\ncall with `scheme` and `queryParams` params. However, in the bare app, it\'s required - `AuthSession` needs to know where to wait for the response.\\nHence, this method will throw an exception, if you don\'t provide `returnUrl`."},"type":{"type":"intrinsic","name":"string"}},{"name":"showInRecents","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether browsed website should be shown as separate entry in Android recents/multitasking view.","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"AuthSessionRedirectUriOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Options passed to `makeRedirectUriAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isTripleSlashed","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Should the URI be triple slashed `scheme:///path` or double slashed `scheme://path`.\\nDefaults to `false`.\\nPassed to `Linking.createURL()` when `useProxy` is `false`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"native","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Manual scheme to use in Bare and Standalone native app contexts. Takes precedence over all other properties.\\nYou must define the URI scheme that will be used in a custom built native application or standalone Expo application.\\nThe value should conform to your native app\'s URI schemes.\\nYou can see conformance with `npx uri-scheme list`."},"type":{"type":"intrinsic","name":"string"}},{"name":"path","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Optional path to append to a URI. This will not be added to `native`."},"type":{"type":"intrinsic","name":"string"}},{"name":"preferLocalhost","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Attempt to convert the Expo server IP address to localhost.\\nThis is useful for testing when your IP changes often, this will only work for iOS simulator.","tags":[{"tag":"default","text":"false\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"projectNameForProxy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Project name to use for the \\\\`auth.expo.io\\\\` proxy when `useProxy` is true."},"type":{"type":"intrinsic","name":"string"}},{"name":"queryParams","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Optional native scheme to use when proxy is disabled.\\nURI protocol `<scheme>://` that must be built into your native app.\\nPassed to `Linking.createURL()` when `useProxy` is `false`."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"undefined"}]}],"name":"Record"}},{"name":"scheme","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URI protocol `<scheme>://` that must be built into your native app.\\nPassed to `Linking.createURL()` when `useProxy` is `false`."},"type":{"type":"intrinsic","name":"string"}},{"name":"useProxy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Should use the \\\\`auth.expo.io\\\\` proxy.\\nThis is useful for testing managed native apps that require a custom URI scheme.","tags":[{"tag":"default","text":"false\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"AuthSessionResult","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Object returned after an auth request has completed.\\n- If the user cancelled the authentication session by closing the browser, the result is `{ type: \'cancel\' }`.\\n- If the authentication is dismissed manually with `AuthSession.dismiss()`, the result is `{ type: \'dismiss\' }`.\\n- If the authentication flow is successful, the result is `{ type: \'success\', params: Object, event: Object }`.\\n- If the authentication flow is returns an error, the result is `{ type: \'error\', params: Object, error: string, event: Object }`.\\n- If you call `AuthSession.startAsync()` more than once before the first call has returned, the result is `{ type: \'locked\' }`,\\n  because only one `AuthSession` can be in progress at any time."},"type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"How the auth completed."},"type":{"type":"union","types":[{"type":"literal","value":"cancel"},{"type":"literal","value":"dismiss"},{"type":"literal","value":"opened"},{"type":"literal","value":"locked"}]}}]}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"authentication","kind":1024,"kindString":"Property","comment":{"shortText":"Returned when the auth finishes with an `access_token` property."},"type":{"type":"union","types":[{"type":"reference","name":"TokenResponse"},{"type":"literal","value":null}]}},{"name":"error","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Possible error if the auth failed with type `error`."},"type":{"type":"union","types":[{"type":"reference","name":"AuthError"},{"type":"literal","value":null}]}},{"name":"errorCode","kind":1024,"kindString":"Property","comment":{"tags":[{"tag":"deprecated","text":"Legacy error code query param, use `error` instead.\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"params","kind":1024,"kindString":"Property","comment":{"shortText":"Query params from the `url` as an object."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"How the auth completed."},"type":{"type":"union","types":[{"type":"literal","value":"error"},{"type":"literal","value":"success"}]}},{"name":"url","kind":1024,"kindString":"Property","comment":{"shortText":"Auth URL that was opened"},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"Issuer","kind":4194304,"kindString":"Type alias","comment":{"shortText":"URL using the `https` scheme with no query or fragment component that the OP asserts as its Issuer Identifier."},"type":{"type":"intrinsic","name":"string"}},{"name":"IssuerOrDiscovery","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"Issuer"},{"type":"reference","name":"DiscoveryDocument"}]}},{"name":"ProviderMetadata","kind":4194304,"kindString":"Type alias","comment":{"shortText":"OpenID Providers have metadata describing their configuration.\\n[ProviderMetadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata)"},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"boolean"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}],"name":"Record"},{"type":"reference","name":"ProviderMetadataEndpoints"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"backchannel_logout_session_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"backchannel_logout_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"check_session_iframe","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"claim_types_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"a list of the Claim Types that the OpenID Provider supports."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"claims_locales_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Languages and scripts supported for values in Claims being returned."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"claims_parameter_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value specifying whether the OP supports use of the claims parameter, with `true` indicating support.","tags":[{"tag":"default","text":"false\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"claims_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"a list of the Claim Names of the Claims that the OpenID Provider may be able to supply values for.\\nNote that for privacy or other reasons, this might not be an exhaustive list."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"code_challenge_methods_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"reference","name":"CodeChallengeMethod"}}},{"name":"display_values_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":" a list of the `display` parameter values that the OpenID Provider supports."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"frontchannel_logout_session_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"frontchannel_logout_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"grant_types_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"JSON array containing a list of the OAuth 2.0 Grant Type values that this OP supports.\\nDynamic OpenID Providers MUST support the authorization_code and implicit Grant Type values and MAY support other Grant Types.\\nIf omitted, the default value is [\\"authorization_code\\", \\"implicit\\"]."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"id_token_signing_alg_values_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"JSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for the ID Token to encode the Claims in a JWT.\\nThe algorithm RS256 MUST be included."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"jwks_uri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL of the OP\'s JSON Web Key Set [JWK](https://openid.net/specs/openid-connect-discovery-1_0.html#JWK) document."},"type":{"type":"intrinsic","name":"string"}},{"name":"op_policy_uri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL that the OpenID Provider provides to the person registering the Client to read about the OP\'s requirements on how\\nthe Relying Party can use the data provided by the OP. The registration process SHOULD display this URL to the person\\nregistering the Client if it is given."},"type":{"type":"intrinsic","name":"string"}},{"name":"op_tos_uri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL that the OpenID Provider provides to the person registering the Client to read about OpenID Provider\'s terms of service.\\nThe registration process should display this URL to the person registering the Client if it is given."},"type":{"type":"intrinsic","name":"string"}},{"name":"request_parameter_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value specifying whether the OP supports use of the request parameter, with `true` indicating support.","tags":[{"tag":"default","text":"false\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"request_uri_parameter_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the OP supports use of the `request_uri` parameter, with `true` indicating support.","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"require_request_uri_registration","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the OP requires any `request_uri` values used to be pre-registered using the `request_uris` registration parameter.\\nPre-registration is required when the value is `true`.","tags":[{"tag":"default","text":"false\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"response_modes_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"JSON array containing a list of the OAuth 2.0 `response_mode` values that this OP supports,\\nas specified in [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-discovery-1_0.html#OAuth.Responses).\\nIf omitted, the default for Dynamic OpenID Providers is `[\\"query\\", \\"fragment\\"]`."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"response_types_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"JSON array containing a list of the OAuth 2.0 `response_type` values that this OP supports.\\nDynamic OpenID Providers must support the `code`, `id_token`, and the `token` `id_token` Response Type values"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"scopes_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"JSON array containing a list of the OAuth 2.0 [RFC6749](https://openid.net/specs/openid-connect-discovery-1_0.html#RFC6749)\\nscope values that this server supports."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"service_documentation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL of a page containing human-readable information that developers might want or need to know when using the OpenID Provider.\\nIn particular, if the OpenID Provider does not support Dynamic Client Registration, then information on how to register Clients\\nneeds to be provided in this documentation."},"type":{"type":"intrinsic","name":"string"}},{"name":"subject_types_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"JSON array containing a list of the Subject Identifier types that this OP supports.\\nValid types include `pairwise` and `public`."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"token_endpoint_auth_methods_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A list of Client authentication methods supported by this Token Endpoint.\\nIf omitted, the default is `[\'client_secret_basic\']`"},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"literal","value":"client_secret_post"},{"type":"literal","value":"client_secret_basic"},{"type":"literal","value":"client_secret_jwt"},{"type":"literal","value":"private_key_jwt"},{"type":"intrinsic","name":"string"}]}}},{"name":"ui_locales_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Languages and scripts supported for the user interface,\\nrepresented as a JSON array of [BCP47](https://openid.net/specs/openid-connect-discovery-1_0.html#RFC5646) language tag values."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}}]}},{"name":"TokenType","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Access token type.","tags":[{"tag":"see","text":"[Section 7.1](https://tools.ietf.org/html/rfc6749#section-7.1)\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":"bearer"},{"type":"literal","value":"mac"}]}},{"name":"dismiss","kind":64,"kindString":"Function","signatures":[{"name":"dismiss","kind":4096,"kindString":"Call signature","comment":{"shortText":"Cancels an active `AuthSession` if there is one. No return value, but if there is an active `AuthSession`\\nthen the Promise returned by the `AuthSession.startAsync()` that initiated it resolves to `{ type: \'dismiss\' }`."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"exchangeCodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"exchangeCodeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Exchange an authorization code for an access token that can be used to get data from the provider.","returns":"Returns a discovery document with a valid `tokenEndpoint` URL.\\n"},"parameters":[{"name":"config","kind":32768,"kindString":"Parameter","comment":{"shortText":"Configuration used to exchange the code for a token."},"type":{"type":"reference","name":"AccessTokenRequestConfig"}},{"name":"discovery","kind":32768,"kindString":"Parameter","comment":{"shortText":"The `tokenEndpoint` for a provider."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument"},{"type":"literal","value":"tokenEndpoint"}],"name":"Pick"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse"}],"name":"Promise"}}]},{"name":"fetchDiscoveryAsync","kind":64,"kindString":"Function","signatures":[{"name":"fetchDiscoveryAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Fetch a `DiscoveryDocument` from a well-known resource provider that supports auto discovery.","returns":"Returns a discovery document that can be used for authentication.\\n"},"parameters":[{"name":"issuer","kind":32768,"kindString":"Parameter","comment":{"shortText":"An `Issuer` URL to fetch from."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument"}],"name":"Promise"}}]},{"name":"fetchUserInfoAsync","kind":64,"kindString":"Function","signatures":[{"name":"fetchUserInfoAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Fetch generic user info from the provider\'s OpenID Connect `userInfoEndpoint` (if supported).","tags":[{"tag":"see","text":"[UserInfo](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo).\\n"}]},"parameters":[{"name":"config","kind":32768,"kindString":"Parameter","comment":{"shortText":"The `accessToken` for a user, returned from a code exchange or auth request."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse"},{"type":"literal","value":"accessToken"}],"name":"Pick"}},{"name":"discovery","kind":32768,"kindString":"Parameter","comment":{"shortText":"The `userInfoEndpoint` for a provider.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument"},{"type":"literal","value":"userInfoEndpoint"}],"name":"Pick"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}],"name":"Promise"}}]},{"name":"generateHexStringAsync","kind":64,"kindString":"Function","signatures":[{"name":"generateHexStringAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Digest a random string with hex encoding, useful for creating `nonce`s."},"parameters":[{"name":"size","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getDefaultReturnUrl","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"getDefaultReturnUrl","kind":4096,"kindString":"Call signature","parameters":[{"name":"urlPath","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CreateURLOptions"},{"type":"literal","value":"queryParams"}],"name":"Omit"}}],"type":{"type":"intrinsic","name":"string"}}]},{"name":"getRedirectUrl","kind":64,"kindString":"Function","signatures":[{"name":"getRedirectUrl","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the URL that your authentication provider needs to redirect to. For example: `https://auth.expo.io/@your-username/your-app-slug`. You can pass an additional path component to be appended to the default redirect URL.\\n> **Note** This method will throw an exception if you\'re using the bare workflow on native.","returns":"\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst url = AuthSession.getRedirectUrl(\'redirect\');\\n\\n// Managed: https://auth.expo.io/@your-username/your-app-slug/redirect\\n// Web: https://localhost:19006/redirect\\n```\\n"},{"tag":"deprecated","text":"Use `makeRedirectUri({ path, useProxy })` instead.\\n"}]},"parameters":[{"name":"path","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]},{"name":"loadAsync","kind":64,"kindString":"Function","signatures":[{"name":"loadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Build an `AuthRequest` and load it before returning.","returns":"Returns an instance of `AuthRequest` that can be used to prompt the user for authorization.\\n"},"parameters":[{"name":"config","kind":32768,"kindString":"Parameter","comment":{"shortText":"A valid [`AuthRequestConfig`](#authrequestconfig) that specifies what provider to use."},"type":{"type":"reference","name":"AuthRequestConfig"}},{"name":"issuerOrDiscovery","kind":32768,"kindString":"Parameter","comment":{"shortText":"A loaded [`DiscoveryDocument`](#discoverydocument) or issuer URL.\\n(Only `authorizationEndpoint` is required for requesting an authorization code)."},"type":{"type":"reference","name":"IssuerOrDiscovery"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AuthRequest"}],"name":"Promise"}}]},{"name":"makeRedirectUri","kind":64,"kindString":"Function","signatures":[{"name":"makeRedirectUri","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a redirect url for the current platform and environment. You need to manually define the redirect that will be used in\\na bare workflow React Native app, or an Expo standalone app, this is because it cannot be inferred automatically.\\n- **Web:** Generates a path based on the current `window.location`. For production web apps, you should hard code the URL as well.\\n- **Managed workflow:** Uses the `scheme` property of your `app.config.js` or `app.json`.\\n  - **Proxy:** Uses `auth.expo.io` as the base URL for the path. This only works in Expo Go and standalone environments.\\n- **Bare workflow:** Will fallback to using the `native` option for bare workflow React Native apps.","returns":"The `redirectUri` to use in an authentication request.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst redirectUri = makeRedirectUri({\\n  scheme: \'my-scheme\',\\n  path: \'redirect\'\\n});\\n// Custom app: my-scheme://redirect\\n// Expo Go: exp://127.0.0.1:19000/--/redirect\\n// Web dev: https://localhost:19006/redirect\\n// Web prod: https://yourwebsite.com/redirect\\n\\nconst redirectUri2 = makeRedirectUri({\\n  scheme: \'scheme2\',\\n  preferLocalhost: true,\\n  isTripleSlashed: true,\\n});\\n// Custom app: scheme2:///\\n// Expo Go: exp://localhost:19000\\n// Web dev: https://localhost:19006\\n// Web prod: https://yourwebsite.com\\n\\nconst redirectUri3 = makeRedirectUri({\\n  useProxy: true,\\n});\\n// Custom app: https://auth.expo.io/@username/slug\\n// Expo Go: https://auth.expo.io/@username/slug\\n// Web dev: https://localhost:19006\\n// Web prod: https://yourwebsite.com\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"Additional options for configuring the path."},"originalName":"__namedParameters","type":{"type":"reference","name":"AuthSessionRedirectUriOptions"},"defaultValue":"{}"}],"type":{"type":"intrinsic","name":"string"}}]},{"name":"refreshAsync","kind":64,"kindString":"Function","signatures":[{"name":"refreshAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Refresh an access token.\\n- If the provider didn\'t return a `refresh_token` then the access token may not be refreshed.\\n- If the provider didn\'t return a `expires_in` then it\'s assumed that the token does not expire.\\n- Determine if a token needs to be refreshed via `TokenResponse.isTokenFresh()` or `shouldRefresh()` on an instance of `TokenResponse`.","returns":"Returns a discovery document with a valid `tokenEndpoint` URL.\\n","tags":[{"tag":"see","text":"[Section 6](https://tools.ietf.org/html/rfc6749#section-6).\\n"}]},"parameters":[{"name":"config","kind":32768,"kindString":"Parameter","comment":{"shortText":"Configuration used to refresh the given access token."},"type":{"type":"reference","name":"RefreshTokenRequestConfig"}},{"name":"discovery","kind":32768,"kindString":"Parameter","comment":{"shortText":"The `tokenEndpoint` for a provider."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument"},{"type":"literal","value":"tokenEndpoint"}],"name":"Pick"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse"}],"name":"Promise"}}]},{"name":"resolveDiscoveryAsync","kind":64,"kindString":"Function","signatures":[{"name":"resolveDiscoveryAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Utility method for resolving the discovery document from an issuer or object."},"parameters":[{"name":"issuerOrDiscovery","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"IssuerOrDiscovery"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument"}],"name":"Promise"}}]},{"name":"revokeAsync","kind":64,"kindString":"Function","signatures":[{"name":"revokeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Revoke a token with a provider. This makes the token unusable, effectively requiring the user to login again.","returns":"Returns a discovery document with a valid `revocationEndpoint` URL. Many providers do not support this feature.\\n"},"parameters":[{"name":"config","kind":32768,"kindString":"Parameter","comment":{"shortText":"Configuration used to revoke a refresh or access token."},"type":{"type":"reference","name":"RevokeTokenRequestConfig"}},{"name":"discovery","kind":32768,"kindString":"Parameter","comment":{"shortText":"The `revocationEndpoint` for a provider."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument"},{"type":"literal","value":"revocationEndpoint"}],"name":"Pick"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"startAsync","kind":64,"kindString":"Function","signatures":[{"name":"startAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Initiate a proxied authentication session with the given options. Only one `AuthSession` can be active at any given time in your application.\\nIf you attempt to open a second session while one is still in progress, the second session will return a value to indicate that `AuthSession` is locked.","returns":"Returns a Promise that resolves to an `AuthSessionResult` object.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An object of type `AuthSessionOptions`."},"type":{"type":"reference","name":"AuthSessionOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AuthSessionResult"}],"name":"Promise"}}]},{"name":"useAuthRequest","kind":64,"kindString":"Function","signatures":[{"name":"useAuthRequest","kind":4096,"kindString":"Call signature","comment":{"shortText":"Load an authorization request for a code. When the prompt method completes then the response will be fulfilled.","text":"> In order to close the popup window on web, you need to invoke `WebBrowser.maybeCompleteAuthSession()`.\\n> See the [Identity example](/guides/authentication.md#identityserver-4) for more info.\\n\\nIf an Implicit grant flow was used, you can pass the `response.params` to `TokenResponse.fromQueryParams()`\\nto get a `TokenResponse` instance which you can use to easily refresh the token.\\n","returns":"Returns a loaded request, a response, and a prompt method in a single array in the following order:\\n- `request` - An instance of [`AuthRequest`](#authrequest) that can be used to prompt the user for authorization.\\n  This will be `null` until the auth request has finished loading.\\n- `response` - This is `null` until `promptAsync` has been invoked. Once fulfilled it will return information about the authorization.\\n- `promptAsync` - When invoked, a web browser will open up and prompt the user for authentication.\\n  Accepts an [`AuthRequestPromptOptions`](#authrequestpromptoptions) object with options about how the prompt will execute.\\n  You can use this to enable the Expo proxy service `auth.expo.io`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst [request, response, promptAsync] = useAuthRequest({ ... }, { ... });\\n```\\n"}]},"parameters":[{"name":"config","kind":32768,"kindString":"Parameter","comment":{"shortText":"A valid [`AuthRequestConfig`](#authrequestconfig) that specifies what provider to use."},"type":{"type":"reference","name":"AuthRequestConfig"}},{"name":"discovery","kind":32768,"kindString":"Parameter","comment":{"shortText":"A loaded [`DiscoveryDocument`](#discoverydocument) with endpoints used for authenticating.\\nOnly `authorizationEndpoint` is required for requesting an authorization code.\\n"},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"DiscoveryDocument"}]}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"reference","name":"AuthRequest"},{"type":"literal","value":null}]},{"type":"union","types":[{"type":"reference","name":"AuthSessionResult"},{"type":"literal","value":null}]},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"AuthRequestPromptOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AuthSessionResult"}],"name":"Promise"}}]}}]}}]},{"name":"useAutoDiscovery","kind":64,"kindString":"Function","signatures":[{"name":"useAutoDiscovery","kind":4096,"kindString":"Call signature","comment":{"shortText":"Given an OpenID Connect issuer URL, this will fetch and return the [`DiscoveryDocument`](#discoverydocument)\\n(a collection of URLs) from the resource provider.","returns":"Returns `null` until the [`DiscoveryDocument`](#discoverydocument) has been fetched from the provided issuer URL.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst discovery = useAutoDiscovery(\'https://example.com/auth\');\\n```\\n"}]},"parameters":[{"name":"issuerOrDiscovery","kind":32768,"kindString":"Parameter","comment":{"shortText":"URL using the `https` scheme with no query or fragment component that the OP asserts as its Issuer Identifier."},"type":{"type":"reference","name":"IssuerOrDiscovery"}}],"type":{"type":"union","types":[{"type":"reference","name":"DiscoveryDocument"},{"type":"literal","value":null}]}}]}]}')},CCaE:function(e,w,n){"use strict";e.exports=p;var c=n("vUGn");function p(d,a){return d.dangerous?d.augment(a,c("raw",a.value)):null}},CGL2:function(e,w,n){var c=n("Q3zd"),p=n("yRGd"),d=n("O+c1"),a={tokenize:m};w.text={91:a};function m(s,i,o){var t=this;return l;function l(h){return h!==91||t.previous!==null||!t._gfmTasklistFirstContentOfListItem?o(h):(s.enter("taskListCheck"),s.enter("taskListCheckMarker"),s.consume(h),s.exit("taskListCheckMarker"),k)}function k(h){return h===-2||h===32?(s.enter("taskListCheckValueUnchecked"),s.consume(h),s.exit("taskListCheckValueUnchecked"),g):h===88||h===120?(s.enter("taskListCheckValueChecked"),s.consume(h),s.exit("taskListCheckValueChecked"),g):o(h)}function g(h){return h===93?(s.enter("taskListCheckMarker"),s.consume(h),s.exit("taskListCheckMarker"),s.exit("taskListCheck"),s.check({tokenize:r},i,o)):o(h)}}function r(s,i,o){var t=this;return p(s,l,"whitespace");function l(k){return d(t.events,"whitespace")&&k!==null&&!c(k)?i(k):o(k)}}},CUvb:function(e,w,n){"use strict";var c=n("E/Jm"),p=n("Q3zd"),d=n("2N74"),a=n("Vx/6"),m=n("yRGd"),r={name:"headingAtx",tokenize:i,resolve:s};function s(o,t){var l=o.length-2,k=3,g,h;return o[k][1].type==="whitespace"&&(k+=2),l-2>k&&o[l][1].type==="whitespace"&&(l-=2),o[l][1].type==="atxHeadingSequence"&&(k===l-1||l-4>k&&o[l-2][1].type==="whitespace")&&(l-=k+1===l?2:4),l>k&&(g={type:"atxHeadingText",start:o[k][1].start,end:o[l][1].end},h={type:"chunkText",start:o[k][1].start,end:o[l][1].end,contentType:"text"},a(o,k,l-k+1,[["enter",g,t],["enter",h,t],["exit",h,t],["exit",g,t]])),o}function i(o,t,l){var k=this,g=0;return h;function h(y){return o.enter("atxHeading"),o.enter("atxHeadingSequence"),f(y)}function f(y){return y===35&&g++<6?(o.consume(y),f):y===null||p(y)?(o.exit("atxHeadingSequence"),k.interrupt?t(y):S(y)):l(y)}function S(y){return y===35?(o.enter("atxHeadingSequence"),b(y)):y===null||c(y)?(o.exit("atxHeading"),t(y)):d(y)?m(o,S,"whitespace")(y):(o.enter("atxHeadingText"),P(y))}function b(y){return y===35?(o.consume(y),b):(o.exit("atxHeadingSequence"),S(y))}function P(y){return y===null||y===35||p(y)?(o.exit("atxHeadingText"),S(y)):(o.consume(y),P)}}e.exports=r},CX3E:function(e){e.exports=JSON.parse('{"name":"expo-linear-gradient","kind":1,"kindString":"Project","originalName":"","children":[{"name":"LinearGradient","kind":128,"kindString":"Class","comment":{"shortText":"Renders a native view that transitions between multiple colors in a linear direction."},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new LinearGradient","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"reference","name":"LinearGradientProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}]}}],"type":{"type":"reference","name":"LinearGradient"},"inheritedFrom":{"type":"reference","name":"React.Component<LinearGradientProps>.constructor"}},{"name":"new LinearGradient","kind":16384,"kindString":"Constructor signature","comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"LinearGradientProps"}},{"name":"context","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"LinearGradient"},"inheritedFrom":{"type":"reference","name":"React.Component<LinearGradientProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<LinearGradientProps>.constructor"}},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"ReactNode"}}]}}],"name":"Readonly"}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}}],"name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"render","kind":2048,"kindString":"Method","signatures":[{"name":"render","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Component"}]},{"name":"LinearGradientPoint","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object `{ x: number; y: number }` or array `[x, y]` that represents the point\\nat which the gradient starts or ends, as a fraction of the overall size of the gradient ranging\\nfrom `0` to `1`, inclusive."},"type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"x","kind":1024,"kindString":"Property","comment":{"shortText":"A number ranging from `0` to `1`, representing the position of gradient transformation."},"type":{"type":"intrinsic","name":"number"}},{"name":"y","kind":1024,"kindString":"Property","comment":{"shortText":"A number ranging from `0` to `1`, representing the position of gradient transformation."},"type":{"type":"intrinsic","name":"number"}}]}},{"type":"reference","name":"NativeLinearGradientPoint"}]}},{"name":"LinearGradientProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"colors","kind":1024,"kindString":"Property","comment":{"shortText":"An array of colors that represent stops in the gradient. At least two colors are required\\n(for a single-color background, use the `style.backgroundColor` prop on a `View` component)."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"end","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"For example, `{ x: 0.1, y: 0.2 }` means that the gradient will end `10%` from the left and `20%` from the bottom.","text":"**On web**, this only changes the angle of the gradient because CSS gradients don\'t support changing the end position.","tags":[{"tag":"default","text":"{ x: 0.5, y: 1.0 }\\n"}]},"type":{"type":"union","types":[{"type":"reference","name":"LinearGradientPoint"},{"type":"literal","value":null}]}},{"name":"locations","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array that contains `number`s ranging from `0` to `1`, inclusive, and is the same length as the `colors` property.\\nEach number indicates a color-stop location where each respective color should be located.\\nIf not specified, the colors will be distributed evenly across the gradient.","text":"For example, `[0.5, 0.8]` would render:\\n- the first color, solid, from the beginning of the gradient view to 50% through (the middle);\\n- a gradient from the first color to the second from the 50% point to the 80% point; and\\n- the second color, solid, from the 80% point to the end of the gradient view.\\n\\n> The color-stop locations must be ascending from least to greatest.","tags":[{"tag":"default","text":"[]\\n"}]},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"literal","value":null}]}},{"name":"start","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"For example, `{ x: 0.1, y: 0.2 }` means that the gradient will start `10%` from the left and `20%` from the top.","text":"**On web**, this only changes the angle of the gradient because CSS gradients don\'t support changing the starting position.","tags":[{"tag":"default","text":"{ x: 0.5, y: 0.0 }\\n"}]},"type":{"type":"union","types":[{"type":"reference","name":"LinearGradientPoint"},{"type":"literal","value":null}]}}]}}]}}]}')},CteC:function(e){e.exports=JSON.parse('{"name":"expo-application","kind":1,"kindString":"Project","originalName":"","children":[{"name":"ApplicationReleaseType","kind":8,"kindString":"Enumeration","children":[{"name":"AD_HOC","kind":16,"kindString":"Enumeration member","defaultValue":"4"},{"name":"APP_STORE","kind":16,"kindString":"Enumeration member","defaultValue":"5"},{"name":"DEVELOPMENT","kind":16,"kindString":"Enumeration member","defaultValue":"3"},{"name":"ENTERPRISE","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"SIMULATOR","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","defaultValue":"0"}]},{"name":"androidId","kind":32,"kindString":"Variable","comment":{"shortText":"The value of [`Settings.Secure.ANDROID_ID`](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID).\\nThis is a hexadecimal `string` unique to each combination of app-signing key, user, and device.\\nThe value may change if a factory reset is performed on the device or if an APK signing key changes.\\nFor more information about how the platform handles `ANDROID_ID` in Android 8.0 (API level 26)\\nand higher, see [Android 8.0 Behavior Changes](https://developer.android.com/about/versions/oreo/android-8.0-changes.html#privacy-all).\\nOn iOS and web, this value is `null`.\\n> In versions of the platform lower than Android 8.0 (API level 26), this value remains constant\\n> for the lifetime of the user\'s device. See the [ANDROID_ID](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID)\\n> official docs for more information.","tags":[{"tag":"example","text":"`\\"dd96dec43fb81c97\\"`"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"applicationId","kind":32,"kindString":"Variable","comment":{"shortText":"The ID of the application. On Android, this is the application ID. On iOS, this is the bundle ID.\\nOn web, this is `null`.","tags":[{"tag":"example","text":"`\\"com.cocoacasts.scribbles\\"`, `\\"com.apple.Pages\\"`\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"applicationName","kind":32,"kindString":"Variable","comment":{"shortText":"The human-readable name of the application that is displayed with the app\'s icon on the device\'s\\nhome screen or desktop. On Android and iOS, this value is a `string` unless the name could not be\\nretrieved, in which case this value will be `null`. On web this value is `null`.","tags":[{"tag":"example","text":"`\\"Expo\\"`, `\\"Yelp\\"`, `\\"Instagram\\"`\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"nativeApplicationVersion","kind":32,"kindString":"Variable","comment":{"shortText":"The human-readable version of the native application that may be displayed in the app store.\\nThis is the `Info.plist` value for `CFBundleShortVersionString` on iOS and the version name set\\nby `version` in `app.json` on Android at the time the native app was built.\\nOn web, this value is `null`.","tags":[{"tag":"example","text":"`\\"2.11.0\\"`\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"nativeBuildVersion","kind":32,"kindString":"Variable","comment":{"shortText":"The internal build version of the native application that the app store may use to distinguish\\nbetween different binaries. This is the `Info.plist` value for `CFBundleVersion` on iOS (set with\\n`ios.buildNumber` value in `app.json` in a standalone app) and the version code set by\\n`android.versionCode` in `app.json` on Android at the time the native app was built. On web, this\\nvalue is `null`. The return type on Android and iOS is `string`.","tags":[{"tag":"example","text":"iOS: `\\"2.11.0\\"`, Android: `\\"114\\"`\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"getInstallReferrerAsync","kind":64,"kindString":"Function","signatures":[{"name":"getInstallReferrerAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the referrer URL of the installed app with the [`Install Referrer API`](https://developer.android.com/google/play/installreferrer)\\nfrom the Google Play Store. In practice, the referrer URL may not be a complete, absolute URL.","returns":"A `Promise` that fulfills with a `string` of the referrer URL of the installed app.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Application.getInstallReferrerAsync();\\n// \\"utm_source=google-play&utm_medium=organic\\"\\n```"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getInstallationTimeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getInstallationTimeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the time the app was installed onto the device, not counting subsequent updates. If the app\\nis uninstalled and reinstalled, this method returns the time the app was reinstalled.\\n- On iOS, this method uses the [`NSFileCreationDate`](https://developer.apple.com/documentation/foundation/nsfilecreationdate?language=objc)\\nof the app\'s document root directory.\\n- On Android, this method uses [`PackageInfo.firstInstallTime`](https://developer.android.com/reference/android/content/pm/PackageInfo.html#firstInstallTime).\\n- On web, this method returns `null`.","returns":"Returns a `Promise` that fulfills with a `Date` object that specifies the time the app\\nwas installed on the device.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Application.getInstallationTimeAsync();\\n// 2019-07-18T18:08:26.121Z\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Date"}],"name":"Promise"}}]},{"name":"getIosApplicationReleaseTypeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIosApplicationReleaseTypeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the iOS application release type.","returns":"Returns a promise which fulfills with an [`ApplicationReleaseType`](#applicationreleasetype).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ApplicationReleaseType"}],"name":"Promise"}}]},{"name":"getIosIdForVendorAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIosIdForVendorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the iOS \\"identifier for vendor\\" ([IDFV](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor))\\nvalue, a string ID that uniquely identifies a device to the app\u2019s vendor. This method may\\nsometimes return `nil`, in which case wait and call the method again later. This might happen\\nwhen the device has been restarted before the user has unlocked the device.","text":"The OS will change the vendor identifier if all apps from the current app\'s vendor have been\\nuninstalled.\\n","returns":"A `Promise` that fulfills with a `string` specifying the app\'s vendor ID. Apps from the\\nsame vendor will return the same ID. See Apple\'s documentation for more information about the\\nvendor ID\'s semantics.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Application.getIosIdForVendorAsync();\\n// \\"68753A44-4D6F-1226-9C60-0050E4C00067\\"\\n```"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getIosPushNotificationServiceEnvironmentAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIosPushNotificationServiceEnvironmentAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current [Apple Push Notification (APN)](https://developer.apple.com/documentation/bundleresources/entitlements/aps-environment?language=objc)\\nservice environment.","returns":"Returns a promise fulfilled with the string, either `\'development\'` or `\'production\'`,\\nbased on the current APN environment.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getLastUpdateTimeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getLastUpdateTimeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the last time the app was updated from the Google Play Store.","returns":"Returns a `Promise` that fulfills with a `Date` object that specifies the last time\\nthe app was updated via the Google Play Store).\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Application.getLastUpdateTimeAsync();\\n// 2019-07-18T21:20:16.887Z\\n```"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Date"}],"name":"Promise"}}]}]}')},DAxP:function(e){e.exports=JSON.parse('{"name":"expo-network","kind":1,"kindString":"Project","originalName":"","children":[{"name":"NetworkStateType","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum of the different types of devices supported by Expo."},"children":[{"name":"BLUETOOTH","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over Bluetooth."},"defaultValue":"\\"BLUETOOTH\\""},{"name":"CELLULAR","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over mobile data or [`DUN-specific`](https://developer.android.com/reference/android/net/ConnectivityManager#TYPE_MOBILE_DUN)\\nmobile connection when setting an upstream connection for tethering."},"defaultValue":"\\"CELLULAR\\""},{"name":"ETHERNET","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over Ethernet."},"defaultValue":"\\"ETHERNET\\""},{"name":"NONE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"No active network connection detected."},"defaultValue":"\\"NONE\\""},{"name":"OTHER","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over other network connection types."},"defaultValue":"\\"OTHER\\""},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The connection type could not be determined."},"defaultValue":"\\"UNKNOWN\\""},{"name":"VPN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over VPN."},"defaultValue":"\\"VPN\\""},{"name":"WIFI","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over WiFi."},"defaultValue":"\\"WIFI\\""},{"name":"WIMAX","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over Wimax."},"defaultValue":"\\"WIMAX\\""}]},{"name":"NetworkState","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isConnected","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If there is an active network connection. Note that this does not mean that internet is reachable.\\nThis field is `false` if the type is either `Network.NetworkStateType.NONE` or `Network.NetworkStateType.UNKNOWN`,\\n`true` otherwise."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isInternetReachable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the internet is reachable with the currently active network connection. On Android, this\\ndepends on `NetInfo.isConnected()` (API level < 29) or `ConnectivityManager.getActiveNetwork()`\\n(API level >= 29). On iOS, this value will always be the same as `isConnected`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A [`NetworkStateType`](#networkstatetype) enum value that represents the current network\\nconnection type."},"type":{"type":"reference","name":"NetworkStateType"}}]}}},{"name":"getIpAddressAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIpAddressAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the device\'s current IPv4 address. Returns `0.0.0.0`` if the IP address could not be retrieved.","text":"On web, this method uses the third-party [`ipify service`](https://www.ipify.org/) to get the\\npublic IP address of the current device.","returns":"A `Promise` that fulfils with a `string` of the current IP address of the device\'s main\\nnetwork interface. Can only be IPv4 address.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Network.getIpAddressAsync();\\n// \\"92.168.32.44\\"\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getMacAddressAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMacAddressAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the specified network interface\'s MAC address.","text":"> Beginning with iOS 7 and Android 11, non-system applications can no longer access the device\'s\\nMAC address. In SDK 41 and above, this method will always resolve to a predefined value that\\nisn\'t useful.\\n\\nIf you need to identify the device, use the `getIosIdForVendorAsync()` method / `androidId`\\nproperty of the `expo-application` unimodule instead.\\n","returns":"A `Promise` that fulfils with the value `\'02:00:00:00:00:00\'`.\\n","tags":[{"tag":"deprecated","text":"This method is deprecated and will be removed in a future SDK version.\\n"}]},"parameters":[{"name":"interfaceName","kind":32768,"kindString":"Parameter","comment":{"text":"A string representing interface name (`eth0`, `wlan0`) or `null` (default),\\nmeaning the method should fetch the MAC address of the first available interface.\\n"},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"null"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getNetworkStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getNetworkStateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the device\'s current network connection state.","text":"On web, `navigator.connection.type` is not available on browsers. So if there is an active\\nnetwork connection, the field `type` returns `NetworkStateType.UNKNOWN`. Otherwise, it returns\\n`NetworkStateType.NONE`.","returns":"A `Promise` that fulfils with a `NetworkState` object.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Network.getNetworkStateAsync();\\n// {\\n//   type: NetworkStateType.CELLULAR,\\n//   isConnected: true,\\n//   isInternetReachable: true,\\n// }\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"NetworkState"}],"name":"Promise"}}]},{"name":"isAirplaneModeEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAirplaneModeEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"__Android only.__ Tells if the device is in airplane mode.","returns":"Returns a `Promise` that fulfils with a `boolean` value for whether the device is in\\nairplane mode or not.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Network.isAirplaneModeEnabledAsync();\\n// false\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}')},DBzr:function(e){e.exports=JSON.parse('{"name":"expo-sqlite","kind":1,"kindString":"Project","originalName":"","children":[{"name":"SQLError","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new SQLError","kind":16384,"kindString":"Constructor signature","type":{"type":"reference","name":"SQLError"}}]},{"name":"code","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"message","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"CONSTRAINT_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"DATABASE_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"QUOTA_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"SYNTAX_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"TIMEOUT_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"TOO_LARGE_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"UNKNOWN_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"VERSION_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}}]},{"name":"Database","kind":256,"kindString":"Interface","comment":{"shortText":"`Database` objects are returned by calls to `SQLite.openDatabase()`. Such an object represents a\\nconnection to a database on your device."},"children":[{"name":"version","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"readTransaction","kind":2048,"kindString":"Method","signatures":[{"name":"readTransaction","kind":4096,"kindString":"Call signature","parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLTransactionCallback"}},{"name":"errorCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"SQLTransactionErrorCallback"}},{"name":"successCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"transaction","kind":2048,"kindString":"Method","signatures":[{"name":"transaction","kind":4096,"kindString":"Call signature","comment":{"shortText":"Execute a database transaction."},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"shortText":"A function representing the transaction to perform. Takes a Transaction\\n(see below) as its only parameter, on which it can add SQL statements to execute."},"type":{"type":"reference","name":"SQLTransactionCallback"}},{"name":"errorCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Called if an error occurred processing this transaction. Takes a single\\nparameter describing the error."},"type":{"type":"reference","name":"SQLTransactionErrorCallback"}},{"name":"successCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Called when the transaction has completed executing on the database.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}],"extendedBy":[{"type":"reference","name":"WebSQLDatabase"}]},{"name":"SQLResultSetRowList","kind":256,"kindString":"Interface","children":[{"name":"_array","kind":1024,"kindString":"Property","comment":{"shortText":"The actual array of rows returned by the query. Can be used directly instead of\\ngetting rows through rows.item()."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"name":"length","kind":1024,"kindString":"Property","comment":{"shortText":"The number of rows returned by the query."},"type":{"type":"intrinsic","name":"number"}},{"name":"item","kind":2048,"kindString":"Method","signatures":[{"name":"item","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns the row with the given `index`. If there is no such row, returns `null`."},"parameters":[{"name":"index","kind":32768,"kindString":"Parameter","comment":{"shortText":"Index of row to get.\\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"any"}}]}]},{"name":"SQLTransaction","kind":256,"kindString":"Interface","comment":{"shortText":"A `SQLTransaction` object is passed in as a parameter to the `callback` parameter for the\\n`db.transaction()` method on a `Database` (see above). It allows enqueuing SQL statements to\\nperform in a database transaction."},"children":[{"name":"executeSql","kind":2048,"kindString":"Method","signatures":[{"name":"executeSql","kind":4096,"kindString":"Call signature","comment":{"shortText":"Enqueue a SQL statement to execute in the transaction. Authors are strongly recommended to make\\nuse of the `?` placeholder feature of the method to avoid against SQL injection attacks, and to\\nnever construct SQL statements on the fly."},"parameters":[{"name":"sqlStatement","kind":32768,"kindString":"Parameter","comment":{"shortText":"A string containing a database query to execute expressed as SQL. The string\\nmay contain `?` placeholders, with values to be substituted listed in the `arguments` parameter."},"type":{"type":"intrinsic","name":"string"}},{"name":"args","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"An array of values (numbers or strings) to substitute for `?` placeholders in the\\nSQL statement."},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Called when the query is successfully completed during the transaction. Takes\\ntwo parameters: the transaction itself, and a `ResultSet` object (see below) with the results\\nof the query."},"type":{"type":"reference","name":"SQLStatementCallback"}},{"name":"errorCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Called if an error occurred executing this particular query in the\\ntransaction. Takes two parameters: the transaction itself, and the error object.\\n"},"type":{"type":"reference","name":"SQLStatementErrorCallback"}}],"type":{"type":"intrinsic","name":"void"}}]}]},{"name":"WebSQLDatabase","kind":256,"kindString":"Interface","children":[{"name":"version","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Database.version"}},{"name":"close","kind":2048,"kindString":"Method","signatures":[{"name":"close","kind":4096,"kindString":"Call signature","comment":{"shortText":"Close the database."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"deleteAsync","kind":2048,"kindString":"Method","signatures":[{"name":"deleteAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Delete the database file."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"exec","kind":2048,"kindString":"Method","signatures":[{"name":"exec","kind":4096,"kindString":"Call signature","parameters":[{"name":"queries","kind":32768,"kindString":"Parameter","type":{"type":"array","elementType":{"type":"reference","name":"Query"}}},{"name":"readOnly","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}},{"name":"callback","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLiteCallback"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"readTransaction","kind":2048,"kindString":"Method","signatures":[{"name":"readTransaction","kind":4096,"kindString":"Call signature","parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLTransactionCallback"}},{"name":"errorCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"SQLTransactionErrorCallback"}},{"name":"successCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"Database.readTransaction"}}],"inheritedFrom":{"type":"reference","name":"Database.readTransaction"}},{"name":"transaction","kind":2048,"kindString":"Method","signatures":[{"name":"transaction","kind":4096,"kindString":"Call signature","comment":{"shortText":"Execute a database transaction."},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"shortText":"A function representing the transaction to perform. Takes a Transaction\\n(see below) as its only parameter, on which it can add SQL statements to execute."},"type":{"type":"reference","name":"SQLTransactionCallback"}},{"name":"errorCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Called if an error occurred processing this transaction. Takes a single\\nparameter describing the error."},"type":{"type":"reference","name":"SQLTransactionErrorCallback"}},{"name":"successCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Called when the transaction has completed executing on the database.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"Database.transaction"}}],"inheritedFrom":{"type":"reference","name":"Database.transaction"}}],"extendedTypes":[{"type":"reference","name":"Database"}]},{"name":"Window","kind":256,"kindString":"Interface","children":[{"name":"openDatabase","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"openDatabase","kind":4096,"kindString":"Call signature","parameters":[{"name":"name","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"version","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"displayName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"estimatedSize","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}},{"name":"creationCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"DatabaseCallback"}}],"type":{"type":"reference","name":"Database"}}]}]},{"name":"DatabaseCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"database","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Database"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"Query","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"args","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}},{"name":"sql","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"ResultSet","kind":4194304,"kindString":"Type alias","comment":{"shortText":"`ResultSet` objects are returned through second parameter of the `success` callback for the\\n`tx.executeSql()` method on a `SQLTransaction` (see above)."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"insertId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The row ID of the row that the SQL statement inserted into the database, if a row was inserted."},"type":{"type":"intrinsic","name":"number"}},{"name":"rows","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"column","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}}},{"name":"rowsAffected","kind":1024,"kindString":"Property","comment":{"shortText":"The number of rows that were changed by the SQL statement."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"ResultSetError","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"error","kind":1024,"kindString":"Property","type":{"type":"reference","name":"Error"}}]}}},{"name":"SQLResultSet","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"insertId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The row ID of the row that the SQL statement inserted into the database, if a row was inserted."},"type":{"type":"intrinsic","name":"number"}},{"name":"rows","kind":1024,"kindString":"Property","type":{"type":"reference","name":"SQLResultSetRowList"}},{"name":"rowsAffected","kind":1024,"kindString":"Property","comment":{"shortText":"The number of rows that were changed by the SQL statement."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"SQLStatementCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"transaction","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLTransaction"}},{"name":"resultSet","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLResultSet"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"SQLStatementErrorCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"transaction","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLTransaction"}},{"name":"error","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLError"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"SQLTransactionCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"transaction","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLTransaction"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"SQLTransactionErrorCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"error","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLError"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"SQLiteCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"Error"},{"type":"literal","value":null}]}},{"name":"resultSet","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","name":"ResultSetError"},{"type":"reference","name":"ResultSet"}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"openDatabase","kind":64,"kindString":"Function","signatures":[{"name":"openDatabase","kind":4096,"kindString":"Call signature","comment":{"shortText":"Open a database, creating it if it doesn\'t exist, and return a `Database` object. On disk,\\nthe database will be created under the app\'s [documents directory](./filesystem), i.e.\\n`${FileSystem.documentDirectory}/SQLite/${name}`.\\n> The `version`, `description` and `size` arguments are ignored, but are accepted by the function\\nfor compatibility with the WebSQL specification.","returns":"\\n"},"parameters":[{"name":"name","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the database file to open."},"type":{"type":"intrinsic","name":"string"}},{"name":"version","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'1.0\'"},{"name":"description","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"intrinsic","name":"string"},"defaultValue":"name"},{"name":"size","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"intrinsic","name":"number"},"defaultValue":"1"},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"db","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"WebSQLDatabase"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"WebSQLDatabase"}}]}]}')},DHYa:function(e,w){w.enter={table:n,tableData:a,tableHeader:a,tableRow:p},w.exit={codeText:m,table:c,tableData:d,tableHeader:d,tableRow:d};function n(s){this.enter({type:"table",align:s._align,children:[]},s),this.setData("inTable",!0)}function c(s){this.exit(s),this.setData("inTable")}function p(s){this.enter({type:"tableRow",children:[]},s)}function d(s){this.exit(s)}function a(s){this.enter({type:"tableCell",children:[]},s)}function m(s){var i=this.resume();this.getData("inTable")&&(i=i.replace(/\\([\\|])/g,r)),this.stack[this.stack.length-1].value=i,this.exit(s)}function r(s,i){return i==="|"?i:s}},DSdd:function(e){e.exports=JSON.parse('{"name":"expo-secure-store","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"KeychainAccessibilityConstant","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"intrinsic","name":"number"}},{"name":"SecureStoreOptions","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"keychainAccessible","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(iOS only)__ Specifies when the stored entry is accessible, using iOS\'s `kSecAttrAccessible`\\nproperty. See Apple\'s documentation on [keychain item accessibility](https://developer.apple.com/library/content/documentation/Security/Conceptual/keychainServConcepts/02concepts/concepts.html#//apple_ref/doc/uid/TP30000897-CH204-SW18).\\nDefault value: `SecureStore.WHEN_UNLOCKED`."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"}},{"name":"keychainService","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"- iOS: The item\'s service, equivalent to `kSecAttrService`\\n- Android: Equivalent of the public/private key pair `Alias`\\n> If the item is set with the `keychainService` option, it will be required to later fetch the value."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AFTER_FIRST_UNLOCK","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The data in the keychain item cannot be accessed after a restart until the device has been\\nunlocked once by the user. This may be useful if you need to access the item when the phone\\nis locked."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"..."},{"name":"AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Similar to `AFTER_FIRST_UNLOCK`, except the entry is not migrated to a new device when restoring\\nfrom a backup."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"..."},{"name":"ALWAYS","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The data in the keychain item can always be accessed regardless of whether the device is locked.\\nThis is the least secure option."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"..."},{"name":"ALWAYS_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Similar to `ALWAYS`, except the entry is not migrated to a new device when restoring from a backup."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"..."},{"name":"WHEN_PASSCODE_SET_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Similar to `WHEN_UNLOCKED_THIS_DEVICE_ONLY`, except the user must have set a passcode in order to\\nstore an entry. If the user removes their passcode, the entry will be deleted."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"..."},{"name":"WHEN_UNLOCKED","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The data in the keychain item can be accessed only while the device is unlocked by the user."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"..."},{"name":"WHEN_UNLOCKED_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Similar to `WHEN_UNLOCKED`, except the entry is not migrated to a new device when restoring from\\na backup."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"..."},{"name":"deleteItemAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"deleteItemAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Delete the value associated with the provided key.","returns":"A promise that will reject if the value couldn\'t be deleted.\\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The key that was used to store the associated value."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"An [`SecureStoreOptions`](#securestoreoptions) object.\\n"},"type":{"type":"reference","name":"SecureStoreOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"getItemAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getItemAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Fetch the stored value associated with the provided key.","returns":"A promise that resolves to the previously stored value, or `null` if there is no entry\\nfor the given key. The promise will reject if an error occurred while retrieving the value.\\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The key that was used to store the associated value."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"An [`SecureStoreOptions`](#securestoreoptions) object.\\n"},"type":{"type":"reference","name":"SecureStoreOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns whether the SecureStore API is enabled on the current device. This does not check the app\\npermissions.","returns":"Promise which fulfils witch `boolean`, indicating whether the SecureStore API is available\\non the current device. Currently this resolves `true` on iOS and Android only.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"setItemAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"setItemAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Store a key\u2013value pair.","returns":"A promise that will reject if value cannot be stored on the device.\\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The key to associate with the stored value. Keys may contain alphanumeric characters\\n`.`, `-`, and `_`."},"type":{"type":"intrinsic","name":"string"}},{"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The value to store. Size limit is 2048 bytes."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"An [`SecureStoreOptions`](#securestoreoptions) object.\\n"},"type":{"type":"reference","name":"SecureStoreOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},DUyF:function(e){e.exports=JSON.parse('{"name":"expo-status-bar","kind":1,"kindString":"Project","originalName":"","children":[{"name":"StatusBarAnimation","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"none"},{"type":"literal","value":"fade"},{"type":"literal","value":"slide"}]}},{"name":"StatusBarProps","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"animated","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the transition between status bar property changes should be\\nanimated. Supported for `backgroundColor`, `barStyle` and `hidden`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"backgroundColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The background color of the status bar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"hidden","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the status bar is hidden."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"hideTransitionAnimation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The transition effect when showing and hiding the status bar using\\nthe hidden prop.","tags":[{"tag":"default","text":"\'fade\'"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"StatusBarAnimation"}},{"name":"networkActivityIndicatorVisible","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the network activity indicator should be visible.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"style","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets the color of the status bar text. Default value is `\\"auto\\"` which\\npicks the appropriate value according to the active color scheme, eg:\\nif your app is dark mode, the style will be `\\"light\\"`.","tags":[{"tag":"default","text":"\'auto\'\\n"}]},"type":{"type":"reference","name":"StatusBarStyle"}},{"name":"translucent","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the status bar is translucent. When translucent is set to `true`,\\nthe app will draw under the status bar. This is the default behaviour in\\nprojects created with Expo tools because it is consistent with iOS.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"StatusBarStyle","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"auto"},{"type":"literal","value":"inverted"},{"type":"literal","value":"light"},{"type":"literal","value":"dark"}]}},{"name":"StatusBar","kind":64,"kindString":"Function","signatures":[{"name":"StatusBar","kind":4096,"kindString":"Call signature","comment":{"shortText":"A component that allows you to configure your status bar without directly calling imperative\\nmethods like `setBarStyle`.","text":"You will likely have multiple `StatusBar` components mounted in the same app at the same time.\\nFor example, if you have multiple screens in your app, you may end up using one per screen.\\nThe props of each `StatusBar` component will be merged in the order that they were mounted.\\nThis component is built on top of the [StatusBar](https://reactnative.dev/docs/statusbar)\\ncomponent exported from React Native, and it provides defaults that work better for Expo users.\\n"},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"StatusBarProps"}}],"type":{"type":"literal","value":null}}]},{"name":"setStatusBarBackgroundColor","kind":64,"kindString":"Function","signatures":[{"name":"setStatusBarBackgroundColor","kind":4096,"kindString":"Call signature","comment":{"shortText":"Set the background color of the status bar.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"backgroundColor","kind":32768,"kindString":"Parameter","comment":{"shortText":"The background color of the status bar."},"type":{"type":"intrinsic","name":"string"}},{"name":"animated","kind":32768,"kindString":"Parameter","comment":{"shortText":"`true` to animate the background color change, `false` to change immediately."},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setStatusBarHidden","kind":64,"kindString":"Function","signatures":[{"name":"setStatusBarHidden","kind":4096,"kindString":"Call signature","comment":{"shortText":"Toggle visibility of the status bar."},"parameters":[{"name":"hidden","kind":32768,"kindString":"Parameter","comment":{"shortText":"If the status bar should be hidden."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"animation","kind":32768,"kindString":"Parameter","comment":{"shortText":"Animation to use when toggling hidden, defaults to `\'none\'`.\\n"},"type":{"type":"reference","name":"StatusBarAnimation"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setStatusBarNetworkActivityIndicatorVisible","kind":64,"kindString":"Function","signatures":[{"name":"setStatusBarNetworkActivityIndicatorVisible","kind":4096,"kindString":"Call signature","comment":{"shortText":"Toggle visibility of the network activity indicator.","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"visible","kind":32768,"kindString":"Parameter","comment":{"shortText":"If the network activity indicator should be visible."},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setStatusBarStyle","kind":64,"kindString":"Function","signatures":[{"name":"setStatusBarStyle","kind":4096,"kindString":"Call signature","comment":{"shortText":"Set the bar style of the status bar."},"parameters":[{"name":"style","kind":32768,"kindString":"Parameter","comment":{"shortText":"The color of the status bar text.\\n"},"type":{"type":"reference","name":"StatusBarStyle"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setStatusBarTranslucent","kind":64,"kindString":"Function","signatures":[{"name":"setStatusBarTranslucent","kind":4096,"kindString":"Call signature","comment":{"shortText":"Set the translucency of the status bar.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"translucent","kind":32768,"kindString":"Parameter","comment":{"shortText":"Whether the app can draw under the status bar. When `true`, content will be\\nrendered under the status bar. This is always `true` on iOS and cannot be changed."},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]}]}')},DnsU:function(e){e.exports=JSON.parse('{"name":"expo-mail-composer","kind":1,"kindString":"Project","originalName":"","children":[{"name":"MailComposerStatus","kind":8,"kindString":"Enumeration","children":[{"name":"CANCELLED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"cancelled\\""},{"name":"SAVED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"saved\\""},{"name":"SENT","kind":16,"kindString":"Enumeration member","defaultValue":"\\"sent\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"MailComposerOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A map defining the data to fill the mail."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"attachments","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of app\'s internal file URIs to attach."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"bccRecipients","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of e-mail addresses of the BCC recipients."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"body","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Body of the e-mail."},"type":{"type":"intrinsic","name":"string"}},{"name":"ccRecipients","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of e-mail addresses of the CC recipients."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"isHtml","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the body contains HTML tags so it could be formatted properly.\\nNot working perfectly on Android."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"recipients","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of e-mail addresses of the recipients."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"subject","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Subject of the e-mail."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"MailComposerResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"MailComposerStatus"}}]}}},{"name":"composeAsync","kind":64,"kindString":"Function","signatures":[{"name":"composeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Opens a mail modal for iOS and a mail app intent for Android and fills the fields with provided\\ndata. On iOS you will need to be signed into the Mail app.","returns":"A promise fulfilled with an object containing a `status` field that specifies whether an\\nemail was sent, saved, or cancelled. Android does not provide this info, so the status is always\\nset as if the email were sent.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"MailComposerOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"MailComposerResult"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine if the `MailComposer` API can be used in this app.","returns":"A promise resolves to `true` if the API can be used, and `false` otherwise.\\n- Returns `true` on iOS when the device has a default email setup for sending mail.\\n- Can return `false` on iOS if an MDM profile is setup to block outgoing mail. If this is the\\ncase, you may want to use the Linking API instead.\\n- Always returns `true` in the browser and on Android.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}')},DyW7:function(e){e.exports=JSON.parse('{"name":"expo-image-picker","kind":1,"kindString":"Project","originalName":"","children":[{"name":"MediaTypeOptions","kind":8,"kindString":"Enumeration","children":[{"name":"All","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Images and videos."},"defaultValue":"\\"All\\""},{"name":"Images","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Only images."},"defaultValue":"\\"Images\\""},{"name":"Videos","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Only videos."},"defaultValue":"\\"Videos\\""}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"UIImagePickerControllerQualityType","kind":8,"kindString":"Enumeration","children":[{"name":"High","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Highest available resolution."},"defaultValue":"0"},{"name":"IFrame1280x720","kind":16,"kindString":"Enumeration member","comment":{"shortText":"1280 \xD7 720"},"defaultValue":"4"},{"name":"IFrame960x540","kind":16,"kindString":"Enumeration member","comment":{"shortText":"960 \xD7 540"},"defaultValue":"5"},{"name":"Low","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Depends on the device."},"defaultValue":"2"},{"name":"Medium","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Depends on the device."},"defaultValue":"1"},{"name":"VGA640x480","kind":16,"kindString":"Enumeration member","comment":{"shortText":"640 \xD7 480"},"defaultValue":"3"}]},{"name":"UIImagePickerPresentationStyle","kind":8,"kindString":"Enumeration","comment":{"shortText":"Picker presentation style. Its values are directly mapped to the [`UIModalPresentationStyle`](https://developer.apple.com/documentation/uikit/uiviewcontroller/1621355-modalpresentationstyle).","tags":[{"tag":"platform","text":"ios\\n"}]},"children":[{"name":"AUTOMATIC","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The default presentation style chosen by the system.\\nOn older iOS versions, falls back to `WebBrowserPresentationStyle.FullScreen`.","tags":[{"tag":"platform","text":"ios 13+\\n"}]},"defaultValue":"\\"automatic\\""},{"name":"Automatic","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"deprecated","text":"Use `UIImagePickerPresentationStyle.AUTOMATIC` instead.\\n"}]},"defaultValue":"\\"automatic\\""},{"name":"CURRENT_CONTEXT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style where the picker is displayed over the app\'s content."},"defaultValue":"\\"currentContext\\""},{"name":"CurrentContext","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"deprecated","text":"Use `UIImagePickerPresentationStyle.CURRENT_CONTEXT` instead.\\n"}]},"defaultValue":"\\"currentContext\\""},{"name":"FORM_SHEET","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style that displays the picker centered in the screen."},"defaultValue":"\\"formSheet\\""},{"name":"FULL_SCREEN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style in which the presented picker covers the screen."},"defaultValue":"\\"fullScreen\\""},{"name":"FormSheet","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"deprecated","text":"Use `UIImagePickerPresentationStyle.FORM_SHEET` instead.\\n"}]},"defaultValue":"\\"formSheet\\""},{"name":"FullScreen","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"deprecated","text":"Use `UIImagePickerPresentationStyle.FULL_SCREEN` instead.\\n"}]},"defaultValue":"\\"fullScreen\\""},{"name":"OVER_CURRENT_CONTEXT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style where the picker is displayed over the app\'s content."},"defaultValue":"\\"overCurrentContext\\""},{"name":"OVER_FULL_SCREEN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style in which the picker view covers the screen."},"defaultValue":"\\"overFullScreen\\""},{"name":"OverCurrentContext","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"deprecated","text":"Use `UIImagePickerPresentationStyle.OVER_CURRENT_CONTEXT` instead.\\n"}]},"defaultValue":"\\"overCurrentContext\\""},{"name":"OverFullScreen","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"deprecated","text":"Use `UIImagePickerPresentationStyle.OVER_FULL_SCREEN` instead.\\n"}]},"defaultValue":"\\"overFullScreen\\""},{"name":"PAGE_SHEET","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style that partially covers the underlying content."},"defaultValue":"\\"pageSheet\\""},{"name":"POPOVER","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style where the picker is displayed in a popover view."},"defaultValue":"\\"popover\\""},{"name":"PageSheet","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"deprecated","text":"Use `UIImagePickerPresentationStyle.PAGE_SHEET` instead.\\n"}]},"defaultValue":"\\"pageSheet\\""},{"name":"Popover","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"deprecated","text":"Use `UIImagePickerPresentationStyle.POPOVER` instead.\\n"}]},"defaultValue":"\\"popover\\""}]},{"name":"VideoExportPreset","kind":8,"kindString":"Enumeration","children":[{"name":"H264_1280x720","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __1280 \xD7 720__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"6"},{"name":"H264_1920x1080","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __1920 \xD7 1080__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"7"},{"name":"H264_3840x2160","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __3840 \xD7 2160__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"8"},{"name":"H264_640x480","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __640 \xD7 480__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"4"},{"name":"H264_960x540","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __960 \xD7 540__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"5"},{"name":"HEVC_1920x1080","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __1920 \xD7 1080__ \u2022\\nVideo compression: __HEVC__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"9"},{"name":"HEVC_3840x2160","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __3840 \xD7 2160__ \u2022\\nVideo compression: __HEVC__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"10"},{"name":"HighestQuality","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __Depends on the device__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"3"},{"name":"LowQuality","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __Depends on the device__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"1"},{"name":"MediumQuality","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __Depends on the device__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"2"},{"name":"Passthrough","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __Unchanged__ \u2022\\nVideo compression: __None__ \u2022\\nAudio compression: __None__"},"defaultValue":"0"}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"CameraPermissionResponse","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Alias for `PermissionResponse` type exported by `expo-modules-core`."},"type":{"type":"reference","name":"PermissionResponse"}},{"name":"CameraRollPermissionResponse","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An alias for the `MediaLibraryPermissionResponse` object.","tags":[{"tag":"deprecated","text":"Use `ImagePicker.MediaLibraryPermissionResponse` instead.\\n"}]},"type":{"type":"reference","name":"MediaLibraryPermissionResponse"}},{"name":"ExpandImagePickerResult","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter","type":{"type":"union","types":[{"type":"reference","name":"ImagePickerOptions"},{"type":"reference","name":"OpenFileBrowserOptions"}]}}],"type":{"type":"conditional","checkType":{"type":"reference","name":"T"},"extendsType":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"allowsMultipleSelection","kind":1024,"kindString":"Property","type":{"type":"literal","value":true}}]}},"trueType":{"type":"reference","name":"ImagePickerMultipleResult"},"falseType":{"type":"reference","name":"ImagePickerResult"}}},{"name":"ImageInfo","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Included if the `base64` option is truthy, and is a Base64-encoded string of the selected\\nimage\'s JPEG data. If you prepend this with `\'data:image/jpeg;base64,\'` to create a data URI,\\nyou can use it as the source of an `Image` element; for example:\\n```ts\\n<Image\\n  source={{ uri: \'data:image/jpeg;base64,\' + launchCameraResult.base64 }}\\n  style={{ width: 200, height: 200 }}\\n/>\\n```"},"type":{"type":"intrinsic","name":"string"}},{"name":"cancelled","kind":1024,"kindString":"Property","comment":{"shortText":"Boolean flag which shows if request was cancelled. If asset data have been returned this should\\nalways be `false`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"duration","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Length of the video in milliseconds."},"type":{"type":"intrinsic","name":"number"}},{"name":"exif","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The `exif` field is included if the `exif` option is truthy, and is an object containing the\\nimage\'s EXIF data. The names of this object\'s properties are EXIF tags and the values are the\\nrespective EXIF values for those tags."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"Height of the image or video."},"type":{"type":"intrinsic","name":"number"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The type of the asset."},"type":{"type":"union","types":[{"type":"literal","value":"image"},{"type":"literal","value":"video"}]}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"URI to the local image or video file (usable as the source of an `Image` element, in the case of\\nan image) and `width` and `height` specify the dimensions of the media."},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"Width of the image or video."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"ImagePickerCancelledResult","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object returned when the pick action has been cancelled by the user."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"cancelled","kind":1024,"kindString":"Property","type":{"type":"literal","value":true}}]}}},{"name":"ImagePickerErrorResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"code","kind":1024,"kindString":"Property","comment":{"shortText":"The error code."},"type":{"type":"intrinsic","name":"string"}},{"name":"exception","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The exception which caused the error."},"type":{"type":"intrinsic","name":"string"}},{"name":"message","kind":1024,"kindString":"Property","comment":{"shortText":"The error message."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"ImagePickerMultipleResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"ImagePickerCancelledResult"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"cancelled","kind":1024,"kindString":"Property","type":{"type":"literal","value":false}},{"name":"selected","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"reference","name":"ImageInfo"}}}]}}]}},{"name":"ImagePickerOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"allowsEditing","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to show a UI to edit the image after it is picked. On Android the user can crop and\\nrotate the image and on iOS simply crop it.","tags":[{"tag":"default","text":"false\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"allowsMultipleSelection","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether or not to allow selecting multiple media files at once.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"aspect","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array with two entries `[x, y]` specifying the aspect ratio to maintain if the user is\\nallowed to edit the image (by passing `allowsEditing: true`). This is only applicable on\\nAndroid, since on iOS the crop rectangle is always a square."},"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to also include the image data in Base64 format."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"exif","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to also include the EXIF data for the image. On iOS the EXIF data does not include GPS\\ntags in the camera case."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"mediaTypes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Choose what type of media to pick.","tags":[{"tag":"default","text":"ImagePicker.MediaTypeOptions.Images\\n"}]},"type":{"type":"reference","name":"MediaTypeOptions"}},{"name":"presentationStyle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Choose [presentation style](https://developer.apple.com/documentation/uikit/uiviewcontroller/1621355-modalpresentationstyle?language=objc)\\nto customize view during taking photo/video.","tags":[{"tag":"default","text":"ImagePicker.UIImagePickerPresentationStyle.Automatic"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"UIImagePickerPresentationStyle"}},{"name":"quality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specify the quality of compression, from `0` to `1`. `0` means compress for small size,\\n`1` means compress for maximum quality.\\n> Note: If the selected image has been compressed before, the size of the output file may be\\n> bigger than the size of the original image."},"type":{"type":"intrinsic","name":"number"}},{"name":"videoExportPreset","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specify preset which will be used to compress selected video.","tags":[{"tag":"default","text":"ImagePicker.VideoExportPreset.Passthrough"},{"tag":"platform","text":"ios 11+"},{"tag":"deprecated","text":"See [`videoExportPreset`](https://developer.apple.com/documentation/uikit/uiimagepickercontroller/2890964-videoexportpreset?language=objc)\\nin Apple documentation.\\n"}]},"type":{"type":"reference","name":"VideoExportPreset"}},{"name":"videoMaxDuration","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum duration, in seconds, for video recording. Setting this to `0` disables the limit.\\nDefaults to `0` (no limit).\\n- **On iOS**, when `allowsEditing` is set to `true`, maximum duration is limited to 10 minutes.\\n  This limit is applied automatically, if `0` or no value is specified.\\n- **On Android**, effect of this option depends on support of installed camera app.\\n- **On Web** this option has no effect - the limit is browser-dependant."},"type":{"type":"intrinsic","name":"number"}},{"name":"videoQuality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specify the quality of recorded videos. Defaults to the highest quality available for the device.","tags":[{"tag":"default","text":"ImagePicker.UIImagePickerControllerQualityType.High"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"UIImagePickerControllerQualityType"}}]}}},{"name":"ImagePickerResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"ImagePickerCancelledResult"},{"type":"reference","name":"ImageInfo"}]}},{"name":"MediaLibraryPermissionResponse","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Extends `PermissionResponse` type exported by `expo-modules-core` and contains additional iOS-specific field."},"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionResponse"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accessPrivileges","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":"all"},{"type":"literal","value":"limited"},{"type":"literal","value":"none"}]}}]}}]}},{"name":"OpenFileBrowserOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"allowsMultipleSelection","kind":1024,"kindString":"Property","comment":{"shortText":"Whether or not to allow selecting multiple media files at once.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"base64","kind":1024,"kindString":"Property","comment":{"shortText":"Whether to also include the image data in Base64 format."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"capture","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"mediaTypes","kind":1024,"kindString":"Property","comment":{"shortText":"Choose what type of media to pick.","tags":[{"tag":"default","text":"ImagePicker.MediaTypeOptions.Images\\n"}]},"type":{"type":"reference","name":"MediaTypeOptions"}}]}}},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"getCameraPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCameraPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing camera.","returns":"A promise that fulfills with an object of type [CameraPermissionResponse](#camerarollpermissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraPermissionResponse"}],"name":"Promise"}}]},{"name":"getCameraRollPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCameraRollPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"Use `getMediaLibraryPermissionsAsync()` instead.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"MediaLibraryPermissionResponse"}],"name":"Promise"}}]},{"name":"getMediaLibraryPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMediaLibraryPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing photos.","returns":"A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\\n"},"parameters":[{"name":"writeOnly","kind":32768,"kindString":"Parameter","comment":{"shortText":"Whether to request write or read and write permissions. Defaults to `false`"},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"MediaLibraryPermissionResponse"}],"name":"Promise"}}]},{"name":"getPendingResultAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPendingResultAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Android system sometimes kills the `MainActivity` after the `ImagePicker` finishes. When this\\nhappens, we lost the data selected from the `ImagePicker`. However, you can retrieve the lost\\ndata by calling `getPendingResultAsync`. You can test this functionality by turning on\\n`Don\'t keep activities` in the developer options.","returns":"\\n- **On Android:** a promise that resolves to an array of objects of exactly same type as in\\n`ImagePicker.launchImageLibraryAsync` or `ImagePicker.launchCameraAsync` if the `ImagePicker`\\nfinished successfully. Otherwise, to the array of [`ImagePickerErrorResult`](#imagepickerimagepickererrorresult).\\n- **On other platforms:** an empty array.\\n"},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"union","types":[{"type":"reference","name":"ImagePickerResult"},{"type":"reference","name":"ImagePickerErrorResult"}]}}],"name":"Promise"}}]},{"name":"launchCameraAsync","kind":64,"kindString":"Function","signatures":[{"name":"launchCameraAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Display the system UI for taking a photo with the camera. Requires `Permissions.CAMERA`.\\nOn Android and iOS 10 `Permissions.CAMERA_ROLL` is also required. On mobile web, this must be\\ncalled immediately in a user interaction like a button press, otherwise the browser will bloc\\nthe request without a warning.\\n> **Note:** Make sure that you handle `MainActivity` destruction on **Android**. See [ImagePicker.getPendingResultAsync](#imagepickergetpendingresultasync).\\n> **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\\nTherefore, calling `launchCameraAsync` in `componentDidMount`, for example, will **not** work as\\nintended. The `cancelled` event will not be returned in the browser due to platform restrictions\\nand inconsistencies across browsers.","returns":"If the user cancelled the action, the method returns `{ cancelled: true }`. Otherwise,\\nthis method returns information about the selected media item. When the chosen item is an image,\\nthis method returns `{ cancelled: false, type: \'image\', uri, width, height, exif, base64 }`;\\nwhen the item is a video, this method returns `{ cancelled: false, type: \'video\', uri, width, height, duration }`.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An `ImagePickerOptions` object."},"type":{"type":"reference","name":"ImagePickerOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImagePickerResult"}],"name":"Promise"}}]},{"name":"launchImageLibraryAsync","kind":64,"kindString":"Function","signatures":[{"name":"launchImageLibraryAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Display the system UI for choosing an image or a video from the phone\'s library.\\nRequires `Permissions.MEDIA_LIBRARY` on iOS 10 only. On mobile web, this must be called\\nimmediately in a user interaction like a button press, otherwise the browser will block the\\nrequest without a warning.\\n**Animated GIFs support** If the selected image is an animated GIF, the result image will be an\\nanimated GIF too if and only if `quality` is set to `undefined` and `allowsEditing` is set to `false`.\\nOtherwise compression and/or cropper will pick the first frame of the GIF and return it as the\\nresult (on Android the result will be a PNG, on iOS \u2014 GIF).\\n> **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\\nTherefore, calling `launchImageLibraryAsync` in `componentDidMount`, for example, will **not**\\nwork as intended. The `cancelled` event will not be returned in the browser due to platform\\nrestrictions and inconsistencies across browsers.","returns":"If the user cancelled the action, the method returns `{ cancelled: true }`. Otherwise,\\nthis method returns information about the selected media item. When the chosen item is an image,\\nthis method returns `{ cancelled: false, type: \'image\', uri, width, height, exif, base64 }`;\\nwhen the item is a video, this method returns `{ cancelled: false, type: \'video\', uri, width, height, duration }`.\\n"},"typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter","type":{"type":"reference","name":"ImagePickerOptions"}}],"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"An object extended by [`ImagePickerOptions`](#imagepickeroptions)."},"type":{"type":"reference","name":"T"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"T"}],"name":"ExpandImagePickerResult"}],"name":"Promise"}}]},{"name":"requestCameraPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestCameraPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing camera. This does nothing on web because the\\nbrowser camera is not used.","returns":"A promise that fulfills with an object of type [CameraPermissionResponse](#camerarollpermissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraPermissionResponse"}],"name":"Promise"}}]},{"name":"requestCameraRollPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestCameraRollPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"Use `requestMediaLibraryPermissionsAsync()` instead.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"MediaLibraryPermissionResponse"}],"name":"Promise"}}]},{"name":"requestMediaLibraryPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestMediaLibraryPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing user\'s photo. This method does nothing on web.","returns":"A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\\n"},"parameters":[{"name":"writeOnly","kind":32768,"kindString":"Parameter","comment":{"shortText":"Whether to request write or read and write permissions. Defaults to `false`"},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"MediaLibraryPermissionResponse"}],"name":"Promise"}}]},{"name":"useCameraPermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"useCameraPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to access the camera.\\nThis uses both `requestCameraPermissionsAsync` and `getCameraPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = ImagePicker.useCameraPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"useMediaLibraryPermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"useMediaLibraryPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to access the media library.\\nThis uses both `requestMediaLibraryPermissionsAsync` and `getMediaLibraryPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = ImagePicker.useMediaLibraryPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"writeOnly","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}]}}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"MediaLibraryPermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"MediaLibraryPermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"MediaLibraryPermissionResponse"}],"name":"GetPermissionMethod"}]}}]}]}')},"E/Jm":function(e,w,n){"use strict";function c(p){return p<-2}e.exports=c},EFjC:function(e){e.exports=JSON.parse(`{"name":"expo-analytics-amplitude","kind":1,"kindString":"Project","originalName":"","children":[{"name":"AmplitudeTrackingOptions","kind":256,"kindString":"Interface","children":[{"name":"disableAdid","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableCarrier","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device's carrier."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableCity","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's city."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableCountry","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's country."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableDMA","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's DMA."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableDeviceBrand","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device brand."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableDeviceManufacturer","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device manufacturer."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableDeviceModel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device model."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableIDFV","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's IDFV."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableIPAddress","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's IP address."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableLanguage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device's language."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableLatLng","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's current latitude and longitude coordinates."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableOSName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device's OS name."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableOSVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device's OS version."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disablePlatform","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device's platform."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableRegion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's region."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableVersionName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the app version the user is on for your app."},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"clearUserPropertiesAsync","kind":64,"kindString":"Function","signatures":[{"name":"clearUserPropertiesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Clear properties set by [\`setUserPropertiesAsync()\`](#amplitudesetuserpropertiesasyncuserproperties)."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"initializeAsync","kind":64,"kindString":"Function","signatures":[{"name":"initializeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Initializes Amplitude with your Amplitude API key. If you're having trouble finding your API key,\\nsee [step 4 of these instructions](https://amplitude.zendesk.com/hc/en-us/articles/207108137-Introduction-Getting-Started#getting-started)."},"parameters":[{"name":"apiKey","kind":32768,"kindString":"Parameter","comment":{"shortText":"Your Amplitude application's API key.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"logEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Log an event to Amplitude. For more information about what kind of events to track,\\n[see here](https://amplitude.zendesk.com/hc/en-us/articles/206404698-Step-3-Track-Events-and-Understand-the-Actions-Users-Take)."},"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","comment":{"shortText":"The event name.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logEventWithPropertiesAsync","kind":64,"kindString":"Function","signatures":[{"name":"logEventWithPropertiesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Log an event to Amplitude with custom properties. For more information about what kind of events\\nto track, [see here](https://amplitude.zendesk.com/hc/en-us/articles/206404698-Step-3-Track-Events-and-Understand-the-Actions-Users-Take)."},"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","comment":{"shortText":"The event name."},"type":{"type":"intrinsic","name":"string"}},{"name":"properties","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of custom properties.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setGroupAsync","kind":64,"kindString":"Function","signatures":[{"name":"setGroupAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Add the current user to a group. For more information, see here for [iOS](https://github.com/amplitude/Amplitude-iOS#setting-groups)\\nand see here for [Android](https://github.com/amplitude/Amplitude-Android#setting-groups)."},"parameters":[{"name":"groupType","kind":32768,"kindString":"Parameter","comment":{"shortText":"The group name, e.g. \\"sports\\"."},"type":{"type":"intrinsic","name":"string"}},{"name":"groupNames","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of group names, e.g. [\\"tennis\\", \\"soccer\\"].\\n> **Note:** The iOS and Android Amplitude SDKs allow you to use a string or an array of strings. We\\nonly support an array of strings. Just use an array with one element if you only want one group\\nname.\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setTrackingOptionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"setTrackingOptionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"By default, the Amplitude SDK will track several user properties such as carrier and city. You\\ncan use this method to customize and disable individual fields.\\n> **Note:** These configurations will prevent default properties from being tracked on newly\\ncreated projects, where data has not yet been sent. Please contact [platform@amplitude.com](mailto:platform@amplitude.com)\\nif you would like default properties blocked (moving forward) on projects with existing data."},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"Options object for what should not be tracked. The table below describes what\\nproperties the object may contain. All properties are expected to be booleans. For example,\\npassing \`disableCarrier: true\` disables tracking the device's carrier.\\n"},"type":{"type":"reference","name":"AmplitudeTrackingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserIdAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUserIdAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Assign a user ID to the current user. If you don't have a system for user IDs you don't need to\\ncall this. See [this page](https://amplitude.zendesk.com/hc/en-us/articles/206404628-Step-2-Assign-User-IDs-and-Identify-your-Users)\\nfor details."},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","comment":{"shortText":"User ID for the current user. Can be set to \`null\` (e.g. when the user is logging out).\\n"},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserPropertiesAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUserPropertiesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Set properties for the current user. See [here for details](https://amplitude.zendesk.com/hc/en-us/articles/207108327-Step-4-Set-User-Properties-and-Event-Properties)."},"parameters":[{"name":"userProperties","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of custom properties.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}`)},EIjK:function(e,w,n){"use strict";var c=String.fromCharCode;e.exports=c},"EfL/":function(e,w,n){const c=n("ZkSf");e.exports=p;function p(d){if(d.allowedElements&&d.disallowedElements)throw new TypeError("Only one of `allowedElements` and `disallowedElements` should be defined");if(d.allowedElements||d.disallowedElements||d.allowElement)return m=>{c(m,"element",a)};function a(m,r,s){const i=m,o=s;let t;if(d.allowedElements?t=!d.allowedElements.includes(i.tagName):d.disallowedElements&&(t=d.disallowedElements.includes(i.tagName)),!t&&d.allowElement&&typeof r=="number"&&(t=!d.allowElement(i,r,o)),t&&typeof r=="number")return d.unwrapDisallowed&&i.children?o.children.splice(r,1,...i.children):o.children.splice(r,1),r}}},EjwE:function(e){e.exports=JSON.parse('{"name":"expo-cellular","kind":1,"kindString":"Project","originalName":"","children":[{"name":"CellularGeneration","kind":8,"kindString":"Enumeration","comment":{"shortText":"Describes the current generation of the cellular connection. It is an enum with these possible\\nvalues:"},"children":[{"name":"CELLULAR_2G","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Currently connected to a 2G cellular network. Includes CDMA, EDGE, GPRS, and IDEN type connections."},"defaultValue":"1"},{"name":"CELLULAR_3G","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Currently connected to a 3G cellular network. Includes EHRPD, EVDO, HSPA, HSUPA, HSDPA, and UTMS type connections."},"defaultValue":"2"},{"name":"CELLULAR_4G","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Currently connected to a 4G cellular network. Includes HSPAP and LTE type connections."},"defaultValue":"3"},{"name":"CELLULAR_5G","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Currently connected to a 5G cellular network. Includes NR and NRNSA type connections."},"defaultValue":"4"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Either we are not currently connected to a cellular network or type could not be determined."},"defaultValue":"0"}]},{"name":"allowsVoip","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Indicates if the carrier allows making VoIP calls on its network. On Android, this checks whether\\nthe system supports SIP-based VoIP API. See [here](https://developer.android.com/reference/android/net/sip/SipManager.html#isVoipSupported(android.content.Context))\\nto view more information.","text":"On iOS, if you configure a device for a carrier and then remove the SIM card, this property\\nretains the `boolean` value indicating the carrier\u2019s policy regarding VoIP. If you then install\\na new SIM card, its VoIP policy `boolean` replaces the previous value of this property.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nCellular.allowsVoip; // true or false\\n```"},{"tag":"deprecated","text":"Use [`allowsVoipAsync()`](#allowsvoipasync) instead.\\n\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"carrier","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The name of the user\u2019s home cellular service provider. If the device has dual SIM cards, only the\\ncarrier for the currently active SIM card will be returned. On Android, this value is only\\navailable when the SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY).\\nOtherwise, this returns `null`.","text":"On iOS, if you configure a device for a carrier and then remove the SIM card, this property\\nretains the name of the carrier. If you then install a new SIM card, its carrier name replaces\\nthe previous value of this property. The value for this property is `null` if the user never\\nconfigured a carrier for the device.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nCellular.carrier; // \\"T-Mobile\\" or \\"Verizon\\"\\n```"},{"tag":"deprecated","text":"Use [`getCarrierNameAsync()`](#getcarriernameasync) instead.\\n\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"isoCountryCode","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The ISO country code for the user\u2019s cellular service provider. On iOS, the value is `null` if any\\nof the following apply:\\n- The device is in airplane mode.\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.","text":"On web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nCellular.isoCountryCode; // \\"us\\" or \\"au\\"\\n```"},{"tag":"deprecated","text":"Use [`getIsoCountryCodeAsync()`](#getisocountrycodeAsync) instead.\\n\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"mobileCountryCode","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The mobile country code (MCC) for the user\u2019s current registered cellular service provider.\\nOn Android, this value is only available when SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY). Otherwise, this\\nreturns `null`. On iOS, the value may be null on hardware prior to iPhone 4S when in airplane mode.\\nFurthermore, the value for this property is `null` if any of the following apply:\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.","text":"On web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nCellular.mobileCountryCode; // \\"310\\"\\n```"},{"tag":"deprecated","text":"Use [`getMobileCountryCodeAsync()`](#getmobilecountrycodeasync) instead.\\n\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"mobileNetworkCode","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The ISO country code for the user\u2019s cellular service provider. On iOS, the value is `null` if\\nany of the following apply:\\n- The device is in airplane mode.\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.","text":"On web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nCellular.mobileNetworkCode; // \\"260\\"\\n```"},{"tag":"deprecated","text":"Use [`getMobileNetworkCodeAsync()`](#getmobilenetworkcodeasync) instead.\\n\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"allowsVoipAsync","kind":64,"kindString":"Function","signatures":[{"name":"allowsVoipAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns if the carrier allows making VoIP calls on its network. On Android, this checks whether\\nthe system supports SIP-based VoIP API. See [here](https://developer.android.com/reference/android/net/sip/SipManager.html#isVoipSupported(android.content.Context))\\nto view more information.\\n\\nOn iOS, if you configure a device for a carrier and then remove the SIM card, this property\\nretains the `boolean` value indicating the carrier\u2019s policy regarding VoIP. If you then install\\na new SIM card, its VoIP policy `boolean` replaces the previous value of this property.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.allowsVoipAsync(); // true or false\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getCarrierNameAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCarrierNameAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns name of the user\u2019s home cellular service provider. If the device has dual SIM cards, only the\\ncarrier for the currently active SIM card will be returned.\\n\\nOn Android, this value is only available when the SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY).\\nOtherwise, this returns `null`.\\n\\nOn iOS, if you configure a device for a carrier and then remove the SIM card, this property\\nretains the name of the carrier. If you then install a new SIM card, its carrier name replaces\\nthe previous value of this property. The value for this property is `null` if the user never\\nconfigured a carrier for the device.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.getCarrierNameAsync(); // \\"T-Mobile\\" or \\"Verizon\\"\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getCellularGenerationAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCellularGenerationAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns a promise which fulfils with a [`Cellular.CellularGeneration`](#cellulargeneration)\\nenum value that represents the current cellular-generation type.\\n\\nOn web, this method uses [`navigator.connection.effectiveType`](https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/effectiveType)\\nto detect the effective type of the connection using a combination of recently observed\\nround-trip time and downlink values. See [here](https://developer.mozilla.org/en-US/docs/Web/API/Network_Information_API)\\nto view browser compatibility.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.getCellularGenerationAsync();\\n// CellularGeneration.CELLULAR_4G\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CellularGeneration"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getIsoCountryCodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIsoCountryCodeAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns the ISO country code for the user\u2019s cellular service provider.\\n\\nOn iOS, the value is `null` if any of the following apply:\\n- The device is in airplane mode.\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.getIsoCountryCodeAsync(); // \\"us\\" or \\"au\\"\\n```\\n\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getMobileCountryCodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMobileCountryCodeAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns mobile country code (MCC) for the user\u2019s current registered cellular service provider.\\n\\nOn Android, this value is only available when SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY). Otherwise, this\\nreturns `null`. On iOS, the value may be null on hardware prior to iPhone 4S when in airplane mode.\\nFurthermore, the value for this property is `null` if any of the following apply:\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.getMobileCountryCodeAsync(); // \\"310\\"\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getMobileNetworkCodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMobileNetworkCodeAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns the mobile network code (MNC) for the user\u2019s current registered cellular service provider.\\n\\nOn Android, this value is only available when SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY). Otherwise, this\\nreturns `null`. On iOS, the value may be null on hardware prior to iPhone 4S when in airplane mode.\\nFurthermore, the value for this property is `null` if any of the following apply:\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.getMobileNetworkCodeAsync(); // \\"310\\"\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},Ek58:function(e){e.exports=JSON.parse('{"name":"expo-linear-gradient","kind":1,"kindString":"Project","originalName":"","children":[{"name":"LinearGradient","kind":128,"kindString":"Class","comment":{"shortText":"Renders a native view that transitions between multiple colors in a linear direction."},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new LinearGradient","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"reference","name":"LinearGradientProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}]}}],"type":{"type":"reference","name":"LinearGradient"},"inheritedFrom":{"type":"reference","name":"React.Component<LinearGradientProps>.constructor"}},{"name":"new LinearGradient","kind":16384,"kindString":"Constructor signature","comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"LinearGradientProps"}},{"name":"context","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"LinearGradient"},"inheritedFrom":{"type":"reference","name":"React.Component<LinearGradientProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<LinearGradientProps>.constructor"}},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"ReactNode"}}]}}],"name":"Readonly"}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}}],"name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"render","kind":2048,"kindString":"Method","signatures":[{"name":"render","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Component"}]},{"name":"LinearGradientPoint","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object `{ x: number; y: number }` or array `[x, y]` that represents the point\\nat which the gradient starts or ends, as a fraction of the overall size of the gradient ranging\\nfrom `0` to `1`, inclusive."},"type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"x","kind":1024,"kindString":"Property","comment":{"shortText":"A number ranging from `0` to `1`, representing the position of gradient transformation."},"type":{"type":"intrinsic","name":"number"}},{"name":"y","kind":1024,"kindString":"Property","comment":{"shortText":"A number ranging from `0` to `1`, representing the position of gradient transformation."},"type":{"type":"intrinsic","name":"number"}}]}},{"type":"reference","name":"NativeLinearGradientPoint"}]}},{"name":"LinearGradientProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"colors","kind":1024,"kindString":"Property","comment":{"shortText":"An array of colors that represent stops in the gradient. At least two colors are required\\n(for a single-color background, use the `style.backgroundColor` prop on a `View` component)."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"end","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"For example, `{ x: 0.1, y: 0.2 }` means that the gradient will end `10%` from the left and `20%` from the bottom.","text":"**On web**, this only changes the angle of the gradient because CSS gradients don\'t support changing the end position.\\n"},"type":{"type":"union","types":[{"type":"reference","name":"LinearGradientPoint"},{"type":"literal","value":null}]}},{"name":"locations","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array that contains `number`s ranging from `0` to `1`, inclusive, and is the same length as the `colors` property.\\nEach number indicates a color-stop location where each respective color should be located.","text":"For example, `[0.5, 0.8]` would render:\\n- the first color, solid, from the beginning of the gradient view to 50% through (the middle);\\n- a gradient from the first color to the second from the 50% point to the 80% point; and\\n- the second color, solid, from the 80% point to the end of the gradient view.\\n\\n> The color-stop locations must be ascending from least to greatest.\\n"},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"literal","value":null}]}},{"name":"start","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"For example, `{ x: 0.1, y: 0.2 }` means that the gradient will start `10%` from the left and `20%` from the top.","text":"**On web**, this only changes the angle of the gradient because CSS gradients don\'t support changing the starting position.\\n"},"type":{"type":"union","types":[{"type":"reference","name":"LinearGradientPoint"},{"type":"literal","value":null}]}}]}}]}}]}')},En7T:function(e){e.exports=JSON.parse('{"name":"expo-error-recovery","kind":1,"kindString":"Project","originalName":"","children":[{"name":"ErrorRecoveryProps","kind":4194304,"kindString":"Type alias","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"recoveredProps","kind":32,"kindString":"Variable","type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"ErrorRecoveryProps"}]},"defaultValue":"..."},{"name":"setRecoveryProps","kind":64,"kindString":"Function","signatures":[{"name":"setRecoveryProps","kind":4096,"kindString":"Call signature","comment":{"shortText":"Set arbitrary error recovery props. If your project crashes in production as a result of a fatal\\nJS error, Expo will reload your project. If you\'ve set these props, they\'ll be passed to your\\nreloaded project\'s initial props under `exp.errorRecovery`. Access to `localStorage` is required\\non web, or else this will simply be a no-op.","text":"[Read more about error handling with Expo](/guides/errors)."},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","comment":{"shortText":"An object which will be passed to your reloaded project\'s initial props if the\\nproject was reloaded as a result of a fatal JS error.\\n"},"type":{"type":"reference","name":"ErrorRecoveryProps"}}],"type":{"type":"intrinsic","name":"void"}}]}]}')},F5xr:function(e,w,n){"use strict";e.exports=p;var c=n("2jS9");function p(d,a){return d(a,"h"+a.depth,c(d,a))}},F8DJ:function(e){e.exports=JSON.parse('{"name":"expo-analytics-segment","kind":1,"kindString":"Project","originalName":"","children":[{"name":"CommonOptions","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"},{"type":"literal","value":null}]}},{"name":"InitializeOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"androidWriteKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Write key for Android source."},"type":{"type":"intrinsic","name":"string"}},{"name":"iosWriteKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Write key for iOS source."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"alias","kind":64,"kindString":"Function","signatures":[{"name":"alias","kind":4096,"kindString":"Call signature","comment":{"shortText":"Associate current identity with a new identifier. See [Segment Alias docs](https://segment.com/docs/spec/alias/).","returns":"A `Promise` which fulfils witch a `boolean` indicating whether the method has been\\nexecuted on the underlying `Segment` instance or not.\\n"},"parameters":[{"name":"newId","kind":32768,"kindString":"Parameter","comment":{"shortText":"Identifier to associate with."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An extra dictionary with options for the call, [see here](https://segment.com/docs/connections/spec/common/)\\nfor possible configuration options. An example options object would be:\\n```json\\n{\\n  \\"integrations\\": {\\n    \\"Sentry\\": {\\n      \\"enabled\\": true\\n     }\\n  },\\n  \\"context\\": {\\n    \\"ip\\": \\"0.0.0.0\\"\\n  }\\n}\\n```\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"flush","kind":64,"kindString":"Function","signatures":[{"name":"flush","kind":4096,"kindString":"Call signature","comment":{"shortText":"Manually flush the event queue. You shouldn\'t need to call this in most cases."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"getEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"getEnabledAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"group","kind":64,"kindString":"Function","signatures":[{"name":"group","kind":4096,"kindString":"Call signature","comment":{"shortText":"Associate the user with a group. See [Segment Group docs](https://segment.com/docs/spec/group/)."},"parameters":[{"name":"groupId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the group.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"groupWithTraits","kind":64,"kindString":"Function","signatures":[{"name":"groupWithTraits","kind":4096,"kindString":"Call signature","comment":{"shortText":"Associate the user with a group with traits. See [Segment Group docs](https://segment.com/docs/spec/group/)."},"parameters":[{"name":"groupId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the group."},"type":{"type":"intrinsic","name":"string"}},{"name":"traits","kind":32768,"kindString":"Parameter","comment":{"shortText":"Free-form dictionary of traits of the group."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map that can include any of [these common fields](https://segment.com/docs/connections/spec/common/).\\nDefaults to `null`.\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"identify","kind":64,"kindString":"Function","signatures":[{"name":"identify","kind":4096,"kindString":"Call signature","comment":{"shortText":"Associates the current user with a user ID. Call this after calling [`Segment.initialize()`](#initialize)\\nbut before other segment calls. See [Segment Identify docs](https://segment.com/docs/spec/identify/)."},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","comment":{"shortText":"User ID for the current user.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"identifyWithTraits","kind":64,"kindString":"Function","signatures":[{"name":"identifyWithTraits","kind":4096,"kindString":"Call signature","comment":{},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","comment":{"shortText":"User ID for the current user."},"type":{"type":"intrinsic","name":"string"}},{"name":"traits","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of custom properties."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"Map that can include any of [these common fields](https://segment.com/docs/connections/spec/common/).\\nDefaults to `null`.\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"initialize","kind":64,"kindString":"Function","signatures":[{"name":"initialize","kind":4096,"kindString":"Call signature","comment":{"shortText":"Segment requires separate write keys for iOS and Android. You will need to log in to Segment\\nto receive these keys: [https://segment.com/docs/guides/setup/how-do-i-find-my-write-key/](https://segment.com/docs/guides/setup/how-do-i-find-my-write-key/)"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`InitializeOptions`](#initializeoptions) object.\\n"},"type":{"type":"reference","name":"InitializeOptions"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"reset","kind":64,"kindString":"Function","signatures":[{"name":"reset","kind":4096,"kindString":"Call signature","comment":{"shortText":"Clears the current user. See [https://segment.com/docs/sources/mobile/ios/#reset](https://segment.com/docs/sources/mobile/ios/#reset)."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"screen","kind":64,"kindString":"Function","signatures":[{"name":"screen","kind":4096,"kindString":"Call signature","comment":{"shortText":"Record that a user has seen a screen to Segment. See [Segment Screen docs](https://segment.com/docs/spec/screen/)."},"parameters":[{"name":"screenName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the screen.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"screenWithProperties","kind":64,"kindString":"Function","signatures":[{"name":"screenWithProperties","kind":4096,"kindString":"Call signature","comment":{"shortText":"Record that a user has seen a screen to Segment with custom properties. See [Segment Screen docs](https://segment.com/docs/spec/screen/)."},"parameters":[{"name":"screenName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the screen."},"type":{"type":"intrinsic","name":"string"}},{"name":"properties","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of custom properties."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map that can include any of [these common fields](https://segment.com/docs/connections/spec/common/).\\nDefaults to `null`.\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setEnabledAsync","kind":4096,"kindString":"Call signature","parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"track","kind":64,"kindString":"Function","signatures":[{"name":"track","kind":4096,"kindString":"Call signature","comment":{"shortText":"Log an event to Segment. See [Segment Track docs](https://segment.com/docs/spec/track/)."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","comment":{"shortText":"The event name.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"trackWithProperties","kind":64,"kindString":"Function","signatures":[{"name":"trackWithProperties","kind":4096,"kindString":"Call signature","comment":{"shortText":"Log an event to Segment with custom properties. See [Segment Track docs](https://segment.com/docs/spec/track/)."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","comment":{"shortText":"The event name."},"type":{"type":"intrinsic","name":"string"}},{"name":"properties","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of custom properties."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map that can include any of [these common fields](https://segment.com/docs/connections/spec/common/).\\nDefaults to `null`.\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"intrinsic","name":"void"}}]}]}')},FE4A:function(e,w,n){"use strict";var c=n("EIjK");function p(d){for(var a=-1,m=[],r,s,i;++a<d.length;){if(r=d[a],typeof r=="string")s=r;else if(r===-5)s="\r";else if(r===-4)s=`
`;else if(r===-3)s=`\r
`;else if(r===-2)s="	";else if(r===-1){if(i)continue;s=" "}else s=c(r);i=r===-2,m.push(s)}return m.join("")}e.exports=p},FLXD:function(e){e.exports=JSON.parse('{"name":"expo-apple-authentication","kind":0,"flags":{},"originalName":"","children":[{"name":"addRevokeListener","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"addRevokeListener","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"AppleAuthenticationButtonStyle","kind":4,"kindString":"Enumeration","flags":{},"comment":{"shortText":"An enum whose values control which pre-defined color scheme to use when rendering an [`AppleAuthenticationButton`](#appleauthenticationappleauthenticationbutton)."},"children":[{"name":"BLACK","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Black button with white text."},"defaultValue":"2"},{"name":"WHITE","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"White button with black text."},"defaultValue":"0"},{"name":"WHITE_OUTLINE","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"White button with a black outline and black text."},"defaultValue":"1"}]},{"name":"AppleAuthenticationButtonType","kind":4,"kindString":"Enumeration","flags":{},"comment":{"shortText":"An enum whose values control which pre-defined text to use when rendering an [`AppleAuthenticationButton`](#appleauthenticationappleauthenticationbutton)."},"children":[{"name":"CONTINUE","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"\\"Continue with Apple\\""},"defaultValue":"1"},{"name":"SIGN_IN","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"\\"Sign in with Apple\\""},"defaultValue":"0"},{"name":"SIGN_UP","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"\\"Sign up with Apple\\" *(requires iOS 13.2 or higher)*"},"defaultValue":"2"}]},{"name":"AppleAuthenticationCredential","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"The object type returned from a successful call to [`AppleAuthentication.signInAsync()`](#appleauthenticationsigninasyncoptions),\\n[`AppleAuthentication.refreshAsync()`](#appleauthenticationrefreshasyncoptions), or [`AppleAuthentication.signOutAsync()`](#appleauthenticationsignoutasyncoptions)\\nwhich contains all of the pertinent user and credential information.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidcredential)\\nfor more details.\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"authorizationCode","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A short-lived session token used by your app for proof of authorization when interacting with\\nthe app\'s server counterpart. Unlike `user`, this is ephemeral and will change each session."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"email","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The user\'s email address. Might not be present if you didn\'t request the `EMAIL` scope. May\\nalso be null if this is not the first time the user has signed into your app. If the user chose\\nto withhold their email address, this field will instead contain an obscured email address with\\nan Apple domain."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"fullName","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The user\'s name. May be `null` or contain `null` values if you didn\'t request the `FULL_NAME`\\nscope, if the user denied access, or if this is not the first time the user has signed into\\nyour app."},"type":{"type":"union","types":[{"type":"reference","name":"AppleAuthenticationFullName"},{"type":"literal","value":null}]}},{"name":"identityToken","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A JSON Web Token (JWT) that securely communicates information about the user to your app."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"realUserStatus","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A value that indicates whether the user appears to the system to be a real person."},"type":{"type":"reference","name":"AppleAuthenticationUserDetectionStatus"}},{"name":"state","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"An arbitrary string that your app provided as `state` in the request that generated the\\ncredential. Used to verify that the response was from the request you made. Can be used to\\navoid replay attacks. If you did not provide `state` when making the sign-in request, this field\\nwill be `null`."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"user","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"An identifier associated with the authenticated user. You can use this to check if the user is\\nstill authenticated later. This is stable and can be shared across apps released under the same\\ndevelopment team. The same user will have a different identifier for apps released by other\\ndevelopers."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AppleAuthenticationCredentialState","kind":4,"kindString":"Enumeration","flags":{},"comment":{"shortText":"An enum whose values specify state of the credential when checked with [`AppleAuthentication.getCredentialStateAsync()`](#appleauthenticationgetcredentialstateasyncuser).","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidprovidercredentialstate)\\nfor more details.\\n"}]},"children":[{"name":"AUTHORIZED","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"1"},{"name":"NOT_FOUND","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"2"},{"name":"REVOKED","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"0"},{"name":"TRANSFERRED","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"3"}]},{"name":"AppleAuthenticationFullName","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"An object representing the tokenized portions of the user\'s full name. Any of all of the fields\\nmay be `null`. Only applicable fields that the user has allowed your app to access will be nonnull."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"familyName","kind":1024,"kindString":"Property","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"givenName","kind":1024,"kindString":"Property","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"middleName","kind":1024,"kindString":"Property","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"namePrefix","kind":1024,"kindString":"Property","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"nameSuffix","kind":1024,"kindString":"Property","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"nickname","kind":1024,"kindString":"Property","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}}},{"name":"AppleAuthenticationOperation","kind":4,"kindString":"Enumeration","flags":{},"children":[{"name":"IMPLICIT","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"An operation that depends on the particular kind of credential provider."},"defaultValue":"0"},{"name":"LOGIN","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"1"},{"name":"LOGOUT","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"3"},{"name":"REFRESH","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"2"}]},{"name":"AppleAuthenticationRefreshOptions","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"The options you can supply when making a call to [`AppleAuthentication.refreshAsync()`](#appleauthenticationrefreshasyncoptions).\\nYou must include the ID string of the user whose credentials you\'d like to refresh.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationopenidrequest)\\nfor more details.\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"requestedScopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Array of user information scopes to which your app is requesting access. Note that the user can\\nchoose to deny your app access to any scope at the time of logging in. You will still need to\\nhandle `null` values for any scopes you request. Additionally, note that the requested scopes\\nwill only be provided to you the first time each user signs into your app; in subsequent\\nrequests they will be `null`. Defaults to `[]` (no scopes)."},"type":{"type":"array","elementType":{"type":"reference","name":"AppleAuthenticationScope"}}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An arbitrary string that is returned unmodified in the corresponding credential after a\\nsuccessful authentication. This can be used to verify that the response was from the request\\nyou made and avoid replay attacks. More information on this property is available in the\\nOAuth 2.0 protocol [RFC6749](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"}},{"name":"user","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AppleAuthenticationScope","kind":4,"kindString":"Enumeration","flags":{},"comment":{"shortText":"An enum whose values specify scopes you can request when calling [`AppleAuthentication.signInAsync()`](#appleauthenticationsigninasyncoptions).","text":"> Note that it is possible that you will not be granted all of the scopes which you request.\\nYou will still need to handle null values for any fields you request.\\n","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationscope)\\nfor more details.\\n"}]},"children":[{"name":"EMAIL","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"1"},{"name":"FULL_NAME","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"0"}]},{"name":"AppleAuthenticationSignInOptions","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"The options you can supply when making a call to [`AppleAuthentication.signInAsync()`](#appleauthenticationsigninasyncoptions).\\nNone of these options are required.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationopenidrequest)\\nfor more details.\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"nonce","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An arbitrary string that is used to prevent replay attacks. See more information on this in the\\n[OpenID Connect specification](https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowSteps)."},"type":{"type":"intrinsic","name":"string"}},{"name":"requestedScopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Array of user information scopes to which your app is requesting access. Note that the user can\\nchoose to deny your app access to any scope at the time of logging in. You will still need to\\nhandle `null` values for any scopes you request. Additionally, note that the requested scopes\\nwill only be provided to you the first time each user signs into your app; in subsequent\\nrequests they will be `null`. Defaults to `[]` (no scopes)."},"type":{"type":"array","elementType":{"type":"reference","name":"AppleAuthenticationScope"}}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An arbitrary string that is returned unmodified in the corresponding credential after a\\nsuccessful authentication. This can be used to verify that the response was from the request\\nyou made and avoid replay attacks. More information on this property is available in the\\nOAuth 2.0 protocol [RFC6749](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AppleAuthenticationSignOutOptions","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"The options you can supply when making a call to [`AppleAuthentication.signOutAsync()`](#appleauthenticationsignoutasyncoptions).\\nYou must include the ID string of the user to sign out.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationopenidrequest)\\nfor more details.\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An arbitrary string that is returned unmodified in the corresponding credential after a\\nsuccessful authentication. This can be used to verify that the response was from the request\\nyou made and avoid replay attacks. More information on this property is available in the\\nOAuth 2.0 protocol [RFC6749](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"}},{"name":"user","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AppleAuthenticationUserDetectionStatus","kind":4,"kindString":"Enumeration","flags":{},"comment":{"shortText":"An enum whose values specify the system\'s best guess for how likely the current user is a real person.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asuserdetectionstatus)\\nfor more details.\\n"}]},"children":[{"name":"LIKELY_REAL","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"The user appears to be a real person."},"defaultValue":"2"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"The system has not determined whether the user might be a real person."},"defaultValue":"1"},{"name":"UNSUPPORTED","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"The system does not support this determination and there is no data."},"defaultValue":"0"}]},{"name":"getCredentialStateAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getCredentialStateAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Queries the current state of a user credential, to determine if it is still valid or if it has been revoked.\\n> **Note:** This method must be tested on a real device. On the iOS simulator it always throws an error.","returns":"A promise that fulfills with an [`AppleAuthenticationCredentialState`](#appleauthenticationcredentialstate)\\nvalue depending on the state of the credential.\\n"},"parameters":[{"name":"user","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The unique identifier for the user whose credential state you\'d like to check.\\nThis should come from the user field of an [`AppleAuthenticationCredential`](#appleauthenticationcredentialstate) object."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredentialState"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Determine if the current device\'s operating system supports Apple authentication.","returns":"A promise that fulfills with `true` if the system supports Apple authentication, and `false` otherwise.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"refreshAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"refreshAsync","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"AppleAuthenticationRefreshOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredential"}],"name":"Promise"}}]},{"name":"signInAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"signInAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Sends a request to the operating system to initiate the Apple authentication flow, which will\\npresent a modal to the user over your app and allow them to sign in.","text":"You can request access to the user\'s full name and email address in this method, which allows you\\nto personalize your UI for signed in users. However, users can deny access to either or both\\nof these options at runtime.\\n\\nAdditionally, you will only receive Apple Authentication Credentials the first time users sign\\ninto your app, so you must store it for later use. It\'s best to store this information either\\nserver-side, or using [SecureStore](./securestore), so that the data persists across app installs.\\nYou can use [`AppleAuthenticationCredential.user`](#appleauthenticationcredential) to identify\\nthe user, since this remains the same for apps released by the same developer.\\n","returns":"A promise that fulfills with an [`AppleAuthenticationCredential`](#appleauthenticationcredential)\\nobject after a successful authentication, and rejects with `ERR_CANCELED` if the user cancels the\\nsign-in operation.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"An optional [`AppleAuthenticationSignInOptions`](#appleauthenticationsigninoptions) object"},"type":{"type":"reference","name":"AppleAuthenticationSignInOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredential"}],"name":"Promise"}}]},{"name":"signOutAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"signOutAsync","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"AppleAuthenticationSignOutOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredential"}],"name":"Promise"}}]},{"name":"Subscription","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"remove","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}]}}}]}')},FYBV:function(e){e.exports=JSON.parse('{"name":"expo-facebook","kind":1,"originalName":"","children":[{"name":"FacebookAuthenticationCredential","kind":16777216,"kindString":"Reference"},{"name":"FacebookAuthenticationCredential","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"appId","kind":1024,"kindString":"Property","comment":{"shortText":"Application ID used to initialize the Facebook SDK app."},"type":{"type":"intrinsic","name":"string"}},{"name":"dataAccessExpirationDate","kind":1024,"kindString":"Property","comment":{"shortText":"Time at which the current user data access expires."},"type":{"type":"reference","name":"Date"}},{"name":"declinedPermissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of requested permissions that the user has declined."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"expirationDate","kind":1024,"kindString":"Property","comment":{"shortText":"Time at which the `token` expires."},"type":{"type":"reference","name":"Date"}},{"name":"expiredPermissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of permissions that were expired with this access token."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"graphDomain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A website domain within the Graph API.","text":"https://developers.facebook.com/docs/graph-api/reference/v5.0/domain\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"permissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of granted permissions."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"refreshDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The last time the `token` was refreshed (or when it was first obtained)"},"type":{"type":"reference","name":"Date"}},{"name":"signedRequest","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A valid raw signed request as a string."},"type":{"type":"intrinsic","name":"string"}},{"name":"token","kind":1024,"kindString":"Property","comment":{"shortText":"Access token for the authenticated session. This token provides access to the Facebook Graph API."},"type":{"type":"intrinsic","name":"string"}},{"name":"tokenSource","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"_(Android only)_ Indicates how this `token` was obtained."},"type":{"type":"intrinsic","name":"string"}},{"name":"userId","kind":1024,"kindString":"Property","comment":{"shortText":"App-scoped Facebook ID of the user."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"FacebookInitializationOptions","kind":16777216,"kindString":"Reference"},{"name":"FacebookInitializationOptions","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"FacebookSDKScriptURLOptions"},{"type":"reference","name":"FacebookSDKInitializationOptions"},{"type":"reference","name":"FacebookNativeInitializationOptions"}]}},{"name":"FacebookLoginResult","kind":16777216,"kindString":"Reference"},{"name":"FacebookLoginResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","type":{"type":"literal","value":"cancel"}}]}},{"type":"intersection","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","type":{"type":"literal","value":"success"}}]}},{"type":"reference","name":"FacebookAuthenticationCredential"}]}]}},{"name":"FacebookNativeInitializationOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"appName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An optional Facebook App Name argument for iOS and Android."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"FacebookOptions","kind":16777216,"kindString":"Reference"},{"name":"FacebookOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"permissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}}},{"name":"FacebookSDKInitializationOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"appId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Application ID used to initialize the FBSDK app.","text":"On Android and iOS if you don\'t provide this, Facebook SDK will try to use `appId` from Android and iOS.\\napp resources (which in standalone apps you would define in `app.json`, in the Expo client are unavailable, and in bare you configure yourself according to Facebook setup documentation for [iOS](https://developers.facebook.com/docs/facebook-login/ios#4--configure-your-project) and [Android](https://developers.facebook.com/docs/facebook-login/android#manifest)).\\nIf it fails to find one, the promise will be rejected.\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"autoLogAppEvents","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets whether Facebook SDK should log app events. App events involve app eg. installs, app launches (more info [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#auto-events) and [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#auto-events)).\\nIn some cases, you may want to disable or delay the collection of automatically logged events, such as to obtain user consent or fulfill legal obligations.","text":"This method corresponds to:\\n- [iOS disable auto events](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#disable-auto-events)\\n- [Android disable auto events](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#disable-auto-events)\\n"},"type":{"type":"intrinsic","name":"boolean"}},{"name":"version","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Selects the version of FBSDK to use.","text":"https://developers.facebook.com/docs/javascript/reference/FB.init/v5.0\\n"},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"FacebookSDKScriptURLOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"domain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Android: Sets the base Facebook domain to use when making network requests.\\nDefaults to: \'connect.facebook.net\'"},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"flushAsync","kind":64,"kindString":"Function","signatures":[{"name":"flushAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Explicitly kicks off flushing of events to Facebook."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"getAdvertiserIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAdvertiserIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the advertiser ID from Facebook.","returns":"A promise fulfilled with the advertiser id or null if not set.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getAnonymousIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAnonymousIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get an anonymous ID from Facebook.","returns":"A promise fulfilled with an anonymous id or null if not set.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getAttributionIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAttributionIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"**Android only.** Gets the attribution ID from Facebook.","returns":"A promise fulfilled with the attribution id or null if not set.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getAuthenticationCredentialAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAuthenticationCredentialAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns the `FacebookAuthenticationCredential` object if a user is authenticated, and `null` if no valid authentication exists.","text":"You can use this method to check if the user should sign in or not.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"FacebookAuthenticationCredential"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks application\'s permissions for using data for tracking the user or the device.","text":">iOS: it requires the NSUserTrackingUsageDescription message added to the info.plist.\\n","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getUserIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"getUserIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the user ID.","returns":"A promise fulfilled with the user id or null if not set.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"initializeAsync","kind":64,"kindString":"Function","signatures":[{"name":"initializeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Calling this method ensures that the SDK is initialized.\\nYou have to call this method before calling any method that uses\\nthe FBSDK (ex: `logInWithReadPermissionsAsync`, `logOutAsync`) to ensure that\\nFacebook support is initialized properly.","text":"- On Android and iOS you can optionally provide an `appId` argument.\\n  - If you don\'t provide `appId`, the Facebook SDK will try to use `appId` from native app resources (which in standalone apps you define in `app.json`, in app store development clients are unavailable, and in bare apps you configure yourself according to [Facebook\'s setup documentation for iOS](https://developers.facebook.com/docs/facebook-login/ios#4--configure-your-project) and [Android](https://developers.facebook.com/docs/facebook-login/android#manifest)). If the Facebook SDK fails to find an `appId` value, the returned promise will be rejected.\\n  - The same resolution mechanism works for `appName`.\\n- If you provide an explicit `appId`, it will override any other source.\\n"},"parameters":[{"name":"optionsOrAppId","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"FacebookInitializationOptions"}]}},{"name":"appName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"logEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs an event with eventName and optional parameters. Supports the optional parameter `valueToSum`,\\nwhich when reported, all of the valueToSum properties are summed together. For example, if 10 people purchased\\none item and each item cost $10 (and passed in valueToSum) then they would be added together to report $100.\\nParameters must be either strings or numbers, otherwise no event will be logged.","text":"To view and test app events, please visit Facebook\'s Event Manager- https://www.facebook.com/events_manager2/list/app/\\n"},"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"parameters","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Params"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logInWithReadPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"logInWithReadPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prompts the user to log into Facebook and grants your app permission to access their Facebook data. On iOS and Android, if the Facebook app isn\'t installed then a web view will be used to authenticate.","returns":"If the user or Facebook cancelled the login, returns { type: \'cancel\' }. Otherwise, returns { type: \'success\' } & [FacebookAuthenticationCredential](#facebookauthenticationcredential).\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"A map of options:\\n - **permissions (array)** -- An array specifying the permissions to ask for from Facebook for this login. The permissions are strings as specified in the [Facebook API documentation](https://developers.facebook.com/docs/permissions/reference). The default permissions are [\'public_profile\', \'email\']."},"type":{"type":"reference","name":"FacebookOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"FacebookLoginResult"}],"name":"Promise"}}]},{"name":"logOutAsync","kind":64,"kindString":"Function","signatures":[{"name":"logOutAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs out of the currently authenticated session."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logPurchaseAsync","kind":64,"kindString":"Function","signatures":[{"name":"logPurchaseAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs a purchase event with the amount, currency code, and optional parameters.\\nParameters must be either strings or numbers, otherwise no event will be logged.\\nSee http://en.wikipedia.org/wiki/ISO_4217 for currencyCodes."},"parameters":[{"name":"purchaseAmount","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}},{"name":"currencyCode","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"parameters","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Params"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logPushNotificationOpenAsync","kind":64,"kindString":"Function","signatures":[{"name":"logPushNotificationOpenAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs an app event that tracks that the application was opened via Push Notification. Accepts\\na string describing the campaign of the Push Notification."},"parameters":[{"name":"campaign","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks for permissions to use data for tracking the user or the device.","text":"> iOS: it requires the NSUserTrackingUsageDescription message added to the info.plist.\\n","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"setAdvertiserIDCollectionEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setAdvertiserIDCollectionEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Whether the Facebook SDK should collect advertiser ID properties, like the Apple IDFA\\nand Android Advertising ID, automatically. Advertiser IDs let you identify and target specific customers.\\nTo learn more visit [Facebook documentation](https://developers.facebook.com/docs/app-ads/targeting/mobile-advertiser-ids)\\ndescribing that topic.","text":"In some cases, you may want to disable or delay the collection of `advertiser-id`,\\nsuch as to obtain user consent or fulfill legal obligations.\\n\\nThis method corresponds to [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#disable-advertiser-id)\\nand [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#disable-advertiser-id) native SDK methods."},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","comment":{"text":"Whether `advertiser-id` should be collected\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setAdvertiserTrackingEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setAdvertiserTrackingEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets whether Facebook SDK should enable advertising tracking,\\n(more info [here](https://developers.facebook.com/docs/app-events/guides/advertising-tracking-enabled)).","text":"Limitations:\\n1. AdvertiserTrackingEnabled is only available for iOS 14+.\\n2. For iOS 13 or earlier, AdvertiserTrackingEnabled uses the Limit Ad Tracking setting as its value.\\n\\nThis method corresponds to [this](https://developers.facebook.com/docs/app-events/guides/advertising-tracking-enabled)\\n","returns":"Whether the value is set successfully. It will always return false in Android, iOS 13 and below.\\n"},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","comment":{"text":"Whether advertising tracking of the Facebook SDK should be enabled"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"setAutoInitEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setAutoInitEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"Explicitly call `initializeAsync` instead.\\n"}]},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setAutoLogAppEventsEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setAutoLogAppEventsEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets whether Facebook SDK should log app events. App events involve eg. app installs,\\napp launches (more info [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#auto-events)\\nand [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#auto-events)).","text":"In some cases, you may want to disable or delay the collection of automatically logged events,\\nsuch as to obtain user consent or fulfill legal obligations.\\n\\nThis method corresponds to [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#disable-auto-events)\\nand [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#disable-auto-events) native SDK methods.\\n"},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","comment":{"text":"Whether automatic events logging of the Facebook SDK should be enabled\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserDataAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUserDataAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets additional data about the user to increase the chances of matching a Facebook user."},"parameters":[{"name":"userData","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"UserData"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUserIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a custom user ID to associate with all app events.\\nThe userID is persisted until it is cleared by passing nil."},"parameters":[{"name":"userID","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"usePermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"usePermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to use data tracking.\\nThis uses both `requestPermissionsAsync` and `getPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Facebook.usePermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"UserData","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Info about a user to increase chances of matching a Facebook user.\\nSee https://developers.facebook.com/docs/app-events/advanced-matching for\\nmore info about the expected format of each field."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"city","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"country","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"dateOfBirth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"email","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"firstName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"gender","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":"m"},{"type":"literal","value":"f"}]}},{"name":"lastName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"phone","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"zip","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}]}}}]}')},Fb3X:function(e){e.exports=JSON.parse('{"name":"expo-linear-gradient","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"LinearGradient","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"Renders a native view that transitions between multiple colors in a linear direction."},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"name":"new LinearGradient","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}}],"type":{"type":"reference","name":"LinearGradient"},"inheritedFrom":{"type":"reference","name":"React.Component<LinearGradientProps>.constructor"}},{"name":"new LinearGradient","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"LinearGradientProps"}},{"name":"context","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"LinearGradient"},"inheritedFrom":{"type":"reference","name":"React.Component<LinearGradientProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<LinearGradientProps>.constructor"}},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"ReactNode"}}]}}],"name":"Readonly"}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"name":"key","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}],"name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"render","kind":2048,"kindString":"Method","flags":{},"signatures":[{"name":"render","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Component"}]},{"name":"LinearGradientPoint","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"shortText":"An object `{ x: number; y: number }` or array `[x, y]` that represents the point\\nat which the gradient starts or ends, as a fraction of the overall size of the gradient ranging\\nfrom `0` to `1`, inclusive."},"type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"x","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A number ranging from `0` to `1`, representing the position of gradient transformation."},"type":{"type":"intrinsic","name":"number"}},{"name":"y","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A number ranging from `0` to `1`, representing the position of gradient transformation."},"type":{"type":"intrinsic","name":"number"}}]}},{"type":"reference","name":"NativeLinearGradientPoint"}]}},{"name":"LinearGradientProps","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"intersection","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"colors","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"An array of colors that represent stops in the gradient. At least two colors are required\\n(for a single-color background, use the `style.backgroundColor` prop on a `View` component)."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"end","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"For example, `{ x: 0.1, y: 0.2 }` means that the gradient will end `10%` from the left and `20%` from the bottom.","text":"**On web**, this only changes the angle of the gradient because CSS gradients don\'t support changing the end position.\\n"},"type":{"type":"union","types":[{"type":"reference","name":"LinearGradientPoint"},{"type":"literal","value":null}]}},{"name":"locations","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array that contains `number`s ranging from `0` to `1`, inclusive, and is the same length as the `colors` property.\\nEach number indicates a color-stop location where each respective color should be located.","text":"For example, `[0.5, 0.8]` would render:\\n- the first color, solid, from the beginning of the gradient view to 50% through (the middle);\\n- a gradient from the first color to the second from the 50% point to the 80% point; and\\n- the second color, solid, from the 80% point to the end of the gradient view.\\n\\n> The color-stop locations must be ascending from least to greatest.\\n"},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"literal","value":null}]}},{"name":"start","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"For example, `{ x: 0.1, y: 0.2 }` means that the gradient will start `10%` from the left and `20%` from the top.","text":"**On web**, this only changes the angle of the gradient because CSS gradients don\'t support changing the starting position.\\n"},"type":{"type":"union","types":[{"type":"reference","name":"LinearGradientPoint"},{"type":"literal","value":null}]}}]}},{"type":"reference","typeArguments":[{"type":"query","queryType":{"type":"reference","name":"View"}}],"name":"React.ComponentProps"}]}}]}')},Fc2U:function(e){e.exports=JSON.parse('{"name":"expo-background-fetch","kind":1,"kindString":"Project","originalName":"","children":[{"name":"BackgroundFetchResult","kind":8,"kindString":"Enumeration","comment":{"shortText":"This return value is to let iOS know what the result of your background fetch was, so the\\nplatform can better schedule future background fetches. Also, your app has up to 30 seconds\\nto perform the task, otherwise your app will be terminated and future background fetches\\nmay be delayed."},"children":[{"name":"Failed","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An attempt to download data was made but that attempt failed."},"defaultValue":"3"},{"name":"NewData","kind":16,"kindString":"Enumeration member","comment":{"shortText":"New data was successfully downloaded."},"defaultValue":"2"},{"name":"NoData","kind":16,"kindString":"Enumeration member","comment":{"shortText":"There was no new data to download."},"defaultValue":"1"}]},{"name":"BackgroundFetchStatus","kind":8,"kindString":"Enumeration","children":[{"name":"Available","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Background updates are available for the app."},"defaultValue":"3"},{"name":"Denied","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The user explicitly disabled background behavior for this app or for the whole system."},"defaultValue":"1"},{"name":"Restricted","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Background updates are unavailable and the user cannot enable them again. This status can occur\\nwhen, for example, parental controls are in effect for the current user."},"defaultValue":"2"}]},{"name":"BackgroundFetchOptions","kind":256,"kindString":"Interface","children":[{"name":"minimumInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Inexact interval in seconds between subsequent repeats of the background fetch alarm. The final\\ninterval may differ from the specified one to minimize wakeups and battery usage.\\n- On Android it defaults to __10 minutes__,\\n- On iOS it calls [`BackgroundFetch.setMinimumIntervalAsync`](#backgroundfetchsetminimumintervalasyncminimuminterval)\\n  behind the scenes and the default value is the smallest fetch interval supported by the system __(10-15 minutes)__.\\nBackground fetch task receives no data, but your task should return a value that best describes\\nthe results of your background fetch work.","tags":[{"tag":"returns","text":"Returns a promise that fulfils once the task is registered and rejects in case of any errors.\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"startOnBoot","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to restart background fetch events when the device has finished booting.","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"stopOnTerminate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to stop receiving background fetch events after user terminates the app.","tags":[{"tag":"default","text":"true"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"getStatusAsync","kind":64,"kindString":"Function","signatures":[{"name":"getStatusAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets a status of background fetch.","returns":"Returns a promise which fulfils with one of `BackgroundFetchStatus` enum values.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"BackgroundFetchStatus"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"registerTaskAsync","kind":64,"kindString":"Function","signatures":[{"name":"registerTaskAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Registers background fetch task with given name. Registered tasks are saved in persistent storage and restored once the app is initialized.","tags":[{"tag":"example","text":"\\n```ts\\nimport * as BackgroundFetch from \'expo-background-fetch\';\\nimport * as TaskManager from \'expo-task-manager\';\\n\\nTaskManager.defineTask(YOUR_TASK_NAME, () => {\\n  try {\\n    const receivedNewData = // do your background fetch here\\n    return receivedNewData ? BackgroundFetch.BackgroundFetchResult.NewData : BackgroundFetch.BackgroundFetchResult.NoData;\\n  } catch (error) {\\n    return BackgroundFetch.Result.Failed;\\n  }\\n});\\n```\\n"}]},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task to register. The task needs to be defined first - see [`TaskManager.defineTask`](taskmanager#defineTask)\\nfor more details."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An object containing the background fetch options.\\n"},"type":{"type":"reference","name":"BackgroundFetchOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setMinimumIntervalAsync","kind":64,"kindString":"Function","signatures":[{"name":"setMinimumIntervalAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the minimum number of seconds that must elapse before another background fetch can be\\ninitiated. This value is advisory only and does not indicate the exact amount of time expected\\nbetween fetch operations.","text":"> This method doesn\'t take any effect on Android. It is a global value which means that it can\\noverwrite settings from another application opened through Expo Go.\\n","returns":"A promise which fulfils once the minimum interval is set.\\n"},"parameters":[{"name":"minimumInterval","kind":32768,"kindString":"Parameter","comment":{"shortText":"Number of seconds that must elapse before another background fetch can be called."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"unregisterTaskAsync","kind":64,"kindString":"Function","signatures":[{"name":"unregisterTaskAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unregisters background fetch task, so the application will no longer be executing this task.","returns":"A promise which fulfils when the task is fully unregistered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task to unregister."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},"G5G/":function(e){e.exports=JSON.parse('{"name":"expo-build-properties","kind":1,"originalName":"","children":[{"name":"default","kind":16777216,"kindString":"Reference"},{"name":"PluginConfigType","kind":256,"kindString":"Interface","comment":{"shortText":"Configuration for `expo-build-properties`"},"children":[{"name":"android","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"PluginConfigTypeAndroid"}},{"name":"ios","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"PluginConfigTypeIos"}}]},{"name":"PluginConfigTypeAndroid","kind":256,"kindString":"Interface","comment":{"shortText":"Config for Android native build properties"},"children":[{"name":"buildToolsVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Override the default `buildToolsVersion` version number in `build.gradle`"},"type":{"type":"intrinsic","name":"string"}},{"name":"compileSdkVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Override the default `compileSdkVersion` version number in `build.gradle`"},"type":{"type":"intrinsic","name":"number"}},{"name":"enableProguardInReleaseBuilds","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Enable Proguard (R8) in release builds to obfuscate Java code and reduce app size"},"type":{"type":"intrinsic","name":"boolean"}},{"name":"extraProguardRules","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Append custom [Proguard rules](https://www.guardsquare.com/manual/configuration/usage) to `android/app/proguard-rules.pro`"},"type":{"type":"intrinsic","name":"string"}},{"name":"kotlinVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Override the default Kotlin version when building the app"},"type":{"type":"intrinsic","name":"string"}},{"name":"packagingOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"AGP [PackagingOptions](https://developer.android.com/reference/tools/gradle-api/7.0/com/android/build/api/dsl/PackagingOptions)"},"type":{"type":"reference","name":"PluginConfigTypeAndroidPackagingOptions"}},{"name":"targetSdkVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Override the default `targetSdkVersion` version number in `build.gradle`"},"type":{"type":"intrinsic","name":"number"}}]},{"name":"PluginConfigTypeAndroidPackagingOptions","kind":256,"kindString":"Interface","comment":{"shortText":"AGP [PackagingOptions](https://developer.android.com/reference/tools/gradle-api/7.0/com/android/build/api/dsl/PackagingOptions)"},"children":[{"name":"doNotStrip","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Adds a doNotStrip pattern"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"exclude","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Adds an excluded pattern"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"merge","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Adds a merge pattern"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"pickFirst","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Adds a first-pick pattern"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]},{"name":"PluginConfigTypeIos","kind":256,"kindString":"Interface","comment":{"shortText":"Config for iOS native build properties"},"children":[{"name":"deploymentTarget","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Override the default iOS *Deployment Target* version in the following projects:\\n - in CocoaPods projects\\n - `PBXNativeTarget` with `com.apple.product-type.application` productType in the app project"},"type":{"type":"intrinsic","name":"string"}},{"name":"useFrameworks","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Enable [`use_frameworks!`](https://guides.cocoapods.org/syntax/podfile.html#use_frameworks_bang) in `Podfile`"},"type":{"type":"union","types":[{"type":"literal","value":"static"},{"type":"literal","value":"dynamic"}]}}]},{"name":"withBuildProperties","kind":64,"kindString":"Function","signatures":[{"name":"withBuildProperties","kind":4096,"kindString":"Call signature","comment":{"shortText":"Config plugin to customize native Android or iOS build properties for managed apps"},"parameters":[{"name":"config","kind":32768,"kindString":"Parameter","comment":{"shortText":"ExpoConfig"},"type":{"type":"reference","qualifiedName":"ExpoConfig","package":"@expo/config-plugins","name":"ExpoConfig"}},{"name":"props","kind":32768,"kindString":"Parameter","comment":{"shortText":"Configuration for the config plugin\\n"},"type":{"type":"reference","name":"PluginConfigType"}}],"type":{"type":"reference","qualifiedName":"ExpoConfig","package":"@expo/config-plugins","name":"ExpoConfig"}}]}]}')},GHFy:function(e){e.exports=JSON.parse('{"name":"expo-random","kind":1,"kindString":"Project","originalName":"","children":[{"name":"getRandomBytes","kind":64,"kindString":"Function","signatures":[{"name":"getRandomBytes","kind":4096,"kindString":"Call signature","comment":{"shortText":"Generates completely random bytes using native implementations. The `byteCount` property\\nis a `number` indicating the number of bytes to generate in the form of a `Uint8Array`.\\nFalls back to `Math.random` during development to prevent issues with React Native Debugger.","returns":"An array of random bytes with the same length as the `byteCount`.\\n"},"parameters":[{"name":"byteCount","kind":32768,"kindString":"Parameter","comment":{"text":"A number within the range from `0` to `1024`. Anything else will throw a `TypeError`."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Uint8Array"}}]},{"name":"getRandomBytesAsync","kind":64,"kindString":"Function","signatures":[{"name":"getRandomBytesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Generates completely random bytes using native implementations. The `byteCount` property\\nis a `number` indicating the number of bytes to generate in the form of a `Uint8Array`.","returns":"A promise that fulfills with an array of random bytes with the same length as the `byteCount`.\\n"},"parameters":[{"name":"byteCount","kind":32768,"kindString":"Parameter","comment":{"text":"A number within the range from `0` to `1024`. Anything else will throw a `TypeError`."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Uint8Array"}],"name":"Promise"}}]}]}')},GVHk:function(e){e.exports=JSON.parse('{"name":"expo-print","kind":1,"kindString":"Project","originalName":"","children":[{"name":"OrientationType","kind":256,"kindString":"Interface","comment":{"shortText":"The possible values of orientation for the printed content."},"children":[{"name":"landscape","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"portrait","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]},{"name":"FilePrintOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to include base64 encoded string of the file in the returned object."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Height of the single page in pixels. Defaults to `792` which is a height of US Letter paper\\nformat with 72 PPI."},"type":{"type":"intrinsic","name":"number"}},{"name":"html","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"HTML string to print into PDF file."},"type":{"type":"intrinsic","name":"string"}},{"name":"margins","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Page margins for the printed document.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"PageMargins"}},{"name":"useMarkupFormatter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Alternative to default option that uses [UIMarkupTextPrintFormatter](https://developer.apple.com/documentation/uikit/uimarkuptextprintformatter)\\ninstead of WebView, but it doesn\'t display images.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Width of the single page in pixels. Defaults to `612` which is a width of US Letter paper\\nformat with 72 PPI."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"FilePrintResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Base64 encoded string containing the data of the PDF file. **Available only if `base64`\\noption is truthy**. It doesn\'t include data URI prefix `data:application/pdf;base64,`."},"type":{"type":"intrinsic","name":"string"}},{"name":"numberOfPages","kind":1024,"kindString":"Property","comment":{"shortText":"Number of pages that were needed to render given content."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"A URI to the printed PDF file."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"PrintOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Height of the single page in pixels. Defaults to `792` which is a height of US Letter paper\\nformat with 72 PPI. **Available only with `html` option.**"},"type":{"type":"intrinsic","name":"number"}},{"name":"html","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"HTML string to print.","tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"margins","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Page margins for the printed document.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"PageMargins"}},{"name":"markupFormatterIOS","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nThis argument is deprecated, use `useMarkupFormatter` instead.\\nMight be removed in the future releases."},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"orientation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The orientation of the printed content, `Print.Orientation.portrait`\\nor `Print.Orientation.landscape`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"indexedAccess","indexType":{"type":"literal","value":"portrait"},"objectType":{"type":"reference","name":"OrientationType"}},{"type":"indexedAccess","indexType":{"type":"literal","value":"landscape"},"objectType":{"type":"reference","name":"OrientationType"}}]}},{"name":"printerUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL of the printer to use. Returned from `selectPrinterAsync`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URI of a PDF file to print. Remote, local (ex. selected via `DocumentPicker`) or base64 data URI\\nstarting with `data:application/pdf;base64,`. This only supports PDF, not other types of\\ndocument (e.g. images).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"useMarkupFormatter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Alternative to default option that uses [UIMarkupTextPrintFormatter](https://developer.apple.com/documentation/uikit/uimarkuptextprintformatter)\\ninstead of WebView, but it doesn\'t display images.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Width of the single page in pixels. Defaults to `612` which is a width of US Letter paper\\nformat with 72 PPI. **Available only with `html` option.**"},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"Printer","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"Name of the printer."},"type":{"type":"intrinsic","name":"string"}},{"name":"url","kind":1024,"kindString":"Property","comment":{"shortText":"URL of the printer."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Orientation","kind":32,"kindString":"Variable","comment":{"shortText":"The orientation of the printed content."},"type":{"type":"reference","name":"OrientationType"},"defaultValue":"ExponentPrint.Orientation"},{"name":"printAsync","kind":64,"kindString":"Function","signatures":[{"name":"printAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prints a document or HTML, on web this prints the HTML from the page.\\n> Note: On iOS, printing from HTML source doesn\'t support local asset URLs (due to `WKWebView`\\n> limitations). As a workaround you can use inlined base64-encoded strings.\\n> See [this comment](https://github.com/expo/expo/issues/7940#issuecomment-657111033) for more details.","returns":"Resolves to an empty `Promise` if printing started.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map defining what should be printed."},"type":{"type":"reference","name":"PrintOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"printToFileAsync","kind":64,"kindString":"Function","signatures":[{"name":"printToFileAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prints HTML to PDF file and saves it to [app\'s cache directory](./filesystem/#filesystemcachedirectory).\\nOn Web this method opens the print dialog."},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of print options.\\n"},"type":{"type":"reference","name":"FilePrintOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"FilePrintResult"}],"name":"Promise"}}]},{"name":"selectPrinterAsync","kind":64,"kindString":"Function","signatures":[{"name":"selectPrinterAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Chooses a printer that can be later used in `printAsync`","returns":"A promise which fulfils with an object containing `name` and `url` of the selected printer.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Printer"}],"name":"Promise"}}]}]}')},GyoX:function(e,w,n){"use strict";e.exports=a;var c=n("vUGn"),p=n("UFN4"),d=n("2jS9");function a(m,r){return m.augment(r,c("root",p(d(m,r))))}},H7O6:function(e){e.exports=JSON.parse('{"name":"expo-screen-capture","kind":1,"kindString":"Project","originalName":"","children":[{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"addScreenshotListener","kind":64,"kindString":"Function","signatures":[{"name":"addScreenshotListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Adds a listener that will fire whenever the user takes a screenshot while the app is foregrounded.\\nOn Android, this method requires the `READ_EXTERNAL_STORAGE` permission. You can request this\\nwith [`MediaLibrary.requestPermissionsAsync()`](./media-library/#medialibraryrequestpermissionsasync).","returns":"A `Subscription` object that you can use to unregister the listener, either by calling\\n`remove()` or passing it to `removeScreenshotListener`.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"The function that will be executed when the user takes a screenshot.\\nThis function accepts no arguments.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"allowScreenCaptureAsync","kind":64,"kindString":"Function","signatures":[{"name":"allowScreenCaptureAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Re-allows the user to screen record or screenshot your app. If you haven\'t called\\n`preventScreenCapture()` yet, this method does nothing."},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"shortText":"This will prevent multiple instances of the `preventScreenCaptureAsync` and\\n`allowScreenCaptureAsync` methods from conflicting with each other. If provided, the value must\\nbe the same as the key passed to `preventScreenCaptureAsync` in order to re-enable screen\\ncapturing. Defaults to \'default\'.\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'default\'"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the Screen Capture API is available on the current device.","returns":"A promise that resolves to a `boolean` indicating whether the Screen Capture API is available on the current\\ndevice. Currently, this resolves to `true` on Android and iOS only.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"preventScreenCaptureAsync","kind":64,"kindString":"Function","signatures":[{"name":"preventScreenCaptureAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prevents screenshots and screen recordings until `allowScreenCaptureAsync` is called or the app is restarted. If you are\\nalready preventing screen capture, this method does nothing (unless you pass a new and unique `key`).","text":"> Please note that on iOS, this will only prevent screen recordings, and is only available on\\niOS 11 and newer. On older iOS versions, this method does nothing.\\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"shortText":"Optional. If provided, this will help prevent multiple instances of the `preventScreenCaptureAsync`\\nand `allowScreenCaptureAsync` methods (and `usePreventScreenCapture` hook) from conflicting with each other.\\nWhen using multiple keys, you\'ll have to re-allow each one in order to re-enable screen capturing.\\nDefaults to `\'default\'`.\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'default\'"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"removeScreenshotListener","kind":64,"kindString":"Function","signatures":[{"name":"removeScreenshotListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes the subscription you provide, so that you are no longer listening for screenshots.","text":"If you prefer, you can also call `remove()` on that `Subscription` object, for example:\\n\\n```ts\\nlet mySubscription = addScreenshotListener(() => {\\n  console.log(\\"You took a screenshot!\\");\\n});\\n...\\nmySubscription.remove();\\n// OR\\nremoveScreenshotListener(mySubscription);\\n```\\n"},"parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","comment":{"shortText":"Subscription returned by `addScreenshotListener`.\\n"},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"usePreventScreenCapture","kind":64,"kindString":"Function","signatures":[{"name":"usePreventScreenCapture","kind":4096,"kindString":"Call signature","comment":{"shortText":"A React hook to prevent screen capturing for as long as the owner component is mounted."},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'default\'"}],"type":{"type":"intrinsic","name":"void"}}]}]}')},HGtU:function(e){e.exports=JSON.parse('{"name":"expo-web-browser","kind":1,"kindString":"Project","originalName":"","children":[{"name":"WebBrowserPresentationStyle","kind":8,"kindString":"Enumeration","comment":{"shortText":"A browser presentation style. Its values are directly mapped to the [`UIModalPresentationStyle`](https://developer.apple.com/documentation/uikit/uiviewcontroller/1621355-modalpresentationstyle).","tags":[{"tag":"platform","text":"ios\\n"}]},"children":[{"name":"AUTOMATIC","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The default presentation style chosen by the system.\\nOn older iOS versions, falls back to `WebBrowserPresentationStyle.FullScreen`.","tags":[{"tag":"platform","text":"ios 13+\\n"}]},"defaultValue":"\\"automatic\\""},{"name":"CURRENT_CONTEXT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style where the browser is displayed over the app\'s content."},"defaultValue":"\\"currentContext\\""},{"name":"FORM_SHEET","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style that displays the browser centered in the screen."},"defaultValue":"\\"formSheet\\""},{"name":"FULL_SCREEN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style in which the presented browser covers the screen."},"defaultValue":"\\"fullScreen\\""},{"name":"OVER_CURRENT_CONTEXT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style where the browser is displayed over the app\'s content."},"defaultValue":"\\"overCurrentContext\\""},{"name":"OVER_FULL_SCREEN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style in which the browser view covers the screen."},"defaultValue":"\\"overFullScreen\\""},{"name":"PAGE_SHEET","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style that partially covers the underlying content."},"defaultValue":"\\"pageSheet\\""},{"name":"POPOVER","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style where the browser is displayed in a popover view."},"defaultValue":"\\"popover\\""}]},{"name":"WebBrowserResultType","kind":8,"kindString":"Enumeration","children":[{"name":"CANCEL","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"cancel\\""},{"name":"DISMISS","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"dismiss\\""},{"name":"LOCKED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"locked\\""},{"name":"OPENED","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"android\\n"}]},"defaultValue":"\\"opened\\""}]},{"name":"AuthSessionOpenOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"If there is no native AuthSession implementation available (which is the case on Android) the params inherited from\\n[`WebBrowserOpenOptions`](#webbrowseropenoptions) will be used in the browser polyfill. Otherwise, the browser parameters will be ignored."},"type":{"type":"intersection","types":[{"type":"reference","name":"WebBrowserOpenOptions"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"preferEphemeralSession","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Determines whether the session should ask the browser for a private authentication session.\\nSet this to `true` to request that the browser doesn\u2019t share cookies or other browsing data between the authentication session and the user\u2019s normal browser session.\\nWhether the request is honored depends on the user\u2019s default web browser.","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"ios 13+\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}]}},{"name":"WebBrowserAuthSessionResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"WebBrowserRedirectResult"},{"type":"reference","name":"WebBrowserResult"}]}},{"name":"WebBrowserCompleteAuthSessionOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"skipRedirectCheck","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Attempt to close the window without checking to see if the auth redirect matches the cached redirect URL."},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"WebBrowserCompleteAuthSessionResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"message","kind":1024,"kindString":"Property","comment":{"shortText":"Additional description or reasoning of the result."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the result."},"type":{"type":"union","types":[{"type":"literal","value":"success"},{"type":"literal","value":"failed"}]}}]}}},{"name":"WebBrowserCoolDownResult","kind":4194304,"kindString":"Type alias","type":{"type":"reference","name":"ServiceActionResult"}},{"name":"WebBrowserCustomTabsResults","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"browserPackages","kind":1024,"kindString":"Property","comment":{"shortText":"All packages recognized by `PackageManager` as capable of handling Custom Tabs. Empty array\\nmeans there is no supporting browsers on device."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"defaultBrowserPackage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Default package chosen by user, `null` if there is no such packages. Also `null` usually means,\\nthat user will be prompted to choose from available packages."},"type":{"type":"intrinsic","name":"string"}},{"name":"preferredBrowserPackage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Package preferred by `CustomTabsClient` to be used to handle Custom Tabs. It favors browser\\nchosen by user as default, as long as it is present on both `browserPackages` and\\n`servicePackages` lists. Only such browsers are considered as fully supporting Custom Tabs.\\nIt might be `null` when there is no such browser installed or when default browser is not in\\n`servicePackages` list."},"type":{"type":"intrinsic","name":"string"}},{"name":"servicePackages","kind":1024,"kindString":"Property","comment":{"shortText":"All packages recognized by `PackageManager` as capable of handling Custom Tabs Service.\\nThis service is used by [`warmUpAsync`](#webbrowserwarmupasyncbrowserpackage), [`mayInitWithUrlAsync`](#webbrowsermayinitwithurlasyncurl-browserpackage)\\nand [`coolDownAsync`](#webbrowsercooldownasyncbrowserpackage)."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}}},{"name":"WebBrowserMayInitWithUrlResult","kind":4194304,"kindString":"Type alias","type":{"type":"reference","name":"ServiceActionResult"}},{"name":"WebBrowserOpenOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"browserPackage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Package name of a browser to be used to handle Custom Tabs. List of\\navailable packages is to be queried by [`getCustomTabsSupportingBrowsers`](#webbrowsergetcustomtabssupportingbrowsersasync) method.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"controlsColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Tint color for controls in SKSafariViewController in `#AARRGGBB` or `#RRGGBB` format.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"createTask","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether the browser should open in a new task or in\\nthe same task as your app.","tags":[{"tag":"default","text":"true"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"dismissButtonStyle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The style of the dismiss button. Should be one of: `done`, `close`, or `cancel`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":"done"},{"type":"literal","value":"close"},{"type":"literal","value":"cancel"}]}},{"name":"enableBarCollapsing","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether the toolbar should be hiding when a user scrolls the website."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"enableDefaultShareMenuItem","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether a default share item should be added to the menu.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"presentationStyle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The [presentation style](https://developer.apple.com/documentation/uikit/uiviewcontroller/1621355-modalpresentationstyle)\\nof the browser window.","tags":[{"tag":"default","text":"WebBrowser.WebBrowserPresentationStyle.OverFullScreen"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"WebBrowserPresentationStyle"}},{"name":"readerMode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether Safari should enter Reader mode, if it is available.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"secondaryToolbarColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Color of the secondary toolbar in either `#AARRGGBB` or `#RRGGBB` format.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"showInRecents","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether browsed website should be shown as separate\\nentry in Android recents/multitasking view. Requires `createTask` to be `true` (default).","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"showTitle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether the browser should show the title of website on the toolbar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"toolbarColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Color of the toolbar in either `#AARRGGBB` or `#RRGGBB` format."},"type":{"type":"intrinsic","name":"string"}},{"name":"windowFeatures","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Features to use with `window.open()`.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"WebBrowserWindowFeatures"}]}},{"name":"windowName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Name to assign to the popup window.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"WebBrowserRedirectResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the result."},"type":{"type":"literal","value":"success"}},{"name":"url","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"WebBrowserResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the result."},"type":{"type":"reference","name":"WebBrowserResultType"}}]}}},{"name":"WebBrowserWarmUpResult","kind":4194304,"kindString":"Type alias","type":{"type":"reference","name":"ServiceActionResult"}},{"name":"WebBrowserWindowFeatures","kind":4194304,"kindString":"Type alias","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"string"}]}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"name":"coolDownAsync","kind":64,"kindString":"Function","signatures":[{"name":"coolDownAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"This methods removes all bindings to services created by [`warmUpAsync`](#webbrowserwarmupasyncbrowserpackage)\\nor [`mayInitWithUrlAsync`](#webbrowsermayinitwithurlasyncurl-browserpackage). You should call\\nthis method once you don\'t need them to avoid potential memory leaks. However, those binding\\nwould be cleared once your application is destroyed, which might be sufficient in most cases.","returns":"The promise which fulfils with ` WebBrowserCoolDownResult` when cooling is performed, or\\nan empty object when there was no connection to be dismissed.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"browserPackage","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Package of browser to be cooled. If not set, preferred browser will be used.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserCoolDownResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"dismissAuthSession","kind":64,"kindString":"Function","signatures":[{"name":"dismissAuthSession","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]},{"name":"dismissBrowser","kind":64,"kindString":"Function","signatures":[{"name":"dismissBrowser","kind":4096,"kindString":"Call signature","comment":{"shortText":"Dismisses the presented web browser.","returns":"The `void` on successful attempt, or throws error, if dismiss functionality is not avaiable.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"name":"getCustomTabsSupportingBrowsersAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCustomTabsSupportingBrowsersAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a list of applications package names supporting Custom Tabs, Custom Tabs\\nservice, user chosen and preferred one. This may not be fully reliable, since it uses\\n`PackageManager.getResolvingActivities` under the hood. (For example, some browsers might not be\\npresent in browserPackages list once another browser is set to default.)","returns":"The promise which fulfils with [`WebBrowserCustomTabsResults`](#webbrowsercustomtabsresults) object.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserCustomTabsResults"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"mayInitWithUrlAsync","kind":64,"kindString":"Function","signatures":[{"name":"mayInitWithUrlAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"This method initiates (if needed) [CustomTabsSession](https://developer.android.com/reference/android/support/customtabs/CustomTabsSession.html#maylaunchurl)\\nand calls its `mayLaunchUrl` method for browser specified by the package.","returns":"A promise which fulfils with `WebBrowserMayInitWithUrlResult` object.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"The url of page that is likely to be loaded first when opening browser."},"type":{"type":"intrinsic","name":"string"}},{"name":"browserPackage","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Package of browser to be informed. If not set, preferred\\nbrowser will be used.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserMayInitWithUrlResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"maybeCompleteAuthSession","kind":64,"kindString":"Function","signatures":[{"name":"maybeCompleteAuthSession","kind":4096,"kindString":"Call signature","comment":{"shortText":"Possibly completes an authentication session on web in a window popup. The method\\nshould be invoked on the page that the window redirects to.","returns":"Returns an object with message about why the redirect failed or succeeded:\\n\\nIf `type` is set to `failed`, the reason depends on the message:\\n- `Not supported on this platform`: If the platform doesn\'t support this method (iOS, Android).\\n- `Cannot use expo-web-browser in a non-browser environment`: If the code was executed in an SSR\\n  or node environment.\\n- `No auth session is currently in progress`: (the cached state wasn\'t found in local storage).\\n  This can happen if the window redirects to an origin (website) that is different to the initial\\n  website origin. If this happens in development, it may be because the auth started on localhost\\n  and finished on your computer port (Ex: `128.0.0.*`). This is controlled by the `redirectUrl`\\n  and `returnUrl`.\\n- `Current URL \\"<URL>\\" and original redirect URL \\"<URL>\\" do not match`: This can occur when the\\n  redirect URL doesn\'t match what was initial defined as the `returnUrl`. You can skip this test\\n  in development by passing `{ skipRedirectCheck: true }` to the function.\\n\\nIf `type` is set to `success`, the parent window will attempt to close the child window immediately.\\n\\nIf the error `ERR_WEB_BROWSER_REDIRECT` was thrown, it may mean that the parent window was\\nreloaded before the auth was completed. In this case you\'ll need to close the child window manually.\\n","tags":[{"tag":"platform","text":"web\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"WebBrowserCompleteAuthSessionOptions"},"defaultValue":"{}"}],"type":{"type":"reference","name":"WebBrowserCompleteAuthSessionResult"}}]},{"name":"openAuthSessionAsync","kind":64,"kindString":"Function","signatures":[{"name":"openAuthSessionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"# On iOS:\\nOpens the url with Safari in a modal using `SFAuthenticationSession` on iOS 11 and greater,\\nand falling back on a `SFSafariViewController`. The user will be asked whether to allow the app\\nto authenticate using the given url.","text":"# On Android:\\nThis will be done using a \\"custom Chrome tabs\\" browser, [AppState](../react-native/appstate/),\\nand [Linking](./linking/) APIs.\\n\\n# On web:\\n> This API can only be used in a secure environment (`https`). You can use expo `start:web --https`\\nto test this. Otherwise, an error with code [`ERR_WEB_BROWSER_CRYPTO`](#errwebbrowsercrypto) will be thrown.\\nThis will use the browser\'s [`window.open()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/open) API.\\n- _Desktop_: This will create a new web popup window in the browser that can be closed later using `WebBrowser.maybeCompleteAuthSession()`.\\n- _Mobile_: This will open a new tab in the browser which can be closed using `WebBrowser.maybeCompleteAuthSession()`.\\n\\nHow this works on web:\\n- A crypto state will be created for verifying the redirect.\\n  - This means you need to run with `expo start:web --https`\\n- The state will be added to the window\'s `localstorage`. This ensures that auth cannot complete\\n  unless it\'s done from a page running with the same origin as it was started.\\n  Ex: if `openAuthSessionAsync` is invoked on `https://localhost:19006`, then `maybeCompleteAuthSession`\\n  must be invoked on a page hosted from the origin `https://localhost:19006`. Using a different\\n  website, or even a different host like `https://128.0.0.*:19006` for example will not work.\\n- A timer will be started to check for every 1000 milliseconds (1 second) to detect if the window\\n  has been closed by the user. If this happens then a promise will resolve with `{ type: \'dismiss\' }`.\\n\\n> On mobile web, Chrome and Safari will block any call to [`window.open()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/open)\\nwhich takes too long to fire after a user interaction. This method must be invoked immediately\\nafter a user interaction. If the event is blocked, an error with code [`ERR_WEB_BROWSER_BLOCKED`](#errwebbrowserblocked) will be thrown.\\n","returns":"\\n- If the user does not permit the application to authenticate with the given url, the Promise fulfills with `{ type: \'cancel\' }` object.\\n- If the user closed the web browser, the Promise fulfills with `{ type: \'cancel\' }` object.\\n- If the browser is closed using [`dismissBrowser`](#webbrowserdismissbrowser),\\nthe Promise fulfills with `{ type: \'dismiss\' }` object.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"The url to open in the web browser. This should be a login page."},"type":{"type":"intrinsic","name":"string"}},{"name":"redirectUrl","kind":32768,"kindString":"Parameter","comment":{"shortText":"_Optional_ - The url to deep link back into your app.\\nBy default, this will be set to output of [`Linking.createURL(\\"\\")`](./linking/#linkingcreateurlpath-namedparameters)."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"_Optional_ - An object extending the [`WebBrowserOpenOptions`](#webbrowseropenoptions).\\nIf there is no native AuthSession implementation available (which is the case on Android)\\nthese params will be used in the browser polyfill. If there is a native AuthSession implementation,\\nthese params will be ignored.\\n"},"type":{"type":"reference","name":"AuthSessionOpenOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserAuthSessionResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"openBrowserAsync","kind":64,"kindString":"Function","signatures":[{"name":"openBrowserAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Opens the url with Safari in a modal on iOS using [`SFSafariViewController`](https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller),\\nand Chrome in a new [custom tab](https://developer.chrome.com/multidevice/android/customtabs)\\non Android. On iOS, the modal Safari will not share cookies with the system Safari. If you need\\nthis, use [`openAuthSessionAsync`](#webbrowseropenauthsessionasyncurl-redirecturl-browserparams).","returns":"The promise behaves differently based on the platform.\\nOn Android promise resolves with `{type: \'opened\'}` if we were able to open browser.\\nOn iOS:\\n- If the user closed the web browser, the Promise resolves with `{ type: \'cancel\' }`.\\n- If the browser is closed using [`dismissBrowser`](#webbrowserdismissbrowser), the Promise resolves with `{ type: \'dismiss\' }`.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"The url to open in the web browser."},"type":{"type":"intrinsic","name":"string"}},{"name":"browserParams","kind":32768,"kindString":"Parameter","comment":{"shortText":"A dictionary of key-value pairs.\\n"},"type":{"type":"reference","name":"WebBrowserOpenOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"warmUpAsync","kind":64,"kindString":"Function","signatures":[{"name":"warmUpAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"This method calls `warmUp` method on [CustomTabsClient](https://developer.android.com/reference/android/support/customtabs/CustomTabsClient.html#warmup(long))\\nfor specified package.","returns":"A promise which fulfils with `WebBrowserWarmUpResult` object.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"browserPackage","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Package of browser to be warmed up. If not set, preferred browser will be warmed.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserWarmUpResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},"Hon/":function(e){e.exports=JSON.parse('{"name":"expo-location","kind":1,"kindString":"Project","originalName":"","children":[{"name":"LocationAccuracy","kind":16777216,"kindString":"Reference"},{"name":"LocationActivityType","kind":16777216,"kindString":"Reference"},{"name":"LocationGeofencingEventType","kind":16777216,"kindString":"Reference"},{"name":"LocationGeofencingRegionState","kind":16777216,"kindString":"Reference"},{"name":"Accuracy","kind":8,"kindString":"Enumeration","comment":{"shortText":"Enum with available location accuracies."},"children":[{"name":"Balanced","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Accurate to within one hundred meters."},"defaultValue":"3"},{"name":"BestForNavigation","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The highest possible accuracy that uses additional sensor data to facilitate navigation apps."},"defaultValue":"6"},{"name":"High","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Accurate to within ten meters of the desired target."},"defaultValue":"4"},{"name":"Highest","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The best level of accuracy available."},"defaultValue":"5"},{"name":"Low","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Accurate to the nearest kilometer."},"defaultValue":"2"},{"name":"Lowest","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Accurate to the nearest three kilometers."},"defaultValue":"1"}]},{"name":"ActivityType","kind":8,"kindString":"Enumeration","comment":{"shortText":"Enum with available activity types of background location tracking."},"children":[{"name":"Airborne","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Intended for airborne activities. Fall backs to `ActivityType.Other` if\\nunsupported.","tags":[{"tag":"platform","text":"ios 12+\\n"}]},"defaultValue":"5"},{"name":"AutomotiveNavigation","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Location updates are being used specifically during vehicular navigation to track location\\nchanges to the automobile."},"defaultValue":"2"},{"name":"Fitness","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Use this activity type if you track fitness activities such as walking, running, cycling,\\nand so on."},"defaultValue":"3"},{"name":"Other","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Default activity type. Use it if there is no other type that matches the activity you track."},"defaultValue":"1"},{"name":"OtherNavigation","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Activity type for movements for other types of vehicular navigation that are not automobile\\nrelated."},"defaultValue":"4"}]},{"name":"GeofencingEventType","kind":8,"kindString":"Enumeration","comment":{"shortText":"A type of the event that geofencing task can receive."},"children":[{"name":"Enter","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Emitted when the device entered observed region."},"defaultValue":"1"},{"name":"Exit","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Occurs as soon as the device left observed region"},"defaultValue":"2"}]},{"name":"GeofencingRegionState","kind":8,"kindString":"Enumeration","comment":{"shortText":"State of the geofencing region that you receive through the geofencing task."},"children":[{"name":"Inside","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates that the device is inside the region."},"defaultValue":"1"},{"name":"Outside","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Inverse of inside state."},"defaultValue":"2"},{"name":"Unknown","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates that the device position related to the region is unknown."},"defaultValue":"0"}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"LocationPermissionResponse","kind":256,"kindString":"Interface","comment":{"shortText":"`LocationPermissionResponse` extends [PermissionResponse](permissions.md#permissionresponse)\\ntype exported by `expo-modules-core` and contains additional platform-specific fields."},"children":[{"name":"android","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"PermissionDetailsLocationAndroid"}},{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"UMPermissionResponse.canAskAgain"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"},"inheritedFrom":{"type":"reference","name":"UMPermissionResponse.expires"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"UMPermissionResponse.granted"}},{"name":"ios","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"PermissionDetailsLocationIOS"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"},"inheritedFrom":{"type":"reference","name":"UMPermissionResponse.status"}}],"extendedTypes":[{"type":"reference","name":"PermissionResponse"}]},{"name":"LocationCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Represents `watchPositionAsync` callback."},"parameters":[{"name":"location","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"LocationObject"}}],"type":{"type":"intrinsic","name":"any"}}]}}},{"name":"LocationGeocodedAddress","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing a result of `reverseGeocodeAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"city","kind":1024,"kindString":"Property","comment":{"shortText":"City name of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"country","kind":1024,"kindString":"Property","comment":{"shortText":"Localized country name of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"district","kind":1024,"kindString":"Property","comment":{"shortText":"Additional city-level information like district name."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"isoCountryCode","kind":1024,"kindString":"Property","comment":{"shortText":"Localized (ISO) country code of the address, if available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"The name of the placemark, for example, \\"Tower Bridge\\"."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"postalCode","kind":1024,"kindString":"Property","comment":{"shortText":"Postal code of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"region","kind":1024,"kindString":"Property","comment":{"shortText":"The state or province associated with the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"street","kind":1024,"kindString":"Property","comment":{"shortText":"Street name of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"streetNumber","kind":1024,"kindString":"Property","comment":{"shortText":"Street number of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"subregion","kind":1024,"kindString":"Property","comment":{"shortText":"Additional information about administrative area."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"timezone","kind":1024,"kindString":"Property","comment":{"shortText":"The timezone identifier associated with the address.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}}},{"name":"LocationGeocodedLocation","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing a result of `geocodeAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accuracy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The radius of uncertainty for the location, measured in meters."},"type":{"type":"intrinsic","name":"number"}},{"name":"altitude","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The altitude in meters above the WGS 84 reference ellipsoid."},"type":{"type":"intrinsic","name":"number"}},{"name":"latitude","kind":1024,"kindString":"Property","comment":{"shortText":"The latitude in degrees."},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","comment":{"shortText":"The longitude in degrees."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationGeocodingOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object of options for forward and reverse geocoding."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"useGoogleMaps","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to force using Google Maps API instead of the native implementation.\\nUsed by default only on Web platform. Requires providing an API key by `setGoogleApiKey`."},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"LocationHeadingCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Represents `watchHeadingAsync` callback."},"parameters":[{"name":"location","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"LocationHeadingObject"}}],"type":{"type":"intrinsic","name":"any"}}]}}},{"name":"LocationHeadingObject","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type of the object containing heading details and provided by `watchHeadingAsync` callback."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accuracy","kind":1024,"kindString":"Property","comment":{"shortText":"Level of calibration of compass.\\n- `3`: high accuracy, `2`: medium accuracy, `1`: low accuracy, `0`: none\\nReference for iOS:\\n- `3`: < 20 degrees uncertainty, `2`: < 35 degrees, `1`: < 50 degrees, `0`: > 50 degrees"},"type":{"type":"intrinsic","name":"number"}},{"name":"magHeading","kind":1024,"kindString":"Property","comment":{"shortText":"Measure of magnetic north in degrees."},"type":{"type":"intrinsic","name":"number"}},{"name":"trueHeading","kind":1024,"kindString":"Property","comment":{"shortText":"Measure of true north in degrees (needs location permissions, will return `-1` if not given)."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationLastKnownOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing options object that can be passed to `getLastKnownPositionAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"maxAge","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A number of milliseconds after which the last known location starts to be invalid and thus\\n`null` is returned."},"type":{"type":"intrinsic","name":"number"}},{"name":"requiredAccuracy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The maximum radius of uncertainty for the location, measured in meters. If the last known\\nlocation\'s accuracy radius is bigger (less accurate) then `null` is returned."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationObject","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing the location object."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"coords","kind":1024,"kindString":"Property","comment":{"shortText":"The coordinates of the position."},"type":{"type":"reference","name":"LocationObjectCoords"}},{"name":"mocked","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the location coordinates is mocked or not.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"timestamp","kind":1024,"kindString":"Property","comment":{"shortText":"The time at which this position information was obtained, in milliseconds since epoch."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationObjectCoords","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing the location GPS related data."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accuracy","kind":1024,"kindString":"Property","comment":{"shortText":"The radius of uncertainty for the location, measured in meters. Can be `null` on Web if it\'s not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"altitude","kind":1024,"kindString":"Property","comment":{"shortText":"The altitude in meters above the WGS 84 reference ellipsoid. Can be `null` on Web if it\'s not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"altitudeAccuracy","kind":1024,"kindString":"Property","comment":{"shortText":"The accuracy of the altitude value, in meters. Can be `null` on Web if it\'s not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"heading","kind":1024,"kindString":"Property","comment":{"shortText":"Horizontal direction of travel of this device, measured in degrees starting at due north and\\ncontinuing clockwise around the compass. Thus, north is 0 degrees, east is 90 degrees, south is\\n180 degrees, and so on. Can be `null` on Web if it\'s not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"latitude","kind":1024,"kindString":"Property","comment":{"shortText":"The latitude in degrees."},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","comment":{"shortText":"The longitude in degrees."},"type":{"type":"intrinsic","name":"number"}},{"name":"speed","kind":1024,"kindString":"Property","comment":{"shortText":"The instantaneous speed of the device in meters per second. Can be `null` on Web if it\'s not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}}]}}},{"name":"LocationOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing options argument in `getCurrentPositionAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accuracy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Location manager accuracy. Pass one of `LocationAccuracy` enum values.\\nFor low-accuracies the implementation can avoid geolocation providers\\nthat consume a significant amount of power (such as GPS)."},"type":{"type":"reference","name":"LocationAccuracy"}},{"name":"distanceInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Receive updates only when the location has changed by at least this distance in meters.\\nDefault value may depend on `accuracy` option."},"type":{"type":"intrinsic","name":"number"}},{"name":"mayShowUserSettingsDialog","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specifies whether to ask the user to turn on improved accuracy location mode\\nwhich uses Wi-Fi, cell networks and GPS sensor.","tags":[{"tag":"default","text":"true"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"timeInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Minimum time to wait between each update in milliseconds.\\nDefault value may depend on `accuracy` option.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationProviderStatus","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Represents the object containing details about location provider."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"backgroundModeEnabled","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"gpsAvailable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the GPS provider is available. If `true` the location data will come\\nfrom GPS, especially for requests with high accuracy.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"locationServicesEnabled","kind":1024,"kindString":"Property","comment":{"shortText":"Whether location services are enabled. See [Location.hasServicesEnabledAsync](#locationhasservicesenabledasync)\\nfor a more convenient solution to get this value."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"networkAvailable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the network provider is available. If `true` the location data will\\ncome from cellular network, especially for requests with low accuracy.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"passiveAvailable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the passive provider is available. If `true` the location data will\\nbe determined passively.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"LocationRegion","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing geofencing region object."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"identifier","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The identifier of the region object. Defaults to auto-generated UUID hash."},"type":{"type":"intrinsic","name":"string"}},{"name":"latitude","kind":1024,"kindString":"Property","comment":{"shortText":"The latitude in degrees of region\'s center point."},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","comment":{"shortText":"The longitude in degrees of region\'s center point."},"type":{"type":"intrinsic","name":"number"}},{"name":"notifyOnEnter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value whether to call the task if the device enters the region.","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"notifyOnExit","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value whether to call the task if the device exits the region.","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"radius","kind":1024,"kindString":"Property","comment":{"shortText":"The radius measured in meters that defines the region\'s outer boundary."},"type":{"type":"intrinsic","name":"number"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"One of [GeofencingRegionState](#geofencingregionstate) region state. Determines whether the\\ndevice is inside or outside a region."},"type":{"type":"reference","name":"LocationGeofencingRegionState"}}]}}},{"name":"LocationSubscription","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Represents subscription object returned by methods watching for new locations or headings."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"Call this function with no arguments to remove this subscription. The callback will no longer\\nbe called for location updates."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"LocationTaskOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing background location task options."},"type":{"type":"intersection","types":[{"type":"reference","name":"LocationOptions"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"activityType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The type of user activity associated with the location updates.","tags":[{"tag":"see","text":"See [Apple docs](https://developer.apple.com/documentation/corelocation/cllocationmanager/1620567-activitytype) for more details."},{"tag":"default","text":"LocationActivityType.Other"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"LocationActivityType"}},{"name":"deferredUpdatesDistance","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The distance in meters that must occur between last reported location and the current location\\nbefore deferred locations are reported.","tags":[{"tag":"default","text":"0\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"deferredUpdatesInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Minimum time interval in milliseconds that must pass since last reported location before all\\nlater locations are reported in a batched update","tags":[{"tag":"default","text":"0\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"deferredUpdatesTimeout","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"foregroundService","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"LocationTaskServiceOptions"}},{"name":"pausesUpdatesAutomatically","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean value indicating whether the location manager can pause location\\nupdates to improve battery life without sacrificing location data. When this option is set to\\n`true`, the location manager pauses updates (and powers down the appropriate hardware) at times\\nwhen the location data is unlikely to change. You can help the determination of when to pause\\nlocation updates by assigning a value to the `activityType` property.","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"showsBackgroundLocationIndicator","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean indicating whether the status bar changes its appearance when\\nlocation services are used in the background.","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"ios 11+\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}]}},{"name":"LocationTaskServiceOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"killServiceOnDestroy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value whether to destroy the foreground service if the app is killed."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"notificationBody","kind":1024,"kindString":"Property","comment":{"shortText":"Subtitle of the foreground service notification."},"type":{"type":"intrinsic","name":"string"}},{"name":"notificationColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Color of the foreground service notification. Accepts `#RRGGBB` and `#AARRGGBB` hex formats."},"type":{"type":"intrinsic","name":"string"}},{"name":"notificationTitle","kind":1024,"kindString":"Property","comment":{"shortText":"Title of the foreground service notification."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"PermissionDetailsLocationAndroid","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accuracy","kind":1024,"kindString":"Property","comment":{"shortText":"Indicates the type of location provider."},"type":{"type":"union","types":[{"type":"literal","value":"fine"},{"type":"literal","value":"coarse"},{"type":"literal","value":"none"}]}},{"name":"scope","kind":1024,"kindString":"Property","comment":{"tags":[{"tag":"deprecated","text":"Use `accuracy` field instead.\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":"fine"},{"type":"literal","value":"coarse"},{"type":"literal","value":"none"}]}}]}}},{"name":"PermissionDetailsLocationIOS","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"scope","kind":1024,"kindString":"Property","comment":{"shortText":"The scope of granted permission. Indicates when it\'s possible to use location."},"type":{"type":"union","types":[{"type":"literal","value":"whenInUse"},{"type":"literal","value":"always"},{"type":"literal","value":"none"}]}}]}}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"EventEmitter","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"reference","name":"EventEmitter"},"defaultValue":"..."},{"name":"enableNetworkProviderAsync","kind":64,"kindString":"Function","signatures":[{"name":"enableNetworkProviderAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to turn on high accuracy location mode which enables network provider that uses\\nGoogle Play services to improve location accuracy and location-based services.","returns":"A promise resolving as soon as the user accepts the dialog. Rejects if denied.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"geocodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"geocodeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Geocode an address string to latitude-longitude location.\\n> **Note**: Geocoding is resource consuming and has to be used reasonably. Creating too many\\n> requests at a time can result in an error, so they have to be managed properly.\\n> It\'s also discouraged to use geocoding while the app is in the background and its results won\'t\\n> be shown to the user immediately.","text":"> On Android, you must request a location permission (`Permissions.LOCATION`) from the user\\n> before geocoding can be used.","returns":"A promise which fulfills with an array (in most cases its size is 1) of [`LocationGeocodedLocation`](#locationgeocodedlocation) objects.\\n"},"parameters":[{"name":"address","kind":32768,"kindString":"Parameter","comment":{"shortText":"A string representing address, eg. `\\"Baker Street London\\"`."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{},"type":{"type":"reference","name":"LocationGeocodingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"LocationGeocodedLocation"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getBackgroundPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBackgroundPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing location while the app is in the background.","returns":"A promise that fulfills with an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getCurrentPositionAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCurrentPositionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Requests for one-time delivery of the user\'s current location.\\nDepending on given `accuracy` option it may take some time to resolve,\\nespecially when you\'re inside a building.\\n> __Note:__ Calling it causes the location manager to obtain a location fix which may take several\\n> seconds. Consider using [`Location.getLastKnownPositionAsync`](#locationgetlastknownpositionasyncoptions)\\n> if you expect to get a quick response and high accuracy is not required.","returns":"A promise which fulfills with an object of type [`LocationObject`](#locationobject).\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"LocationOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationObject"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getForegroundPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getForegroundPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing location while the app is in the foreground.","returns":"A promise that fulfills with an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getHeadingAsync","kind":64,"kindString":"Function","signatures":[{"name":"getHeadingAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current heading information from the device. To simplify, it calls `watchHeadingAsync`\\nand waits for a couple of updates, and then returns the one that is accurate enough.","returns":"A promise which fulfills with an object of type [LocationHeadingObject](#locationheadingobject).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationHeadingObject"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getLastKnownPositionAsync","kind":64,"kindString":"Function","signatures":[{"name":"getLastKnownPositionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the last known position of the device or `null` if it\'s not available or doesn\'t match given\\nrequirements such as maximum age or required accuracy.\\nIt\'s considered to be faster than `getCurrentPositionAsync` as it doesn\'t request for the current\\nlocation, but keep in mind the returned location may not be up-to-date.","returns":"A promise which fulfills with an object of type [LocationObject](#locationobject) or\\n`null` if it\'s not available or doesn\'t match given requirements such as maximum age or required\\naccuracy.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"LocationLastKnownOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"LocationObject"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing location.","returns":"A promise that fulfills with an object of type [LocationPermissionResponse](#locationpermissionresponse).","tags":[{"tag":"deprecated","text":"Use [`getForegroundPermissionsAsync`](#locationgetforegroundpermissionsasync) or [`getBackgroundPermissionsAsync`](#locationgetbackgroundpermissionsasync) instead.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getProviderStatusAsync","kind":64,"kindString":"Function","signatures":[{"name":"getProviderStatusAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check status of location providers.","returns":"A promise which fulfills with an object of type [LocationProviderStatus](#locationproviderstatus).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationProviderStatus"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"hasServicesEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasServicesEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks whether location services are enabled by the user.","returns":"A promise which fulfills to `true` if location services are enabled on the device,\\nor `false` if not.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"hasStartedGeofencingAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasStartedGeofencingAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"A promise which fulfills with boolean value indicating whether the geofencing task is\\nstarted or not.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the geofencing task to check."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"hasStartedLocationUpdatesAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasStartedLocationUpdatesAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"A promise which fulfills with boolean value indicating whether the location task is\\nstarted or not.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the location task to check."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"installWebGeolocationPolyfill","kind":64,"kindString":"Function","signatures":[{"name":"installWebGeolocationPolyfill","kind":4096,"kindString":"Call signature","comment":{"shortText":"Polyfills `navigator.geolocation` for interop with the core React Native and Web API approach to geolocation."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"isBackgroundLocationAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isBackgroundLocationAvailableAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestBackgroundPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestBackgroundPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for location while the app is in the background.\\nOn __Android 11 or higher__: this method will open the system settings page - before that happens\\nyou should explain to the user why your application needs background location permission.\\nFor example, you can use `Modal` component from `react-native` to do that.\\n> __Note__: Foreground permissions should be granted before asking for the background permissions\\n(your app can\'t obtain background permission without foreground permission).","returns":"A promise that fulfills with an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestForegroundPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestForegroundPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for location while the app is in the foreground.","returns":"A promise that fulfills with an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for location.","returns":"A promise that fulfills with an object of type [LocationPermissionResponse](#locationpermissionresponse).","tags":[{"tag":"deprecated","text":"Use [`requestForegroundPermissionsAsync`](#locationrequestforegroundpermissionsasync) or [`requestBackgroundPermissionsAsync`](#locationrequestbackgroundpermissionsasync) instead.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"reverseGeocodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"reverseGeocodeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Reverse geocode a location to postal address.\\n> **Note**: Geocoding is resource consuming and has to be used reasonably. Creating too many\\n> requests at a time can result in an error, so they have to be managed properly.\\n> It\'s also discouraged to use geocoding while the app is in the background and its results won\'t\\n> be shown to the user immediately.","text":"> On Android, you must request a location permission (`Permissions.LOCATION`) from the user\\n> before geocoding can be used.","returns":"A promise which fulfills with an array (in most cases its size is 1) of [`LocationGeocodedAddress`](#locationgeocodedaddress) objects.\\n"},"parameters":[{"name":"location","kind":32768,"kindString":"Parameter","comment":{"shortText":"An object representing a location."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationGeocodedLocation"},{"type":"union","types":[{"type":"literal","value":"latitude"},{"type":"literal","value":"longitude"}]}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{},"type":{"type":"reference","name":"LocationGeocodingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"LocationGeocodedAddress"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setGoogleApiKey","kind":64,"kindString":"Function","signatures":[{"name":"setGoogleApiKey","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a Google API Key for using Google Maps Geocoding API which is used by default on Web\\nplatform and can be enabled through `useGoogleMaps` option of `geocodeAsync` and `reverseGeocodeAsync`\\nmethods. It might be useful for Android devices that do not have Google Play Services, hence no\\nGeocoder Service."},"parameters":[{"name":"apiKey","kind":32768,"kindString":"Parameter","comment":{"shortText":"Google API key obtained from Google API Console. This API key must have `Geocoding API`\\nenabled, otherwise your geocoding requests will be denied.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"startGeofencingAsync","kind":64,"kindString":"Function","signatures":[{"name":"startGeofencingAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Starts geofencing for given regions. When the new event comes, the task with specified name will\\nbe called with the region that the device enter to or exit from.\\nIf you want to add or remove regions from already running geofencing task, you can just call\\n`startGeofencingAsync` again with the new array of regions.","returns":"A promise resolving as soon as the task is registered.\\n\\n# Task parameters\\n\\nGeofencing task will be receiving following data:\\n - `eventType` - Indicates the reason for calling the task, which can be triggered by entering or exiting the region.\\n   See [GeofencingEventType](#geofencingeventtype).\\n - `region` - Object containing details about updated region. See [LocationRegion](#locationregion) for more details.\\n\\n# Example\\n```ts\\nimport { GeofencingEventType } from \'expo-location\';\\nimport * as TaskManager from \'expo-task-manager\';\\n\\n TaskManager.defineTask(YOUR_TASK_NAME, ({ data: { eventType, region }, error }) => {\\n  if (error) {\\n    // check `error.message` for more details.\\n    return;\\n  }\\n  if (eventType === GeofencingEventType.Enter) {\\n    console.log(\\"You\'ve entered region:\\", region);\\n  } else if (eventType === GeofencingEventType.Exit) {\\n    console.log(\\"You\'ve left region:\\", region);\\n  }\\n});\\n```\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task that will be called when the device enters or exits from specified regions."},"type":{"type":"intrinsic","name":"string"}},{"name":"regions","kind":32768,"kindString":"Parameter","comment":{"shortText":"Array of region objects to be geofenced."},"type":{"type":"array","elementType":{"type":"reference","name":"LocationRegion"}},"defaultValue":"[]"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"startLocationUpdatesAsync","kind":64,"kindString":"Function","signatures":[{"name":"startLocationUpdatesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Registers for receiving location updates that can also come when the app is in the background.","returns":"A promise resolving once the task with location updates is registered.\\n\\n# Task parameters\\n\\nBackground location task will be receiving following data:\\n- `locations` - An array of the new locations.\\n\\n```ts\\nimport * as TaskManager from \'expo-task-manager\';\\n\\nTaskManager.defineTask(YOUR_TASK_NAME, ({ data: { locations }, error }) => {\\n if (error) {\\n   // check `error.message` for more details.\\n   return;\\n }\\n console.log(\'Received new locations\', locations);\\n});\\n```\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task receiving location updates."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An object of options passed to the location manager."},"type":{"type":"reference","name":"LocationTaskOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"stopGeofencingAsync","kind":64,"kindString":"Function","signatures":[{"name":"stopGeofencingAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Stops geofencing for specified task. It unregisters the background task so the app will not be\\nreceiving any updates, especially in the background.","returns":"A promise resolving as soon as the task is unregistered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task to unregister."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"stopLocationUpdatesAsync","kind":64,"kindString":"Function","signatures":[{"name":"stopLocationUpdatesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Stops geofencing for specified task.","returns":"A promise resolving as soon as the task is unregistered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the background location task to stop."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"useBackgroundPermissions","kind":64,"kindString":"Function","signatures":[{"name":"useBackgroundPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions for the foreground location.\\nThis uses both `requestBackgroundPermissionsAsync` and `getBackgroundPermissionsAsync` to\\ninteract with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Location.useBackgroundPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"useForegroundPermissions","kind":64,"kindString":"Function","signatures":[{"name":"useForegroundPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions for the foreground location.\\nThis uses both `requestForegroundPermissionsAsync` and `getForegroundPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Location.useForegroundPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"LocationPermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"watchHeadingAsync","kind":64,"kindString":"Function","signatures":[{"name":"watchHeadingAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to compass updates from the device.","returns":"A promise which fulfills with a [`LocationSubscription`](#locationsubscription) object.\\n"},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"shortText":"This function is called on each compass update. It receives an object of type\\n[LocationHeadingObject](#locationheadingobject) as the first argument."},"type":{"type":"reference","name":"LocationHeadingCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationSubscription"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"watchPositionAsync","kind":64,"kindString":"Function","signatures":[{"name":"watchPositionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to location updates from the device. Please note that updates will only occur while the\\napplication is in the foreground. To get location updates while in background you\'ll need to use\\n[Location.startLocationUpdatesAsync](#locationstartlocationupdatesasynctaskname-options).","returns":"A promise which fulfills with a [`LocationSubscription`](#locationsubscription) object.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"LocationOptions"}},{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"shortText":"This function is called on each location update. It receives an object of type\\n[`LocationObject`](#locationobject) as the first argument."},"type":{"type":"reference","name":"LocationCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationSubscription"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},HtLg:function(e,w,n){"use strict";var c=n("Vx/6");function p(d,a){return d.length?(c(d,d.length,0,a),d):a}e.exports=p},"HuD+":function(e){e.exports=JSON.parse('{"name":"expo-haptics","kind":0,"kindString":"Project","originalName":"","children":[{"name":"ImpactFeedbackStyle","kind":4,"kindString":"Enumeration","comment":{"shortText":"The mass of the objects in the collision simulated by a UIImpactFeedbackGenerator object\\n[`UINotificationFeedbackStyle`](https://developer.apple.com/documentation/uikit/uiimpactfeedbackstyle)"},"children":[{"name":"Heavy","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A collision between large, heavy user interface elements."},"defaultValue":"\\"heavy\\""},{"name":"Light","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A collision between small, light user interface elements."},"defaultValue":"\\"light\\""},{"name":"Medium","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A collision between moderately sized user interface elements."},"defaultValue":"\\"medium\\""}]},{"name":"NotificationFeedbackType","kind":4,"kindString":"Enumeration","comment":{"shortText":"The type of notification feedback generated by a UINotificationFeedbackGenerator object.\\n[`UINotificationFeedbackType`](https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype)"},"children":[{"name":"Error","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A notification feedback type indicating that a task has failed."},"defaultValue":"\\"error\\""},{"name":"Success","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A notification feedback type indicating that a task has completed successfully."},"defaultValue":"\\"success\\""},{"name":"Warning","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A notification feedback type indicating that a task has produced a warning."},"defaultValue":"\\"warning\\""}]},{"name":"impactAsync","kind":64,"kindString":"Function","signatures":[{"name":"impactAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"A `Promise` which fulfils once native size haptics functionality is triggered.\\n"},"parameters":[{"name":"style","kind":32768,"kindString":"Parameter","comment":{"text":"A collision indicator that on iOS is directly mapped to [`UIImpactFeedbackStyle`](https://developer.apple.com/documentation/uikit/uiimpactfeedbackstyle),\\nwhile on Android these are simulated using [Vibrator](https://developer.android.com/reference/android/os/Vibrator).\\nYou can use one of `Haptics.ImpactFeedbackStyle.{Light, Medium, Heavy}`."},"type":{"type":"reference","name":"ImpactFeedbackStyle"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"notificationAsync","kind":64,"kindString":"Function","signatures":[{"name":"notificationAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"The kind of notification response used in the feedback.","returns":"A `Promise` which fulfils once native size haptics functionality is triggered.\\n"},"parameters":[{"name":"type","kind":32768,"kindString":"Parameter","comment":{"text":"A notification feedback type that on iOS is directly mapped to [UINotificationFeedbackType](https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype),\\nwhile on Android these are simulated using [Vibrator](https://developer.android.com/reference/android/os/Vibrator).\\nYou can use one of `Haptics.NotificationFeedbackType.{Success, Warning, Error}`."},"type":{"type":"reference","name":"NotificationFeedbackType"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"selectionAsync","kind":64,"kindString":"Function","signatures":[{"name":"selectionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Used to let a user know when a selection change has been registered.","returns":"A `Promise` which fulfils once native size haptics functionality is triggered.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},HxRD:function(e,w,n){"use strict";var c=n("E/Jm"),p=n("Q3zd"),d=n("Bh6z"),a=n("haLp"),m=n("kViG"),r=n("yRGd"),s=n("0mGV"),i=n("9ppO"),o={name:"definition",tokenize:l},t={tokenize:k,partial:!0};function l(g,h,f){var S=this,b;return P;function P(u){return g.enter("definition"),m.call(S,g,y,f,"definitionLabel","definitionLabelMarker","definitionLabelString")(u)}function y(u){return b=d(S.sliceSerialize(S.events[S.events.length-1][1]).slice(1,-1)),u===58?(g.enter("definitionMarker"),g.consume(u),g.exit("definitionMarker"),s(g,a(g,g.attempt(t,r(g,v,"whitespace"),r(g,v,"whitespace")),f,"definitionDestination","definitionDestinationLiteral","definitionDestinationLiteralMarker","definitionDestinationRaw","definitionDestinationString"))):f(u)}function v(u){return u===null||c(u)?(g.exit("definition"),S.parser.defined.indexOf(b)<0&&S.parser.defined.push(b),h(u)):f(u)}}function k(g,h,f){return S;function S(y){return p(y)?s(g,b)(y):f(y)}function b(y){return y===34||y===39||y===40?i(g,r(g,P,"whitespace"),f,"definitionTitle","definitionTitleMarker","definitionTitleString")(y):f(y)}function P(y){return y===null||c(y)?h(y):f(y)}}e.exports=o},I6iC:function(e,w,n){"use strict";e.exports=p;var c=n("2jS9");function p(d,a){return d(a,"del",c(d,a))}},IMTd:function(e){e.exports=JSON.parse('{"name":"expo-pedometer","kind":1,"kindString":"Project","originalName":"","children":[{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"PedometerResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"steps","kind":1024,"kindString":"Property","comment":{"shortText":"Number of steps taken between the given dates."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PedometerUpdateCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"result","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"PedometerResult"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getStepCountAsync","kind":64,"kindString":"Function","signatures":[{"name":"getStepCountAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the step count between two dates.","returns":"Returns a promise that fulfills with a [`PedometerResult`](#pedometerresult).\\n\\nAs [Apple documentation states](https://developer.apple.com/documentation/coremotion/cmpedometer/1613946-querypedometerdatafromdate?language=objc):\\n> Only the past seven days worth of data is stored and available for you to retrieve. Specifying\\n> a start date that is more than seven days in the past returns only the available data.\\n"},"parameters":[{"name":"start","kind":32768,"kindString":"Parameter","comment":{"shortText":"A date indicating the start of the range over which to measure steps."},"type":{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}},{"name":"end","kind":32768,"kindString":"Parameter","comment":{"shortText":"A date indicating the end of the range over which to measure steps."},"type":{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PedometerResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the pedometer is enabled on the device.","returns":"Returns a promise that fulfills with a `boolean`, indicating whether the pedometer is\\navailable on this device.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"watchStepCount","kind":64,"kindString":"Function","signatures":[{"name":"watchStepCount","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to pedometer updates.","returns":"Returns a [`Subscription`](#subscription) that enables you to call\\n`remove()` when you would like to unsubscribe the listener.\\n"},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"shortText":"A callback that is invoked when new step count data is available. The callback is\\nprovided with a single argument that is [`PedometerResult`](#pedometerresult)."},"type":{"type":"reference","name":"PedometerUpdateCallback"}}],"type":{"type":"reference","name":"Subscription"}}]}]}')},IOUy:function(e){e.exports=JSON.parse('{"name":"expo-font","kind":1,"kindString":"Project","originalName":"","children":[{"name":"FontDisplay","kind":8,"kindString":"Enumeration","comment":{"shortText":"__Web Only__. Sets the [font-display](https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display)\\nfor a given typeface. The default font value on web is `FontDisplay.AUTO`.\\nEven though setting the `fontDisplay` does nothing on native platforms, the default behavior\\nemulates `FontDisplay.SWAP` on flagship devices like iOS, Samsung, Pixel, etc. Default\\nfunctionality varies on One Plus devices. In the browser this value is set in the generated\\n`@font-face` CSS block and not as a style property meaning you cannot dynamically change this\\nvalue based on the element it\'s used in."},"children":[{"name":"AUTO","kind":16,"kindString":"Enumeration member","comment":{"shortText":"__(Default)__ The font display strategy is defined by the user agent or platform.\\nThis generally defaults to the text being invisible until the font is loaded.\\nGood for buttons or banners that require a specific treatment."},"defaultValue":"\\"auto\\""},{"name":"BLOCK","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The text will be invisible until the font has loaded. If the font fails to load then nothing\\nwill appear - it\'s best to turn this off when debugging missing text."},"defaultValue":"\\"block\\""},{"name":"FALLBACK","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Splits the behavior between `SWAP` and `BLOCK`.\\nThere will be a [100ms timeout](https://developers.google.com/web/updates/2016/02/font-display?hl=en)\\nwhere the text with a custom font is invisible, after that the text will either swap to the\\nstyled text or it\'ll show the unstyled text and continue to load the custom font. This is good\\nfor buttons that need a custom font but should also be quickly available to screen-readers."},"defaultValue":"\\"fallback\\""},{"name":"OPTIONAL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"This works almost identically to `FALLBACK`, the only difference is that the browser will\\ndecide to load the font based on slow connection speed or critical resource demand."},"defaultValue":"\\"optional\\""},{"name":"SWAP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Fallback text is rendered immediately with a default font while the desired font is loaded.\\nThis is good for making the content appear to load instantly and is usually preferred."},"defaultValue":"\\"swap\\""}]},{"name":"FontResource","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object used to dictate the resource that is loaded into the provided font namespace when used\\nwith [`loadAsync`](#loadasync)."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"display","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"_Web Only._ Sets the [`font-display`](#fontdisplay) property for a given typeface in the\\nbrowser."},"type":{"type":"reference","name":"FontDisplay"}},{"name":"uri","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}},{"name":"FontSource","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The different types of assets you can provide to the [`loadAsync()`](#loadAsync) function.\\nA font source can be a URI, a module ID, or an Expo Asset."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"reference","name":"Asset"},{"type":"reference","name":"FontResource"}]}},{"name":"UnloadFontOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Object used to query fonts for unloading."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"FontResource"},{"type":"literal","value":"display"}],"name":"Pick"}},{"name":"isLoaded","kind":64,"kindString":"Function","signatures":[{"name":"isLoaded","kind":4096,"kindString":"Call signature","comment":{"shortText":"Synchronously detect if the font for `fontFamily` has finished loading.","returns":"Returns `true` if the font has fully loaded.\\n"},"parameters":[{"name":"fontFamily","kind":32768,"kindString":"Parameter","comment":{"shortText":"The name used to load the `FontResource`."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"isLoading","kind":64,"kindString":"Function","signatures":[{"name":"isLoading","kind":4096,"kindString":"Call signature","comment":{"shortText":"Synchronously detect if the font for `fontFamily` is still being loaded.","returns":"Returns `true` if the font is still loading.\\n"},"parameters":[{"name":"fontFamily","kind":32768,"kindString":"Parameter","comment":{"shortText":"The name used to load the `FontResource`."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"loadAsync","kind":64,"kindString":"Function","signatures":[{"name":"loadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Highly efficient method for loading fonts from static or remote resources which can then be used\\nwith the platform\'s native text elements. In the browser this generates a `@font-face` block in\\na shared style sheet for fonts. No CSS is needed to use this method.","returns":"Returns a promise that fulfils when the font has loaded. Often you may want to wrap the\\nmethod in a `try/catch/finally` to ensure the app continues if the font fails to load.\\n"},"parameters":[{"name":"fontFamilyOrFontMap","kind":32768,"kindString":"Parameter","comment":{"shortText":"string or map of values that can be used as the [`fontFamily`](https://reactnative.dev/docs/text#style)\\nstyle prop with React Native Text elements."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"FontSource"}],"name":"Record"}]}},{"name":"source","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"the font asset that should be loaded into the `fontFamily` namespace.\\n"},"type":{"type":"reference","name":"FontSource"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"processFontFamily","kind":64,"kindString":"Function","signatures":[{"name":"processFontFamily","kind":4096,"kindString":"Call signature","comment":{"shortText":"Used to transform font family names to the scoped name. This does not need to\\nbe called in standalone or bare apps but it will return unscoped font family\\nnames if it is called in those contexts.","returns":"Returns a name processed for use with the [current workflow](https://docs.expo.dev/introduction/managed-vs-bare/).\\n"},"parameters":[{"name":"fontFamily","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of font to process."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]},{"name":"unloadAllAsync","kind":64,"kindString":"Function","signatures":[{"name":"unloadAllAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unloads all the custom fonts. This is used for testing."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"unloadAsync","kind":64,"kindString":"Function","signatures":[{"name":"unloadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unload custom fonts matching the `fontFamily`s and display values provided.\\nBecause fonts are automatically unloaded on every platform this is mostly used for testing."},"parameters":[{"name":"fontFamilyOrFontMap","kind":32768,"kindString":"Parameter","comment":{"shortText":"The name or names of the custom fonts that will be unloaded."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"UnloadFontOptions"}],"name":"Record"}]}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"When `fontFamilyOrFontMap` is a string, this should be the font source used to load\\nthe custom font originally.\\n"},"type":{"type":"reference","name":"UnloadFontOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"useFonts","kind":64,"kindString":"Function","signatures":[{"name":"useFonts","kind":4096,"kindString":"Call signature","comment":{"shortText":"```ts\\nconst [loaded, error] = useFonts({ ... });\\n```\\nLoad a map of fonts with [`loadAsync`](#loadasync). This returns a `boolean` if the fonts are\\nloaded and ready to use. It also returns an error if something went wrong, to use in development.","text":"> Note, the fonts are not \\"reloaded\\" when you dynamically change the font map.\\n","returns":"\\n- __loaded__ (`boolean`) - A boolean to detect if the font for `fontFamily` has finished\\nloading.\\n- __error__ (`Error | null`) - An error encountered when loading the fonts.\\n"},"parameters":[{"name":"map","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of `fontFamily`s to [`FontSource`](#fontsource)s. After loading the font you can\\nuse the key in the `fontFamily` style prop of a `Text` element.\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"FontSource"}],"name":"Record"}]}}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"boolean"},{"type":"union","types":[{"type":"reference","name":"Error"},{"type":"literal","value":null}]}]}}]}]}')},IVOw:function(e){e.exports=JSON.parse('{"name":"expo-video","kind":1,"originalName":"","children":[{"name":"default","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new default","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"VideoProps"}}],"type":{"type":"reference","name":"Video"},"overwrites":{"type":"reference","name":"React.Component<VideoProps, VideoState>.constructor"}}],"overwrites":{"type":"reference","name":"React.Component<VideoProps, VideoState>.constructor"}},{"name":"_nativeRef","kind":1024,"kindString":"Property","type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"VideoNativeProps"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"qualifiedName":"React.Component","package":"@types/react","name":"Component"},{"type":"reference","qualifiedName":"NativeMethods","package":"@types/react-native","name":"NativeMethods"}]}],"qualifiedName":"React.RefObject","package":"@types/react","name":"RefObject"},"defaultValue":"..."},{"name":"_onPlaybackStatusUpdate","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"status","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AVPlaybackStatus"}}],"type":{"type":"intrinsic","name":"void"}}]}}]},"defaultValue":"null"},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"pauseAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}},"implementationOf":{"type":"reference","name":"Playback.pauseAsync"}},{"name":"playAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}},"implementationOf":{"type":"reference","name":"Playback.playAsync"}},{"name":"playFromPositionAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"positionMillis","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}},{"name":"tolerances","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"AVPlaybackTolerance"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}},"implementationOf":{"type":"reference","name":"Playback.playFromPositionAsync"}},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"VideoProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"React.ReactNode","package":"@types/react","name":"ReactNode"}}]}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","qualifiedName":"React.ReactInstance","package":"@types/react","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"setIsLoopingAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"isLooping","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}},"implementationOf":{"type":"reference","name":"Playback.setIsLoopingAsync"}},{"name":"setIsMutedAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"isMuted","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}},"implementationOf":{"type":"reference","name":"Playback.setIsMutedAsync"}},{"name":"setPositionAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"positionMillis","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}},{"name":"tolerances","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"AVPlaybackTolerance"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}},"implementationOf":{"type":"reference","name":"Playback.setPositionAsync"}},{"name":"setProgressUpdateIntervalAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"progressUpdateIntervalMillis","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}},"implementationOf":{"type":"reference","name":"Playback.setProgressUpdateIntervalAsync"}},{"name":"setRateAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"rate","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}},{"name":"shouldCorrectPitch","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}},"implementationOf":{"type":"reference","name":"Playback.setRateAsync"}},{"name":"setVolumeAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"volume","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}},"implementationOf":{"type":"reference","name":"Playback.setVolumeAsync"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoState"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"stopAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}},"implementationOf":{"type":"reference","name":"Playback.stopAsync"}},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"React.Context","package":"@types/react","name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoState"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"_handleNewStatus","kind":2048,"kindString":"Method","signatures":[{"name":"_handleNewStatus","kind":4096,"kindString":"Call signature","parameters":[{"name":"status","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AVPlaybackStatus"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"_nativeOnError","kind":2048,"kindString":"Method","signatures":[{"name":"_nativeOnError","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"error","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"_nativeOnFullscreenUpdate","kind":2048,"kindString":"Method","signatures":[{"name":"_nativeOnFullscreenUpdate","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"VideoFullscreenUpdateEvent"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"_nativeOnLoad","kind":2048,"kindString":"Method","signatures":[{"name":"_nativeOnLoad","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"AVPlaybackStatus"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"_nativeOnLoadStart","kind":2048,"kindString":"Method","signatures":[{"name":"_nativeOnLoadStart","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]},{"name":"_nativeOnPlaybackStatusUpdate","kind":2048,"kindString":"Method","signatures":[{"name":"_nativeOnPlaybackStatusUpdate","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"AVPlaybackStatus"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"_nativeOnReadyForDisplay","kind":2048,"kindString":"Method","signatures":[{"name":"_nativeOnReadyForDisplay","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"VideoReadyForDisplayEvent"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"_performOperationAndHandleStatusAsync","kind":2048,"kindString":"Method","signatures":[{"name":"_performOperationAndHandleStatusAsync","kind":4096,"kindString":"Call signature","parameters":[{"name":"operation","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"tag","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"_renderPoster","kind":2048,"kindString":"Method","signatures":[{"name":"_renderPoster","kind":4096,"kindString":"Call signature","type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","qualifiedName":"global.JSX.Element","package":"@types/react","name":"Element"}]}}]},{"name":"_setFullscreen","kind":2048,"kindString":"Method","signatures":[{"name":"_setFullscreen","kind":4096,"kindString":"Call signature","parameters":[{"name":"value","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"React.ErrorInfo","package":"@types/react","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoState"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoState"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"dismissFullscreenPlayer","kind":2048,"kindString":"Method","signatures":[{"name":"dismissFullscreenPlayer","kind":4096,"kindString":"Call signature","comment":{"shortText":"This dismisses the fullscreen video view.","returns":"A `Promise` that is fulfilled with the `AVPlaybackStatus` of the video once the fullscreen player has finished dismissing,\\nor rejects if there was an error, or if this was called on an Android device.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoState"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"presentFullscreenPlayer","kind":2048,"kindString":"Method","signatures":[{"name":"presentFullscreenPlayer","kind":4096,"kindString":"Call signature","comment":{"shortText":"This presents a fullscreen view of your video component on top of your app\'s UI. Note that even if `useNativeControls` is set to `false`,\\nnative controls will be visible in fullscreen mode.","returns":"A `Promise` that is fulfilled with the `AVPlaybackStatus` of the video once the fullscreen player has finished presenting,\\nor rejects if there was an error, or if this was called on an Android device.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"render","kind":2048,"kindString":"Method","signatures":[{"name":"render","kind":4096,"kindString":"Call signature","type":{"type":"reference","qualifiedName":"global.JSX.Element","package":"@types/react","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"literal","value":"showPoster"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"VideoState"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoState"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"VideoState"},{"type":"reference","typeArguments":[{"type":"reference","name":"VideoState"},{"type":"reference","qualifiedName":"K","package":"@types/react","name":"K"}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"VideoState"},{"type":"reference","qualifiedName":"K","package":"@types/react","name":"K"}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoState"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"VideoProps"},{"type":"reference","name":"VideoState"}],"qualifiedName":"React.Component","package":"@types/react","name":"Component"}],"implementedTypes":[{"type":"reference","name":"Playback"}]},{"name":"ResizeMode","kind":8,"kindString":"Enumeration","children":[{"name":"CONTAIN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Fit within component bounds while preserving aspect ratio."},"defaultValue":"\\"contain\\""},{"name":"COVER","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Fill component bounds while preserving aspect ratio."},"defaultValue":"\\"cover\\""},{"name":"STRETCH","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Stretch to fill component bounds."},"defaultValue":"\\"stretch\\""}]},{"name":"VideoFullscreenUpdate","kind":8,"kindString":"Enumeration","children":[{"name":"PLAYER_DID_DISMISS","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Describing that the fullscreen player just finished dismissing."},"defaultValue":"3"},{"name":"PLAYER_DID_PRESENT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Describing that the fullscreen player just finished presenting."},"defaultValue":"1"},{"name":"PLAYER_WILL_DISMISS","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Describing that the fullscreen player is about to dismiss."},"defaultValue":"2"},{"name":"PLAYER_WILL_PRESENT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Describing that the fullscreen player is about to present."},"defaultValue":"0"}]},{"name":"VideoFullscreenUpdateEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"fullscreenUpdate","kind":1024,"kindString":"Property","comment":{"shortText":"The kind of the fullscreen update."},"type":{"type":"reference","name":"VideoFullscreenUpdate"}},{"name":"status","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The `AVPlaybackStatus` of the video. See the [AV documentation](./av) for further information."},"type":{"type":"reference","name":"AVPlaybackStatus"}}]}}},{"name":"VideoNaturalSize","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"A number describing the height in pixels of the video data."},"type":{"type":"intrinsic","name":"number"}},{"name":"orientation","kind":1024,"kindString":"Property","comment":{"shortText":"A string describing the natural orientation of the video data."},"type":{"type":"union","types":[{"type":"literal","value":"portrait"},{"type":"literal","value":"landscape"}]}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"A number describing the width in pixels of the video data."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"VideoProps","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The Video component props can be divided into following groups:\\n- The `source` and `posterSource` props customize the source of the video content.\\n- The `useNativeControls`, `resizeMode`, and `usePoster` props customize the UI of the component.\\n- The `onPlaybackStatusUpdate`, `onReadyForDisplay`, and `onIOSFullscreenUpdate` props pass information of the state of the `Video` component.\\n- The `onLoadStart`, `onLoad`, and `onError` props are also provided for backwards compatibility with `Image`\\n  (but they are redundant with `onPlaybackStatusUpdate`).\\nFinally, the rest of props are available to control the playback of the video, but we recommend that, for finer control, you use the methods\\navailable on the `ref` described in the [AV documentation](./av)."},"type":{"type":"intersection","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isLooping","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean describing if the media should play once (`false`) or loop indefinitely (`true`).\\nSee the [AV documentation](./av) for more information."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isMuted","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean describing if the audio of this media should be muted.\\nSee the [AV documentation](./av) for more information."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"positionMillis","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The desired position of playback in milliseconds.\\nSee the [AV documentation](./av) for more information."},"type":{"type":"intrinsic","name":"number"}},{"name":"posterSource","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The source of an optional image to display over the video while it is loading. The following forms are supported:\\n- A dictionary of the form `{ uri: \'http://path/to/file\' }` with a network URL pointing to an image file on the web.\\n- `require(\'path/to/file\')` for an image file asset in the source code directory."},"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"source"},"objectType":{"type":"reference","qualifiedName":"ImageProps","package":"@types/react-native","name":"ImageProps"}}},{"name":"posterStyle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An optional property to pass custom styles to the poster image."},"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"style"},"objectType":{"type":"reference","qualifiedName":"ImageProps","package":"@types/react-native","name":"ImageProps"}}},{"name":"progressUpdateIntervalMillis","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A number describing the new minimum interval in milliseconds between calls of `onPlaybackStatusUpdate`.\\nSee the [AV documentation](./av) for more information."},"type":{"type":"intrinsic","name":"number"}},{"name":"rate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The desired playback rate of the media. This value must be between `0.0` and `32.0`. Only available on Android API version 23 and later and iOS.\\nSee the [AV documentation](./av) for more information."},"type":{"type":"intrinsic","name":"number"}},{"name":"resizeMode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A string describing how the video should be scaled for display in the component view bounds.\\nMust be one of the [`ResizeMode`](#resizemode) enum values."},"type":{"type":"reference","name":"ResizeMode"}},{"name":"shouldCorrectPitch","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean describing if we should correct the pitch for a changed rate. If set to `true`, the pitch of the audio will be corrected\\n(so a rate different than `1.0` will timestretch the audio).\\nSee the [AV documentation](./av) for more information."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"shouldPlay","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean describing if the media is supposed to play. Playback may not start immediately after setting this value for reasons such as buffering.\\nMake sure to update your UI based on the `isPlaying` and `isBuffering` properties of the `AVPlaybackStatus`.\\nSee the [AV documentation](./av) for more information."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"source","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The source of the video data to display. If this prop is `null`, or left blank, the video component will display nothing.\\nNote that this can also be set on the `ref` via `loadAsync()`. See below or the [AV documentation](./av) for further information.","text":"The following forms for the source are supported:\\n- A dictionary of the form `{ uri: string, headers?: { [string]: string }, overrideFileExtensionAndroid?: string }` with a network URL\\n  pointing to a video file on the web, an optional headers object passed in a network request to the `uri` and an optional\\n  Android-specific `overrideFileExtensionAndroid` string overriding extension inferred from the URL.\\n  The `overrideFileExtensionAndroid` property may come in handy if the player receives an URL like `example.com/play` which redirects\\n  to `example.com/player.m3u8`. Setting this property to `m3u8` would allow the Android player to properly infer the content type\\n  of the media and use proper media file reader.\\n- `require(\'path/to/file\')` for a video file asset in the source code directory.\\n- An [`Asset`](asset) object for a video file asset.\\n","tags":[{"tag":"see","text":"\\n- The [Android developer documentation](https://developer.android.com/guide/topics/media/media-formats#video-formats)\\nlists of the video formats supported on Android.\\n- The [iOS developer documentation](https://developer.apple.com/documentation/coremedia/1564239-video_codec_constants)\\nlists of the video formats supported on iOS.\\n"}]},"type":{"type":"reference","name":"AVPlaybackSource"}},{"name":"status","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A dictionary setting a new `AVPlaybackStatusToSet` on the video.\\nSee the [AV documentation](./av#default-initial--avplaybackstatustoset) for more information on `AVPlaybackStatusToSet`."},"type":{"type":"reference","name":"AVPlaybackStatusToSet"}},{"name":"useNativeControls","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean which, if set to `true`, will display native playback controls (such as play and pause) within the `Video` component.\\nIf you\'d prefer to use custom controls, you can write them yourself, and/or check out the [`VideoPlayer` component](https://github.com/ihmpavel/expo-video-player)."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"usePoster","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean which, if set to `true`, will display an image (whose source is set via the prop `posterSource`) while the video is loading."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"volume","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The desired volume of the audio for this media. This value must be between `0.0` (silence) and `1.0` (maximum volume).\\nSee the [AV documentation](./av) for more information."},"type":{"type":"intrinsic","name":"number"}},{"name":"onError","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onError","kind":4096,"kindString":"Call signature","comment":{"shortText":"A function to be called if load or playback have encountered a fatal error. The function is passed a single error message string as a parameter.\\nErrors sent here are also set on `playbackStatus.error` that are passed into the `onPlaybackStatusUpdate` callback."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onFullscreenUpdate","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onFullscreenUpdate","kind":4096,"kindString":"Call signature","comment":{"shortText":"A function to be called when the state of the native iOS fullscreen view changes (controlled via the `presentFullscreenPlayer()`\\nand `dismissFullscreenPlayer()` methods on the `Video`\'s `ref`)."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"VideoFullscreenUpdateEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onLoad","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onLoad","kind":4096,"kindString":"Call signature","comment":{"shortText":"A function to be called once the video has been loaded. The data is streamed so all of it may not have been fetched yet, just enough to render the first frame.\\nThe function is called with the `AVPlaybackStatus` of the video as its parameter. See the [AV documentation](./av) for further information."},"parameters":[{"name":"status","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"AVPlaybackStatus"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onLoadStart","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onLoadStart","kind":4096,"kindString":"Call signature","comment":{"shortText":"A function to be called when the video begins to be loaded into memory. Called without any arguments."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"onPlaybackStatusUpdate","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onPlaybackStatusUpdate","kind":4096,"kindString":"Call signature","comment":{"shortText":"A function to be called regularly with the `AVPlaybackStatus` of the video. You will likely be using this a lot.\\nSee the [AV documentation](av.md) for further information on `onPlaybackStatusUpdate`, and the interval at which it is called."},"parameters":[{"name":"status","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"AVPlaybackStatus"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onReadyForDisplay","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onReadyForDisplay","kind":4096,"kindString":"Call signature","comment":{"shortText":"A function to be called when the video is ready for display. Note that this function gets called whenever the video\'s natural size changes."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"VideoReadyForDisplayEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}]}},{"type":"reference","qualifiedName":"ViewProps","package":"@types/react-native","name":"ViewProps"}]}},{"name":"VideoReadyForDisplayEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"naturalSize","kind":1024,"kindString":"Property","comment":{"shortText":"An object containing the basic data about video size."},"type":{"type":"reference","name":"VideoNaturalSize"}},{"name":"status","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The `AVPlaybackStatus` of the video. See the [AV documentation](./av/#playback-status) for further information."},"type":{"type":"reference","name":"AVPlaybackStatus"}}]}}},{"name":"VideoState","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"showPoster","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}}]}}}]}')},IW26:function(e,w,n){"use strict";e.exports=c;function c(d){return d&&(d.value||d.alt||d.title||"children"in d&&p(d.children)||"length"in d&&p(d))||""}function p(d){for(var a=[],m=-1;++m<d.length;)a[m]=c(d[m]);return a.join("")}},Ie4K:function(e,w,n){"use strict";var c=n("OaLn"),p={name:"labelStartLink",tokenize:d,resolveAll:c.resolveAll};function d(a,m,r){var s=this;return i;function i(t){return a.enter("labelLink"),a.enter("labelMarker"),a.consume(t),a.exit("labelMarker"),a.exit("labelLink"),o}function o(t){return t===94&&"_hiddenFootnoteSupport"in s.parser.constructs?r(t):m(t)}}e.exports=p},If04:function(e){e.exports=JSON.parse('{"name":"expo-tracking-transparency","kind":1,"kindString":"Project","originalName":"","children":[{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"getTrackingPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getTrackingPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks whether or not the user has authorized the app to access app-related data that can be used\\nfor tracking the user or the device. See `requestTrackingPermissionsAsync` for more details.","text":"On Android, web, and iOS 13 and below, this method always returns that the permission was\\ngranted.\\n","tags":[{"tag":"example","text":"\\n```typescript\\nconst { granted } = await getTrackingPermissionsAsync();\\n\\nif (granted) {\\n  // Your app is authorized to track the user or their device\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"isAvailable","kind":64,"kindString":"Function","signatures":[{"name":"isAvailable","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the TrackingTransparency API is available on the current device.","returns":"Currently this is `true` on iOS 14 and above only. On devices where the\\nTracking Transparency API is unavailable, the get and request permissions methods will always\\nresolve to `granted`.\\n"},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"requestTrackingPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestTrackingPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Requests the user to authorize or deny access to app-related data that can be used for tracking\\nthe user or the device. Examples of data used for tracking include email address, device ID,\\nadvertising ID, etc. On iOS 14.5 and above, if the user denies this permission, any attempt to\\ncollect the IDFA will return a string of 0s.","text":"The system remembers the user\u2019s choice and doesn\u2019t prompt again unless a user uninstalls and then\\nreinstalls the app on the device.\\n\\nOn Android, web, and iOS 13 and below, this method always returns that the permission was\\ngranted.","tags":[{"tag":"example","text":"\\n```typescript\\nconst { granted } = await requestTrackingPermissionsAsync();\\n\\nif (granted) {\\n  // Your app is authorized to track the user or their device\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"useTrackingPermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"useTrackingPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request the user to authorize or deny access to app-related data that can be used for tracking\\nthe user or the device. Examples of data used for tracking include email address, device ID,\\nadvertising ID, etc. On iOS 14.5 and above, if the user denies this permission, any attempt to\\ncollect the IDFA will return a string of 0s.","text":"The system remembers the user\u2019s choice and doesn\u2019t prompt again unless a user uninstalls and then\\nreinstalls the app on the device.\\n\\nOn Android, web, and iOS 13 and below, this method always returns that the permission was\\ngranted.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = useTrackingPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}]}')},Ig3s:function(e,w,n){"use strict";function c(p,d,a){for(var m=[],r=-1,s;++r<p.length;)s=p[r].resolveAll,s&&m.indexOf(s)<0&&(d=s(d,a),m.push(s));return d}e.exports=c},"Iv+h":function(e,w,n){"use strict";var c=n("E/Jm"),p=n("T0BQ"),d=n("yRGd"),a={name:"setextUnderline",tokenize:r,resolveTo:m};function m(s,i){for(var o=s.length,t,l,k,g;o--;)if(s[o][0]==="enter"){if(s[o][1].type==="content"){t=o;break}s[o][1].type==="paragraph"&&(l=o)}else s[o][1].type==="content"&&s.splice(o,1),!k&&s[o][1].type==="definition"&&(k=o);return g={type:"setextHeading",start:p(s[l][1].start),end:p(s[s.length-1][1].end)},s[l][1].type="setextHeadingText",k?(s.splice(l,0,["enter",g,i]),s.splice(k+1,0,["exit",s[t][1],i]),s[t][1].end=p(s[k][1].end)):s[t][1]=g,s.push(["exit",g,i]),s}function r(s,i,o){for(var t=this,l=t.events.length,k,g;l--;)if(t.events[l][1].type!=="lineEnding"&&t.events[l][1].type!=="linePrefix"&&t.events[l][1].type!=="content"){g=t.events[l][1].type==="paragraph";break}return h;function h(b){return!t.lazy&&(t.interrupt||g)?(s.enter("setextHeadingLine"),s.enter("setextHeadingLineSequence"),k=b,f(b)):o(b)}function f(b){return b===k?(s.consume(b),f):(s.exit("setextHeadingLineSequence"),d(s,S,"lineSuffix")(b))}function S(b){return b===null||c(b)?(s.exit("setextHeadingLine"),i(b)):o(b)}}e.exports=a},J7nH:function(e){e.exports=JSON.parse('{"name":"expo-camera","kind":1,"kindString":"Project","originalName":"","children":[{"name":"AutoFocus","kind":8,"kindString":"Enumeration","children":[{"name":"auto","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"web\\n"}]},"defaultValue":"\\"auto\\""},{"name":"off","kind":16,"kindString":"Enumeration member","defaultValue":"\\"off\\""},{"name":"on","kind":16,"kindString":"Enumeration member","defaultValue":"\\"on\\""},{"name":"singleShot","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"web\\n"}]},"defaultValue":"\\"singleShot\\""}]},{"name":"CameraType","kind":8,"kindString":"Enumeration","children":[{"name":"back","kind":16,"kindString":"Enumeration member","defaultValue":"\\"back\\""},{"name":"front","kind":16,"kindString":"Enumeration member","defaultValue":"\\"front\\""}]},{"name":"FlashMode","kind":8,"kindString":"Enumeration","children":[{"name":"auto","kind":16,"kindString":"Enumeration member","defaultValue":"\\"auto\\""},{"name":"off","kind":16,"kindString":"Enumeration member","defaultValue":"\\"off\\""},{"name":"on","kind":16,"kindString":"Enumeration member","defaultValue":"\\"on\\""},{"name":"torch","kind":16,"kindString":"Enumeration member","defaultValue":"\\"torch\\""}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"VideoCodec","kind":8,"kindString":"Enumeration","comment":{"shortText":"This option specifies what codec to use when recording a video.","tags":[{"tag":"platform","text":"ios\\n"}]},"children":[{"name":"AppleProRes422","kind":16,"kindString":"Enumeration member","defaultValue":"\\"apcn\\""},{"name":"AppleProRes4444","kind":16,"kindString":"Enumeration member","defaultValue":"\\"ap4h\\""},{"name":"H264","kind":16,"kindString":"Enumeration member","defaultValue":"\\"avc1\\""},{"name":"HEVC","kind":16,"kindString":"Enumeration member","defaultValue":"\\"hvc1\\""},{"name":"JPEG","kind":16,"kindString":"Enumeration member","defaultValue":"\\"jpeg\\""}]},{"name":"VideoQuality","kind":8,"kindString":"Enumeration","children":[{"name":"1080p","kind":16,"kindString":"Enumeration member","defaultValue":"\\"1080p\\""},{"name":"2160p","kind":16,"kindString":"Enumeration member","defaultValue":"\\"2160p\\""},{"name":"480p","kind":16,"kindString":"Enumeration member","defaultValue":"\\"480p\\""},{"name":"4:3","kind":16,"kindString":"Enumeration member","defaultValue":"\\"4:3\\""},{"name":"720p","kind":16,"kindString":"Enumeration member","defaultValue":"\\"720p\\""}]},{"name":"VideoStabilization","kind":8,"kindString":"Enumeration","children":[{"name":"auto","kind":16,"kindString":"Enumeration member","defaultValue":"\\"auto\\""},{"name":"cinematic","kind":16,"kindString":"Enumeration member","defaultValue":"\\"cinematic\\""},{"name":"off","kind":16,"kindString":"Enumeration member","defaultValue":"\\"off\\""},{"name":"standard","kind":16,"kindString":"Enumeration member","defaultValue":"\\"standard\\""}]},{"name":"WhiteBalance","kind":8,"kindString":"Enumeration","children":[{"name":"auto","kind":16,"kindString":"Enumeration member","defaultValue":"\\"auto\\""},{"name":"cloudy","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"cloudy\\""},{"name":"continuous","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"web\\n"}]},"defaultValue":"\\"continuous\\""},{"name":"fluorescent","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"fluorescent\\""},{"name":"incandescent","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"incandescent\\""},{"name":"manual","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"web\\n"}]},"defaultValue":"\\"manual\\""},{"name":"shadow","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"shadow\\""},{"name":"sunny","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"sunny\\""}]},{"name":"Camera","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new Camera","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"reference","name":"CameraProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Readonly"}]}}],"type":{"type":"reference","name":"default"},"inheritedFrom":{"type":"reference","name":"React.Component<CameraProps>.constructor"}},{"name":"new Camera","kind":16384,"kindString":"Constructor signature","comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"CameraProps"}},{"name":"context","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"default"},"inheritedFrom":{"type":"reference","name":"React.Component<CameraProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<CameraProps>.constructor"}},{"name":"_cameraHandle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"number"}]}},{"name":"_cameraRef","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}},{"type":"intrinsic","name":"any"}],"name":"Component"}]}},{"name":"_lastEvents","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"eventName","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}},"defaultValue":"{}"},{"name":"_lastEventsTimes","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"eventName","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Date"}}}},"defaultValue":"{}"},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"ReactNode"}}]}}],"name":"Readonly"}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}}],"name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"Constants","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reference","name":"ConstantsType"},"defaultValue":"..."},{"name":"ConversionTables","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoFocus","kind":1024,"kindString":"Property","type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":"on"},{"type":"literal","value":"off"},{"type":"literal","value":"auto"},{"type":"literal","value":"singleShot"}]},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"}]}],"name":"Record"}},{"name":"flashMode","kind":1024,"kindString":"Property","type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":"on"},{"type":"literal","value":"off"},{"type":"literal","value":"auto"},{"type":"literal","value":"torch"}]},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"name":"Record"}},{"name":"type","kind":1024,"kindString":"Property","type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":"front"},{"type":"literal","value":"back"}]},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"name":"Record"}},{"name":"whiteBalance","kind":1024,"kindString":"Property","type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":"auto"},{"type":"literal","value":"sunny"},{"type":"literal","value":"cloudy"},{"type":"literal","value":"shadow"},{"type":"literal","value":"incandescent"},{"type":"literal","value":"fluorescent"},{"type":"literal","value":"continuous"},{"type":"literal","value":"manual"}]},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"name":"Record"}}]}},"defaultValue":"ConversionTables"},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"defaultProps","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reference","name":"CameraProps"},"defaultValue":"..."},{"name":"useCameraPermissions","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a new permission hook with the permission methods built-in.\\nThis can be used to quickly create specific permission hooks in every module.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Camera.useCameraPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}},"defaultValue":"..."},{"name":"useMicrophonePermissions","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a new permission hook with the permission methods built-in.\\nThis can be used to quickly create specific permission hooks in every module.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Camera.useMicrophonePermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}},"defaultValue":"..."},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"_onCameraReady","kind":2048,"kindString":"Method","signatures":[{"name":"_onCameraReady","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]},{"name":"_onMountError","kind":2048,"kindString":"Method","signatures":[{"name":"_onMountError","kind":4096,"kindString":"Call signature","parameters":[{"name":"__namedParameters","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"message","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"_onObjectDetected","kind":2048,"kindString":"Method","signatures":[{"name":"_onObjectDetected","kind":4096,"kindString":"Call signature","parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Function"}}],"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"__namedParameters","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}]},{"name":"_setReference","kind":2048,"kindString":"Method","signatures":[{"name":"_setReference","kind":4096,"kindString":"Call signature","parameters":[{"name":"ref","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}},{"type":"intrinsic","name":"any"}],"name":"Component"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getAvailablePictureSizesAsync","kind":2048,"kindString":"Method","signatures":[{"name":"getAvailablePictureSizesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get picture sizes that are supported by the device for given `ratio`.","returns":"Returns a Promise that resolves to an array of strings representing picture sizes that can be passed to `pictureSize` prop.\\nThe list varies across Android devices but is the same for every iOS.\\n"},"parameters":[{"name":"ratio","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"A string representing aspect ratio of sizes to be returned."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"Promise"}}]},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"getSupportedRatiosAsync","kind":2048,"kindString":"Method","signatures":[{"name":"getSupportedRatiosAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get aspect ratios that are supported by the device and can be passed via `ratio` prop.","returns":"Returns a Promise that resolves to an array of strings representing ratios, eg. `[\'4:3\', \'1:1\']`.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"Promise"}}]},{"name":"pausePreview","kind":2048,"kindString":"Method","signatures":[{"name":"pausePreview","kind":4096,"kindString":"Call signature","comment":{"shortText":"Pauses the camera preview. It is not recommended to use `takePictureAsync` when preview is paused."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"recordAsync","kind":2048,"kindString":"Method","signatures":[{"name":"recordAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Starts recording a video that will be saved to cache directory. Videos are rotated to match device\'s orientation.\\nFlipping camera during a recording results in stopping it.","returns":"Returns a Promise that resolves to an object containing video file `uri` property and a `codec` property on iOS.\\nThe Promise is returned if `stopRecording` was invoked, one of `maxDuration` and `maxFileSize` is reached or camera preview is stopped.","tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"A map of `CameraRecordingOptions` type."},"type":{"type":"reference","name":"CameraRecordingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"uri","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}],"name":"Promise"}}]},{"name":"render","kind":2048,"kindString":"Method","signatures":[{"name":"render","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"resumePreview","kind":2048,"kindString":"Method","signatures":[{"name":"resumePreview","kind":4096,"kindString":"Call signature","comment":{"shortText":"Resumes the camera preview."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}},{"name":"stopRecording","kind":2048,"kindString":"Method","signatures":[{"name":"stopRecording","kind":4096,"kindString":"Call signature","comment":{"shortText":"Stops recording if any is in progress."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"takePictureAsync","kind":2048,"kindString":"Method","signatures":[{"name":"takePictureAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Takes a picture and saves it to app\'s cache directory. Photos are rotated to match device\'s orientation\\n(if `options.skipProcessing` flag is not enabled) and scaled to match the preview. Anyway on Android it is essential\\nto set ratio prop to get a picture with correct dimensions.\\n> **Note**: Make sure to wait for the [`onCameraReady`](#oncameraready) callback before calling this method.","returns":"Returns a Promise that resolves to `CameraCapturedPicture` object, where `uri` is a URI to the local image file on iOS,\\nAndroid, and a base64 string on web (usable as the source for an `Image` element). The `width` and `height` properties specify\\nthe dimensions of the image. `base64` is included if the `base64` option was truthy, and is a string containing the JPEG data\\nof the image in Base64--prepend that with `\'data:image/jpg;base64,\'` to get a data URI, which you can use as the source\\nfor an `Image` element for example. `exif` is included if the `exif` option was truthy, and is an object containing EXIF\\ndata for the image--the names of its properties are EXIF tags and their values are the values for those tags.\\n\\n> On native platforms, the local image URI is temporary. Use [`FileSystem.copyAsync`](filesystem.md#filesystemcopyasyncoptions)\\n> to make a permanent copy of the image.\\n\\n> On web, the `uri` is a base64 representation of the image because file system URLs are not supported in the browser.\\n> The `exif` data returned on web is a partial representation of the [`MediaTrackSettings`](https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings),\\n> if available.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"An object in form of `CameraPictureOptions` type."},"type":{"type":"reference","name":"CameraPictureOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraCapturedPicture"}],"name":"Promise"}}]},{"name":"getAvailableCameraTypesAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"getAvailableCameraTypesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a list of camera types `[\'front\', \'back\']`. This is useful for desktop browsers which only have front-facing cameras.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"CameraType"}}],"name":"Promise"}}]},{"name":"getAvailableVideoCodecsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"getAvailableVideoCodecsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Queries the device for the available video codecs that can be used in video recording.","returns":"A promise that resolves to a list of strings that represents available codecs.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"VideoCodec"}}],"name":"Promise"}}]},{"name":"getCameraPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"getCameraPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing camera.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getMicrophonePermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"getMicrophonePermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing microphone.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"Deprecated. Use `getCameraPermissionsAsync` or `getMicrophonePermissionsAsync` instead.\\nChecks user\'s permissions for accessing camera.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check whether the current device has a camera. This is useful for web and simulators cases.\\nThis isn\'t influenced by the Permissions API (all platforms), or HTTP usage (in the browser).\\nYou will still need to check if the native permission has been accepted.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"requestCameraPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"requestCameraPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing camera.\\nOn iOS this will require apps to specify an `NSCameraUsageDescription` entry in the **Info.plist**.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestMicrophonePermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"requestMicrophonePermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing the microphone.\\nOn iOS this will require apps to specify an `NSMicrophoneUsageDescription` entry in the **Info.plist**.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing camera.\\nOn iOS this will require apps to specify both `NSCameraUsageDescription` and `NSMicrophoneUsageDescription` entries in the **Info.plist**.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).","tags":[{"tag":"deprecated","text":"Use `requestCameraPermissionsAsync` or `requestMicrophonePermissionsAsync` instead.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Component"}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"BarCodePoint","kind":4194304,"kindString":"Type alias","type":{"type":"reference","name":"Point"}},{"name":"BarCodeScanningResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"cornerPoints","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Corner points of the bounding box."},"type":{"type":"array","elementType":{"type":"reference","name":"BarCodePoint"}}},{"name":"data","kind":1024,"kindString":"Property","comment":{"shortText":"The information encoded in the bar code."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"The barcode type."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"CameraCapturedPicture","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"exif","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"MediaTrackSettings"}],"name":"Partial"},{"type":"intrinsic","name":"any"}]}},{"name":"height","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}},{"name":"CameraMountError","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"message","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"CameraNativeProps","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoFocus","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"number"}]}},{"name":"barCodeScannerEnabled","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"barCodeScannerSettings","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"BarCodeSettings"}},{"name":"faceDetectorEnabled","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"faceDetectorSettings","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"object"}},{"name":"flashMode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]}},{"name":"focusDepth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"onCameraReady","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"CameraReadyListener"}},{"name":"onMountError","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"MountErrorListener"}},{"name":"onPictureSaved","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"PictureSavedListener"}},{"name":"pictureSize","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"pointerEvents","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}},{"name":"poster","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"ratio","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"ref","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"Function"}},{"name":"style","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]}},{"name":"useCamera2Api","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"whiteBalance","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]}},{"name":"zoom","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"onBarCodeScanned","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onBarCodeScanned","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"BarCodeScanningResult"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onFaceDetectionError","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onFaceDetectionError","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"Error"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onFacesDetected","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onFacesDetected","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"FaceDetectionResult"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"CameraPictureOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to also include the image data in Base64 format."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"exif","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to also include the EXIF data for the image."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"imageType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"reference","name":"ImageType"}},{"name":"isImageMirror","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"quality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specify the quality of compression, from 0 to 1. 0 means compress for small size, 1 means compress for maximum quality."},"type":{"type":"intrinsic","name":"number"}},{"name":"scale","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"skipProcessing","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to `true`, camera skips orientation adjustment and returns an image straight from the device\'s camera.\\nIf enabled, `quality` option is discarded (processing pipeline is skipped as a whole).\\nAlthough enabling this option reduces image delivery time significantly, it may cause the image to appear in a wrong orientation\\nin the `Image` component (at the time of writing, it does not respect EXIF orientation of the images).\\n> **Note**: Enabling `skipProcessing` would cause orientation uncertainty. `Image` component does not respect EXIF\\n> stored orientation information, that means obtained image would be displayed wrongly (rotated by 90\xB0, 180\xB0 or 270\xB0).\\n> Different devices provide different orientations. For example some Sony Xperia or Samsung devices don\'t provide\\n> correctly oriented images by default. To always obtain correctly oriented image disable `skipProcessing` option."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"onPictureSaved","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onPictureSaved","kind":4096,"kindString":"Call signature","comment":{"shortText":"A callback invoked when picture is saved. If set, the promise of this method will resolve immediately with no data after picture is captured.\\nThe data that it should contain will be passed to this callback. If displaying or processing a captured photo right after taking it\\nis not your case, this callback lets you skip waiting for it to be saved."},"parameters":[{"name":"picture","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"CameraCapturedPicture"}}],"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"CameraProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoFocus","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"State of camera auto focus. Use one of [`Camera.Constants.AutoFocus`](#autofocus). When `on`,\\nauto focus will be enabled, when `off`, it won\'t and focus will lock as it was in the moment of change,\\nbut it can be adjusted on some devices via `focusDepth` prop."},"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"number"},{"type":"reference","name":"AutoFocus"}]}},{"name":"barCodeScannerSettings","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Settings exposed by [`BarCodeScanner`](bar-code-scanner) module. Supported settings: **barCodeTypes**.","tags":[{"tag":"example","text":"\\n```tsx\\n<Camera\\n  barCodeScannerSettings={{\\n    barCodeTypes: [BarCodeScanner.Constants.BarCodeType.qr],\\n  }}\\n/>\\n```\\n"}]},"type":{"type":"intrinsic","name":"object"}},{"name":"faceDetectorSettings","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A settings object passed directly to an underlying module providing face detection features.\\nSee [`DetectionOptions`](facedetector/#detectionoptions) in FaceDetector documentation for details."},"type":{"type":"intrinsic","name":"object"}},{"name":"flashMode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Camera flash mode. Use one of `Camera.Constants.FlashMode`. When `on`, the flash on your device will\\nturn on when taking a picture, when `off`, it won\'t. Setting to `auto` will fire flash if required,\\n`torch` turns on flash during the preview.","tags":[{"tag":"default","text":"FlashMode.off\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","name":"FlashMode"}]}},{"name":"focusDepth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Distance to plane of the sharpest focus. A value between `0` and `1` where: `0` - infinity focus, `1` - focus as close as possible.\\nFor Android this is available only for some devices and when `useCamera2Api` is set to `true`.","tags":[{"tag":"default","text":"0\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"pictureSize","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A string representing the size of pictures [`takePictureAsync`](#takepictureasync) will take.\\nAvailable sizes can be fetched with [`getAvailablePictureSizesAsync`](#getavailablepicturesizesasync)."},"type":{"type":"intrinsic","name":"string"}},{"name":"poster","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A URL for an image to be shown while the camera is loading.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"ratio","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A string representing aspect ratio of the preview, eg. `4:3`, `16:9`, `1:1`. To check if a ratio is supported\\nby the device use [`getSupportedRatiosAsync`](#getsupportedratiosasync).","tags":[{"tag":"default","text":"4:3."},{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Camera facing. Use one of `Camera.Constants.Type`. When `Type.front`, use the front-facing camera.\\nWhen `Type.back`, use the back-facing camera.","tags":[{"tag":"default","text":"Type.back\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","name":"CameraType"}]}},{"name":"useCamera2Api","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to use Android\'s Camera2 API. See `Note` at the top of this page.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"videoStabilizationMode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The video stabilization mode used for a video recording. Use one of [`Camera.Constants.VideoStabilization`](#videostabilization).\\nYou can read more about each stabilization type in [Apple Documentation](https://developer.apple.com/documentation/avfoundation/avcapturevideostabilizationmode).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"whiteBalance","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Camera white balance. Use one of [`Camera.Constants.WhiteBalance`](#whitebalance). If a device does not support any of these values previous one is used."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","name":"WhiteBalance"}]}},{"name":"zoom","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A value between `0` and `1` being a percentage of device\'s max zoom. `0` - not zoomed, `1` - maximum zoom.","tags":[{"tag":"default","text":"0\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"onBarCodeScanned","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onBarCodeScanned","kind":4096,"kindString":"Call signature","comment":{"shortText":"Callback that is invoked when a bar code has been successfully scanned. The callback is provided with\\nan object of the [`BarCodeScanningResult`](#barcodescanningresult) shape, where the `type`\\nrefers to the bar code type that was scanned and the `data` is the information encoded in the bar code\\n(in this case of QR codes, this is often a URL). See [`BarCodeScanner.Constants.BarCodeType`](bar-code-scanner#supported-formats)\\nfor supported values."},"parameters":[{"name":"scanningResult","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"BarCodeScanningResult"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onCameraReady","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onCameraReady","kind":4096,"kindString":"Call signature","comment":{"shortText":"Callback invoked when camera preview has been set."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"onFacesDetected","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onFacesDetected","kind":4096,"kindString":"Call signature","comment":{"shortText":"Callback invoked with results of face detection on the preview. See [FaceDetector documentation](facedetector/#detectionresult) for details."},"parameters":[{"name":"faces","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"FaceDetectionResult"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onMountError","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onMountError","kind":4096,"kindString":"Call signature","comment":{"shortText":"Callback invoked when camera preview could not been started."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","comment":{"shortText":"Error object that contains a `message`.\\n"},"type":{"type":"reference","name":"CameraMountError"}}],"type":{"type":"intrinsic","name":"void"}}]}]}}]}},{"name":"CameraRecordingOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"codec","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"This option specifies what codec to use when recording the video. See [`Camera.Constants.VideoCodec`](#video-codec) for the possible values.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"VideoCodec"}},{"name":"maxDuration","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum video duration in seconds."},"type":{"type":"intrinsic","name":"number"}},{"name":"maxFileSize","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum video file size in bytes."},"type":{"type":"intrinsic","name":"number"}},{"name":"mirror","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true`, the recorded video will be flipped along the vertical axis. iOS flips videos recorded with the front camera by default,\\nbut you can reverse that back by setting this to `true`. On Android, this is handled in the user\'s device settings.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"mute","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If present, video will be recorded with no sound."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"quality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specify the quality of recorded video. Usage: `Camera.Constants.VideoQuality.<value>`,\\npossible values: for 16:9 resolution `2160p`, `1080p`, `720p`, `480p` : `Android only` and for 4:3 `4:3` (the size is 640x480).\\nIf the chosen quality is not available for a device, the highest available is chosen."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]}},{"name":"videoBitrate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Only works if `useCamera2Api` is set to `true`. This option specifies a desired video bitrate. For example, `5*1000*1000` would be 5Mbps.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"ConstantsType","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"AutoFocus","kind":1024,"kindString":"Property","type":{"type":"reference","name":"AutoFocus"}},{"name":"FlashMode","kind":1024,"kindString":"Property","type":{"type":"reference","name":"FlashMode"}},{"name":"Type","kind":1024,"kindString":"Property","type":{"type":"reference","name":"CameraType"}},{"name":"VideoCodec","kind":1024,"kindString":"Property","type":{"type":"reference","name":"VideoCodec"}},{"name":"VideoQuality","kind":1024,"kindString":"Property","type":{"type":"reference","name":"VideoQuality"}},{"name":"VideoStabilization","kind":1024,"kindString":"Property","type":{"type":"reference","name":"VideoStabilization"}},{"name":"WhiteBalance","kind":1024,"kindString":"Property","type":{"type":"reference","name":"WhiteBalance"}}]}}},{"name":"FaceDetectionResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"faces","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"reference","name":"Face"}}}]}}},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"Point","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"x","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"y","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}},{"name":"Constants","kind":32,"kindString":"Variable","type":{"type":"reference","name":"ConstantsType"}},{"name":"getCameraPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCameraPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing camera.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getMicrophonePermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMicrophonePermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing microphone.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"Deprecated. Use `getCameraPermissionsAsync` or `getMicrophonePermissionsAsync` instead.\\nChecks user\'s permissions for accessing camera.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestCameraPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestCameraPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing camera.\\nOn iOS this will require apps to specify an `NSCameraUsageDescription` entry in the **Info.plist**.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestMicrophonePermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestMicrophonePermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing the microphone.\\nOn iOS this will require apps to specify an `NSMicrophoneUsageDescription` entry in the **Info.plist**.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing camera.\\nOn iOS this will require apps to specify both `NSCameraUsageDescription` and `NSMicrophoneUsageDescription` entries in the **Info.plist**.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).","tags":[{"tag":"deprecated","text":"Use `requestCameraPermissionsAsync` or `requestMicrophonePermissionsAsync` instead.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]}]}')},JPSL:function(e){e.exports=JSON.parse('{"name":"expo-localization","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"Localization","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"currency","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Three-character ISO 4217 currency code. Returns `null` on web.","tags":[{"tag":"example","text":"`USD`, `EUR`, `CNY`, null\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"decimalSeparator","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Decimal separator used for formatting numbers.","tags":[{"tag":"example","text":"`,`, \'.\'\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"digitGroupingSeparator","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Digit grouping separator used when formatting numbers larger than 1000.","tags":[{"tag":"example","text":"`.`, \'\', \',\'\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"isMetric","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Boolean value that indicates whether the system uses the metric system.\\nOn Android and web, this is inferred from the current region."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isRTL","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Returns if the system\'s language is written from Right-to-Left.\\nThis can be used to build features like [bidirectional icons](https://material.io/design/usability/bidirectionality.html).","text":"Returns `false` in SSR environments.\\n"},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isoCurrencyCodes","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"List of all the supported language ISO codes."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"locale","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"An [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag),\\nconsisting of a two-character language code and optional script, region and variant codes.","tags":[{"tag":"example","text":"`en`, `en-US`, `zh-Hans`, `zh-Hans-CN`, `en-emodeng`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"locales","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"List of all the languages provided by the user settings.\\nThese are returned in the order the user defines in their device settings.","tags":[{"tag":"example","text":"[`en`, `en-US`, `zh-Hans`, `zh-Hans-CN`, `en-emodeng`]\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"region","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The region code for your device that comes from the Region setting under Language & Region on iOS.\\nThis value is always available on iOS, but might return `null` on Android or web.","tags":[{"tag":"example","text":"`US`, `NZ`, null\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"timezone","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The current timezone in display format.\\nOn Web timezone is calculated with Intl.DateTimeFormat().resolvedOptions().timeZone. For a better estimation you could use the moment-timezone package but it will add significant bloat to your website\'s bundle size.","tags":[{"tag":"example","text":"`America/Los_Angeles`\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"currency","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Three-character ISO 4217 currency code. Returns `null` on web.","tags":[{"tag":"example","text":"`\'USD\'`, `\'EUR\'`, `\'CNY\'`, `null`\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"decimalSeparator","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Decimal separator used for formatting numbers.","tags":[{"tag":"example","text":"`\',\'`, `\'.\'`\\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"digitGroupingSeparator","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Digit grouping separator used when formatting numbers larger than 1000.","tags":[{"tag":"example","text":"`\'.\'`, `\'\'`, `\',\'`\\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"isMetric","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Boolean value that indicates whether the system uses the metric system.\\nOn Android and web, this is inferred from the current region."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"..."},{"name":"isRTL","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Returns if the system\'s language is written from Right-to-Left.\\nThis can be used to build features like [bidirectional icons](https://material.io/design/usability/bidirectionality.html).","text":"Returns `false` in Server Side Rendering (SSR) environments.\\n"},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"..."},{"name":"isoCurrencyCodes","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"A list of all the supported language ISO codes."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."},{"name":"locale","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"An [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag),\\nconsisting of a two-character language code and optional script, region and variant codes.","tags":[{"tag":"example","text":"`\'en\'`, `\'en-US\'`, `\'zh-Hans\'`, `\'zh-Hans-CN\'`, `\'en-emodeng\'`\\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"locales","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"List of all the native languages provided by the user settings.\\nThese are returned in the order the user defines in their device settings."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."},{"name":"region","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The region code for your device that comes from the Region setting under Language & Region on iOS.\\nThis value is always available on iOS, but might return `null` on Android or web.","tags":[{"tag":"example","text":"`\'US\'`, `\'NZ\'`, `null`\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"timezone","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The current time zone in display format.\\nOn Web time zone is calculated with Intl.DateTimeFormat().resolvedOptions().timeZone. For a\\nbetter estimation you could use the moment-timezone package but it will add significant bloat to\\nyour website\'s bundle size.","tags":[{"tag":"example","text":"`\'America/Los_Angeles\'`\\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"getLocalizationAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getLocalizationAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get the latest native values from the device. Locale can be changed on some Android devices\\nwithout resetting the app.\\n> On iOS, changing the locale will cause the device to reset meaning the constants will always be\\ncorrect.","text":"# Example\\n```ts\\n// When the app returns from the background on Android...\\n\\nconst { locale } = await Localization.getLocalizationAsync();\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Localization"}],"name":"Promise"}}]}]}')},"Jc/f":function(e){e.exports=JSON.parse('{"name":"expo-error-recovery","kind":1,"kindString":"Project","originalName":"","children":[{"name":"ErrorRecoveryProps","kind":4194304,"kindString":"Type alias","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"recoveredProps","kind":32,"kindString":"Variable","type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"ErrorRecoveryProps"}]},"defaultValue":"..."},{"name":"setRecoveryProps","kind":64,"kindString":"Function","signatures":[{"name":"setRecoveryProps","kind":4096,"kindString":"Call signature","comment":{"shortText":"Set arbitrary error recovery props. If your project crashes in production as a result of a fatal\\nJS error, Expo will reload your project. If you\'ve set these props, they\'ll be passed to your\\nreloaded project\'s initial props under `exp.errorRecovery`. Access to `localStorage` is required\\non web, or else this will simply be a no-op.","text":"[Read more about error handling with Expo](/guides/errors)."},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","comment":{"text":"An object which will be passed to your reloaded project\'s initial props if the\\nproject was reloaded as a result of a fatal JS error.\\n"},"type":{"type":"reference","name":"ErrorRecoveryProps"}}],"type":{"type":"intrinsic","name":"void"}}]}]}')},Jfu2:function(e){e.exports=JSON.parse('{"name":"expo-document-picker","kind":1,"kindString":"Project","originalName":"","children":[{"name":"DocumentPickerOptions","kind":4194304,"kindString":"Type alias","comment":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"copyToCacheDirectory","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true`, the picked file is copied to [`FileSystem.CacheDirectory`](filesystem.md#filesystemcachedirectory),\\nwhich allows other Expo APIs to read the file immediately. This may impact performance for\\nlarge files, so you should consider setting this to `false` if you expect users to pick\\nparticularly large files and your app does not need immediate read access.","tags":[{"tag":"default","text":"`true`\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"multiple","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__Web Only.__ Allows multiple files to be selected from the system UI.","tags":[{"tag":"default","text":"`false`\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The [MIME type(s)](https://en.wikipedia.org/wiki/Media_type) of the documents that are available\\nto be picked. Is also supports wildcards like `\'image/*\'` to choose any image. To allow any type\\nof document you can use `\'&ast;/*\'`.","tags":[{"tag":"default","text":"`\'&ast;/*\'`\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}}]}}},{"name":"DocumentResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","type":{"type":"literal","value":"cancel"}}]}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"file","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"File"}},{"name":"lastModified","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"mimeType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Document MIME type."},"type":{"type":"intrinsic","name":"string"}},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"Document original name."},"type":{"type":"intrinsic","name":"string"}},{"name":"output","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"FileList"},{"type":"literal","value":null}]}},{"name":"size","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Document size in bytes."},"type":{"type":"intrinsic","name":"number"}},{"name":"type","kind":1024,"kindString":"Property","type":{"type":"literal","value":"success"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"An URI to the local document file."},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"getDocumentAsync","kind":64,"kindString":"Function","signatures":[{"name":"getDocumentAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Display the system UI for choosing a document. By default, the chosen file is copied to [the app\'s internal cache directory](filesystem.md#filesystemcachedirectory).\\n> **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\\nTherefore, calling `getDocumentAsync` in `componentDidMount`, for example, will **not** work as\\nintended. The `cancel` event will not be returned in the browser due to platform restrictions and\\ninconsistencies across browsers.","returns":"On success returns a promise that fulfils with [`DocumentResult`](#documentresult) object.\\n\\nIf the user cancelled the document picking, the promise resolves to `{ type: \'cancel\' }`.\\n"},"parameters":[{"name":"__namedParameters","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"DocumentPickerOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DocumentResult"}],"name":"Promise"}}]}]}')},"K/gC":function(e,w,n){var c=n("uzhd");w.unsafe=[{character:"~",inConstruct:"phrasing"}],w.handlers={delete:p},p.peek=d;function p(a,m,r){var s=r.enter("emphasis"),i=c(a,r,{before:"~",after:"~"});return s(),"~~"+i+"~~"}function d(){return"~"}},K0Ff:function(e){e.exports=JSON.parse('{"name":"expo-document-picker","kind":1,"kindString":"Project","originalName":"","children":[{"name":"DocumentPickerOptions","kind":4194304,"kindString":"Type alias","comment":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"copyToCacheDirectory","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true`, the picked file is copied to [`FileSystem.CacheDirectory`](filesystem.md#filesystemcachedirectory),\\nwhich allows other Expo APIs to read the file immediately. This may impact performance for\\nlarge files, so you should consider setting this to `false` if you expect users to pick\\nparticularly large files and your app does not need immediate read access.","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"multiple","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Allows multiple files to be selected from the system UI.","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"web\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The [MIME type(s)](https://en.wikipedia.org/wiki/Media_type) of the documents that are available\\nto be picked. Is also supports wildcards like `\'image/*\'` to choose any image. To allow any type\\nof document you can use `\'&ast;/*\'`.","tags":[{"tag":"default","text":"\'&ast;/*\'\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}}]}}},{"name":"DocumentResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","type":{"type":"literal","value":"cancel"}}]}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"file","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"File"}},{"name":"lastModified","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"mimeType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Document MIME type."},"type":{"type":"intrinsic","name":"string"}},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"Document original name."},"type":{"type":"intrinsic","name":"string"}},{"name":"output","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"FileList"},{"type":"literal","value":null}]}},{"name":"size","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Document size in bytes."},"type":{"type":"intrinsic","name":"number"}},{"name":"type","kind":1024,"kindString":"Property","type":{"type":"literal","value":"success"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"An URI to the local document file."},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"getDocumentAsync","kind":64,"kindString":"Function","signatures":[{"name":"getDocumentAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Display the system UI for choosing a document. By default, the chosen file is copied to [the app\'s internal cache directory](filesystem.md#filesystemcachedirectory).\\n> **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\\nTherefore, calling `getDocumentAsync` in `componentDidMount`, for example, will **not** work as\\nintended. The `cancel` event will not be returned in the browser due to platform restrictions and\\ninconsistencies across browsers.","returns":"On success returns a promise that fulfils with [`DocumentResult`](#documentresult) object.\\n\\nIf the user cancelled the document picking, the promise resolves to `{ type: \'cancel\' }`.\\n"},"parameters":[{"name":"__namedParameters","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"DocumentPickerOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DocumentResult"}],"name":"Promise"}}]}]}')},K1Ig:function(e,w,n){"use strict";var c=["pre","script","style","textarea"];e.exports=c},K7yW:function(e){e.exports=JSON.parse('{"name":"expo-linking","kind":1,"kindString":"Project","originalName":"","children":[{"name":"CreateURLOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isTripleSlashed","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Should the URI be triple slashed `scheme:///path` or double slashed `scheme://path`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"queryParams","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An object of parameters that will be converted into a query string."},"type":{"type":"reference","name":"QueryParams"}},{"name":"scheme","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URI protocol `<scheme>://` that must be built into your native app."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"EventType","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"MessageEvent"}},{"name":"url","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"NativeURLListener","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"nativeEvent","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"MessageEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"ParsedURL","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"hostname","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"path","kind":1024,"kindString":"Property","comment":{"shortText":"The path into the app specified by the URL."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"queryParams","kind":1024,"kindString":"Property","comment":{"shortText":"The set of query parameters specified by the query string of the url used to open the app."},"type":{"type":"union","types":[{"type":"reference","name":"QueryParams"},{"type":"literal","value":null}]}},{"name":"scheme","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}}},{"name":"QueryParams","kind":4194304,"kindString":"Type alias","type":{"type":"reference","name":"ParsedQs"}},{"name":"SendIntentExtras","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"key","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"value","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"}]}}]}}},{"name":"URLListener","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"EventType"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"addEventListener","kind":64,"kindString":"Function","signatures":[{"name":"addEventListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Add a handler to `Linking` changes by listening to the `url` event type and providing the handler.\\nIt is recommended to use the [`useURL()`](#useurl) hook instead.","tags":[{"tag":"see","text":"[React Native Docs Linking page](https://reactnative.dev/docs/linking#addeventlistener).\\n"}]},"parameters":[{"name":"type","kind":32768,"kindString":"Parameter","comment":{"shortText":"The only valid type is `\'url\'`."},"type":{"type":"intrinsic","name":"string"}},{"name":"handler","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`URLListener`](#urllistener) function that takes an `event` object of the type\\n[`EventType`](#eventype)."},"type":{"type":"reference","name":"URLListener"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"canOpenURL","kind":64,"kindString":"Function","signatures":[{"name":"canOpenURL","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine whether or not an installed app can handle a given URL.\\nOn web this always returns `true` because there is no API for detecting what URLs can be opened.","returns":"A `Promise` object that is fulfilled with `true` if the URL can be handled, otherwise it\\n`false` if not.\\n\\nThe `Promise` will reject on Android if it was impossible to check if the URL can be opened, and\\non iOS if you didn\'t [add the specific scheme in the `LSApplicationQueriesSchemes` key inside **Info.plist**](/guides/linking#opening-links-to-other-apps).\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"The URL that you want to test can be opened."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"createURL","kind":64,"kindString":"Function","signatures":[{"name":"createURL","kind":4096,"kindString":"Call signature","comment":{"shortText":"Helper method for constructing a deep link into your app, given an optional path and set of query\\nparameters. Creates a URI scheme with two slashes by default.","text":"The scheme in bare and standalone must be defined in the Expo config (`app.config.js` or `app.json`)\\nunder `expo.scheme`.\\n\\n# Examples\\n- Bare: `<scheme>://path` - uses provided scheme or scheme from Expo config `scheme`.\\n- Standalone, Custom: `yourscheme://path`\\n- Web (dev): `https://localhost:19006/path`\\n- Web (prod): `https://myapp.com/path`\\n- Expo Client (dev): `exp://128.0.0.1:19000/--/path`\\n- Expo Client (prod): `exp://exp.host/@yourname/your-app/--/path`\\n","returns":"A URL string which points to your app with the given deep link information.\\n"},"parameters":[{"name":"path","kind":32768,"kindString":"Parameter","comment":{"shortText":"Addition path components to append to the base URL."},"type":{"type":"intrinsic","name":"string"}},{"name":"namedParameters","kind":32768,"kindString":"Parameter","comment":{"shortText":"Additional options object."},"originalName":"__namedParameters","type":{"type":"reference","name":"CreateURLOptions"},"defaultValue":"{}"}],"type":{"type":"intrinsic","name":"string"}}]},{"name":"getInitialURL","kind":64,"kindString":"Function","signatures":[{"name":"getInitialURL","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the URL that was used to launch the app if it was launched by a link.","returns":"The URL string that launched your app, or `null`.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"makeUrl","kind":64,"kindString":"Function","signatures":[{"name":"makeUrl","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a URL that works for the environment the app is currently running in.\\nThe scheme in bare and standalone must be defined in the app.json under `expo.scheme`.","text":"# Examples\\n- Bare: empty string\\n- Standalone, Custom: `yourscheme:///path`\\n- Web (dev): `https://localhost:19006/path`\\n- Web (prod): `https://myapp.com/path`\\n- Expo Client (dev): `exp://128.0.0.1:19000/--/path`\\n- Expo Client (prod): `exp://exp.host/@yourname/your-app/--/path`\\n","returns":"A URL string which points to your app with the given deep link information.","tags":[{"tag":"deprecated","text":"An alias for [`createURL()`](#linkingcreateurlpath-namedparameters). This method is\\ndeprecated and will be removed in a future SDK version.\\n"}]},"parameters":[{"name":"path","kind":32768,"kindString":"Parameter","comment":{"shortText":"addition path components to append to the base URL."},"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"},{"name":"queryParams","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"An object with a set of query parameters. These will be merged with any\\nExpo-specific parameters that are needed (e.g. release channel) and then appended to the URL\\nas a query string."},"type":{"type":"reference","name":"ParsedQs"}},{"name":"scheme","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Optional URI protocol to use in the URL `<scheme>:///`, when `undefined` the scheme\\nwill be chosen from the Expo config (`app.config.js` or `app.json`)."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]},{"name":"openSettings","kind":64,"kindString":"Function","signatures":[{"name":"openSettings","kind":4096,"kindString":"Call signature","comment":{"shortText":"Open the operating system settings app and displays the app\u2019s custom settings, if it has any.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"openURL","kind":64,"kindString":"Function","signatures":[{"name":"openURL","kind":4096,"kindString":"Call signature","comment":{"shortText":"Attempt to open the given URL with an installed app. See the [Linking guide](/guides/linking)\\nfor more information.","returns":"A `Promise` that is fulfilled with `true` if the link is opened operating system\\nautomatically or the user confirms the prompt to open the link. The `Promise` rejects if there\\nare no applications registered for the URL or the user cancels the dialog.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"A URL for the operating system to open, eg: `tel:5555555`, `exp://`."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Promise"}}]},{"name":"parse","kind":64,"kindString":"Function","signatures":[{"name":"parse","kind":4096,"kindString":"Call signature","comment":{"shortText":"Helper method for parsing out deep link information from a URL.","returns":"A `ParsedURL` object.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"A URL that points to the currently running experience (e.g. an output of `Linking.createURL()`)."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ParsedURL"}}]},{"name":"parseInitialURLAsync","kind":64,"kindString":"Function","signatures":[{"name":"parseInitialURLAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Helper method which wraps React Native\'s `Linking.getInitialURL()` in `Linking.parse()`.\\nParses the deep link information out of the URL used to open the experience initially.\\nIf no link opened the app, all the fields will be `null`.\\n> On the web it parses the current window URL.","returns":"A promise that resolves with `ParsedURL` object.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ParsedURL"}],"name":"Promise"}}]},{"name":"removeEventListener","kind":64,"kindString":"Function","signatures":[{"name":"removeEventListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Remove a handler by passing the `url` event type and the handler.","tags":[{"tag":"see","text":"[React Native Docs Linking page](https://reactnative.dev/docs/linking#removeeventlistener).\\n"}]},"parameters":[{"name":"type","kind":32768,"kindString":"Parameter","comment":{"shortText":"The only valid type is `\'url\'`."},"type":{"type":"intrinsic","name":"string"}},{"name":"handler","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`URLListener`](#urllistener) function that takes an `event` object of the type\\n[`EventType`](#eventype)."},"type":{"type":"reference","name":"URLListener"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"sendIntent","kind":64,"kindString":"Function","signatures":[{"name":"sendIntent","kind":4096,"kindString":"Call signature","comment":{"shortText":"Launch an Android intent with extras.\\n> Use [IntentLauncher](./intent-launcher) instead, `sendIntent` is only included in\\n> `Linking` for API compatibility with React Native\'s Linking API.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"action","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"extras","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"reference","name":"SendIntentExtras"}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"useURL","kind":64,"kindString":"Function","signatures":[{"name":"useURL","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns the initial URL followed by any subsequent changes to the URL.","returns":"Returns the initial URL or `null`.\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}]}')},KTko:function(e){e.exports=JSON.parse('{"name":"expo-analytics-segment","kind":1,"kindString":"Project","originalName":"","children":[{"name":"CommonOptions","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"},{"type":"literal","value":null}]}},{"name":"InitializeOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"androidWriteKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Write key for Android source."},"type":{"type":"intrinsic","name":"string"}},{"name":"iosWriteKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Write key for iOS source."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"alias","kind":64,"kindString":"Function","signatures":[{"name":"alias","kind":4096,"kindString":"Call signature","comment":{"shortText":"Associate current identity with a new identifier. See [Segment Alias docs](https://segment.com/docs/spec/alias/).","returns":"A `Promise` which fulfils witch a `boolean` indicating whether the method has been\\nexecuted on the underlying `Segment` instance or not.\\n"},"parameters":[{"name":"newId","kind":32768,"kindString":"Parameter","comment":{"text":"Identifier to associate with."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"An extra dictionary with options for the call, [see here](https://segment.com/docs/connections/spec/common/)\\nfor possible configuration options. An example options object would be:\\n```json\\n{\\n  \\"integrations\\": {\\n    \\"Sentry\\": {\\n      \\"enabled\\": true\\n     }\\n  },\\n  \\"context\\": {\\n    \\"ip\\": \\"0.0.0.0\\"\\n  }\\n}\\n```\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"flush","kind":64,"kindString":"Function","signatures":[{"name":"flush","kind":4096,"kindString":"Call signature","comment":{"shortText":"Manually flush the event queue. You shouldn\'t need to call this in most cases."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"getEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"getEnabledAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"group","kind":64,"kindString":"Function","signatures":[{"name":"group","kind":4096,"kindString":"Call signature","comment":{"shortText":"Associate the user with a group. See [Segment Group docs](https://segment.com/docs/spec/group/)."},"parameters":[{"name":"groupId","kind":32768,"kindString":"Parameter","comment":{"text":"ID of the group.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"groupWithTraits","kind":64,"kindString":"Function","signatures":[{"name":"groupWithTraits","kind":4096,"kindString":"Call signature","comment":{"shortText":"Associate the user with a group with traits. See [Segment Group docs](https://segment.com/docs/spec/group/)."},"parameters":[{"name":"groupId","kind":32768,"kindString":"Parameter","comment":{"text":"ID of the group."},"type":{"type":"intrinsic","name":"string"}},{"name":"traits","kind":32768,"kindString":"Parameter","comment":{"text":"Free-form dictionary of traits of the group."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"A map that can include any of [these common fields](https://segment.com/docs/connections/spec/common/).\\nDefaults to `null`.\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"identify","kind":64,"kindString":"Function","signatures":[{"name":"identify","kind":4096,"kindString":"Call signature","comment":{"shortText":"Associates the current user with a user ID. Call this after calling [`Segment.initialize()`](#initialize)\\nbut before other segment calls. See [Segment Identify docs](https://segment.com/docs/spec/identify/)."},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","comment":{"text":"User ID for the current user.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"identifyWithTraits","kind":64,"kindString":"Function","signatures":[{"name":"identifyWithTraits","kind":4096,"kindString":"Call signature","comment":{},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","comment":{"text":"User ID for the current user."},"type":{"type":"intrinsic","name":"string"}},{"name":"traits","kind":32768,"kindString":"Parameter","comment":{"text":"A map of custom properties."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"Map that can include any of [these common fields](https://segment.com/docs/connections/spec/common/).\\nDefaults to `null`.\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"initialize","kind":64,"kindString":"Function","signatures":[{"name":"initialize","kind":4096,"kindString":"Call signature","comment":{"shortText":"Segment requires separate write keys for iOS and Android. You will need to log in to Segment\\nto receive these keys: [https://segment.com/docs/guides/setup/how-do-i-find-my-write-key/](https://segment.com/docs/guides/setup/how-do-i-find-my-write-key/)"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"An [`InitializeOptions`](#initializeoptions) object.\\n"},"type":{"type":"reference","name":"InitializeOptions"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"reset","kind":64,"kindString":"Function","signatures":[{"name":"reset","kind":4096,"kindString":"Call signature","comment":{"shortText":"Clears the current user. See [https://segment.com/docs/sources/mobile/ios/#reset](https://segment.com/docs/sources/mobile/ios/#reset)."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"screen","kind":64,"kindString":"Function","signatures":[{"name":"screen","kind":4096,"kindString":"Call signature","comment":{"shortText":"Record that a user has seen a screen to Segment. See [Segment Screen docs](https://segment.com/docs/spec/screen/)."},"parameters":[{"name":"screenName","kind":32768,"kindString":"Parameter","comment":{"text":"Name of the screen.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"screenWithProperties","kind":64,"kindString":"Function","signatures":[{"name":"screenWithProperties","kind":4096,"kindString":"Call signature","comment":{"shortText":"Record that a user has seen a screen to Segment with custom properties. See [Segment Screen docs](https://segment.com/docs/spec/screen/)."},"parameters":[{"name":"screenName","kind":32768,"kindString":"Parameter","comment":{"text":"Name of the screen."},"type":{"type":"intrinsic","name":"string"}},{"name":"properties","kind":32768,"kindString":"Parameter","comment":{"text":"A map of custom properties."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"A map that can include any of [these common fields](https://segment.com/docs/connections/spec/common/).\\nDefaults to `null`.\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setEnabledAsync","kind":4096,"kindString":"Call signature","parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"track","kind":64,"kindString":"Function","signatures":[{"name":"track","kind":4096,"kindString":"Call signature","comment":{"shortText":"Log an event to Segment. See [Segment Track docs](https://segment.com/docs/spec/track/)."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","comment":{"text":"The event name.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"trackWithProperties","kind":64,"kindString":"Function","signatures":[{"name":"trackWithProperties","kind":4096,"kindString":"Call signature","comment":{"shortText":"Log an event to Segment with custom properties. See [Segment Track docs](https://segment.com/docs/spec/track/)."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","comment":{"text":"The event name."},"type":{"type":"intrinsic","name":"string"}},{"name":"properties","kind":32768,"kindString":"Parameter","comment":{"text":"A map of custom properties."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"A map that can include any of [these common fields](https://segment.com/docs/connections/spec/common/).\\nDefaults to `null`.\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"intrinsic","name":"void"}}]}]}')},KXJf:function(e,w,n){if(!1)var c,p;else e.exports=n("vWM3")()},KYel:function(e){e.exports=JSON.parse('{"name":"expo-network","kind":1,"kindString":"Project","originalName":"","children":[{"name":"NetworkStateType","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum of the different types of devices supported by Expo."},"children":[{"name":"BLUETOOTH","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over Bluetooth."},"defaultValue":"\\"BLUETOOTH\\""},{"name":"CELLULAR","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over mobile data or [`DUN-specific`](https://developer.android.com/reference/android/net/ConnectivityManager#TYPE_MOBILE_DUN)\\nmobile connection when setting an upstream connection for tethering."},"defaultValue":"\\"CELLULAR\\""},{"name":"ETHERNET","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over Ethernet."},"defaultValue":"\\"ETHERNET\\""},{"name":"NONE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"No active network connection detected."},"defaultValue":"\\"NONE\\""},{"name":"OTHER","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over other network connection types."},"defaultValue":"\\"OTHER\\""},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The connection type could not be determined."},"defaultValue":"\\"UNKNOWN\\""},{"name":"VPN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over VPN."},"defaultValue":"\\"VPN\\""},{"name":"WIFI","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over WiFi."},"defaultValue":"\\"WIFI\\""},{"name":"WIMAX","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over Wimax."},"defaultValue":"\\"WIMAX\\""}]},{"name":"NetworkState","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isConnected","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If there is an active network connection. Note that this does not mean that internet is reachable.\\nThis field is `false` if the type is either `Network.NetworkStateType.NONE` or `Network.NetworkStateType.UNKNOWN`,\\n`true` otherwise."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isInternetReachable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the internet is reachable with the currently active network connection. On Android, this\\ndepends on `NetInfo.isConnected()` (API level < 29) or `ConnectivityManager.getActiveNetwork()`\\n(API level >= 29). On iOS, this value will always be the same as `isConnected`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A [`NetworkStateType`](#networkstatetype) enum value that represents the current network\\nconnection type."},"type":{"type":"reference","name":"NetworkStateType"}}]}}},{"name":"getIpAddressAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIpAddressAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the device\'s current IPv4 address. Returns `0.0.0.0` if the IP address could not be retrieved.","text":"On web, this method uses the third-party [`ipify service`](https://www.ipify.org/) to get the\\npublic IP address of the current device.","returns":"A `Promise` that fulfils with a `string` of the current IP address of the device\'s main\\nnetwork interface. Can only be IPv4 address.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Network.getIpAddressAsync();\\n// \\"92.168.32.44\\"\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getMacAddressAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMacAddressAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the specified network interface\'s MAC address.","text":"> Beginning with iOS 7 and Android 11, non-system applications can no longer access the device\'s\\nMAC address. In SDK 41 and above, this method will always resolve to a predefined value that\\nisn\'t useful.\\n\\nIf you need to identify the device, use the `getIosIdForVendorAsync()` method / `androidId`\\nproperty of the `expo-application` unimodule instead.\\n","returns":"A `Promise` that fulfils with the value `\'02:00:00:00:00:00\'`.\\n","tags":[{"tag":"deprecated","text":"This method is deprecated and will be removed in a future SDK version.\\n"}]},"parameters":[{"name":"interfaceName","kind":32768,"kindString":"Parameter","comment":{"shortText":"A string representing interface name (`eth0`, `wlan0`) or `null` (default),\\nmeaning the method should fetch the MAC address of the first available interface.\\n"},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"null"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getNetworkStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getNetworkStateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the device\'s current network connection state.","text":"On web, `navigator.connection.type` is not available on browsers. So if there is an active\\nnetwork connection, the field `type` returns `NetworkStateType.UNKNOWN`. Otherwise, it returns\\n`NetworkStateType.NONE`.","returns":"A `Promise` that fulfils with a `NetworkState` object.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Network.getNetworkStateAsync();\\n// {\\n//   type: NetworkStateType.CELLULAR,\\n//   isConnected: true,\\n//   isInternetReachable: true,\\n// }\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"NetworkState"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isAirplaneModeEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAirplaneModeEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Tells if the device is in airplane mode.","returns":"Returns a `Promise` that fulfils with a `boolean` value for whether the device is in\\nairplane mode or not.","tags":[{"tag":"platform","text":"android\\n"},{"tag":"example","text":"\\n```ts\\nawait Network.isAirplaneModeEnabledAsync();\\n// false\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},KgOP:function(e){e.exports=JSON.parse('{"name":"expo-network","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"NetworkStateType","kind":4,"kindString":"Enumeration","flags":{},"comment":{"shortText":"An enum of the different types of devices supported by Expo."},"children":[{"name":"BLUETOOTH","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Active network connection over Bluetooth."},"defaultValue":"\\"BLUETOOTH\\""},{"name":"CELLULAR","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Active network connection over mobile data or [`DUN-specific`](https://developer.android.com/reference/android/net/ConnectivityManager#TYPE_MOBILE_DUN)\\nmobile connection when setting an upstream connection for tethering."},"defaultValue":"\\"CELLULAR\\""},{"name":"ETHERNET","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Active network connection over Ethernet."},"defaultValue":"\\"ETHERNET\\""},{"name":"NONE","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"No active network connection detected."},"defaultValue":"\\"NONE\\""},{"name":"OTHER","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Active network connection over other network connection types."},"defaultValue":"\\"OTHER\\""},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"The connection type could not be determined."},"defaultValue":"\\"UNKNOWN\\""},{"name":"VPN","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Active network connection over VPN."},"defaultValue":"\\"VPN\\""},{"name":"WIFI","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Active network connection over WiFi."},"defaultValue":"\\"WIFI\\""},{"name":"WIMAX","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Active network connection over Wimax."},"defaultValue":"\\"WIMAX\\""}]},{"name":"NetworkState","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"isConnected","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If there is an active network connection. Note that this does not mean that internet is reachable.\\nThis field is `false` if the type is either `Network.NetworkStateType.NONE` or `Network.NetworkStateType.UNKNOWN`,\\n`true` otherwise."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isInternetReachable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the internet is reachable with the currently active network connection. On Android, this\\ndepends on `NetInfo.isConnected()` (API level < 29) or `ConnectivityManager.getActiveNetwork()`\\n(API level >= 29). On iOS, this value will always be the same as `isConnected`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A [`NetworkStateType`](#networkstatetype) enum value that represents the current network\\nconnection type."},"type":{"type":"reference","name":"NetworkStateType"}}]}}},{"name":"getIpAddressAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getIpAddressAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the device\'s current IPv4 address. Returns `0.0.0.0`` if the IP address could not be retrieved.","text":"On web, this method uses the third-party [`ipify service`](https://www.ipify.org/) to get the\\npublic IP address of the current device.","returns":"A `Promise` that fulfils with a `string` of the current IP address of the device\'s main\\nnetwork interface. Can only be IPv4 address.\\n\\n# Example\\n```ts\\nawait Network.getIpAddressAsync();\\n// \\"92.168.32.44\\"\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getMacAddressAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getMacAddressAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the specified network interface\'s MAC address.","text":"> Beginning with iOS 7 and Android 11, non-system applications can no longer access the device\'s\\nMAC address. In SDK 41 and above, this method will always resolve to a predefined value that\\nisn\'t useful.\\n\\nIf you need to identify the device, use the `getIosIdForVendorAsync()` method / `androidId`\\nproperty of the `expo-application` unimodule instead.\\n","returns":"A `Promise` that fulfils with the value `\'02:00:00:00:00:00\'`.\\n","tags":[{"tag":"deprecated","text":"This method is deprecated and will be removed in a future SDK version.\\n"}]},"parameters":[{"name":"interfaceName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A string representing interface name (`eth0`, `wlan0`) or `null` (default),\\nmeaning the method should fetch the MAC address of the first available interface.\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"null"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getNetworkStateAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getNetworkStateAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the device\'s current network connection state.","text":"On web, `navigator.connection.type` is not available on browsers. So if there is an active\\nnetwork connection, the field `type` returns `NetworkStateType.UNKNOWN`. Otherwise, it returns\\n`NetworkStateType.NONE`.","returns":"A `Promise` that fulfils with a `NetworkState` object.\\n\\n# Example\\n```ts\\nawait Network.getNetworkStateAsync();\\n// {\\n//   type: NetworkStateType.CELLULAR,\\n//   isConnected: true,\\n//   isInternetReachable: true,\\n// }\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"NetworkState"}],"name":"Promise"}}]},{"name":"isAirplaneModeEnabledAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"isAirplaneModeEnabledAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"__Android only.__ Tells if the device is in airplane mode.","returns":"Returns a `Promise` that fulfils with a `boolean` value for whether the device is in\\nairplane mode or not.\\n\\n# Example\\n```ts\\nawait Network.isAirplaneModeEnabledAsync();\\n// false\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}')},KmcT:function(e){e.exports=JSON.parse('{"name":"expo-pedometer","kind":1,"kindString":"Project","originalName":"","children":[{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"PedometerResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"steps","kind":1024,"kindString":"Property","comment":{"shortText":"Number of steps taken between the given dates."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PedometerUpdateCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"result","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"PedometerResult"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getStepCountAsync","kind":64,"kindString":"Function","signatures":[{"name":"getStepCountAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the step count between two dates.","returns":"Returns a promise that fulfills with a [`PedometerResult`](#pedometerresult).\\n\\nAs [Apple documentation states](https://developer.apple.com/documentation/coremotion/cmpedometer/1613946-querypedometerdatafromdate?language=objc):\\n> Only the past seven days worth of data is stored and available for you to retrieve. Specifying\\n> a start date that is more than seven days in the past returns only the available data.\\n"},"parameters":[{"name":"start","kind":32768,"kindString":"Parameter","comment":{"shortText":"A date indicating the start of the range over which to measure steps."},"type":{"type":"reference","name":"Date"}},{"name":"end","kind":32768,"kindString":"Parameter","comment":{"shortText":"A date indicating the end of the range over which to measure steps."},"type":{"type":"reference","name":"Date"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PedometerResult"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the pedometer is enabled on the device.","returns":"Returns a promise that fulfills with a `boolean`, indicating whether the pedometer is\\navailable on this device.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"watchStepCount","kind":64,"kindString":"Function","signatures":[{"name":"watchStepCount","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to pedometer updates.","returns":"Returns a [`Subscription`](#subscription) that enables you to call\\n`remove()` when you would like to unsubscribe the listener.\\n"},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"shortText":"A callback that is invoked when new step count data is available. The callback is\\nprovided with a single argument that is [`PedometerResult`](#pedometerresult)."},"type":{"type":"reference","name":"PedometerUpdateCallback"}}],"type":{"type":"reference","name":"Subscription"}}]}]}')},KuEM:function(e){e.exports=JSON.parse('{"name":"expo-facebook","kind":1,"originalName":"","children":[{"name":"FacebookAuthenticationCredential","kind":16777216,"kindString":"Reference"},{"name":"FacebookAuthenticationCredential","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"appId","kind":1024,"kindString":"Property","comment":{"shortText":"Application ID used to initialize the Facebook SDK app."},"type":{"type":"intrinsic","name":"string"}},{"name":"dataAccessExpirationDate","kind":1024,"kindString":"Property","comment":{"shortText":"Time at which the current user data access expires."},"type":{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}},{"name":"declinedPermissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of requested permissions that the user has declined."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"expirationDate","kind":1024,"kindString":"Property","comment":{"shortText":"Time at which the `token` expires."},"type":{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}},{"name":"expiredPermissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of permissions that were expired with this access token."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"graphDomain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A website domain within the Graph API.","tags":[{"tag":"see","text":"https://developers.facebook.com/docs/graph-api/reference/v5.0/domain\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"permissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of granted permissions."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"refreshDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The last time the `token` was refreshed (or when it was first obtained)."},"type":{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}},{"name":"signedRequest","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A valid raw signed request as a string."},"type":{"type":"intrinsic","name":"string"}},{"name":"token","kind":1024,"kindString":"Property","comment":{"shortText":"Access token for the authenticated session. This token provides access to the Facebook Graph API."},"type":{"type":"intrinsic","name":"string"}},{"name":"tokenSource","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates how this `token` was obtained.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"userId","kind":1024,"kindString":"Property","comment":{"shortText":"App-scoped Facebook ID of the user."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"FacebookInitializationOptions","kind":16777216,"kindString":"Reference"},{"name":"FacebookInitializationOptions","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"FacebookSDKScriptURLOptions"},{"type":"reference","name":"FacebookSDKInitializationOptions"},{"type":"reference","name":"FacebookNativeInitializationOptions"}]}},{"name":"FacebookLoginResult","kind":16777216,"kindString":"Reference"},{"name":"FacebookLoginResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","type":{"type":"literal","value":"cancel"}}]}},{"type":"intersection","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","type":{"type":"literal","value":"success"}}]}},{"type":"reference","name":"FacebookAuthenticationCredential"}]}]}},{"name":"FacebookNativeInitializationOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"appName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An optional Facebook App Name argument for iOS and Android."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"FacebookOptions","kind":16777216,"kindString":"Reference"},{"name":"FacebookOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"permissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}}},{"name":"FacebookSDKInitializationOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"appId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Application ID used to initialize the FBSDK app.","text":"On Android and iOS if you don\'t provide this, Facebook SDK will try to use `appId` from Android and iOS.\\napp resources (which in standalone apps you would define in `app.json`, in the Expo client are unavailable,\\nand in bare you configure yourself according to Facebook setup documentation\\nfor [iOS](https://developers.facebook.com/docs/facebook-login/ios#4--configure-your-project)\\nand [Android](https://developers.facebook.com/docs/facebook-login/android#manifest)).\\nIf it fails to find one, the promise will be rejected.\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"autoLogAppEvents","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets whether Facebook SDK should log app events. App events involve app eg. installs,\\napp launches (more info [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#auto-events)\\nand [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#auto-events)).\\nIn some cases, you may want to disable or delay the collection of automatically logged events,\\nsuch as to obtain user consent or fulfill legal obligations.","text":"This method corresponds to:\\n- [iOS disable auto events](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#disable-auto-events)\\n- [Android disable auto events](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#disable-auto-events)\\n"},"type":{"type":"intrinsic","name":"boolean"}},{"name":"version","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Selects the version of FBSDK to use.","tags":[{"tag":"see","text":"[Graph API Initialization](https://developers.facebook.com/docs/javascript/reference/FB.init/v13.0)\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"FacebookSDKScriptURLOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"domain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets the base Facebook domain to use when making network requests.","tags":[{"tag":"default","text":"\'connect.facebook.net\'"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"flushAsync","kind":64,"kindString":"Function","signatures":[{"name":"flushAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Explicitly kicks off flushing of events to Facebook."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getAdvertiserIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAdvertiserIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the advertiser ID from Facebook.","returns":"A promise fulfilled with the advertiser id or null if not set.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getAnonymousIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAnonymousIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get an anonymous ID from Facebook.","returns":"A promise fulfilled with an anonymous id or null if not set.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getAttributionIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAttributionIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the attribution ID from Facebook.","returns":"A promise fulfilled with the attribution id or null if not set.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getAuthenticationCredentialAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAuthenticationCredentialAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns the `FacebookAuthenticationCredential` object if a user is authenticated, and `null` if no valid authentication exists.","text":"You can use this method to check if the user should sign in or not.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"FacebookAuthenticationCredential"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks application\'s permissions for using data for tracking the user or the device.","text":">iOS: it requires the NSUserTrackingUsageDescription message added to the info.plist.\\n","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getUserIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"getUserIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the user ID.","returns":"A promise fulfilled with the user id or null if not set.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"initializeAsync","kind":64,"kindString":"Function","signatures":[{"name":"initializeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Calling this method ensures that the SDK is initialized.\\nYou have to call this method before calling any method that uses\\nthe FBSDK (ex: `logInWithReadPermissionsAsync`, `logOutAsync`) to ensure that\\nFacebook support is initialized properly.","text":"- On Android and iOS you can optionally provide an `appId` argument.\\n  - If you don\'t provide `appId`, the Facebook SDK will try to use `appId` from native app resources (which in standalone apps you define in `app.json`, in app store development clients are unavailable, and in bare apps you configure yourself according to [Facebook\'s setup documentation for iOS](https://developers.facebook.com/docs/facebook-login/ios#4--configure-your-project) and [Android](https://developers.facebook.com/docs/facebook-login/android#manifest)). If the Facebook SDK fails to find an `appId` value, the returned promise will be rejected.\\n  - The same resolution mechanism works for `appName`.\\n- If you provide an explicit `appId`, it will override any other source.\\n"},"parameters":[{"name":"optionsOrAppId","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"FacebookInitializationOptions"}]}},{"name":"appName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"logEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"logEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs an event with eventName and optional parameters. Supports the optional parameter `valueToSum`,\\nwhich when reported, all of the valueToSum properties are summed together. For example, if 10 people purchased\\none item and each item cost $10 (and passed in valueToSum) then they would be added together to report $100.\\nParameters must be either strings or numbers, otherwise no event will be logged.","text":"To view and test app events, please visit Facebook\'s Event Manager- https://www.facebook.com/events_manager2/list/app/\\n"},"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"parameters","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Params"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"logInWithReadPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"logInWithReadPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prompts the user to log into Facebook and grants your app permission to access their Facebook data. On iOS and Android, if the Facebook app isn\'t installed then a web view will be used to authenticate.","returns":"If the user or Facebook cancelled the login, returns { type: \'cancel\' }. Otherwise, returns { type: \'success\' } & [FacebookAuthenticationCredential](#facebookauthenticationcredential).\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of options:\\n - **permissions (array)** -- An array specifying the permissions to ask for from Facebook for this login. The permissions are strings as specified in the [Facebook API documentation](https://developers.facebook.com/docs/permissions/reference). The default permissions are [\'public_profile\', \'email\']."},"type":{"type":"reference","name":"FacebookOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"FacebookLoginResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"logOutAsync","kind":64,"kindString":"Function","signatures":[{"name":"logOutAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs out of the currently authenticated session."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"logPurchaseAsync","kind":64,"kindString":"Function","signatures":[{"name":"logPurchaseAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs a purchase event with the amount, currency code, and optional parameters.\\nParameters must be either strings or numbers, otherwise no event will be logged.\\nSee http://en.wikipedia.org/wiki/ISO_4217 for currencyCodes."},"parameters":[{"name":"purchaseAmount","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}},{"name":"currencyCode","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"parameters","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Params"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"logPushNotificationOpenAsync","kind":64,"kindString":"Function","signatures":[{"name":"logPushNotificationOpenAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs an app event that tracks that the application was opened via Push Notification. Accepts\\na string describing the campaign of the Push Notification."},"parameters":[{"name":"campaign","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks for permissions to use data for tracking the user or the device.","text":"> iOS: it requires the NSUserTrackingUsageDescription message added to the info.plist.\\n","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setAdvertiserIDCollectionEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setAdvertiserIDCollectionEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Whether the Facebook SDK should collect advertiser ID properties, like the Apple IDFA\\nand Android Advertising ID, automatically. Advertiser IDs let you identify and target specific customers.\\nTo learn more visit [Facebook documentation](https://developers.facebook.com/docs/app-ads/targeting/mobile-advertiser-ids)\\ndescribing that topic.","text":"In some cases, you may want to disable or delay the collection of `advertiser-id`,\\nsuch as to obtain user consent or fulfill legal obligations.\\n\\nThis method corresponds to [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#disable-advertiser-id)\\nand [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#disable-advertiser-id) native SDK methods."},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","comment":{"shortText":"Whether `advertiser-id` should be collected\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setAdvertiserTrackingEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setAdvertiserTrackingEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets whether Facebook SDK should enable advertising tracking,\\n(more info [here](https://developers.facebook.com/docs/app-events/guides/advertising-tracking-enabled)).","text":"Limitations:\\n1. AdvertiserTrackingEnabled is only available for iOS 14+.\\n2. For iOS 13 or earlier, AdvertiserTrackingEnabled uses the Limit Ad Tracking setting as its value.\\n\\nThis method corresponds to [this](https://developers.facebook.com/docs/app-events/guides/advertising-tracking-enabled)\\n","returns":"Whether the value is set successfully. It will always return false in Android, iOS 13 and below.\\n"},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","comment":{"shortText":"Whether advertising tracking of the Facebook SDK should be enabled"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setAutoInitEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setAutoInitEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"Explicitly call `initializeAsync` instead.\\n"}]},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setAutoLogAppEventsEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setAutoLogAppEventsEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets whether Facebook SDK should log app events. App events involve eg. app installs,\\napp launches (more info [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#auto-events)\\nand [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#auto-events)).","text":"In some cases, you may want to disable or delay the collection of automatically logged events,\\nsuch as to obtain user consent or fulfill legal obligations.\\n\\nThis method corresponds to [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#disable-auto-events)\\nand [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#disable-auto-events) native SDK methods.\\n"},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","comment":{"shortText":"Whether automatic events logging of the Facebook SDK should be enabled\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setUserDataAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUserDataAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets additional data about the user to increase the chances of matching a Facebook user."},"parameters":[{"name":"userData","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"UserData"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setUserIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUserIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a custom user ID to associate with all app events.\\nThe userID is persisted until it is cleared by passing nil."},"parameters":[{"name":"userID","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"usePermissions","kind":64,"kindString":"Function","signatures":[{"name":"usePermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to use data tracking.\\nThis uses both `requestPermissionsAsync` and `getPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Facebook.usePermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"UserData","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Info about a user to increase chances of matching a Facebook user.\\nSee https://developers.facebook.com/docs/app-events/advanced-matching for\\nmore info about the expected format of each field."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"city","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"country","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"dateOfBirth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"email","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"firstName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"gender","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":"m"},{"type":"literal","value":"f"}]}},{"name":"lastName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"phone","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"zip","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}]}}}]}')},Kuxm:function(e){e.exports=JSON.parse('{"name":"expo-blur","kind":1,"kindString":"Project","originalName":"","children":[{"name":"BlurTint","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"},{"type":"literal","value":"default"}]}},{"name":"BlurViewProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"intensity","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A number from `1` to `100` to control the intensity of the blur effect.","text":"You can animate this property using `Animated API` from React Native or using `react-native-reanimated`.\\n> Animating this property using `Animated API` from React Native with `setNativeDriver: true` does not work.\\n","tags":[{"tag":"default","text":"50\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"tint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A tint mode which will be applied to the view.","tags":[{"tag":"default","text":"\'default\'\\n"}]},"type":{"type":"reference","name":"BlurTint"}}]}},{"type":"reference","name":"ViewProps"}]}},{"name":"BlurView","kind":32,"kindString":"Variable","type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"intensity","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A number from `1` to `100` to control the intensity of the blur effect.","text":"You can animate this property using `Animated API` from React Native or using `react-native-reanimated`.\\n> Animating this property using `Animated API` from React Native with `setNativeDriver: true` does not work.\\n","tags":[{"tag":"default","text":"50\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"tint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A tint mode which will be applied to the view.","tags":[{"tag":"default","text":"\'default\'\\n"}]},"type":{"type":"reference","name":"BlurTint"}}]}},{"type":"reference","name":"ViewProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"View"}],"name":"RefAttributes"}]}],"name":"ForwardRefExoticComponent"},"defaultValue":"..."}]}')},KynH:function(e,w,n){"use strict";var c=n("hq1P"),p=n("Ny5O"),d=n("E/Jm"),a=n("Q3zd"),m=n("2N74"),r=n("EIjK"),s=n("R5yl"),i=n("K1Ig"),o=n("VLot"),t={name:"htmlFlow",tokenize:g,resolveTo:k,concrete:!0},l={tokenize:h,partial:!0};function k(f){for(var S=f.length;S--&&!(f[S][0]==="enter"&&f[S][1].type==="htmlFlow"););return S>1&&f[S-2][1].type==="linePrefix"&&(f[S][1].start=f[S-2][1].start,f[S+1][1].start=f[S-2][1].start,f.splice(S-2,2)),f}function g(f,S,b){var P=this,y,v,u,C,R;return F;function F(O){return f.enter("htmlFlow"),f.enter("htmlFlowData"),f.consume(O),j}function j(O){return O===33?(f.consume(O),I):O===47?(f.consume(O),K):O===63?(f.consume(O),y=3,P.interrupt?S:Ae):c(O)?(f.consume(O),u=r(O),v=!0,D):b(O)}function I(O){return O===45?(f.consume(O),y=2,W):O===91?(f.consume(O),y=5,u="CDATA[",C=0,L):c(O)?(f.consume(O),y=4,P.interrupt?S:Ae):b(O)}function W(O){return O===45?(f.consume(O),P.interrupt?S:Ae):b(O)}function L(O){return O===u.charCodeAt(C++)?(f.consume(O),C===u.length?P.interrupt?S:oe:L):b(O)}function K(O){return c(O)?(f.consume(O),u=r(O),D):b(O)}function D(O){return O===null||O===47||O===62||a(O)?O!==47&&v&&i.indexOf(u.toLowerCase())>-1?(y=1,P.interrupt?S(O):oe(O)):s.indexOf(u.toLowerCase())>-1?(y=6,O===47?(f.consume(O),ee):P.interrupt?S(O):oe(O)):(y=7,P.interrupt?b(O):v?X(O):V(O)):O===45||p(O)?(f.consume(O),u+=r(O),D):b(O)}function ee(O){return O===62?(f.consume(O),P.interrupt?S:oe):b(O)}function V(O){return m(O)?(f.consume(O),V):H(O)}function X(O){return O===47?(f.consume(O),H):O===58||O===95||c(O)?(f.consume(O),$):m(O)?(f.consume(O),X):H(O)}function $(O){return O===45||O===46||O===58||O===95||p(O)?(f.consume(O),$):re(O)}function re(O){return O===61?(f.consume(O),ne):m(O)?(f.consume(O),re):X(O)}function ne(O){return O===null||O===60||O===61||O===62||O===96?b(O):O===34||O===39?(f.consume(O),R=O,B):m(O)?(f.consume(O),ne):(R=void 0,N(O))}function B(O){return O===R?(f.consume(O),z):O===null||d(O)?b(O):(f.consume(O),B)}function N(O){return O===null||O===34||O===39||O===60||O===61||O===62||O===96||a(O)?re(O):(f.consume(O),N)}function z(O){return O===47||O===62||m(O)?X(O):b(O)}function H(O){return O===62?(f.consume(O),E):b(O)}function E(O){return m(O)?(f.consume(O),E):O===null||d(O)?oe(O):b(O)}function oe(O){return O===45&&y===2?(f.consume(O),ae):O===60&&y===1?(f.consume(O),T):O===62&&y===4?(f.consume(O),we):O===63&&y===3?(f.consume(O),Ae):O===93&&y===5?(f.consume(O),je):d(O)&&(y===6||y===7)?f.check(l,we,J)(O):O===null||d(O)?J(O):(f.consume(O),oe)}function J(O){return f.exit("htmlFlowData"),Y(O)}function Y(O){return O===null?_e(O):d(O)?(f.enter("lineEnding"),f.consume(O),f.exit("lineEnding"),Y):(f.enter("htmlFlowData"),oe(O))}function ae(O){return O===45?(f.consume(O),Ae):oe(O)}function T(O){return O===47?(f.consume(O),u="",fe):oe(O)}function fe(O){return O===62&&i.indexOf(u.toLowerCase())>-1?(f.consume(O),we):c(O)&&u.length<8?(f.consume(O),u+=r(O),fe):oe(O)}function je(O){return O===93?(f.consume(O),Ae):oe(O)}function Ae(O){return O===62?(f.consume(O),we):oe(O)}function we(O){return O===null||d(O)?(f.exit("htmlFlowData"),_e(O)):(f.consume(O),we)}function _e(O){return f.exit("htmlFlow"),S(O)}}function h(f,S,b){return P;function P(y){return f.exit("htmlFlowData"),f.enter("lineEndingBlank"),f.consume(y),f.exit("lineEndingBlank"),f.attempt(o,S,b)}}e.exports=t},"L+rI":function(e){e.exports=JSON.parse('{"name":"expo-video","kind":1,"originalName":"","children":[{"name":"default","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new default","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"VideoProps"}}],"type":{"type":"reference","name":"Video"},"overwrites":{"type":"reference","name":"React.Component<VideoProps, VideoState>.constructor"}}],"overwrites":{"type":"reference","name":"React.Component<VideoProps, VideoState>.constructor"}},{"name":"_nativeRef","kind":1024,"kindString":"Property","type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"VideoNativeProps"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Component"},{"type":"reference","name":"NativeMethods"}]}],"name":"RefObject"},"defaultValue":"..."},{"name":"_onPlaybackStatusUpdate","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"status","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AVPlaybackStatus"}}],"type":{"type":"intrinsic","name":"void"}}]}}]},"defaultValue":"null"},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"pauseAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"name":"Promise"}}]}},"implementationOf":{"type":"reference","name":"Playback.pauseAsync"}},{"name":"playAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"name":"Promise"}}]}},"implementationOf":{"type":"reference","name":"Playback.playAsync"}},{"name":"playFromPositionAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"positionMillis","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}},{"name":"tolerances","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"AVPlaybackTolerance"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"name":"Promise"}}]}},"implementationOf":{"type":"reference","name":"Playback.playFromPositionAsync"}},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"VideoProps"}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"ReactNode"}}]}}],"name":"Readonly"}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"setIsLoopingAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"isLooping","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"name":"Promise"}}]}},"implementationOf":{"type":"reference","name":"Playback.setIsLoopingAsync"}},{"name":"setIsMutedAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"isMuted","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"name":"Promise"}}]}},"implementationOf":{"type":"reference","name":"Playback.setIsMutedAsync"}},{"name":"setPositionAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"positionMillis","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}},{"name":"tolerances","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"AVPlaybackTolerance"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"name":"Promise"}}]}},"implementationOf":{"type":"reference","name":"Playback.setPositionAsync"}},{"name":"setProgressUpdateIntervalAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"progressUpdateIntervalMillis","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"name":"Promise"}}]}},"implementationOf":{"type":"reference","name":"Playback.setProgressUpdateIntervalAsync"}},{"name":"setRateAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"rate","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}},{"name":"shouldCorrectPitch","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"name":"Promise"}}]}},"implementationOf":{"type":"reference","name":"Playback.setRateAsync"}},{"name":"setVolumeAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"volume","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"name":"Promise"}}]}},"implementationOf":{"type":"reference","name":"Playback.setVolumeAsync"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoState"}],"name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"stopAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"name":"Promise"}}]}},"implementationOf":{"type":"reference","name":"Playback.stopAsync"}},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoState"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"_handleNewStatus","kind":2048,"kindString":"Method","signatures":[{"name":"_handleNewStatus","kind":4096,"kindString":"Call signature","parameters":[{"name":"status","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AVPlaybackStatus"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"_nativeOnError","kind":2048,"kindString":"Method","signatures":[{"name":"_nativeOnError","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"error","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"_nativeOnFullscreenUpdate","kind":2048,"kindString":"Method","signatures":[{"name":"_nativeOnFullscreenUpdate","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"VideoFullscreenUpdateEvent"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"_nativeOnLoad","kind":2048,"kindString":"Method","signatures":[{"name":"_nativeOnLoad","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"AVPlaybackStatus"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"_nativeOnLoadStart","kind":2048,"kindString":"Method","signatures":[{"name":"_nativeOnLoadStart","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]},{"name":"_nativeOnPlaybackStatusUpdate","kind":2048,"kindString":"Method","signatures":[{"name":"_nativeOnPlaybackStatusUpdate","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"AVPlaybackStatus"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"_nativeOnReadyForDisplay","kind":2048,"kindString":"Method","signatures":[{"name":"_nativeOnReadyForDisplay","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"VideoReadyForDisplayEvent"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"_performOperationAndHandleStatusAsync","kind":2048,"kindString":"Method","signatures":[{"name":"_performOperationAndHandleStatusAsync","kind":4096,"kindString":"Call signature","parameters":[{"name":"operation","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"tag","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"name":"Promise"}}]}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"name":"Promise"}}]},{"name":"_renderPoster","kind":2048,"kindString":"Method","signatures":[{"name":"_renderPoster","kind":4096,"kindString":"Call signature","type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"Element"}]}}]},{"name":"_setFullscreen","kind":2048,"kindString":"Method","signatures":[{"name":"_setFullscreen","kind":4096,"kindString":"Call signature","parameters":[{"name":"value","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"name":"Promise"}}]},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoState"}],"name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoState"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"dismissFullscreenPlayer","kind":2048,"kindString":"Method","signatures":[{"name":"dismissFullscreenPlayer","kind":4096,"kindString":"Call signature","comment":{"shortText":"This dismisses the fullscreen video view.","returns":"A `Promise` that is fulfilled with the `AVPlaybackStatus` of the video once the fullscreen player has finished dismissing,\\nor rejects if there was an error, or if this was called on an Android device.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"name":"Promise"}}]},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoState"}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"presentFullscreenPlayer","kind":2048,"kindString":"Method","signatures":[{"name":"presentFullscreenPlayer","kind":4096,"kindString":"Call signature","comment":{"shortText":"This presents a fullscreen view of your video component on top of your app\'s UI. Note that even if `useNativeControls` is set to `false`,\\nnative controls will be visible in fullscreen mode.","returns":"A `Promise` that is fulfilled with the `AVPlaybackStatus` of the video once the fullscreen player has finished presenting,\\nor rejects if there was an error, or if this was called on an Android device.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus"}],"name":"Promise"}}]},{"name":"render","kind":2048,"kindString":"Method","signatures":[{"name":"render","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"literal","value":"showPoster"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"VideoState"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoState"}],"name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoProps"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"VideoState"},{"type":"reference","typeArguments":[{"type":"reference","name":"VideoState"},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"VideoState"},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoState"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"VideoProps"},{"type":"reference","name":"VideoState"}],"name":"Component"}],"implementedTypes":[{"type":"reference","name":"Playback"}]},{"name":"ResizeMode","kind":8,"kindString":"Enumeration","children":[{"name":"CONTAIN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Fit within component bounds while preserving aspect ratio."},"defaultValue":"\\"contain\\""},{"name":"COVER","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Fill component bounds while preserving aspect ratio."},"defaultValue":"\\"cover\\""},{"name":"STRETCH","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Stretch to fill component bounds."},"defaultValue":"\\"stretch\\""}]},{"name":"VideoFullscreenUpdate","kind":8,"kindString":"Enumeration","children":[{"name":"PLAYER_DID_DISMISS","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Describing that the fullscreen player just finished dismissing."},"defaultValue":"3"},{"name":"PLAYER_DID_PRESENT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Describing that the fullscreen player just finished presenting."},"defaultValue":"1"},{"name":"PLAYER_WILL_DISMISS","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Describing that the fullscreen player is about to dismiss."},"defaultValue":"2"},{"name":"PLAYER_WILL_PRESENT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Describing that the fullscreen player is about to present."},"defaultValue":"0"}]},{"name":"VideoFullscreenUpdateEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"fullscreenUpdate","kind":1024,"kindString":"Property","comment":{"shortText":"The kind of the fullscreen update."},"type":{"type":"reference","name":"VideoFullscreenUpdate"}},{"name":"status","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The `AVPlaybackStatus` of the video. See the [AV documentation](./av) for further information."},"type":{"type":"reference","name":"AVPlaybackStatus"}}]}}},{"name":"VideoNaturalSize","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"A number describing the height in pixels of the video data."},"type":{"type":"intrinsic","name":"number"}},{"name":"orientation","kind":1024,"kindString":"Property","comment":{"shortText":"A string describing the natural orientation of the video data."},"type":{"type":"union","types":[{"type":"literal","value":"portrait"},{"type":"literal","value":"landscape"}]}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"A number describing the width in pixels of the video data."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"VideoProps","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The Video component props can be divided into following groups:\\n- The `source` and `posterSource` props customize the source of the video content.\\n- The `useNativeControls`, `resizeMode`, and `usePoster` props customize the UI of the component.\\n- The `onPlaybackStatusUpdate`, `onReadyForDisplay`, and `onIOSFullscreenUpdate` props pass information of the state of the `Video` component.\\n- The `onLoadStart`, `onLoad`, and `onError` props are also provided for backwards compatibility with `Image`\\n  (but they are redundant with `onPlaybackStatusUpdate`).\\nFinally, the rest of props are available to control the playback of the video, but we recommend that, for finer control, you use the methods\\navailable on the `ref` described in the [AV documentation](./av)."},"type":{"type":"intersection","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isLooping","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean describing if the media should play once (`false`) or loop indefinitely (`true`).\\nSee the [AV documentation](./av) for more information."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isMuted","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean describing if the audio of this media should be muted.\\nSee the [AV documentation](./av) for more information."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"positionMillis","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The desired position of playback in milliseconds.\\nSee the [AV documentation](./av) for more information."},"type":{"type":"intrinsic","name":"number"}},{"name":"posterSource","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The source of an optional image to display over the video while it is loading. The following forms are supported:\\n- A dictionary of the form `{ uri: \'http://path/to/file\' }` with a network URL pointing to an image file on the web.\\n- `require(\'path/to/file\')` for an image file asset in the source code directory."},"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"source"},"objectType":{"type":"reference","name":"ImageProps"}}},{"name":"posterStyle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An optional property to pass custom styles to the poster image."},"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"style"},"objectType":{"type":"reference","name":"ImageProps"}}},{"name":"progressUpdateIntervalMillis","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A number describing the new minimum interval in milliseconds between calls of `onPlaybackStatusUpdate`.\\nSee the [AV documentation](./av) for more information."},"type":{"type":"intrinsic","name":"number"}},{"name":"rate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The desired playback rate of the media. This value must be between `0.0` and `32.0`. Only available on Android API version 23 and later and iOS.\\nSee the [AV documentation](./av) for more information."},"type":{"type":"intrinsic","name":"number"}},{"name":"resizeMode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A string describing how the video should be scaled for display in the component view bounds.\\nMust be one of the [`ResizeMode`](#resizemode) enum values."},"type":{"type":"reference","name":"ResizeMode"}},{"name":"shouldCorrectPitch","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean describing if we should correct the pitch for a changed rate. If set to `true`, the pitch of the audio will be corrected\\n(so a rate different than `1.0` will timestretch the audio).\\nSee the [AV documentation](./av) for more information."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"shouldPlay","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean describing if the media is supposed to play. Playback may not start immediately after setting this value for reasons such as buffering.\\nMake sure to update your UI based on the `isPlaying` and `isBuffering` properties of the `AVPlaybackStatus`.\\nSee the [AV documentation](./av) for more information."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"source","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The source of the video data to display. If this prop is `null`, or left blank, the video component will display nothing.\\nNote that this can also be set on the `ref` via `loadAsync()`. See below or the [AV documentation](./av) for further information.","text":"The following forms for the source are supported:\\n- A dictionary of the form `{ uri: string, headers?: { [string]: string }, overrideFileExtensionAndroid?: string }` with a network URL\\n  pointing to a video file on the web, an optional headers object passed in a network request to the `uri` and an optional\\n  Android-specific `overrideFileExtensionAndroid` string overriding extension inferred from the URL.\\n  The `overrideFileExtensionAndroid` property may come in handy if the player receives an URL like `example.com/play` which redirects\\n  to `example.com/player.m3u8`. Setting this property to `m3u8` would allow the Android player to properly infer the content type\\n  of the media and use proper media file reader.\\n- `require(\'path/to/file\')` for a video file asset in the source code directory.\\n- An [`Asset`](asset) object for a video file asset.\\n","tags":[{"tag":"see","text":"\\n- The [Android developer documentation](https://developer.android.com/guide/topics/media/media-formats#video-formats)\\nlists of the video formats supported on Android.\\n- The [iOS developer documentation](https://developer.apple.com/documentation/coremedia/1564239-video_codec_constants)\\nlists of the video formats supported on iOS.\\n"}]},"type":{"type":"reference","name":"AVPlaybackSource"}},{"name":"status","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A dictionary setting a new `AVPlaybackStatusToSet` on the video.\\nSee the [AV documentation](./av#default-initial--avplaybackstatustoset) for more information on `AVPlaybackStatusToSet`."},"type":{"type":"reference","name":"AVPlaybackStatusToSet"}},{"name":"useNativeControls","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean which, if set to `true`, will display native playback controls (such as play and pause) within the `Video` component.\\nIf you\'d prefer to use custom controls, you can write them yourself, and/or check out the [`VideoPlayer` component](https://github.com/ihmpavel/expo-video-player)."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"usePoster","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean which, if set to `true`, will display an image (whose source is set via the prop `posterSource`) while the video is loading."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"volume","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The desired volume of the audio for this media. This value must be between `0.0` (silence) and `1.0` (maximum volume).\\nSee the [AV documentation](./av) for more information."},"type":{"type":"intrinsic","name":"number"}},{"name":"onError","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onError","kind":4096,"kindString":"Call signature","comment":{"shortText":"A function to be called if load or playback have encountered a fatal error. The function is passed a single error message string as a parameter.\\nErrors sent here are also set on `playbackStatus.error` that are passed into the `onPlaybackStatusUpdate` callback."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onFullscreenUpdate","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onFullscreenUpdate","kind":4096,"kindString":"Call signature","comment":{"shortText":"A function to be called when the state of the native iOS fullscreen view changes (controlled via the `presentFullscreenPlayer()`\\nand `dismissFullscreenPlayer()` methods on the `Video`\'s `ref`)."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"VideoFullscreenUpdateEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onLoad","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onLoad","kind":4096,"kindString":"Call signature","comment":{"shortText":"A function to be called once the video has been loaded. The data is streamed so all of it may not have been fetched yet, just enough to render the first frame.\\nThe function is called with the `AVPlaybackStatus` of the video as its parameter. See the [AV documentation](./av) for further information."},"parameters":[{"name":"status","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"AVPlaybackStatus"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onLoadStart","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onLoadStart","kind":4096,"kindString":"Call signature","comment":{"shortText":"A function to be called when the video begins to be loaded into memory. Called without any arguments."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"onPlaybackStatusUpdate","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onPlaybackStatusUpdate","kind":4096,"kindString":"Call signature","comment":{"shortText":"A function to be called regularly with the `AVPlaybackStatus` of the video. You will likely be using this a lot.\\nSee the [AV documentation](av.md) for further information on `onPlaybackStatusUpdate`, and the interval at which it is called."},"parameters":[{"name":"status","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"AVPlaybackStatus"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onReadyForDisplay","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onReadyForDisplay","kind":4096,"kindString":"Call signature","comment":{"shortText":"A function to be called when the video is ready for display. Note that this function gets called whenever the video\'s natural size changes."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"VideoReadyForDisplayEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}]}},{"type":"reference","name":"ViewProps"}]}},{"name":"VideoReadyForDisplayEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"naturalSize","kind":1024,"kindString":"Property","comment":{"shortText":"An object containing the basic data about video size."},"type":{"type":"reference","name":"VideoNaturalSize"}},{"name":"status","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The `AVPlaybackStatus` of the video. See the [AV documentation](./av/#playback-status) for further information."},"type":{"type":"reference","name":"AVPlaybackStatus"}}]}}},{"name":"VideoState","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"showPoster","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}}]}}}]}')},L2QL:function(e,w,n){"use strict";e.exports=a;var c=n("BfbN"),p=n("UFN4"),d=n("2jS9");function a(m,r){for(var s=r.children,i=s.length,o=r.align||[],t=o.length,l=[],k,g,h,f,S;i--;){for(g=s[i].children,f=i===0?"th":"td",k=t||g.length,h=[];k--;)S=g[k],h[k]=m(S,f,{align:o[k]},S?d(m,S):[]);l[i]=m(s[i],"tr",p(h,!0))}return m(r,"table",p([m(l[0].position,"thead",p([l[0]],!0))].concat(l[1]?m({start:c.start(l[1]),end:c.end(l[l.length-1])},"tbody",p(l.slice(1),!0)):[]),!0))}},L6gl:function(e){e.exports=JSON.parse('{"name":"expo-blur","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"BlurView","kind":128,"kindString":"Class","flags":{},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"name":"new BlurView","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Readonly"}}],"type":{"type":"reference","name":"default"},"inheritedFrom":{"type":"reference","name":"React.Component<BlurProps>.constructor"}},{"name":"new BlurView","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"BlurProps"}},{"name":"context","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"default"},"inheritedFrom":{"type":"reference","name":"React.Component<BlurProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<BlurProps>.constructor"}},{"name":"_root","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","name":"ComponentOrHandle"},"defaultValue":"null"},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"ReactNode"}}]}}],"name":"Readonly"}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"name":"key","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}],"name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"defaultProps","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"intensity","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"},"defaultValue":"50"},{"name":"tint","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","name":"BlurTint"},"defaultValue":"..."}]}},"defaultValue":"..."},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"_setNativeRef","kind":2048,"kindString":"Method","flags":{},"signatures":[{"name":"_setNativeRef","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"name":"ref","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ComponentOrHandle"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"render","kind":2048,"kindString":"Method","flags":{},"signatures":[{"name":"render","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"setNativeProps","kind":2048,"kindString":"Method","flags":{},"signatures":[{"name":"setNativeProps","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"name":"nativeProps","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"BlurProps"}],"name":"Component"}]},{"name":"BlurProps","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"intersection","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"intensity","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A number from `1` to `100` to control the intensity of the blur effect."},"type":{"type":"intrinsic","name":"number"}},{"name":"tint","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A tint mode which will be applied to the view.","tags":[{"tag":"default","text":"\'default\'\\n"}]},"type":{"type":"reference","name":"BlurTint"}}]}},{"type":"reference","typeArguments":[{"type":"query","queryType":{"type":"reference","name":"View"}}],"name":"React.ComponentProps"}]}},{"name":"BlurTint","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"},{"type":"literal","value":"default"}]}}]}')},L8sx:function(e,w,n){"use strict";Object.defineProperty(w,"__esModule",{value:!0});var c=n("rCOv"),p=n("yRGd"),d=n("VLot"),a=m;function m(r){var s=this,i=r.attempt(d,o,r.attempt(this.parser.constructs.flowInitial,t,p(r,r.attempt(this.parser.constructs.flow,t,r.attempt(c,t)),"linePrefix")));return i;function o(l){if(l===null){r.consume(l);return}return r.enter("lineEndingBlank"),r.consume(l),r.exit("lineEndingBlank"),s.currentConstruct=void 0,i}function t(l){if(l===null){r.consume(l);return}return r.enter("lineEnding"),r.consume(l),r.exit("lineEnding"),s.currentConstruct=void 0,i}}w.tokenize=a},LLHA:function(e,w,n){"use strict";e.exports=n("wJMj")},LaSM:function(e){e.exports=JSON.parse('{"name":"expo-media-library","kind":1,"kindString":"Project","originalName":"","children":[{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"EXPermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"Album","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"approximateLocation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Apply only to albums whose type is `\'moment\'`. Approximated location of all\\nassets in the moment.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"Location"}},{"name":"assetCount","kind":1024,"kindString":"Property","comment":{"shortText":"Estimated number of assets in the album."},"type":{"type":"intrinsic","name":"number"}},{"name":"endTime","kind":1024,"kindString":"Property","comment":{"shortText":"Apply only to albums whose type is `\'moment\'`. Latest creation timestamp of all\\nassets in the moment.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Album ID."},"type":{"type":"intrinsic","name":"string"}},{"name":"locationNames","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Apply only to albums whose type is `\'moment\'`. Names of locations grouped\\nin the moment.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"startTime","kind":1024,"kindString":"Property","comment":{"shortText":"Apply only to albums whose type is `\'moment\'`. Earliest creation timestamp of all\\nassets in the moment.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"title","kind":1024,"kindString":"Property","comment":{"shortText":"Album title."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The type of the assets album.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"AlbumType"}}]}}},{"name":"AlbumRef","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"Album"},{"type":"intrinsic","name":"string"}]}},{"name":"AlbumType","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"album"},{"type":"literal","value":"moment"},{"type":"literal","value":"smartAlbum"}]}},{"name":"AlbumsOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"includeSmartAlbums","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"Asset","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"albumId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Album ID that the asset belongs to.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"creationTime","kind":1024,"kindString":"Property","comment":{"shortText":"File creation timestamp."},"type":{"type":"intrinsic","name":"number"}},{"name":"duration","kind":1024,"kindString":"Property","comment":{"shortText":"Duration of the video or audio asset in seconds."},"type":{"type":"intrinsic","name":"number"}},{"name":"filename","kind":1024,"kindString":"Property","comment":{"shortText":"Filename of the asset."},"type":{"type":"intrinsic","name":"string"}},{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"Height of the image or video."},"type":{"type":"intrinsic","name":"number"}},{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Internal ID that represents an asset."},"type":{"type":"intrinsic","name":"string"}},{"name":"mediaSubtypes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of media subtypes.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"reference","name":"MediaSubtype"}}},{"name":"mediaType","kind":1024,"kindString":"Property","comment":{"shortText":"Media type."},"type":{"type":"reference","name":"MediaTypeValue"}},{"name":"modificationTime","kind":1024,"kindString":"Property","comment":{"shortText":"Last modification timestamp."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"URI that points to the asset. `assets://*` (iOS), `file://*` (Android)"},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"Width of the image or video."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"AssetInfo","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"Asset"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"exif","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"EXIF metadata associated with the image."},"type":{"type":"intrinsic","name":"object"}},{"name":"isFavorite","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the asset is marked as favorite.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isNetworkAsset","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"This field is available only if flag `shouldDownloadFromNetwork` is set to `false`.\\nWhether the asset is stored on the network (iCloud on iOS).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"localUri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Local URI for the asset."},"type":{"type":"intrinsic","name":"string"}},{"name":"location","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"GPS location if available."},"type":{"type":"reference","name":"Location"}},{"name":"orientation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Display orientation of the image. Orientation is available only for assets whose\\n`mediaType` is `MediaType.photo`. Value will range from 1 to 8, see [EXIF orientation specification](http://sylvana.net/jpegcrop/exif_orientation.html)\\nfor more details.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"number"}}]}}]}},{"name":"AssetRef","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"Asset"},{"type":"intrinsic","name":"string"}]}},{"name":"AssetsOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"after","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Asset ID of the last item returned on the previous page."},"type":{"type":"reference","name":"AssetRef"}},{"name":"album","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"[Album](#album) or its ID to get assets from specific album."},"type":{"type":"reference","name":"AlbumRef"}},{"name":"createdAfter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"`Date` object or Unix timestamp in milliseconds limiting returned assets only to those that\\nwere created after this date."},"type":{"type":"union","types":[{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"},{"type":"intrinsic","name":"number"}]}},{"name":"createdBefore","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Similarly as `createdAfter`, but limits assets only to those that were created before specified\\ndate."},"type":{"type":"union","types":[{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"},{"type":"intrinsic","name":"number"}]}},{"name":"first","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The maximum number of items on a single page.","tags":[{"tag":"default","text":"20\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"mediaType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of [MediaTypeValue](#expomedialibrarymediatypevalue)s or a single `MediaTypeValue`.","tags":[{"tag":"default","text":"MediaType.photo\\n"}]},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"MediaTypeValue"}},{"type":"reference","name":"MediaTypeValue"}]}},{"name":"sortBy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of [`SortByValue`](#sortbyvalue)s or a single `SortByValue` value. By default, all\\nkeys are sorted in descending order, however you can also pass a pair `[key, ascending]` where\\nthe second item is a `boolean` value that means whether to use ascending order. Note that if\\nthe `SortBy.default` key is used, then `ascending` argument will not matter. Earlier items have\\nhigher priority when sorting out the results.\\nIf empty, this method will use the default sorting that is provided by the platform."},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"SortByValue"}},{"type":"reference","name":"SortByValue"}]}}]}}},{"name":"Location","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"latitude","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}},{"name":"MediaLibraryAssetInfoQueryOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"shouldDownloadFromNetwork","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether allow the asset to be downloaded from network. Only available in iOS with iCloud assets.","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"MediaLibraryAssetsChangeEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"deletedAssets","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Available only if `hasIncrementalChanges` is `true`.\\nArray of [`Asset`](#asset)s that have been deleted from the library."},"type":{"type":"array","elementType":{"type":"reference","name":"Asset"}}},{"name":"hasIncrementalChanges","kind":1024,"kindString":"Property","comment":{"shortText":"Whether the media library\'s changes could be described as \\"incremental changes\\".\\n`true` indicates the changes are described by the `insertedAssets`, `deletedAssets` and\\n`updatedAssets` values. `false` indicates that the scope of changes is too large and you\\nshould perform a full assets reload (eg. a user has changed access to individual assets in the\\nmedia library)."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"insertedAssets","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Available only if `hasIncrementalChanges` is `true`.\\nArray of [`Asset`](#asset)s that have been inserted to the library."},"type":{"type":"array","elementType":{"type":"reference","name":"Asset"}}},{"name":"updatedAssets","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Available only if `hasIncrementalChanges` is `true`.\\nArray of [`Asset`](#asset)s that have been updated or completed downloading from network\\nstorage (iCloud on iOS)."},"type":{"type":"array","elementType":{"type":"reference","name":"Asset"}}}]}}},{"name":"MediaSubtype","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"depthEffect"},{"type":"literal","value":"hdr"},{"type":"literal","value":"highFrameRate"},{"type":"literal","value":"livePhoto"},{"type":"literal","value":"panorama"},{"type":"literal","value":"screenshot"},{"type":"literal","value":"stream"},{"type":"literal","value":"timelapse"}]}},{"name":"MediaTypeObject","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"audio","kind":1024,"kindString":"Property","type":{"type":"literal","value":"audio"}},{"name":"photo","kind":1024,"kindString":"Property","type":{"type":"literal","value":"photo"}},{"name":"unknown","kind":1024,"kindString":"Property","type":{"type":"literal","value":"unknown"}},{"name":"video","kind":1024,"kindString":"Property","type":{"type":"literal","value":"video"}}]}}},{"name":"MediaTypeValue","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"audio"},{"type":"literal","value":"photo"},{"type":"literal","value":"video"},{"type":"literal","value":"unknown"}]}},{"name":"PagedInfo","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter"}],"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"assets","kind":1024,"kindString":"Property","comment":{"shortText":"A page of [`Asset`](#asset)s fetched by the query."},"type":{"type":"array","elementType":{"type":"reference","name":"T"}}},{"name":"endCursor","kind":1024,"kindString":"Property","comment":{"shortText":"ID of the last fetched asset. It should be passed as `after` option in order to get the\\nnext page."},"type":{"type":"intrinsic","name":"string"}},{"name":"hasNextPage","kind":1024,"kindString":"Property","comment":{"shortText":"Whether there are more assets to fetch."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"totalCount","kind":1024,"kindString":"Property","comment":{"shortText":"Estimated total number of assets that match the query."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"PermissionResponse","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"EXPermissionResponse"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accessPrivileges","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates if your app has access to the whole or only part of the photo library. Possible values are:\\n- `\'all\'` if the user granted your app access to the whole photo library\\n- `\'limited\'` if the user granted your app access only to selected photos (only available on iOS 14.0+)\\n- `\'none\'` if user denied or hasn\'t yet granted the permission"},"type":{"type":"union","types":[{"type":"literal","value":"all"},{"type":"literal","value":"limited"},{"type":"literal","value":"none"}]}}]}}]}},{"name":"SortByKey","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"mediaType"},{"type":"literal","value":"width"},{"type":"literal","value":"height"},{"type":"literal","value":"creationTime"},{"type":"literal","value":"modificationTime"},{"type":"literal","value":"duration"}]}},{"name":"SortByObject","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"creationTime","kind":1024,"kindString":"Property","type":{"type":"literal","value":"creationTime"}},{"name":"default","kind":1024,"kindString":"Property","type":{"type":"literal","value":"default"}},{"name":"duration","kind":1024,"kindString":"Property","type":{"type":"literal","value":"duration"}},{"name":"height","kind":1024,"kindString":"Property","type":{"type":"literal","value":"height"}},{"name":"mediaType","kind":1024,"kindString":"Property","type":{"type":"literal","value":"mediaType"}},{"name":"modificationTime","kind":1024,"kindString":"Property","type":{"type":"literal","value":"modificationTime"}},{"name":"width","kind":1024,"kindString":"Property","type":{"type":"literal","value":"width"}}]}}},{"name":"SortByValue","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"tuple","elements":[{"type":"reference","name":"SortByKey"},{"type":"intrinsic","name":"boolean"}]},{"type":"reference","name":"SortByKey"}]}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"MediaType","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Possible media types."},"type":{"type":"reference","name":"MediaTypeObject"},"defaultValue":"MediaLibrary.MediaType"},{"name":"SortBy","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Supported keys that can be used to sort `getAssetsAsync` results."},"type":{"type":"reference","name":"SortByObject"},"defaultValue":"MediaLibrary.SortBy"},{"name":"addAssetsToAlbumAsync","kind":64,"kindString":"Function","signatures":[{"name":"addAssetsToAlbumAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Adds array of assets to the album.","text":"On Android, by default it copies assets from the current album to provided one, however it\'s also\\npossible to move them by passing `false` as `copyAssets` argument.In case they\'re copied you\\nshould keep in mind that `getAssetsAsync` will return duplicated assets.","returns":"Returns promise which fulfils with `true` if the assets were successfully added to\\nthe album.\\n"},"parameters":[{"name":"assets","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of [Asset](#asset) or their IDs."},"type":{"type":"union","types":[{"type":"reference","name":"AssetRef"},{"type":"array","elementType":{"type":"reference","name":"AssetRef"}}]}},{"name":"album","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [Album](#album) or its ID."},"type":{"type":"reference","name":"AlbumRef"}},{"name":"copy","kind":32768,"kindString":"Parameter","comment":{"shortText":"__Android only.__ Whether to copy assets to the new album instead of move them.\\nDefaults to `true`."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"true"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"addListener","kind":64,"kindString":"Function","signatures":[{"name":"addListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribes for updates in user\'s media library.","returns":"An [`Subscription`](#subscription) object that you can call `remove()` on when you would\\nlike to unsubscribe the listener.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"A callback that is fired when any assets have been inserted or deleted from the\\nlibrary, or when the user changes which assets they\'re allowing access to. On Android it\'s\\ninvoked with an empty object. On iOS it\'s invoked with [`MediaLibraryAssetsChangeEvent`](#medialibraryassetschangeevent)\\nobject."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"MediaLibraryAssetsChangeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"albumNeedsMigrationAsync","kind":64,"kindString":"Function","signatures":[{"name":"albumNeedsMigrationAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks if the album should be migrated to a different location. In other words, it checks if the\\napplication has the write permission to the album folder. If not, it returns `true`, otherwise `false`.\\n> Note: For **Android below R**, **web** or **iOS**, this function always returns `false`.","returns":"Returns a promise which fulfils with `true` if the album should be migrated.\\n"},"parameters":[{"name":"album","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [Album](#album) or its ID."},"type":{"type":"reference","name":"AlbumRef"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"createAlbumAsync","kind":64,"kindString":"Function","signatures":[{"name":"createAlbumAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates an album with given name and initial asset. The asset parameter is required on Android,\\nsince it\'s not possible to create empty album on this platform. On Android, by default it copies\\ngiven asset from the current album to the new one, however it\'s also possible to move it by\\npassing `false` as `copyAsset` argument.\\nIn case it\'s copied you should keep in mind that `getAssetsAsync` will return duplicated asset.","returns":"Newly created [`Album`](#album).\\n"},"parameters":[{"name":"albumName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the album to create."},"type":{"type":"intrinsic","name":"string"}},{"name":"asset","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"An [Asset](#asset) or its ID (required on Android)."},"type":{"type":"reference","name":"AssetRef"}},{"name":"copyAsset","kind":32768,"kindString":"Parameter","comment":{"shortText":"__Android Only.__ Whether to copy asset to the new album instead of move it.\\nDefaults to `true`."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"true"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Album"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"createAssetAsync","kind":64,"kindString":"Function","signatures":[{"name":"createAssetAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates an asset from existing file. The most common use case is to save a picture taken by [Camera](./camera).\\nThis method requires `CAMERA_ROLL` permission.","returns":"A promise which fulfils with an object representing an [`Asset`](#asset).\\n","tags":[{"tag":"example","text":"\\n```js\\nconst { uri } = await Camera.takePictureAsync();\\nconst asset = await MediaLibrary.createAssetAsync(uri);\\n```"}]},"parameters":[{"name":"localUri","kind":32768,"kindString":"Parameter","comment":{"shortText":"A URI to the image or video file. It must contain an extension. On Android it\\nmust be a local path, so it must start with `file:///`"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Asset"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"deleteAlbumsAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteAlbumsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Deletes given albums from the library. On Android by default it deletes assets belonging to given\\nalbums from the library. On iOS it doesn\'t delete these assets, however it\'s possible to do by\\npassing `true` as `deleteAssets`.","returns":"Returns a promise which fulfils with `true` if the albums were successfully deleted from\\nthe library.\\n"},"parameters":[{"name":"albums","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of [`Album`](#asset)s or their IDs."},"type":{"type":"union","types":[{"type":"reference","name":"AlbumRef"},{"type":"array","elementType":{"type":"reference","name":"AlbumRef"}}]}},{"name":"assetRemove","kind":32768,"kindString":"Parameter","comment":{"shortText":"__iOS Only.__ Whether to also delete assets belonging to given albums.\\nDefaults to `false`."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"deleteAssetsAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteAssetsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Deletes assets from the library. On iOS it deletes assets from all albums they belong to, while\\non Android it keeps all copies of them (album is strictly connected to the asset). Also, there is\\nadditional dialog on iOS that requires user to confirm this action.","returns":"Returns promise which fulfils with `true` if the assets were successfully deleted.\\n"},"parameters":[{"name":"assets","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of [Asset](#asset) or their IDs."},"type":{"type":"union","types":[{"type":"reference","name":"AssetRef"},{"type":"array","elementType":{"type":"reference","name":"AssetRef"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getAlbumAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAlbumAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Queries for an album with a specific name.","returns":"An object representing an [`Album`](#album), if album with given name exists, otherwise\\nreturns `null`.\\n"},"parameters":[{"name":"title","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the album to look for."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Album"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getAlbumsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAlbumsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Queries for user-created albums in media gallery.","returns":"A promise which fulfils with an array of [`Album`](#asset)s. Depending on Android version,\\nroot directory of your storage may be listed as album titled `\\"0\\"` or unlisted at all.\\n"},"parameters":[{"name":"__namedParameters","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AlbumsOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Album"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getAssetInfoAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAssetInfoAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Provides more information about an asset, including GPS location, local URI and EXIF metadata.","returns":"(#assetinfo) object, which is an `Asset` extended by an additional fields.\\n"},"parameters":[{"name":"asset","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [Asset](#asset) or its ID."},"type":{"type":"reference","name":"AssetRef"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"MediaLibraryAssetInfoQueryOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AssetInfo"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getAssetsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAssetsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Fetches a page of assets matching the provided criteria.","returns":"A promise that fulfils with to [`PagedInfo`](#pagedinfo) object with array of [`Asset`](#asset)s.\\n"},"parameters":[{"name":"assetsOptions","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"AssetsOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"Asset"}],"name":"PagedInfo"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getMomentsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMomentsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Fetches a list of moments, which is a group of assets taken around the same place\\nand time.","returns":"An array of [albums](#album) whose type is `moment`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing media library.","returns":"A promise that fulfils with [`PermissionResponse`](#permissionresponse) object.\\n"},"parameters":[{"name":"writeOnly","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the Media Library API is enabled on the current device.","returns":"A promise which fulfils with a `boolean`, indicating whether the Media Library API is\\navailable on the current device.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"migrateAlbumIfNeededAsync","kind":64,"kindString":"Function","signatures":[{"name":"migrateAlbumIfNeededAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Moves album content to the special media directories on **Android R** or **above** if needed.\\nThose new locations are in line with the Android `scoped storage` - so your application won\'t\\nlose write permission to those directories in the future.","text":"This method does nothing if:\\n- app is running on **iOS**, **web** or **Android below R**\\n- app has **write permission** to the album folder\\n\\nThe migration is possible when the album contains only compatible files types.\\nFor instance, movies and pictures are compatible with each other, but music and pictures are not.\\nIf automatic migration isn\'t possible, the function will be rejected.\\nIn that case, you can use methods from the `expo-file-system` to migrate all your files manually.\\n\\n# Why do you need to migrate files?\\n__Android R__ introduced a lot of changes in the storage system. Now applications can\'t save\\nanything to the root directory. The only available locations are from the `MediaStore` API.\\nUnfortunately, the media library stored albums in folders for which, because of those changes,\\nthe application doesn\'t have permissions anymore. However, it doesn\'t mean you need to migrate\\nall your albums. If your application doesn\'t add assets to albums, you don\'t have to migrate.\\nEverything will work as it used to. You can read more about scoped storage in [the Android documentation](https://developer.android.com/about/versions/11/privacy/storage).\\n","returns":"A promise which fulfils to `void`.\\n"},"parameters":[{"name":"album","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [Album](#album) or its ID."},"type":{"type":"reference","name":"AlbumRef"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"presentPermissionsPickerAsync","kind":64,"kindString":"Function","signatures":[{"name":"presentPermissionsPickerAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"__Available only on iOS >= 14.__ Allows the user to update the assets that your app has access to.\\nThe system modal is only displayed if the user originally allowed only `limited` access to their\\nmedia library, otherwise this method is a no-op.","returns":"A promise that either rejects if the method is unavailable (meaning the device is not\\nrunning iOS >= 14), or resolves to `void`.\\n> __Note:__ This method doesn\'t inform you if the user changes which assets your app has access to.\\nFor that information, you need to subscribe for updates to the user\'s media library using [addListener(listener)](#medialibraryaddlistenerlistener).\\nIf `hasIncrementalChanges` is `false`, the user changed their permissions.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"removeAllListeners","kind":64,"kindString":"Function","signatures":[{"name":"removeAllListeners","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes all listeners."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeAssetsFromAlbumAsync","kind":64,"kindString":"Function","signatures":[{"name":"removeAssetsFromAlbumAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes given assets from album.","text":"On Android, album will be automatically deleted if there are no more assets inside.","returns":"Returns promise which fulfils with `true` if the assets were successfully removed from\\nthe album.\\n"},"parameters":[{"name":"assets","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of [Asset](#asset) or their IDs."},"type":{"type":"union","types":[{"type":"reference","name":"AssetRef"},{"type":"array","elementType":{"type":"reference","name":"AssetRef"}}]}},{"name":"album","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [Album](#album) or its ID."},"type":{"type":"reference","name":"AlbumRef"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"removeSubscription","kind":64,"kindString":"Function","signatures":[{"name":"removeSubscription","kind":4096,"kindString":"Call signature","parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing media in user\'s media library.","returns":"A promise that fulfils with [`PermissionResponse`](#permissionresponse) object.\\n"},"parameters":[{"name":"writeOnly","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"saveToLibraryAsync","kind":64,"kindString":"Function","signatures":[{"name":"saveToLibraryAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Saves the file at given `localUri` to the user\'s media library. Unlike [`createAssetAsync()`](#medialibrarycreateassetasynclocaluri),\\nThis method doesn\'t return created asset.\\nOn __iOS 11+__, it\'s possible to use this method without asking for `CAMERA_ROLL` permission,\\nhowever then yours `Info.plist` should have `NSPhotoLibraryAddUsageDescription` key."},"parameters":[{"name":"localUri","kind":32768,"kindString":"Parameter","comment":{"shortText":"A URI to the image or video file. It must contain an extension. On Android it\\nmust be a local path, so it must start with `file:///`.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"usePermissions","kind":64,"kindString":"Function","signatures":[{"name":"usePermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to access the media library.\\nThis uses both `requestPermissionsAsync` and `getPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = MediaLibrary.usePermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"writeOnly","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}]}}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}]}')},"Lo+j":function(e){e.exports=JSON.parse('{"name":"expo-apple-authentication","kind":1,"kindString":"Project","originalName":"","children":[{"name":"AppleAuthenticationButtonStyle","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values control which pre-defined color scheme to use when rendering an [`AppleAuthenticationButton`](#appleauthenticationappleauthenticationbutton)."},"children":[{"name":"BLACK","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Black button with white text."},"defaultValue":"2"},{"name":"WHITE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"White button with black text."},"defaultValue":"0"},{"name":"WHITE_OUTLINE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"White button with a black outline and black text."},"defaultValue":"1"}]},{"name":"AppleAuthenticationButtonType","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values control which pre-defined text to use when rendering an [`AppleAuthenticationButton`](#appleauthenticationappleauthenticationbutton)."},"children":[{"name":"CONTINUE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"\\"Continue with Apple\\""},"defaultValue":"1"},{"name":"SIGN_IN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"\\"Sign in with Apple\\""},"defaultValue":"0"},{"name":"SIGN_UP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"\\"Sign up with Apple\\" *(requires iOS 13.2 or higher)*"},"defaultValue":"2"}]},{"name":"AppleAuthenticationCredentialState","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values specify state of the credential when checked with [`AppleAuthentication.getCredentialStateAsync()`](#appleauthenticationgetcredentialstateasyncuser).","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidprovidercredentialstate)\\nfor more details.\\n"}]},"children":[{"name":"AUTHORIZED","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"NOT_FOUND","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"REVOKED","kind":16,"kindString":"Enumeration member","defaultValue":"0"},{"name":"TRANSFERRED","kind":16,"kindString":"Enumeration member","defaultValue":"3"}]},{"name":"AppleAuthenticationOperation","kind":8,"kindString":"Enumeration","children":[{"name":"IMPLICIT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An operation that depends on the particular kind of credential provider."},"defaultValue":"0"},{"name":"LOGIN","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"LOGOUT","kind":16,"kindString":"Enumeration member","defaultValue":"3"},{"name":"REFRESH","kind":16,"kindString":"Enumeration member","defaultValue":"2"}]},{"name":"AppleAuthenticationScope","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values specify scopes you can request when calling [`AppleAuthentication.signInAsync()`](#appleauthenticationsigninasyncoptions).","text":"> Note that it is possible that you will not be granted all of the scopes which you request.\\n> You will still need to handle null values for any fields you request.\\n","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationscope)\\nfor more details.\\n"}]},"children":[{"name":"EMAIL","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"FULL_NAME","kind":16,"kindString":"Enumeration member","defaultValue":"0"}]},{"name":"AppleAuthenticationUserDetectionStatus","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values specify the system\'s best guess for how likely the current user is a real person.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asuserdetectionstatus)\\nfor more details.\\n"}]},"children":[{"name":"LIKELY_REAL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The user appears to be a real person."},"defaultValue":"2"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The system has not determined whether the user might be a real person."},"defaultValue":"1"},{"name":"UNSUPPORTED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The system does not support this determination and there is no data."},"defaultValue":"0"}]},{"name":"AppleAuthenticationButtonProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"buttonStyle","kind":1024,"kindString":"Property","comment":{"shortText":"The Apple-defined color scheme to use to display the button."},"type":{"type":"reference","name":"AppleAuthenticationButtonStyle"}},{"name":"buttonType","kind":1024,"kindString":"Property","comment":{"shortText":"The type of button text to display (\\"Sign In with Apple\\" vs. \\"Continue with Apple\\")."},"type":{"type":"reference","name":"AppleAuthenticationButtonType"}},{"name":"cornerRadius","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The border radius to use when rendering the button. This works similarly to\\n`style.borderRadius` in other Views."},"type":{"type":"intrinsic","name":"number"}},{"name":"style","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The custom style to apply to the button. Should not include `backgroundColor` or `borderRadius`\\nproperties."},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"ViewStyle"},{"type":"union","types":[{"type":"literal","value":"backgroundColor"},{"type":"literal","value":"borderRadius"}]}],"name":"Omit"}],"name":"StyleProp"}},{"name":"onPress","kind":2048,"kindString":"Method","signatures":[{"name":"onPress","kind":4096,"kindString":"Call signature","comment":{"shortText":"The method to call when the user presses the button. You should call [`AppleAuthentication.signInAsync`](#isavailableasync)\\nin here."},"type":{"type":"intrinsic","name":"void"}}]}]}}]}},{"name":"AppleAuthenticationCredential","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The object type returned from a successful call to [`AppleAuthentication.signInAsync()`](#appleauthenticationsigninasyncoptions),\\n[`AppleAuthentication.refreshAsync()`](#appleauthenticationrefreshasyncoptions), or [`AppleAuthentication.signOutAsync()`](#appleauthenticationsignoutasyncoptions)\\nwhich contains all of the pertinent user and credential information.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidcredential)\\nfor more details.\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"authorizationCode","kind":1024,"kindString":"Property","comment":{"shortText":"A short-lived session token used by your app for proof of authorization when interacting with\\nthe app\'s server counterpart. Unlike `user`, this is ephemeral and will change each session."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"email","kind":1024,"kindString":"Property","comment":{"shortText":"The user\'s email address. Might not be present if you didn\'t request the `EMAIL` scope. May\\nalso be null if this is not the first time the user has signed into your app. If the user chose\\nto withhold their email address, this field will instead contain an obscured email address with\\nan Apple domain."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"fullName","kind":1024,"kindString":"Property","comment":{"shortText":"The user\'s name. May be `null` or contain `null` values if you didn\'t request the `FULL_NAME`\\nscope, if the user denied access, or if this is not the first time the user has signed into\\nyour app."},"type":{"type":"union","types":[{"type":"reference","name":"AppleAuthenticationFullName"},{"type":"literal","value":null}]}},{"name":"identityToken","kind":1024,"kindString":"Property","comment":{"shortText":"A JSON Web Token (JWT) that securely communicates information about the user to your app."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"realUserStatus","kind":1024,"kindString":"Property","comment":{"shortText":"A value that indicates whether the user appears to the system to be a real person."},"type":{"type":"reference","name":"AppleAuthenticationUserDetectionStatus"}},{"name":"state","kind":1024,"kindString":"Property","comment":{"shortText":"An arbitrary string that your app provided as `state` in the request that generated the\\ncredential. Used to verify that the response was from the request you made. Can be used to\\navoid replay attacks. If you did not provide `state` when making the sign-in request, this field\\nwill be `null`."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"user","kind":1024,"kindString":"Property","comment":{"shortText":"An identifier associated with the authenticated user. You can use this to check if the user is\\nstill authenticated later. This is stable and can be shared across apps released under the same\\ndevelopment team. The same user will have a different identifier for apps released by other\\ndevelopers."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AppleAuthenticationFullName","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object representing the tokenized portions of the user\'s full name. Any of all of the fields\\nmay be `null`. Only applicable fields that the user has allowed your app to access will be nonnull."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"familyName","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"givenName","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"middleName","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"namePrefix","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"nameSuffix","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"nickname","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}}},{"name":"AppleAuthenticationRefreshOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The options you can supply when making a call to [`AppleAuthentication.refreshAsync()`](#appleauthenticationrefreshasyncoptions).\\nYou must include the ID string of the user whose credentials you\'d like to refresh.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationopenidrequest)\\nfor more details.\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"requestedScopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Array of user information scopes to which your app is requesting access. Note that the user can\\nchoose to deny your app access to any scope at the time of logging in. You will still need to\\nhandle `null` values for any scopes you request. Additionally, note that the requested scopes\\nwill only be provided to you the first time each user signs into your app; in subsequent\\nrequests they will be `null`. Defaults to `[]` (no scopes)."},"type":{"type":"array","elementType":{"type":"reference","name":"AppleAuthenticationScope"}}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An arbitrary string that is returned unmodified in the corresponding credential after a\\nsuccessful authentication. This can be used to verify that the response was from the request\\nyou made and avoid replay attacks. More information on this property is available in the\\nOAuth 2.0 protocol [RFC6749](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"}},{"name":"user","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AppleAuthenticationSignInOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The options you can supply when making a call to [`AppleAuthentication.signInAsync()`](#appleauthenticationsigninasyncoptions).\\nNone of these options are required.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationopenidrequest)\\nfor more details.\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nonce","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An arbitrary string that is used to prevent replay attacks. See more information on this in the\\n[OpenID Connect specification](https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowSteps)."},"type":{"type":"intrinsic","name":"string"}},{"name":"requestedScopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Array of user information scopes to which your app is requesting access. Note that the user can\\nchoose to deny your app access to any scope at the time of logging in. You will still need to\\nhandle `null` values for any scopes you request. Additionally, note that the requested scopes\\nwill only be provided to you the first time each user signs into your app; in subsequent\\nrequests they will be `null`. Defaults to `[]` (no scopes)."},"type":{"type":"array","elementType":{"type":"reference","name":"AppleAuthenticationScope"}}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An arbitrary string that is returned unmodified in the corresponding credential after a\\nsuccessful authentication. This can be used to verify that the response was from the request\\nyou made and avoid replay attacks. More information on this property is available in the\\nOAuth 2.0 protocol [RFC6749](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AppleAuthenticationSignOutOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The options you can supply when making a call to [`AppleAuthentication.signOutAsync()`](#appleauthenticationsignoutasyncoptions).\\nYou must include the ID string of the user to sign out.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationopenidrequest)\\nfor more details.\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An arbitrary string that is returned unmodified in the corresponding credential after a\\nsuccessful authentication. This can be used to verify that the response was from the request\\nyou made and avoid replay attacks. More information on this property is available in the\\nOAuth 2.0 protocol [RFC6749](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"}},{"name":"user","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"AppleAuthenticationButton","kind":32,"kindString":"Variable","comment":{"shortText":"This component displays the proprietary \\"Sign In with Apple\\" / \\"Continue with Apple\\" button on\\nyour screen. The App Store Guidelines require you to use this component to start the\\nauthentication process instead of a custom button. Limited customization of the button is\\navailable via the provided properties.","text":"You should only attempt to render this if [`AppleAuthentication.isAvailableAsync()`](#isavailableasync)\\nresolves to `true`. This component will render nothing if it is not available, and you will get\\na warning in development mode (`__DEV__ === true`).\\n\\nThe properties of this component extend from `View`; however, you should not attempt to set\\n`backgroundColor` or `borderRadius` with the `style` property. This will not work and is against\\nthe App Store Guidelines. Instead, you should use the `buttonStyle` property to choose one of the\\npredefined color styles and the `cornerRadius` property to change the border radius of the\\nbutton.\\n\\nMake sure to attach height and width via the style props as without these styles, the button will\\nnot appear on the screen.\\n","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidbutton)\\nfor more details.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationButtonProps"}],"name":"React.FC"},"defaultValue":"..."},{"name":"addRevokeListener","kind":64,"kindString":"Function","signatures":[{"name":"addRevokeListener","kind":4096,"kindString":"Call signature","parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getCredentialStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCredentialStateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Queries the current state of a user credential, to determine if it is still valid or if it has been revoked.\\n> **Note:** This method must be tested on a real device. On the iOS simulator it always throws an error.","returns":"A promise that fulfills with an [`AppleAuthenticationCredentialState`](#appleauthenticationcredentialstate)\\nvalue depending on the state of the credential.\\n"},"parameters":[{"name":"user","kind":32768,"kindString":"Parameter","comment":{"shortText":"The unique identifier for the user whose credential state you\'d like to check.\\nThis should come from the user field of an [`AppleAuthenticationCredential`](#appleauthenticationcredentialstate) object."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredentialState"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine if the current device\'s operating system supports Apple authentication.","returns":"A promise that fulfills with `true` if the system supports Apple authentication, and `false` otherwise.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"refreshAsync","kind":64,"kindString":"Function","signatures":[{"name":"refreshAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"An operation that refreshes the logged-in user\u2019s credentials.\\nCalling this method will show the sign in modal before actually refreshing the user credentials.","returns":"A promise that fulfills with an [`AppleAuthenticationCredential`](#appleauthenticationcredential)\\nobject after a successful authentication, and rejects with `ERR_CANCELED` if the user cancels the\\nrefresh operation.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`AppleAuthenticationRefreshOptions`](#appleauthenticationrefreshoptions) object"},"type":{"type":"reference","name":"AppleAuthenticationRefreshOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredential"}],"name":"Promise"}}]},{"name":"signInAsync","kind":64,"kindString":"Function","signatures":[{"name":"signInAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sends a request to the operating system to initiate the Apple authentication flow, which will\\npresent a modal to the user over your app and allow them to sign in.","text":"You can request access to the user\'s full name and email address in this method, which allows you\\nto personalize your UI for signed in users. However, users can deny access to either or both\\nof these options at runtime.\\n\\nAdditionally, you will only receive Apple Authentication Credentials the first time users sign\\ninto your app, so you must store it for later use. It\'s best to store this information either\\nserver-side, or using [SecureStore](./securestore), so that the data persists across app installs.\\nYou can use [`AppleAuthenticationCredential.user`](#appleauthenticationcredential) to identify\\nthe user, since this remains the same for apps released by the same developer.\\n","returns":"A promise that fulfills with an [`AppleAuthenticationCredential`](#appleauthenticationcredential)\\nobject after a successful authentication, and rejects with `ERR_CANCELED` if the user cancels the\\nsign-in operation.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"An optional [`AppleAuthenticationSignInOptions`](#appleauthenticationsigninoptions) object"},"type":{"type":"reference","name":"AppleAuthenticationSignInOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredential"}],"name":"Promise"}}]},{"name":"signOutAsync","kind":64,"kindString":"Function","signatures":[{"name":"signOutAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"An operation that ends the authenticated session.\\nCalling this method will show the sign in modal before actually signing the user out.","text":"It is not recommended to use this method to sign out the user as it works counterintuitively.\\nInstead of using this method it is recommended to simply clear all the user\'s data collected\\nfrom using [`signInAsync`](./#signinasync) or [`refreshAsync`](./#refreshasync) methods.\\n","returns":"A promise that fulfills with an [`AppleAuthenticationCredential`](#appleauthenticationcredential)\\nobject after a successful authentication, and rejects with `ERR_CANCELED` if the user cancels the\\nsign-out operation.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`AppleAuthenticationSignOutOptions`](#appleauthenticationsignoutoptions) object"},"type":{"type":"reference","name":"AppleAuthenticationSignOutOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredential"}],"name":"Promise"}}]}]}')},Lpsv:function(e){e.exports=JSON.parse('{"name":"expo-random","kind":1,"kindString":"Project","originalName":"","children":[{"name":"getRandomBytes","kind":64,"kindString":"Function","signatures":[{"name":"getRandomBytes","kind":4096,"kindString":"Call signature","comment":{"shortText":"Generates completely random bytes using native implementations. The `byteCount` property\\nis a `number` indicating the number of bytes to generate in the form of a `Uint8Array`.\\nFalls back to `Math.random` during development to prevent issues with React Native Debugger.","returns":"An array of random bytes with the same length as the `byteCount`.\\n"},"parameters":[{"name":"byteCount","kind":32768,"kindString":"Parameter","comment":{"shortText":"A number within the range from `0` to `1024`. Anything else will throw a `TypeError`."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Uint8Array"}}]},{"name":"getRandomBytesAsync","kind":64,"kindString":"Function","signatures":[{"name":"getRandomBytesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Generates completely random bytes using native implementations. The `byteCount` property\\nis a `number` indicating the number of bytes to generate in the form of a `Uint8Array`.","returns":"A promise that fulfills with an array of random bytes with the same length as the `byteCount`.\\n"},"parameters":[{"name":"byteCount","kind":32768,"kindString":"Parameter","comment":{"shortText":"A number within the range from `0` to `1024`. Anything else will throw a `TypeError`."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Uint8Array"}],"name":"Promise"}}]}]}')},LyHK:function(e){e.exports=JSON.parse('{"name":"expo-document-picker","kind":1,"kindString":"Project","originalName":"","children":[{"name":"DocumentPickerOptions","kind":4194304,"kindString":"Type alias","comment":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"copyToCacheDirectory","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true`, the picked file is copied to [`FileSystem.CacheDirectory`](filesystem.md#filesystemcachedirectory),\\nwhich allows other Expo APIs to read the file immediately. This may impact performance for\\nlarge files, so you should consider setting this to `false` if you expect users to pick\\nparticularly large files and your app does not need immediate read access.","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"multiple","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Allows multiple files to be selected from the system UI.","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"web\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The [MIME type(s)](https://en.wikipedia.org/wiki/Media_type) of the documents that are available\\nto be picked. Is also supports wildcards like `\'image/*\'` to choose any image. To allow any type\\nof document you can use `\'&ast;/*\'`.","tags":[{"tag":"default","text":"\'&ast;/*\'\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}}]}}},{"name":"DocumentResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","type":{"type":"literal","value":"cancel"}}]}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"file","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","qualifiedName":"File","package":"typescript","name":"File"}},{"name":"lastModified","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"mimeType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Document MIME type."},"type":{"type":"intrinsic","name":"string"}},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"Document original name."},"type":{"type":"intrinsic","name":"string"}},{"name":"output","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","qualifiedName":"FileList","package":"typescript","name":"FileList"},{"type":"literal","value":null}]}},{"name":"size","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Document size in bytes."},"type":{"type":"intrinsic","name":"number"}},{"name":"type","kind":1024,"kindString":"Property","type":{"type":"literal","value":"success"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"An URI to the local document file."},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"getDocumentAsync","kind":64,"kindString":"Function","signatures":[{"name":"getDocumentAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Display the system UI for choosing a document. By default, the chosen file is copied to [the app\'s internal cache directory](filesystem.md#filesystemcachedirectory).\\n> **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\\nTherefore, calling `getDocumentAsync` in `componentDidMount`, for example, will **not** work as\\nintended. The `cancel` event will not be returned in the browser due to platform restrictions and\\ninconsistencies across browsers.","returns":"On success returns a promise that fulfils with [`DocumentResult`](#documentresult) object.\\n\\nIf the user cancelled the document picking, the promise resolves to `{ type: \'cancel\' }`.\\n"},"parameters":[{"name":"__namedParameters","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"DocumentPickerOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DocumentResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},"M+TP":function(e){e.exports=JSON.parse('{"name":"expo-apple-authentication","kind":1,"kindString":"Project","originalName":"","children":[{"name":"AppleAuthenticationButtonStyle","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values control which pre-defined color scheme to use when rendering an [`AppleAuthenticationButton`](#appleauthenticationappleauthenticationbutton)."},"children":[{"name":"BLACK","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Black button with white text."},"defaultValue":"2"},{"name":"WHITE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"White button with black text."},"defaultValue":"0"},{"name":"WHITE_OUTLINE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"White button with a black outline and black text."},"defaultValue":"1"}]},{"name":"AppleAuthenticationButtonType","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values control which pre-defined text to use when rendering an [`AppleAuthenticationButton`](#appleauthenticationappleauthenticationbutton)."},"children":[{"name":"CONTINUE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"\\"Continue with Apple\\""},"defaultValue":"1"},{"name":"SIGN_IN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"\\"Sign in with Apple\\""},"defaultValue":"0"},{"name":"SIGN_UP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"\\"Sign up with Apple\\" *(requires iOS 13.2 or higher)*"},"defaultValue":"2"}]},{"name":"AppleAuthenticationCredentialState","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values specify state of the credential when checked with [`AppleAuthentication.getCredentialStateAsync()`](#appleauthenticationgetcredentialstateasyncuser).","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidprovidercredentialstate)\\nfor more details.\\n"}]},"children":[{"name":"AUTHORIZED","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"NOT_FOUND","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"REVOKED","kind":16,"kindString":"Enumeration member","defaultValue":"0"},{"name":"TRANSFERRED","kind":16,"kindString":"Enumeration member","defaultValue":"3"}]},{"name":"AppleAuthenticationOperation","kind":8,"kindString":"Enumeration","children":[{"name":"IMPLICIT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An operation that depends on the particular kind of credential provider."},"defaultValue":"0"},{"name":"LOGIN","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"LOGOUT","kind":16,"kindString":"Enumeration member","defaultValue":"3"},{"name":"REFRESH","kind":16,"kindString":"Enumeration member","defaultValue":"2"}]},{"name":"AppleAuthenticationScope","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values specify scopes you can request when calling [`AppleAuthentication.signInAsync()`](#appleauthenticationsigninasyncoptions).","text":"> Note that it is possible that you will not be granted all of the scopes which you request.\\n> You will still need to handle null values for any fields you request.\\n","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationscope)\\nfor more details.\\n"}]},"children":[{"name":"EMAIL","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"FULL_NAME","kind":16,"kindString":"Enumeration member","defaultValue":"0"}]},{"name":"AppleAuthenticationUserDetectionStatus","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values specify the system\'s best guess for how likely the current user is a real person.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asuserdetectionstatus)\\nfor more details.\\n"}]},"children":[{"name":"LIKELY_REAL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The user appears to be a real person."},"defaultValue":"2"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The system has not determined whether the user might be a real person."},"defaultValue":"1"},{"name":"UNSUPPORTED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The system does not support this determination and there is no data."},"defaultValue":"0"}]},{"name":"AppleAuthenticationButtonProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"buttonStyle","kind":1024,"kindString":"Property","comment":{"shortText":"The Apple-defined color scheme to use to display the button."},"type":{"type":"reference","name":"AppleAuthenticationButtonStyle"}},{"name":"buttonType","kind":1024,"kindString":"Property","comment":{"shortText":"The type of button text to display (\\"Sign In with Apple\\" vs. \\"Continue with Apple\\")."},"type":{"type":"reference","name":"AppleAuthenticationButtonType"}},{"name":"cornerRadius","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The border radius to use when rendering the button. This works similarly to\\n`style.borderRadius` in other Views."},"type":{"type":"intrinsic","name":"number"}},{"name":"style","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The custom style to apply to the button. Should not include `backgroundColor` or `borderRadius`\\nproperties."},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"ViewStyle"},{"type":"union","types":[{"type":"literal","value":"backgroundColor"},{"type":"literal","value":"borderRadius"}]}],"name":"Omit"}],"name":"StyleProp"}},{"name":"onPress","kind":2048,"kindString":"Method","signatures":[{"name":"onPress","kind":4096,"kindString":"Call signature","comment":{"shortText":"The method to call when the user presses the button. You should call [`AppleAuthentication.signInAsync`](#isavailableasync)\\nin here."},"type":{"type":"intrinsic","name":"void"}}]}]}}]}},{"name":"AppleAuthenticationCredential","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The object type returned from a successful call to [`AppleAuthentication.signInAsync()`](#appleauthenticationsigninasyncoptions),\\n[`AppleAuthentication.refreshAsync()`](#appleauthenticationrefreshasyncoptions), or [`AppleAuthentication.signOutAsync()`](#appleauthenticationsignoutasyncoptions)\\nwhich contains all of the pertinent user and credential information.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidcredential)\\nfor more details.\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"authorizationCode","kind":1024,"kindString":"Property","comment":{"shortText":"A short-lived session token used by your app for proof of authorization when interacting with\\nthe app\'s server counterpart. Unlike `user`, this is ephemeral and will change each session."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"email","kind":1024,"kindString":"Property","comment":{"shortText":"The user\'s email address. Might not be present if you didn\'t request the `EMAIL` scope. May\\nalso be null if this is not the first time the user has signed into your app. If the user chose\\nto withhold their email address, this field will instead contain an obscured email address with\\nan Apple domain."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"fullName","kind":1024,"kindString":"Property","comment":{"shortText":"The user\'s name. May be `null` or contain `null` values if you didn\'t request the `FULL_NAME`\\nscope, if the user denied access, or if this is not the first time the user has signed into\\nyour app."},"type":{"type":"union","types":[{"type":"reference","name":"AppleAuthenticationFullName"},{"type":"literal","value":null}]}},{"name":"identityToken","kind":1024,"kindString":"Property","comment":{"shortText":"A JSON Web Token (JWT) that securely communicates information about the user to your app."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"realUserStatus","kind":1024,"kindString":"Property","comment":{"shortText":"A value that indicates whether the user appears to the system to be a real person."},"type":{"type":"reference","name":"AppleAuthenticationUserDetectionStatus"}},{"name":"state","kind":1024,"kindString":"Property","comment":{"shortText":"An arbitrary string that your app provided as `state` in the request that generated the\\ncredential. Used to verify that the response was from the request you made. Can be used to\\navoid replay attacks. If you did not provide `state` when making the sign-in request, this field\\nwill be `null`."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"user","kind":1024,"kindString":"Property","comment":{"shortText":"An identifier associated with the authenticated user. You can use this to check if the user is\\nstill authenticated later. This is stable and can be shared across apps released under the same\\ndevelopment team. The same user will have a different identifier for apps released by other\\ndevelopers."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AppleAuthenticationFullName","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object representing the tokenized portions of the user\'s full name. Any of all of the fields\\nmay be `null`. Only applicable fields that the user has allowed your app to access will be nonnull."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"familyName","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"givenName","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"middleName","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"namePrefix","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"nameSuffix","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"nickname","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}}},{"name":"AppleAuthenticationRefreshOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The options you can supply when making a call to [`AppleAuthentication.refreshAsync()`](#appleauthenticationrefreshasyncoptions).\\nYou must include the ID string of the user whose credentials you\'d like to refresh.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationopenidrequest)\\nfor more details.\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"requestedScopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Array of user information scopes to which your app is requesting access. Note that the user can\\nchoose to deny your app access to any scope at the time of logging in. You will still need to\\nhandle `null` values for any scopes you request. Additionally, note that the requested scopes\\nwill only be provided to you the first time each user signs into your app; in subsequent\\nrequests they will be `null`. Defaults to `[]` (no scopes)."},"type":{"type":"array","elementType":{"type":"reference","name":"AppleAuthenticationScope"}}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An arbitrary string that is returned unmodified in the corresponding credential after a\\nsuccessful authentication. This can be used to verify that the response was from the request\\nyou made and avoid replay attacks. More information on this property is available in the\\nOAuth 2.0 protocol [RFC6749](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"}},{"name":"user","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AppleAuthenticationSignInOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The options you can supply when making a call to [`AppleAuthentication.signInAsync()`](#appleauthenticationsigninasyncoptions).\\nNone of these options are required.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationopenidrequest)\\nfor more details.\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nonce","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An arbitrary string that is used to prevent replay attacks. See more information on this in the\\n[OpenID Connect specification](https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowSteps)."},"type":{"type":"intrinsic","name":"string"}},{"name":"requestedScopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Array of user information scopes to which your app is requesting access. Note that the user can\\nchoose to deny your app access to any scope at the time of logging in. You will still need to\\nhandle `null` values for any scopes you request. Additionally, note that the requested scopes\\nwill only be provided to you the first time each user signs into your app; in subsequent\\nrequests they will be `null`. Defaults to `[]` (no scopes)."},"type":{"type":"array","elementType":{"type":"reference","name":"AppleAuthenticationScope"}}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An arbitrary string that is returned unmodified in the corresponding credential after a\\nsuccessful authentication. This can be used to verify that the response was from the request\\nyou made and avoid replay attacks. More information on this property is available in the\\nOAuth 2.0 protocol [RFC6749](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AppleAuthenticationSignOutOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The options you can supply when making a call to [`AppleAuthentication.signOutAsync()`](#appleauthenticationsignoutasyncoptions).\\nYou must include the ID string of the user to sign out.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationopenidrequest)\\nfor more details.\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An arbitrary string that is returned unmodified in the corresponding credential after a\\nsuccessful authentication. This can be used to verify that the response was from the request\\nyou made and avoid replay attacks. More information on this property is available in the\\nOAuth 2.0 protocol [RFC6749](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"}},{"name":"user","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"AppleAuthenticationButton","kind":32,"kindString":"Variable","comment":{"shortText":"This component displays the proprietary \\"Sign In with Apple\\" / \\"Continue with Apple\\" button on\\nyour screen. The App Store Guidelines require you to use this component to start the\\nauthentication process instead of a custom button. Limited customization of the button is\\navailable via the provided properties.","text":"You should only attempt to render this if [`AppleAuthentication.isAvailableAsync()`](#isavailableasync)\\nresolves to `true`. This component will render nothing if it is not available, and you will get\\na warning in development mode (`__DEV__ === true`).\\n\\nThe properties of this component extend from `View`; however, you should not attempt to set\\n`backgroundColor` or `borderRadius` with the `style` property. This will not work and is against\\nthe App Store Guidelines. Instead, you should use the `buttonStyle` property to choose one of the\\npredefined color styles and the `cornerRadius` property to change the border radius of the\\nbutton.\\n\\nMake sure to attach height and width via the style props as without these styles, the button will\\nnot appear on the screen.\\n","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidbutton)\\nfor more details.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationButtonProps"}],"name":"React.FC"},"defaultValue":"..."},{"name":"addRevokeListener","kind":64,"kindString":"Function","signatures":[{"name":"addRevokeListener","kind":4096,"kindString":"Call signature","parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getCredentialStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCredentialStateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Queries the current state of a user credential, to determine if it is still valid or if it has been revoked.\\n> **Note:** This method must be tested on a real device. On the iOS simulator it always throws an error.","returns":"A promise that fulfills with an [`AppleAuthenticationCredentialState`](#appleauthenticationcredentialstate)\\nvalue depending on the state of the credential.\\n"},"parameters":[{"name":"user","kind":32768,"kindString":"Parameter","comment":{"shortText":"The unique identifier for the user whose credential state you\'d like to check.\\nThis should come from the user field of an [`AppleAuthenticationCredential`](#appleauthenticationcredentialstate) object."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredentialState"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine if the current device\'s operating system supports Apple authentication.","returns":"A promise that fulfills with `true` if the system supports Apple authentication, and `false` otherwise.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"refreshAsync","kind":64,"kindString":"Function","signatures":[{"name":"refreshAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"An operation that refreshes the logged-in user\u2019s credentials.\\nCalling this method will show the sign in modal before actually refreshing the user credentials.","returns":"A promise that fulfills with an [`AppleAuthenticationCredential`](#appleauthenticationcredential)\\nobject after a successful authentication, and rejects with `ERR_CANCELED` if the user cancels the\\nrefresh operation.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`AppleAuthenticationRefreshOptions`](#appleauthenticationrefreshoptions) object"},"type":{"type":"reference","name":"AppleAuthenticationRefreshOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredential"}],"name":"Promise"}}]},{"name":"signInAsync","kind":64,"kindString":"Function","signatures":[{"name":"signInAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sends a request to the operating system to initiate the Apple authentication flow, which will\\npresent a modal to the user over your app and allow them to sign in.","text":"You can request access to the user\'s full name and email address in this method, which allows you\\nto personalize your UI for signed in users. However, users can deny access to either or both\\nof these options at runtime.\\n\\nAdditionally, you will only receive Apple Authentication Credentials the first time users sign\\ninto your app, so you must store it for later use. It\'s best to store this information either\\nserver-side, or using [SecureStore](./securestore), so that the data persists across app installs.\\nYou can use [`AppleAuthenticationCredential.user`](#appleauthenticationcredential) to identify\\nthe user, since this remains the same for apps released by the same developer.\\n","returns":"A promise that fulfills with an [`AppleAuthenticationCredential`](#appleauthenticationcredential)\\nobject after a successful authentication, and rejects with `ERR_CANCELED` if the user cancels the\\nsign-in operation.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"An optional [`AppleAuthenticationSignInOptions`](#appleauthenticationsigninoptions) object"},"type":{"type":"reference","name":"AppleAuthenticationSignInOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredential"}],"name":"Promise"}}]},{"name":"signOutAsync","kind":64,"kindString":"Function","signatures":[{"name":"signOutAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"An operation that ends the authenticated session.\\nCalling this method will show the sign in modal before actually signing the user out.","text":"It is not recommended to use this method to sign out the user as it works counterintuitively.\\nInstead of using this method it is recommended to simply clear all the user\'s data collected\\nfrom using [`signInAsync`](./#signinasync) or [`refreshAsync`](./#refreshasync) methods.\\n","returns":"A promise that fulfills with an [`AppleAuthenticationCredential`](#appleauthenticationcredential)\\nobject after a successful authentication, and rejects with `ERR_CANCELED` if the user cancels the\\nsign-out operation.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`AppleAuthenticationSignOutOptions`](#appleauthenticationsignoutoptions) object"},"type":{"type":"reference","name":"AppleAuthenticationSignOutOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredential"}],"name":"Promise"}}]}]}')},"M8+4":function(e,w,n){"use strict";var c=/[!-\/:-@\[-`\{-~\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/;e.exports=c},MNZ5:function(e){e.exports=JSON.parse('{"name":"expo-font","kind":1,"kindString":"Project","originalName":"","children":[{"name":"FontDisplay","kind":8,"kindString":"Enumeration","comment":{"shortText":"__Web Only__. Sets the [font-display](https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display)\\nfor a given typeface. The default font value on web is `FontDisplay.AUTO`.\\nEven though setting the `fontDisplay` does nothing on native platforms, the default behavior\\nemulates `FontDisplay.SWAP` on flagship devices like iOS, Samsung, Pixel, etc. Default\\nfunctionality varies on One Plus devices. In the browser this value is set in the generated\\n`@font-face` CSS block and not as a style property meaning you cannot dynamically change this\\nvalue based on the element it\'s used in."},"children":[{"name":"AUTO","kind":16,"kindString":"Enumeration member","comment":{"shortText":"__(Default)__ The font display strategy is defined by the user agent or platform.\\nThis generally defaults to the text being invisible until the font is loaded.\\nGood for buttons or banners that require a specific treatment."},"defaultValue":"\\"auto\\""},{"name":"BLOCK","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The text will be invisible until the font has loaded. If the font fails to load then nothing\\nwill appear - it\'s best to turn this off when debugging missing text."},"defaultValue":"\\"block\\""},{"name":"FALLBACK","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Splits the behavior between `SWAP` and `BLOCK`.\\nThere will be a [100ms timeout](https://developers.google.com/web/updates/2016/02/font-display?hl=en)\\nwhere the text with a custom font is invisible, after that the text will either swap to the\\nstyled text or it\'ll show the unstyled text and continue to load the custom font. This is good\\nfor buttons that need a custom font but should also be quickly available to screen-readers."},"defaultValue":"\\"fallback\\""},{"name":"OPTIONAL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"This works almost identically to `FALLBACK`, the only difference is that the browser will\\ndecide to load the font based on slow connection speed or critical resource demand."},"defaultValue":"\\"optional\\""},{"name":"SWAP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Fallback text is rendered immediately with a default font while the desired font is loaded.\\nThis is good for making the content appear to load instantly and is usually preferred."},"defaultValue":"\\"swap\\""}]},{"name":"FontResource","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object used to dictate the resource that is loaded into the provided font namespace when used\\nwith [`loadAsync`](#loadasync)."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"display","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"_Web Only._ Sets the [`font-display`](#fontdisplay) property for a given typeface in the\\nbrowser."},"type":{"type":"reference","name":"FontDisplay"}},{"name":"uri","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}},{"name":"FontSource","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The different types of assets you can provide to the [`loadAsync()`](#loadAsync) function.\\nA font source can be a URI, a module ID, or an Expo Asset."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"reference","name":"Asset"},{"type":"reference","name":"FontResource"}]}},{"name":"UnloadFontOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Object used to query fonts for unloading."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"FontResource"},{"type":"literal","value":"display"}],"name":"Pick"}},{"name":"isLoaded","kind":64,"kindString":"Function","signatures":[{"name":"isLoaded","kind":4096,"kindString":"Call signature","comment":{"shortText":"Synchronously detect if the font for `fontFamily` has finished loading.","returns":"Returns `true` if the font has fully loaded.\\n"},"parameters":[{"name":"fontFamily","kind":32768,"kindString":"Parameter","comment":{"text":"The name used to load the `FontResource`."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"isLoading","kind":64,"kindString":"Function","signatures":[{"name":"isLoading","kind":4096,"kindString":"Call signature","comment":{"shortText":"Synchronously detect if the font for `fontFamily` is still being loaded.","returns":"Returns `true` if the font is still loading.\\n"},"parameters":[{"name":"fontFamily","kind":32768,"kindString":"Parameter","comment":{"text":"The name used to load the `FontResource`."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"loadAsync","kind":64,"kindString":"Function","signatures":[{"name":"loadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Highly efficient method for loading fonts from static or remote resources which can then be used\\nwith the platform\'s native text elements. In the browser this generates a `@font-face` block in\\na shared style sheet for fonts. No CSS is needed to use this method.","returns":"Returns a promise that fulfils when the font has loaded. Often you may want to wrap the\\nmethod in a `try/catch/finally` to ensure the app continues if the font fails to load.\\n"},"parameters":[{"name":"fontFamilyOrFontMap","kind":32768,"kindString":"Parameter","comment":{"text":"string or map of values that can be used as the [`fontFamily`](https://reactnative.dev/docs/text#style)\\nstyle prop with React Native Text elements."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"FontSource"}],"name":"Record"}]}},{"name":"source","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"the font asset that should be loaded into the `fontFamily` namespace.\\n"},"type":{"type":"reference","name":"FontSource"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"processFontFamily","kind":64,"kindString":"Function","signatures":[{"name":"processFontFamily","kind":4096,"kindString":"Call signature","comment":{"shortText":"Used to transform font family names to the scoped name. This does not need to\\nbe called in standalone or bare apps but it will return unscoped font family\\nnames if it is called in those contexts.","returns":"Returns a name processed for use with the [current workflow](https://docs.expo.io/introduction/managed-vs-bare/).\\n"},"parameters":[{"name":"fontFamily","kind":32768,"kindString":"Parameter","comment":{"text":"Name of font to process."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]},{"name":"unloadAllAsync","kind":64,"kindString":"Function","signatures":[{"name":"unloadAllAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unloads all the custom fonts. This is used for testing."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"unloadAsync","kind":64,"kindString":"Function","signatures":[{"name":"unloadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unload custom fonts matching the `fontFamily`s and display values provided.\\nBecause fonts are automatically unloaded on every platform this is mostly used for testing."},"parameters":[{"name":"fontFamilyOrFontMap","kind":32768,"kindString":"Parameter","comment":{"text":"The name or names of the custom fonts that will be unloaded."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"UnloadFontOptions"}],"name":"Record"}]}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"When `fontFamilyOrFontMap` is a string, this should be the font source used to load\\nthe custom font originally.\\n"},"type":{"type":"reference","name":"UnloadFontOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"useFonts","kind":64,"kindString":"Function","signatures":[{"name":"useFonts","kind":4096,"kindString":"Call signature","comment":{"shortText":"```ts\\nconst [loaded, error] = useFonts({ ... });\\n```\\nLoad a map of fonts with [`loadAsync`](#loadasync). This returns a `boolean` if the fonts are\\nloaded and ready to use. It also returns an error if something went wrong, to use in development.","text":"> Note, the fonts are not \\"reloaded\\" when you dynamically change the font map.\\n","returns":"\\n- __loaded__ (`boolean`) - A boolean to detect if the font for `fontFamily` has finished\\nloading.\\n- __error__ (`Error | null`) - An error encountered when loading the fonts.\\n"},"parameters":[{"name":"map","kind":32768,"kindString":"Parameter","comment":{"text":"A map of `fontFamily`s to [`FontSource`](#fontsource)s. After loading the font you can\\nuse the key in the `fontFamily` style prop of a `Text` element.\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"FontSource"}],"name":"Record"}]}}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"boolean"},{"type":"union","types":[{"type":"reference","name":"Error"},{"type":"literal","value":null}]}]}}]}]}')},MSbt:function(e){e.exports=JSON.parse('{"name":"expo-local-authentication","kind":1,"kindString":"Project","originalName":"","children":[{"name":"AuthenticationType","kind":8,"kindString":"Enumeration","children":[{"name":"FACIAL_RECOGNITION","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates facial recognition support."},"defaultValue":"2"},{"name":"FINGERPRINT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates fingerprint support."},"defaultValue":"1"},{"name":"IRIS","kind":16,"kindString":"Enumeration member","comment":{"shortText":"__Android-only.__ Indicates iris recognition support."},"defaultValue":"3"}]},{"name":"SecurityLevel","kind":8,"kindString":"Enumeration","children":[{"name":"BIOMETRIC","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates biometric authentication."},"defaultValue":"2"},{"name":"NONE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates no enrolled authentication."},"defaultValue":"0"},{"name":"SECRET","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates non-biometric authentication (e.g. PIN, Pattern)."},"defaultValue":"1"}]},{"name":"LocalAuthenticationOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"cancelLabel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Allows to customize the default `Cancel` label shown."},"type":{"type":"intrinsic","name":"string"}},{"name":"disableDeviceFallback","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"After several failed attempts the system will fallback to the device passcode. This setting\\nallows you to disable this option and instead handle the fallback yourself. This can be\\npreferable in certain custom authentication workflows. This behaviour maps to using the iOS\\n[LAPolicyDeviceOwnerAuthenticationWithBiometrics](https://developer.apple.com/documentation/localauthentication/lapolicy/lapolicydeviceownerauthenticationwithbiometrics?language=objc)\\npolicy rather than the [LAPolicyDeviceOwnerAuthentication](https://developer.apple.com/documentation/localauthentication/lapolicy/lapolicydeviceownerauthentication?language=objc)\\npolicy. Defaults to `false`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"fallbackLabel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":" **iOS only.** Allows to customize the default `Use Passcode` label shown after several failed\\n authentication attempts. Setting this option to an empty string disables this button from\\n showing in the prompt."},"type":{"type":"intrinsic","name":"string"}},{"name":"promptMessage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A message that is shown alongside the TouchID or FaceID prompt."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"LocalAuthenticationResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"success","kind":1024,"kindString":"Property","type":{"type":"literal","value":true}}]}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"error","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"success","kind":1024,"kindString":"Property","type":{"type":"literal","value":false}},{"name":"warning","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"authenticateAsync","kind":64,"kindString":"Function","signatures":[{"name":"authenticateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Attempts to authenticate via Fingerprint/TouchID (or FaceID if available on the device).\\n> **Note:** Apple requires apps which use FaceID to provide a description of why they use this API.\\nIf you try to use FaceID on an iPhone with FaceID without providing `infoPlist.NSFaceIDUsageDescription`\\nin `app.json`, the module will authenticate using device passcode. For more information about\\nusage descriptions on iOS, see [Deploying to App Stores](/distribution/app-stores#system-permissions-dialogs-on-ios).","returns":"Returns a promise which fulfils with [`LocalAuthenticationResult`](#localauthenticationresult).\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"LocalAuthenticationOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocalAuthenticationResult"}],"name":"Promise"}}]},{"name":"cancelAuthenticate","kind":64,"kindString":"Function","signatures":[{"name":"cancelAuthenticate","kind":4096,"kindString":"Call signature","comment":{"shortText":"**(Android Only)** Cancels authentication flow."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"getEnrolledLevelAsync","kind":64,"kindString":"Function","signatures":[{"name":"getEnrolledLevelAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine what kind of authentication is enrolled on the device.","returns":"Returns a promise which fulfils with [`SecurityLevel`](#securitylevel).\\n> **Note:** On Android devices prior to M, `SECRET` can be returned if only the SIM lock has been\\nenrolled, which is not the method that [`authenticateAsync`](#localauthenticationauthenticateasyncoptions)\\nprompts.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"SecurityLevel"}],"name":"Promise"}}]},{"name":"hasHardwareAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasHardwareAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine whether a face or fingerprint scanner is available on the device.","returns":"Returns a promise which fulfils with a `boolean` value indicating whether a face or\\nfingerprint scanner is available on this device.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isEnrolledAsync","kind":64,"kindString":"Function","signatures":[{"name":"isEnrolledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine whether the device has saved fingerprints or facial data to use for authentication.","returns":"Returns a promise which fulfils to `boolean` value indicating whether the device has\\nsaved fingerprints or facial data for authentication.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"supportedAuthenticationTypesAsync","kind":64,"kindString":"Function","signatures":[{"name":"supportedAuthenticationTypesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine what kinds of authentications are available on the device.","returns":"Returns a promise which fulfils to an array containing [`AuthenticationType`s](#authenticationtype).\\n\\nDevices can support multiple authentication methods- i.e. `[1,2]` means the device supports both\\nfingerprint and facial recognition. If none are supported, this method returns an empty array.\\n"},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"AuthenticationType"}}],"name":"Promise"}}]}]}')},MeRB:function(e){e.exports=JSON.parse('{"name":"expo-random","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"getRandomBytes","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getRandomBytes","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Generates completely random bytes using native implementations. The `byteCount` property\\nis a `number` indicating the number of bytes to generate in the form of a `Uint8Array`.","returns":"An array of random bytes with the same length as the `byteCount`.\\n"},"parameters":[{"name":"byteCount","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A number within the range from `0` to `1024`. Anything else will throw a `TypeError`."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Uint8Array"}}]},{"name":"getRandomBytesAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getRandomBytesAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Generates completely random bytes using native implementations. The `byteCount` property\\nis a `number` indicating the number of bytes to generate in the form of a `Uint8Array`.","returns":"A promise that fulfills with an array of random bytes with the same length as the `byteCount`.\\n"},"parameters":[{"name":"byteCount","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A number within the range from `0` to `1024`. Anything else will throw a `TypeError`."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Uint8Array"}],"name":"Promise"}}]}]}')},Mf4r:function(e,w,n){"use strict";var c=n("NOby"),p=n("Vx/6"),d=n("T0BQ");function a(r){for(var s={},i=-1,o,t,l,k,g,h,f;++i<r.length;){for(;i in s;)i=s[i];if(o=r[i],i&&o[1].type==="chunkFlow"&&r[i-1][1].type==="listItemPrefix"&&(h=o[1]._tokenizer.events,l=0,l<h.length&&h[l][1].type==="lineEndingBlank"&&(l+=2),l<h.length&&h[l][1].type==="content"))for(;++l<h.length&&h[l][1].type!=="content";)h[l][1].type==="chunkText"&&(h[l][1].isInFirstContentOfListItem=!0,l++);if(o[0]==="enter")o[1].contentType&&(c(s,m(r,i)),i=s[i],f=!0);else if(o[1]._container||o[1]._movePreviousLineEndings){for(l=i,t=void 0;l--&&(k=r[l],k[1].type==="lineEnding"||k[1].type==="lineEndingBlank");)k[0]==="enter"&&(t&&(r[t][1].type="lineEndingBlank"),k[1].type="lineEnding",t=l);t&&(o[1].end=d(r[t][1].start),g=r.slice(t,i),g.unshift(o),p(r,t,i-t+1,g))}}return!f}function m(r,s){for(var i=r[s][1],o=r[s][2],t=s-1,l=[],k=i._tokenizer||o.parser[i.contentType](i.start),g=k.events,h=[],f={},S,b,P,y,v,u;i;){for(;r[++t][1]!==i;);l.push(t),i._tokenizer||(S=o.sliceStream(i),i.next||S.push(null),b&&k.defineSkip(i.start),i.isInFirstContentOfListItem&&(k._gfmTasklistFirstContentOfListItem=!0),k.write(S),i.isInFirstContentOfListItem&&(k._gfmTasklistFirstContentOfListItem=void 0)),b=i,i=i.next}for(i=b,P=g.length;P--;)g[P][0]==="enter"?y=!0:y&&g[P][1].type===g[P-1][1].type&&g[P][1].start.line!==g[P][1].end.line&&(C(g.slice(P+1,v)),i._tokenizer=i.next=void 0,i=i.previous,v=P+1);for(k.events=i._tokenizer=i.next=void 0,C(g.slice(0,v)),P=-1,u=0;++P<h.length;)f[u+h[P][0]]=u+h[P][1],u+=h[P][1]-h[P][0]-1;return f;function C(R){var F=l.pop();h.unshift([F,F+R.length-1]),p(r,F,2,R)}}e.exports=a},Mg8r:function(e){e.exports=JSON.parse('{"name":"expo-secure-store","kind":1,"kindString":"Project","originalName":"","children":[{"name":"KeychainAccessibilityConstant","kind":4194304,"kindString":"Type alias","type":{"type":"intrinsic","name":"number"}},{"name":"SecureStoreOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"authenticationPrompt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Custom message displayed to the user while `requireAuthentication` option is turned on."},"type":{"type":"intrinsic","name":"string"}},{"name":"keychainAccessible","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specifies when the stored entry is accessible, using iOS\'s `kSecAttrAccessible` property.","tags":[{"tag":"see","text":"Apple\'s documentation on [keychain item accessibility](https://developer.apple.com/library/content/documentation/Security/Conceptual/keychainServConcepts/02concepts/concepts.html#//apple_ref/doc/uid/TP30000897-CH204-SW18)."},{"tag":"default","text":"SecureStore.WHEN_UNLOCKED"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"KeychainAccessibilityConstant"}},{"name":"keychainService","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"- iOS: The item\'s service, equivalent to `kSecAttrService`\\n- Android: Equivalent of the public/private key pair `Alias`\\n> If the item is set with the `keychainService` option, it will be required to later fetch the value."},"type":{"type":"intrinsic","name":"string"}},{"name":"requireAuthentication","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Option responsible for enabling the usage of the user authentication methods available on the device while\\naccessing data stored in SecureStore.\\n- iOS: Equivalent to `kSecAccessControlUserPresence`\\n- Android: Equivalent to `setUserAuthenticationRequired(true)` (requires API 23).\\nComplete functionality is unlocked only with a freshly generated key - this would not work in tandem with the `keychainService`\\nvalue used for the others non-authenticated operations."},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"AFTER_FIRST_UNLOCK","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The data in the keychain item cannot be accessed after a restart until the device has been\\nunlocked once by the user. This may be useful if you need to access the item when the phone\\nis locked."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.AFTER_FIRST_UNLOCK"},{"name":"AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Similar to `AFTER_FIRST_UNLOCK`, except the entry is not migrated to a new device when restoring\\nfrom a backup."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY"},{"name":"ALWAYS","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The data in the keychain item can always be accessed regardless of whether the device is locked.\\nThis is the least secure option."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.ALWAYS"},{"name":"ALWAYS_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Similar to `ALWAYS`, except the entry is not migrated to a new device when restoring from a backup."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.ALWAYS_THIS_DEVICE_ONLY"},{"name":"WHEN_PASSCODE_SET_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Similar to `WHEN_UNLOCKED_THIS_DEVICE_ONLY`, except the user must have set a passcode in order to\\nstore an entry. If the user removes their passcode, the entry will be deleted."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.WHEN_PASSCODE_SET_THIS_DEVICE_ONLY"},{"name":"WHEN_UNLOCKED","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The data in the keychain item can be accessed only while the device is unlocked by the user."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.WHEN_UNLOCKED"},{"name":"WHEN_UNLOCKED_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Similar to `WHEN_UNLOCKED`, except the entry is not migrated to a new device when restoring from\\na backup."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.WHEN_UNLOCKED_THIS_DEVICE_ONLY"},{"name":"deleteItemAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteItemAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Delete the value associated with the provided key.","returns":"A promise that will reject if the value couldn\'t be deleted.\\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"shortText":"The key that was used to store the associated value."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`SecureStoreOptions`](#securestoreoptions) object.\\n"},"type":{"type":"reference","name":"SecureStoreOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getItemAsync","kind":64,"kindString":"Function","signatures":[{"name":"getItemAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Fetch the stored value associated with the provided key.","returns":"A promise that resolves to the previously stored value, or `null` if there is no entry\\nfor the given key. The promise will reject if an error occurred while retrieving the value.\\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"shortText":"The key that was used to store the associated value."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`SecureStoreOptions`](#securestoreoptions) object.\\n"},"type":{"type":"reference","name":"SecureStoreOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the SecureStore API is enabled on the current device. This does not check the app\\npermissions.","returns":"Promise which fulfils witch `boolean`, indicating whether the SecureStore API is available\\non the current device. Currently this resolves `true` on iOS and Android only.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setItemAsync","kind":64,"kindString":"Function","signatures":[{"name":"setItemAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Store a key\u2013value pair.","returns":"A promise that will reject if value cannot be stored on the device.\\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"shortText":"The key to associate with the stored value. Keys may contain alphanumeric characters\\n`.`, `-`, and `_`."},"type":{"type":"intrinsic","name":"string"}},{"name":"value","kind":32768,"kindString":"Parameter","comment":{"shortText":"The value to store. Size limit is 2048 bytes."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`SecureStoreOptions`](#securestoreoptions) object.\\n"},"type":{"type":"reference","name":"SecureStoreOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},MqzE:function(e){e.exports=JSON.parse('{"name":"expo-image-picker","kind":1,"kindString":"Project","originalName":"","children":[{"name":"MediaTypeOptions","kind":8,"kindString":"Enumeration","children":[{"name":"All","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Images and videos."},"defaultValue":"\\"All\\""},{"name":"Images","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Only images."},"defaultValue":"\\"Images\\""},{"name":"Videos","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Only videos."},"defaultValue":"\\"Videos\\""}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"UIImagePickerControllerQualityType","kind":8,"kindString":"Enumeration","children":[{"name":"High","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Highest available resolution."},"defaultValue":"0"},{"name":"IFrame1280x720","kind":16,"kindString":"Enumeration member","comment":{"shortText":"1280 \xD7 720"},"defaultValue":"4"},{"name":"IFrame960x540","kind":16,"kindString":"Enumeration member","comment":{"shortText":"960 \xD7 540"},"defaultValue":"5"},{"name":"Low","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Depends on the device."},"defaultValue":"2"},{"name":"Medium","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Depends on the device."},"defaultValue":"1"},{"name":"VGA640x480","kind":16,"kindString":"Enumeration member","comment":{"shortText":"640 \xD7 480"},"defaultValue":"3"}]},{"name":"UIImagePickerPresentationStyle","kind":8,"kindString":"Enumeration","children":[{"name":"Automatic","kind":16,"kindString":"Enumeration member","defaultValue":"-2"},{"name":"BlurOverFullScreen","kind":16,"kindString":"Enumeration member","defaultValue":"8"},{"name":"CurrentContext","kind":16,"kindString":"Enumeration member","defaultValue":"3"},{"name":"FormSheet","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"FullScreen","kind":16,"kindString":"Enumeration member","defaultValue":"0"},{"name":"OverCurrentContext","kind":16,"kindString":"Enumeration member","defaultValue":"6"},{"name":"OverFullScreen","kind":16,"kindString":"Enumeration member","defaultValue":"5"},{"name":"PageSheet","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"Popover","kind":16,"kindString":"Enumeration member","defaultValue":"7"}]},{"name":"VideoExportPreset","kind":8,"kindString":"Enumeration","children":[{"name":"H264_1280x720","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __1280 \xD7 720__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"6"},{"name":"H264_1920x1080","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __1920 \xD7 1080__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"7"},{"name":"H264_3840x2160","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __3840 \xD7 2160__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"8"},{"name":"H264_640x480","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __640 \xD7 480__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"4"},{"name":"H264_960x540","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __960 \xD7 540__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"5"},{"name":"HEVC_1920x1080","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __1920 \xD7 1080__ \u2022\\nVideo compression: __HEVC__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"9"},{"name":"HEVC_3840x2160","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __3840 \xD7 2160__ \u2022\\nVideo compression: __HEVC__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"10"},{"name":"HighestQuality","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __Depends on the device__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"3"},{"name":"LowQuality","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __Depends on the device__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"1"},{"name":"MediumQuality","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __Depends on the device__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"2"},{"name":"Passthrough","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __Unchanged__ \u2022\\nVideo compression: __None__ \u2022\\nAudio compression: __None__"},"defaultValue":"0"}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"CameraPermissionResponse","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Alias for `PermissionResponse` type exported by `expo-modules-core`."},"type":{"type":"reference","name":"PermissionResponse"}},{"name":"CameraRollPermissionResponse","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An alias for the `MediaLibraryPermissionResponse` object.","tags":[{"tag":"deprecated","text":"Deprecated. Use `ImagePicker.MediaLibraryPermissionResponse` instead.\\n"}]},"type":{"type":"reference","name":"MediaLibraryPermissionResponse"}},{"name":"ExpandImagePickerResult","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter","type":{"type":"union","types":[{"type":"reference","name":"ImagePickerOptions"},{"type":"reference","name":"OpenFileBrowserOptions"}]}}],"type":{"type":"conditional","checkType":{"type":"reference","name":"T"},"extendsType":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"allowsMultipleSelection","kind":1024,"kindString":"Property","type":{"type":"literal","value":true}}]}},"trueType":{"type":"reference","name":"ImagePickerMultipleResult"},"falseType":{"type":"reference","name":"ImagePickerResult"}}},{"name":"ImageInfo","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Included if the `base64` option is truthy, and is a Base64-encoded string of the selected\\nimage\'s JPEG data. If you prepend this with `\'data:image/jpeg;base64,\'` to create a data URI,\\nyou can use it as the source of an `Image` element; for example:\\n```ts\\n<Image\\n  source={{ uri: \'data:image/jpeg;base64,\' + launchCameraResult.base64 }}\\n  style={{ width: 200, height: 200 }}\\n/>\\n```"},"type":{"type":"intrinsic","name":"string"}},{"name":"cancelled","kind":1024,"kindString":"Property","comment":{"shortText":"Boolean flag which shows if request was cancelled. If asset data have been returned this should\\nalways be `false`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"duration","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Length of the video in milliseconds."},"type":{"type":"intrinsic","name":"number"}},{"name":"exif","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The `exif` field is included if the `exif` option is truthy, and is an object containing the\\nimage\'s EXIF data. The names of this object\'s properties are EXIF tags and the values are the\\nrespective EXIF values for those tags."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"Height of the image or video."},"type":{"type":"intrinsic","name":"number"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The type of the asset."},"type":{"type":"union","types":[{"type":"literal","value":"image"},{"type":"literal","value":"video"}]}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"URI to the local image or video file (usable as the source of an `Image` element, in the case of\\nan image) and `width` and `height` specify the dimensions of the media."},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"Width of the image or video."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"ImagePickerCancelledResult","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object returned when the pick action has been cancelled by the user."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"cancelled","kind":1024,"kindString":"Property","type":{"type":"literal","value":true}}]}}},{"name":"ImagePickerErrorResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"code","kind":1024,"kindString":"Property","comment":{"shortText":"The error code."},"type":{"type":"intrinsic","name":"string"}},{"name":"exception","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The exception which caused the error."},"type":{"type":"intrinsic","name":"string"}},{"name":"message","kind":1024,"kindString":"Property","comment":{"shortText":"The error message."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"ImagePickerMultipleResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"ImagePickerCancelledResult"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"cancelled","kind":1024,"kindString":"Property","type":{"type":"literal","value":false}},{"name":"selected","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"reference","name":"ImageInfo"}}}]}}]}},{"name":"ImagePickerOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"allowsEditing","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to show a UI to edit the image after it is picked. On Android the user can crop and\\nrotate the image and on iOS simply crop it.","tags":[{"tag":"default","text":"false\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"allowsMultipleSelection","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether or not to allow selecting multiple media files at once.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"aspect","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array with two entries `[x, y]` specifying the aspect ratio to maintain if the user is\\nallowed to edit the image (by passing `allowsEditing: true`). This is only applicable on\\nAndroid, since on iOS the crop rectangle is always a square."},"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to also include the image data in Base64 format."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"exif","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to also include the EXIF data for the image. On iOS the EXIF data does not include GPS\\ntags in the camera case."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"mediaTypes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Choose what type of media to pick.","tags":[{"tag":"default","text":"ImagePicker.MediaTypeOptions.Images\\n"}]},"type":{"type":"reference","name":"MediaTypeOptions"}},{"name":"presentationStyle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Choose [presentation style](https://developer.apple.com/documentation/uikit/uiviewcontroller/1621355-modalpresentationstyle?language=objc)\\nto customize view during taking photo/video.","tags":[{"tag":"default","text":"ImagePicker.UIImagePickerPresentationStyle.Automatic"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"UIImagePickerPresentationStyle"}},{"name":"quality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specify the quality of compression, from `0` to `1`. `0` means compress for small size,\\n`1` means compress for maximum quality.\\n> Note: If the selected image has been compressed before, the size of the output file may be\\n> bigger than the size of the original image."},"type":{"type":"intrinsic","name":"number"}},{"name":"videoExportPreset","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specify preset which will be used to compress selected video.","tags":[{"tag":"default","text":"ImagePicker.VideoExportPreset.Passthrough"},{"tag":"platform","text":"ios 11+"},{"tag":"deprecated","text":"Deprecated. See [`videoExportPreset`](https://developer.apple.com/documentation/uikit/uiimagepickercontroller/2890964-videoexportpreset?language=objc)\\nin Apple documentation.\\n"}]},"type":{"type":"reference","name":"VideoExportPreset"}},{"name":"videoMaxDuration","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum duration, in seconds, for video recording. Setting this to `0` disables the limit.\\nDefaults to `0` (no limit).\\n- **On iOS**, when `allowsEditing` is set to `true`, maximum duration is limited to 10 minutes.\\n  This limit is applied automatically, if `0` or no value is specified.\\n- **On Android**, effect of this option depends on support of installed camera app.\\n- **On Web** this option has no effect - the limit is browser-dependant."},"type":{"type":"intrinsic","name":"number"}},{"name":"videoQuality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specify the quality of recorded videos. Defaults to the highest quality available for the device.","tags":[{"tag":"default","text":"ImagePicker.UIImagePickerControllerQualityType.High"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"UIImagePickerControllerQualityType"}}]}}},{"name":"ImagePickerResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"ImagePickerCancelledResult"},{"type":"reference","name":"ImageInfo"}]}},{"name":"MediaLibraryPermissionResponse","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Extends `PermissionResponse` type exported by `expo-modules-core` and contains additional iOS-specific field."},"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionResponse"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accessPrivileges","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":"all"},{"type":"literal","value":"limited"},{"type":"literal","value":"none"}]}}]}}]}},{"name":"OpenFileBrowserOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"allowsMultipleSelection","kind":1024,"kindString":"Property","comment":{"shortText":"Whether or not to allow selecting multiple media files at once.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"base64","kind":1024,"kindString":"Property","comment":{"shortText":"Whether to also include the image data in Base64 format."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"capture","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"mediaTypes","kind":1024,"kindString":"Property","comment":{"shortText":"Choose what type of media to pick.","tags":[{"tag":"default","text":"ImagePicker.MediaTypeOptions.Images\\n"}]},"type":{"type":"reference","name":"MediaTypeOptions"}}]}}},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"getCameraPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCameraPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing camera.","returns":"A promise that fulfills with an object of type [CameraPermissionResponse](#camerarollpermissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraPermissionResponse"}],"name":"Promise"}}]},{"name":"getCameraRollPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCameraRollPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"Deprecated. Use `getMediaLibraryPermissionsAsync()` instead.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"MediaLibraryPermissionResponse"}],"name":"Promise"}}]},{"name":"getMediaLibraryPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMediaLibraryPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing photos.","returns":"A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\\n"},"parameters":[{"name":"writeOnly","kind":32768,"kindString":"Parameter","comment":{"shortText":"Whether to request write or read and write permissions. Defaults to `false`"},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"MediaLibraryPermissionResponse"}],"name":"Promise"}}]},{"name":"getPendingResultAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPendingResultAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Android system sometimes kills the `MainActivity` after the `ImagePicker` finishes. When this\\nhappens, we lost the data selected from the `ImagePicker`. However, you can retrieve the lost\\ndata by calling `getPendingResultAsync`. You can test this functionality by turning on\\n`Don\'t keep activities` in the developer options.","returns":"\\n- **On Android:** a promise that resolves to an array of objects of exactly same type as in\\n`ImagePicker.launchImageLibraryAsync` or `ImagePicker.launchCameraAsync` if the `ImagePicker`\\nfinished successfully. Otherwise, to the array of [`ImagePickerErrorResult`](#imagepickerimagepickererrorresult).\\n- **On other platforms:** an empty array.\\n"},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"union","types":[{"type":"reference","name":"ImagePickerResult"},{"type":"reference","name":"ImagePickerErrorResult"}]}}],"name":"Promise"}}]},{"name":"launchCameraAsync","kind":64,"kindString":"Function","signatures":[{"name":"launchCameraAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Display the system UI for taking a photo with the camera. Requires `Permissions.CAMERA`.\\nOn Android and iOS 10 `Permissions.CAMERA_ROLL` is also required. On mobile web, this must be\\ncalled immediately in a user interaction like a button press, otherwise the browser will bloc\\nthe request without a warning.\\n> **Note:** Make sure that you handle `MainActivity` destruction on **Android**. See [ImagePicker.getPendingResultAsync](#imagepickergetpendingresultasync).\\n> **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\\nTherefore, calling `launchCameraAsync` in `componentDidMount`, for example, will **not** work as\\nintended. The `cancelled` event will not be returned in the browser due to platform restrictions\\nand inconsistencies across browsers.","returns":"If the user cancelled the action, the method returns `{ cancelled: true }`. Otherwise,\\nthis method returns information about the selected media item. When the chosen item is an image,\\nthis method returns `{ cancelled: false, type: \'image\', uri, width, height, exif, base64 }`;\\nwhen the item is a video, this method returns `{ cancelled: false, type: \'video\', uri, width, height, duration }`.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An `ImagePickerOptions` object."},"type":{"type":"reference","name":"ImagePickerOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImagePickerResult"}],"name":"Promise"}}]},{"name":"launchImageLibraryAsync","kind":64,"kindString":"Function","signatures":[{"name":"launchImageLibraryAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Display the system UI for choosing an image or a video from the phone\'s library.\\nRequires `Permissions.MEDIA_LIBRARY` on iOS 10 only. On mobile web, this must be called\\nimmediately in a user interaction like a button press, otherwise the browser will block the\\nrequest without a warning.\\n**Animated GIFs support** If the selected image is an animated GIF, the result image will be an\\nanimated GIF too if and only if `quality` is set to `undefined` and `allowsEditing` is set to `false`.\\nOtherwise compression and/or cropper will pick the first frame of the GIF and return it as the\\nresult (on Android the result will be a PNG, on iOS \u2014 GIF).\\n> **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\\nTherefore, calling `launchImageLibraryAsync` in `componentDidMount`, for example, will **not**\\nwork as intended. The `cancelled` event will not be returned in the browser due to platform\\nrestrictions and inconsistencies across browsers.","returns":"If the user cancelled the action, the method returns `{ cancelled: true }`. Otherwise,\\nthis method returns information about the selected media item. When the chosen item is an image,\\nthis method returns `{ cancelled: false, type: \'image\', uri, width, height, exif, base64 }`;\\nwhen the item is a video, this method returns `{ cancelled: false, type: \'video\', uri, width, height, duration }`.\\n"},"typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter","type":{"type":"reference","name":"ImagePickerOptions"}}],"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"An object extended by [`ImagePickerOptions`](#imagepickeroptions)."},"type":{"type":"reference","name":"T"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"T"}],"name":"ExpandImagePickerResult"}],"name":"Promise"}}]},{"name":"requestCameraPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestCameraPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing camera. This does nothing on web because the\\nbrowser camera is not used.","returns":"A promise that fulfills with an object of type [CameraPermissionResponse](#camerarollpermissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraPermissionResponse"}],"name":"Promise"}}]},{"name":"requestCameraRollPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestCameraRollPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"Deprecated. Use `requestMediaLibraryPermissionsAsync()` instead.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"MediaLibraryPermissionResponse"}],"name":"Promise"}}]},{"name":"requestMediaLibraryPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestMediaLibraryPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing user\'s photo. This method does nothing on web.","returns":"A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\\n"},"parameters":[{"name":"writeOnly","kind":32768,"kindString":"Parameter","comment":{"shortText":"Whether to request write or read and write permissions. Defaults to `false`"},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"MediaLibraryPermissionResponse"}],"name":"Promise"}}]},{"name":"useCameraPermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"useCameraPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to access the camera.\\nThis uses both `requestCameraPermissionsAsync` and `getCameraPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = ImagePicker.useCameraPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"useMediaLibraryPermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"useMediaLibraryPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to access the media library.\\nThis uses both `requestMediaLibraryPermissionsAsync` and `getMediaLibraryPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = ImagePicker.useMediaLibraryPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"writeOnly","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}]}}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"MediaLibraryPermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"MediaLibraryPermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"MediaLibraryPermissionResponse"}],"name":"GetPermissionMethod"}]}}]}]}')},Mv2H:function(e){e.exports=JSON.parse('{"name":"expo-facebook","kind":1,"originalName":"","children":[{"name":"FacebookAuthenticationCredential","kind":16777216,"kindString":"Reference"},{"name":"FacebookAuthenticationCredential","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"appId","kind":1024,"kindString":"Property","comment":{"shortText":"Application ID used to initialize the Facebook SDK app."},"type":{"type":"intrinsic","name":"string"}},{"name":"dataAccessExpirationDate","kind":1024,"kindString":"Property","comment":{"shortText":"Time at which the current user data access expires."},"type":{"type":"reference","name":"Date"}},{"name":"declinedPermissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of requested permissions that the user has declined."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"expirationDate","kind":1024,"kindString":"Property","comment":{"shortText":"Time at which the `token` expires."},"type":{"type":"reference","name":"Date"}},{"name":"expiredPermissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of permissions that were expired with this access token."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"graphDomain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A website domain within the Graph API.","text":"https://developers.facebook.com/docs/graph-api/reference/v5.0/domain\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"permissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of granted permissions."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"refreshDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The last time the `token` was refreshed (or when it was first obtained)"},"type":{"type":"reference","name":"Date"}},{"name":"signedRequest","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A valid raw signed request as a string."},"type":{"type":"intrinsic","name":"string"}},{"name":"token","kind":1024,"kindString":"Property","comment":{"shortText":"Access token for the authenticated session. This token provides access to the Facebook Graph API."},"type":{"type":"intrinsic","name":"string"}},{"name":"tokenSource","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"_(Android only)_ Indicates how this `token` was obtained."},"type":{"type":"intrinsic","name":"string"}},{"name":"userId","kind":1024,"kindString":"Property","comment":{"shortText":"App-scoped Facebook ID of the user."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"FacebookInitializationOptions","kind":16777216,"kindString":"Reference"},{"name":"FacebookInitializationOptions","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"FacebookSDKScriptURLOptions"},{"type":"reference","name":"FacebookSDKInitializationOptions"},{"type":"reference","name":"FacebookNativeInitializationOptions"}]}},{"name":"FacebookLoginResult","kind":16777216,"kindString":"Reference"},{"name":"FacebookLoginResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","type":{"type":"literal","value":"cancel"}}]}},{"type":"intersection","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","type":{"type":"literal","value":"success"}}]}},{"type":"reference","name":"FacebookAuthenticationCredential"}]}]}},{"name":"FacebookNativeInitializationOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"appName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An optional Facebook App Name argument for iOS and Android."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"FacebookOptions","kind":16777216,"kindString":"Reference"},{"name":"FacebookOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"permissions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}}},{"name":"FacebookSDKInitializationOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"appId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Application ID used to initialize the FBSDK app.","text":"On Android and iOS if you don\'t provide this, Facebook SDK will try to use `appId` from Android and iOS.\\napp resources (which in standalone apps you would define in `app.json`, in the Expo client are unavailable, and in bare you configure yourself according to Facebook setup documentation for [iOS](https://developers.facebook.com/docs/facebook-login/ios#4--configure-your-project) and [Android](https://developers.facebook.com/docs/facebook-login/android#manifest)).\\nIf it fails to find one, the promise will be rejected.\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"autoLogAppEvents","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets whether Facebook SDK should log app events. App events involve app eg. installs, app launches (more info [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#auto-events) and [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#auto-events)).\\nIn some cases, you may want to disable or delay the collection of automatically logged events, such as to obtain user consent or fulfill legal obligations.","text":"This method corresponds to:\\n- [iOS disable auto events](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#disable-auto-events)\\n- [Android disable auto events](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#disable-auto-events)\\n"},"type":{"type":"intrinsic","name":"boolean"}},{"name":"version","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Selects the version of FBSDK to use.","text":"https://developers.facebook.com/docs/javascript/reference/FB.init/v5.0\\n"},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"FacebookSDKScriptURLOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"domain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Android: Sets the base Facebook domain to use when making network requests.\\nDefaults to: \'connect.facebook.net\'"},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"flushAsync","kind":64,"kindString":"Function","signatures":[{"name":"flushAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Explicitly kicks off flushing of events to Facebook."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"getAdvertiserIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAdvertiserIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the advertiser ID from Facebook.","returns":"A promise fulfilled with the advertiser id or null if not set.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getAnonymousIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAnonymousIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get an anonymous ID from Facebook.","returns":"A promise fulfilled with an anonymous id or null if not set.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getAttributionIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAttributionIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the attribution ID from Facebook.","returns":"A promise fulfilled with the attribution id or null if not set.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getAuthenticationCredentialAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAuthenticationCredentialAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns the `FacebookAuthenticationCredential` object if a user is authenticated, and `null` if no valid authentication exists.","text":"You can use this method to check if the user should sign in or not.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"FacebookAuthenticationCredential"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks application\'s permissions for using data for tracking the user or the device.","text":">iOS: it requires the NSUserTrackingUsageDescription message added to the info.plist.\\n","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getUserIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"getUserIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the user ID.","returns":"A promise fulfilled with the user id or null if not set.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"initializeAsync","kind":64,"kindString":"Function","signatures":[{"name":"initializeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Calling this method ensures that the SDK is initialized.\\nYou have to call this method before calling any method that uses\\nthe FBSDK (ex: `logInWithReadPermissionsAsync`, `logOutAsync`) to ensure that\\nFacebook support is initialized properly.","text":"- On Android and iOS you can optionally provide an `appId` argument.\\n  - If you don\'t provide `appId`, the Facebook SDK will try to use `appId` from native app resources (which in standalone apps you define in `app.json`, in app store development clients are unavailable, and in bare apps you configure yourself according to [Facebook\'s setup documentation for iOS](https://developers.facebook.com/docs/facebook-login/ios#4--configure-your-project) and [Android](https://developers.facebook.com/docs/facebook-login/android#manifest)). If the Facebook SDK fails to find an `appId` value, the returned promise will be rejected.\\n  - The same resolution mechanism works for `appName`.\\n- If you provide an explicit `appId`, it will override any other source.\\n"},"parameters":[{"name":"optionsOrAppId","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"FacebookInitializationOptions"}]}},{"name":"appName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"logEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs an event with eventName and optional parameters. Supports the optional parameter `valueToSum`,\\nwhich when reported, all of the valueToSum properties are summed together. For example, if 10 people purchased\\none item and each item cost $10 (and passed in valueToSum) then they would be added together to report $100.\\nParameters must be either strings or numbers, otherwise no event will be logged.","text":"To view and test app events, please visit Facebook\'s Event Manager- https://www.facebook.com/events_manager2/list/app/\\n"},"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"parameters","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Params"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logInWithReadPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"logInWithReadPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prompts the user to log into Facebook and grants your app permission to access their Facebook data. On iOS and Android, if the Facebook app isn\'t installed then a web view will be used to authenticate.","returns":"If the user or Facebook cancelled the login, returns { type: \'cancel\' }. Otherwise, returns { type: \'success\' } & [FacebookAuthenticationCredential](#facebookauthenticationcredential).\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of options:\\n - **permissions (array)** -- An array specifying the permissions to ask for from Facebook for this login. The permissions are strings as specified in the [Facebook API documentation](https://developers.facebook.com/docs/permissions/reference). The default permissions are [\'public_profile\', \'email\']."},"type":{"type":"reference","name":"FacebookOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"FacebookLoginResult"}],"name":"Promise"}}]},{"name":"logOutAsync","kind":64,"kindString":"Function","signatures":[{"name":"logOutAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs out of the currently authenticated session."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logPurchaseAsync","kind":64,"kindString":"Function","signatures":[{"name":"logPurchaseAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs a purchase event with the amount, currency code, and optional parameters.\\nParameters must be either strings or numbers, otherwise no event will be logged.\\nSee http://en.wikipedia.org/wiki/ISO_4217 for currencyCodes."},"parameters":[{"name":"purchaseAmount","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}},{"name":"currencyCode","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"parameters","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Params"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logPushNotificationOpenAsync","kind":64,"kindString":"Function","signatures":[{"name":"logPushNotificationOpenAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs an app event that tracks that the application was opened via Push Notification. Accepts\\na string describing the campaign of the Push Notification."},"parameters":[{"name":"campaign","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks for permissions to use data for tracking the user or the device.","text":"> iOS: it requires the NSUserTrackingUsageDescription message added to the info.plist.\\n","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"setAdvertiserIDCollectionEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setAdvertiserIDCollectionEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Whether the Facebook SDK should collect advertiser ID properties, like the Apple IDFA\\nand Android Advertising ID, automatically. Advertiser IDs let you identify and target specific customers.\\nTo learn more visit [Facebook documentation](https://developers.facebook.com/docs/app-ads/targeting/mobile-advertiser-ids)\\ndescribing that topic.","text":"In some cases, you may want to disable or delay the collection of `advertiser-id`,\\nsuch as to obtain user consent or fulfill legal obligations.\\n\\nThis method corresponds to [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#disable-advertiser-id)\\nand [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#disable-advertiser-id) native SDK methods."},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","comment":{"shortText":"Whether `advertiser-id` should be collected\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setAdvertiserTrackingEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setAdvertiserTrackingEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets whether Facebook SDK should enable advertising tracking,\\n(more info [here](https://developers.facebook.com/docs/app-events/guides/advertising-tracking-enabled)).","text":"Limitations:\\n1. AdvertiserTrackingEnabled is only available for iOS 14+.\\n2. For iOS 13 or earlier, AdvertiserTrackingEnabled uses the Limit Ad Tracking setting as its value.\\n\\nThis method corresponds to [this](https://developers.facebook.com/docs/app-events/guides/advertising-tracking-enabled)\\n","returns":"Whether the value is set successfully. It will always return false in Android, iOS 13 and below.\\n"},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","comment":{"shortText":"Whether advertising tracking of the Facebook SDK should be enabled"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"setAutoInitEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setAutoInitEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"Explicitly call `initializeAsync` instead.\\n"}]},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setAutoLogAppEventsEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setAutoLogAppEventsEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets whether Facebook SDK should log app events. App events involve eg. app installs,\\napp launches (more info [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#auto-events)\\nand [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#auto-events)).","text":"In some cases, you may want to disable or delay the collection of automatically logged events,\\nsuch as to obtain user consent or fulfill legal obligations.\\n\\nThis method corresponds to [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#disable-auto-events)\\nand [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#disable-auto-events) native SDK methods.\\n"},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","comment":{"shortText":"Whether automatic events logging of the Facebook SDK should be enabled\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserDataAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUserDataAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets additional data about the user to increase the chances of matching a Facebook user."},"parameters":[{"name":"userData","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"UserData"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserIDAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUserIDAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a custom user ID to associate with all app events.\\nThe userID is persisted until it is cleared by passing nil."},"parameters":[{"name":"userID","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"usePermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"usePermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to use data tracking.\\nThis uses both `requestPermissionsAsync` and `getPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Facebook.usePermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"UserData","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Info about a user to increase chances of matching a Facebook user.\\nSee https://developers.facebook.com/docs/app-events/advanced-matching for\\nmore info about the expected format of each field."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"city","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"country","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"dateOfBirth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"email","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"firstName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"gender","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":"m"},{"type":"literal","value":"f"}]}},{"name":"lastName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"phone","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"zip","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}]}}}]}')},N7yo:function(e){e.exports=JSON.parse('{"name":"expo-calendar","kind":1,"kindString":"Project","originalName":"","children":[{"name":"DayOfTheWeek","kind":8,"kindString":"Enumeration","children":[{"name":"Friday","kind":16,"kindString":"Enumeration member","defaultValue":"6"},{"name":"Monday","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"Saturday","kind":16,"kindString":"Enumeration member","defaultValue":"7"},{"name":"Sunday","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"Thursday","kind":16,"kindString":"Enumeration member","defaultValue":"5"},{"name":"Tuesday","kind":16,"kindString":"Enumeration member","defaultValue":"3"},{"name":"Wednesday","kind":16,"kindString":"Enumeration member","defaultValue":"4"}]},{"name":"MonthOfTheYear","kind":8,"kindString":"Enumeration","children":[{"name":"April","kind":16,"kindString":"Enumeration member","defaultValue":"4"},{"name":"August","kind":16,"kindString":"Enumeration member","defaultValue":"8"},{"name":"December","kind":16,"kindString":"Enumeration member","defaultValue":"12"},{"name":"February","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"January","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"July","kind":16,"kindString":"Enumeration member","defaultValue":"7"},{"name":"June","kind":16,"kindString":"Enumeration member","defaultValue":"6"},{"name":"March","kind":16,"kindString":"Enumeration member","defaultValue":"3"},{"name":"May","kind":16,"kindString":"Enumeration member","defaultValue":"5"},{"name":"November","kind":16,"kindString":"Enumeration member","defaultValue":"11"},{"name":"October","kind":16,"kindString":"Enumeration member","defaultValue":"10"},{"name":"September","kind":16,"kindString":"Enumeration member","defaultValue":"9"}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"Alarm","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A method for having the OS automatically remind the user about an calendar item."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"absoluteDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date object or string representing an absolute time the alarm should occur.\\nOverrides `relativeOffset` and `structuredLocation` if specified alongside either.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"method","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Method of alerting the user that this alarm should use; on iOS this is always a notification.\\nPossible values: [`AlarmMethod`](#calendaralarmmethod).","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"relativeOffset","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Number of minutes from the `startDate` of the calendar item that the alarm should occur.\\nUse negative values to have the alarm occur before the `startDate`."},"type":{"type":"intrinsic","name":"number"}},{"name":"structuredLocation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"AlarmLocation"}}]}}},{"name":"AlarmLocation","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"coords","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"latitude","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"proximity","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"radius","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"title","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Attendee","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A person or entity that is associated with an event by being invited or fulfilling some other role."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"email","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Email address of the attendee.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"id","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Internal ID that represents this attendee on the device.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"isCurrentUser","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates whether or not this attendee is the current OS user.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"Displayed name of the attendee."},"type":{"type":"intrinsic","name":"string"}},{"name":"role","kind":1024,"kindString":"Property","comment":{"shortText":"Role of the attendee at the event.\\nPossible values: [`AttendeeRole`](#calendarattendeerole)."},"type":{"type":"intrinsic","name":"string"}},{"name":"status","kind":1024,"kindString":"Property","comment":{"shortText":"Status of the attendee in relation to the event.\\nPossible values: [`AttendeeStatus`](#calendarattendeestatus)."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the attendee.\\nPossible values: [`AttendeeType`](#calendarattendeetype)."},"type":{"type":"intrinsic","name":"string"}},{"name":"url","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL for the attendee.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Calendar","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A calendar record upon which events (or, on iOS, reminders) can be stored. Settings here apply to\\nthe calendar as a whole and how its events are displayed in the OS calendar app."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accessLevel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Level of access that the user has for the calendar.\\nPossible values: [`CalendarAccessLevel`](#calendarcalendaraccesslevel).","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"allowedAttendeeTypes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Attendee types that this calendar supports.\\nPossible values: Array of [`AttendeeType`](#calendarattendeetype).","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"allowedAvailabilities","kind":1024,"kindString":"Property","comment":{"shortText":"Availability types that this calendar supports.\\nPossible values: Array of [`Availability`](#calendaravailability)."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"allowedReminders","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Alarm methods that this calendar supports.\\nPossible values: Array of [`AlarmMethod`](#calendaralarmmethod).","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"allowsModifications","kind":1024,"kindString":"Property","comment":{"shortText":"Boolean value that determines whether this calendar can be modified."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"color","kind":1024,"kindString":"Property","comment":{"shortText":"Color used to display this calendar\'s events."},"type":{"type":"intrinsic","name":"string"}},{"name":"entityType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the calendar is used in the Calendar or Reminders OS app.\\nPossible values: [`EntityTypes`](#calendarentitytypes).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Internal ID that represents this calendar on the device."},"type":{"type":"intrinsic","name":"string"}},{"name":"isPrimary","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value indicating whether this is the device\'s primary calendar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isSynced","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates whether this calendar is synced and its events stored on the device.\\nUnexpected behavior may occur if this is not set to `true`.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isVisible","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates whether the OS displays events on this calendar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"name","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Internal system name of the calendar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"ownerAccount","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Name for the account that owns this calendar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"source","kind":1024,"kindString":"Property","comment":{"shortText":"Object representing the source to be used for the calendar."},"type":{"type":"reference","name":"Source"}},{"name":"sourceId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"ID of the source to be used for the calendar. Likely the same as the source for any other\\nlocally stored calendars.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"timeZone","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Time zone for the calendar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"title","kind":1024,"kindString":"Property","comment":{"shortText":"Visible name of the calendar."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Type of calendar this object represents.\\nPossible values: [`CalendarType`](#calendarcalendartype).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"DaysOfTheWeek","kind":4194304,"kindString":"Type alias","comment":{"tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"dayOfTheWeek","kind":1024,"kindString":"Property","comment":{"shortText":"Sunday to Saturday - `DayOfTheWeek` enum."},"type":{"type":"reference","name":"DayOfTheWeek"}},{"name":"weekNumber","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"`-53` to `53` (`0` ignores this field, and a negative indicates a value from the end of the range)."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"Event","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An event record, or a single instance of a recurring event. On iOS, used in the Calendar app."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accessLevel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"User\'s access level for the event.\\nPossible values: [`EventAccessLevel`](#calendareventaccesslevel).","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"alarms","kind":1024,"kindString":"Property","comment":{"shortText":"Array of Alarm objects which control automated reminders to the user."},"type":{"type":"array","elementType":{"type":"reference","name":"Alarm"}}},{"name":"allDay","kind":1024,"kindString":"Property","comment":{"shortText":"Whether the event is displayed as an all-day event on the calendar"},"type":{"type":"intrinsic","name":"boolean"}},{"name":"availability","kind":1024,"kindString":"Property","comment":{"shortText":"The availability setting for the event.\\nPossible values: [`Availability`](#calendaravailability)."},"type":{"type":"intrinsic","name":"string"}},{"name":"calendarId","kind":1024,"kindString":"Property","comment":{"shortText":"ID of the calendar that contains this event."},"type":{"type":"intrinsic","name":"string"}},{"name":"creationDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date when the event record was created.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"endDate","kind":1024,"kindString":"Property","comment":{"shortText":"Date object or string representing the time when the event ends."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"endTimeZone","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Time zone for the event end time.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"guestsCanInviteOthers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether invited guests can invite other guests.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"guestsCanModify","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether invited guests can modify the details of the event.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"guestsCanSeeGuests","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether invited guests can see other guests.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Internal ID that represents this event on the device."},"type":{"type":"intrinsic","name":"string"}},{"name":"instanceId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"For instances of recurring events, volatile ID representing this instance. Not guaranteed to\\nalways refer to the same instance.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"isDetached","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value indicating whether or not the event is a detached (modified) instance of a recurring event.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"lastModifiedDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date when the event record was last modified.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"location","kind":1024,"kindString":"Property","comment":{"shortText":"Location field of the event."},"type":{"type":"intrinsic","name":"string"}},{"name":"notes","kind":1024,"kindString":"Property","comment":{"shortText":"Description or notes saved with the event."},"type":{"type":"intrinsic","name":"string"}},{"name":"organizer","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Organizer of the event.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"organizerEmail","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Email address of the organizer of the event.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"originalId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"For detached (modified) instances of recurring events, the ID of the original recurring event.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"originalStartDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"For recurring events, the start date for the first (original) instance of the event.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"recurrenceRule","kind":1024,"kindString":"Property","comment":{"shortText":"Object representing rules for recurring or repeating events. Set to `null` for one-time events."},"type":{"type":"reference","name":"RecurrenceRule"}},{"name":"startDate","kind":1024,"kindString":"Property","comment":{"shortText":"Date object or string representing the time when the event starts."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"status","kind":1024,"kindString":"Property","comment":{"shortText":"Status of the event.\\nPossible values: [`EventStatus`](#calendareventstatus)."},"type":{"type":"intrinsic","name":"string"}},{"name":"timeZone","kind":1024,"kindString":"Property","comment":{"shortText":"Time zone the event is scheduled in."},"type":{"type":"intrinsic","name":"string"}},{"name":"title","kind":1024,"kindString":"Property","comment":{"shortText":"Visible name of the event."},"type":{"type":"intrinsic","name":"string"}},{"name":"url","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL for the event.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"RecurrenceRule","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A recurrence rule for events or reminders, allowing the same calendar item to recur multiple times.\\nThis type is based on [the iOS interface](https://developer.apple.com/documentation/eventkit/ekrecurrencerule/1507320-initrecurrencewithfrequency)\\nwhich is in turn based on [the iCal RFC](https://tools.ietf.org/html/rfc5545#section-3.8.5.3)\\nso you can refer to those to learn more about this potentially complex interface.","text":"Not all of the combinations make sense. For example, when frequency is `DAILY`, setting `daysOfTheMonth` makes no sense.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"daysOfTheMonth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The days of the month this event occurs on.\\n`-31` to `31` (not including `0`). Negative indicates a value from the end of the range.\\nThis field is only valid for `Calendar.Frequency.Monthly`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"name":"daysOfTheWeek","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The days of the week the event should recur on. An array of [`DaysOfTheWeek`](#daysoftheweek) object.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"reference","name":"DaysOfTheWeek"}}},{"name":"daysOfTheYear","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The days of the year this event occurs on.\\n`-366` to `366` (not including `0`). Negative indicates a value from the end of the range.\\nThis field is only valid for `Calendar.Frequency.Yearly`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"name":"endDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date on which the calendar item should stop recurring; overrides `occurrence` if both are specified."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"frequency","kind":1024,"kindString":"Property","comment":{"shortText":"How often the calendar item should recur.\\nPossible values: [`Frequency`](#calendarfrequency)."},"type":{"type":"intrinsic","name":"string"}},{"name":"interval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Interval at which the calendar item should recur. For example, an `interval: 2` with `frequency: DAILY`\\nwould yield an event that recurs every other day.","tags":[{"tag":"default","text":"1\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"monthsOfTheYear","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The months this event occurs on.\\nThis field is only valid for `Calendar.Frequency.Yearly`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"reference","name":"MonthOfTheYear"}}},{"name":"occurrence","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Number of times the calendar item should recur before stopping."},"type":{"type":"intrinsic","name":"number"}},{"name":"setPositions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"TAn array of numbers that filters which recurrences to include. For example, for an event that\\nrecurs every Monday, passing 2 here will make it recur every other Monday.\\n`-366` to `366` (not including `0`). Negative indicates a value from the end of the range.\\nThis field is only valid for `Calendar.Frequency.Yearly`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"name":"weeksOfTheYear","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The weeks of the year this event occurs on.\\n`-53` to `53` (not including `0`). Negative indicates a value from the end of the range.\\nThis field is only valid for `Calendar.Frequency.Yearly`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}]}}},{"name":"RecurringEventOptions","kind":4194304,"kindString":"Type alias","comment":{"tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"futureEvents","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether or not future events in the recurring series should also be updated. If `true`, will\\napply the given changes to the recurring instance specified by `instanceStartDate` and all\\nfuture events in the series. If `false`, will only apply the given changes to the instance\\nspecified by `instanceStartDate`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"instanceStartDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date object representing the start time of the desired instance, if looking for a single instance\\nof a recurring event. If this is not provided and **id** represents a recurring event, the first\\ninstance of that event will be returned by default."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}}]}}},{"name":"Reminder","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A reminder record, used in the iOS Reminders app. No direct analog on Android.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"alarms","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Array of Alarm objects which control automated alarms to the user about the task."},"type":{"type":"array","elementType":{"type":"reference","name":"Alarm"}}},{"name":"calendarId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"ID of the calendar that contains this reminder."},"type":{"type":"intrinsic","name":"string"}},{"name":"completed","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates whether or not the task has been completed."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"completionDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date object or string representing the date of completion, if `completed` is `true`.\\nSetting this property of a nonnull `Date` will automatically set the reminder\'s `completed` value to `true`."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"creationDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date when the reminder record was created."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"dueDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date object or string representing the time when the reminder task is due."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"id","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Internal ID that represents this reminder on the device."},"type":{"type":"intrinsic","name":"string"}},{"name":"lastModifiedDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date when the reminder record was last modified."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"location","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Location field of the reminder"},"type":{"type":"intrinsic","name":"string"}},{"name":"notes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Description or notes saved with the reminder."},"type":{"type":"intrinsic","name":"string"}},{"name":"recurrenceRule","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Object representing rules for recurring or repeated reminders. Null for one-time tasks."},"type":{"type":"reference","name":"RecurrenceRule"}},{"name":"startDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date object or string representing the start date of the reminder task."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"timeZone","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Time zone the reminder is scheduled in."},"type":{"type":"intrinsic","name":"string"}},{"name":"title","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Visible name of the reminder."},"type":{"type":"intrinsic","name":"string"}},{"name":"url","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL for the reminder."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Source","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A source account that owns a particular calendar. Expo apps will typically not need to interact with `Source` objects."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"id","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Internal ID that represents this source on the device.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"isLocalAccount","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether this source is the local phone account. Must be `true` if `type` is `undefined`.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"Name for the account that owns this calendar and was used to sync the calendar to the device."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the account that owns this calendar and was used to sync it to the device.\\nIf `isLocalAccount` is falsy then this must be defined, and must match an account on the device\\nalong with `name`, or the OS will delete the calendar.\\nOn iOS, one of [`SourceType`](#calendarsourcetype)s."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AlarmMethod","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"ALARM","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'alarm\'"},{"name":"ALERT","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'alert\'"},{"name":"DEFAULT","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'default\'"},{"name":"EMAIL","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'email\'"},{"name":"SMS","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'sms\'"}]}},"defaultValue":"..."},{"name":"AttendeeRole","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"ATTENDEE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'attendee\'"},{"name":"CHAIR","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'chair\'"},{"name":"NONE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'none\'"},{"name":"NON_PARTICIPANT","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'nonParticipant\'"},{"name":"OPTIONAL","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'optional\'"},{"name":"ORGANIZER","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'organizer\'"},{"name":"PERFORMER","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'performer\'"},{"name":"REQUIRED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'required\'"},{"name":"SPEAKER","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'speaker\'"},{"name":"UNKNOWN","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'unknown\'"}]}},"defaultValue":"..."},{"name":"AttendeeStatus","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"ACCEPTED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'accepted\'"},{"name":"COMPLETED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'completed\'"},{"name":"DECLINED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'declined\'"},{"name":"DELEGATED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'delegated\'"},{"name":"INVITED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'invited\'"},{"name":"IN_PROCESS","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'inProcess\'"},{"name":"NONE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'none\'"},{"name":"PENDING","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'pending\'"},{"name":"TENTATIVE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'tentative\'"},{"name":"UNKNOWN","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'unknown\'"}]}},"defaultValue":"..."},{"name":"AttendeeType","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"GROUP","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'group\'"},{"name":"NONE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'none\'"},{"name":"OPTIONAL","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'optional\'"},{"name":"PERSON","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'person\'"},{"name":"REQUIRED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'required\'"},{"name":"RESOURCE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'resource\'"},{"name":"ROOM","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'room\'"},{"name":"UNKNOWN","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'unknown\'"}]}},"defaultValue":"..."},{"name":"Availability","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"BUSY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'busy\'"},{"name":"FREE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'free\'"},{"name":"NOT_SUPPORTED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'notSupported\'"},{"name":"TENTATIVE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'tentative\'"},{"name":"UNAVAILABLE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'unavailable\'"}]}},"defaultValue":"..."},{"name":"CalendarAccessLevel","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"CONTRIBUTOR","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'contributor\'"},{"name":"EDITOR","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'editor\'"},{"name":"FREEBUSY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'freebusy\'"},{"name":"NONE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'none\'"},{"name":"OVERRIDE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'override\'"},{"name":"OWNER","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'owner\'"},{"name":"READ","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'read\'"},{"name":"RESPOND","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'respond\'"},{"name":"ROOT","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'root\'"}]}},"defaultValue":"..."},{"name":"CalendarType","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"BIRTHDAYS","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'birthdays\'"},{"name":"CALDAV","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'caldav\'"},{"name":"EXCHANGE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'exchange\'"},{"name":"LOCAL","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'local\'"},{"name":"SUBSCRIBED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'subscribed\'"},{"name":"UNKNOWN","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'unknown\'"}]}},"defaultValue":"..."},{"name":"EntityTypes","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"EVENT","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'event\'"},{"name":"REMINDER","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'reminder\'"}]}},"defaultValue":"..."},{"name":"EventAccessLevel","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"CONFIDENTIAL","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'confidential\'"},{"name":"DEFAULT","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'default\'"},{"name":"PRIVATE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'private\'"},{"name":"PUBLIC","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'public\'"}]}},"defaultValue":"..."},{"name":"EventStatus","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"CANCELED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'canceled\'"},{"name":"CONFIRMED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'confirmed\'"},{"name":"NONE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'none\'"},{"name":"TENTATIVE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'tentative\'"}]}},"defaultValue":"..."},{"name":"Frequency","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"DAILY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'daily\'"},{"name":"MONTHLY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'monthly\'"},{"name":"WEEKLY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'weekly\'"},{"name":"YEARLY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'yearly\'"}]}},"defaultValue":"..."},{"name":"ReminderStatus","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"COMPLETED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'completed\'"},{"name":"INCOMPLETE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'incomplete\'"}]}},"defaultValue":"..."},{"name":"SourceType","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"BIRTHDAYS","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'birthdays\'"},{"name":"CALDAV","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'caldav\'"},{"name":"EXCHANGE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'exchange\'"},{"name":"LOCAL","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'local\'"},{"name":"MOBILEME","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'mobileme\'"},{"name":"SUBSCRIBED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'subscribed\'"}]}},"defaultValue":"..."},{"name":"createAttendeeAsync","kind":64,"kindString":"Function","signatures":[{"name":"createAttendeeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates a new attendee record and adds it to the specified event. Note that if `eventId` specifies\\na recurring event, this will add the attendee to every instance of the event.","returns":"A string representing the ID of the newly created attendee record.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"eventId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the event to add this attendee to."},"type":{"type":"intrinsic","name":"string"}},{"name":"details","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of details for the attendee to be created."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Attendee"}],"name":"Partial"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"createCalendarAsync","kind":64,"kindString":"Function","signatures":[{"name":"createCalendarAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates a new calendar on the device, allowing events to be added later and displayed in the OS Calendar app.","returns":"A string representing the ID of the newly created calendar.\\n"},"parameters":[{"name":"details","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of details for the calendar to be created."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Calendar"}],"name":"Partial"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"createEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"createEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates a new event on the specified calendar.","returns":"A promise which fulfils with a string representing the ID of the newly created event.\\n"},"parameters":[{"name":"calendarId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the calendar to create this event in."},"type":{"type":"intrinsic","name":"string"}},{"name":"eventData","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of details for the event to be created."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Event"}],"name":"Partial"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"createReminderAsync","kind":64,"kindString":"Function","signatures":[{"name":"createReminderAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates a new reminder on the specified calendar.","returns":"A promise which fulfils with a string representing the ID of the newly created reminder.","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"calendarId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the calendar to create this reminder in (or `null` to add the calendar to\\nthe OS-specified default calendar for reminders)."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"name":"reminder","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of details for the reminder to be created"},"type":{"type":"reference","name":"Reminder"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"deleteAttendeeAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteAttendeeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Deletes an existing attendee record from the device. __Use with caution.__","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the attendee to delete."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"deleteCalendarAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteCalendarAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Deletes an existing calendar and all associated events/reminders/attendees from the device. __Use with caution.__"},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the calendar to delete.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"deleteEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Deletes an existing event from the device. Use with caution."},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the event to be deleted."},"type":{"type":"intrinsic","name":"string"}},{"name":"recurringEventOptions","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of options for recurring events.\\n"},"type":{"type":"reference","name":"RecurringEventOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"deleteReminderAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteReminderAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Deletes an existing reminder from the device. __Use with caution.__","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the reminder to be deleted."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"getAttendeesForEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAttendeesForEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets all attendees for a given event (or instance of a recurring event).","returns":"A promise which fulfils with an array of [`Attendee`](#attendee) associated with the\\nspecified event.\\n"},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the event to return attendees for."},"type":{"type":"intrinsic","name":"string"}},{"name":"recurringEventOptions","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of options for recurring events."},"type":{"type":"reference","name":"RecurringEventOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Attendee"}}],"name":"Promise"}}]},{"name":"getCalendarPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCalendarPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing user\'s calendars.","returns":"A promise that resolves to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getCalendarsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCalendarsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets an array of calendar objects with details about the different calendars stored on the device.","returns":"An array of [calendar objects](#calendar \'Calendar\') matching the provided entity type (if provided).\\n"},"parameters":[{"name":"entityType","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"__iOS Only.__ Not required, but if defined, filters the returned calendars to\\na specific entity type. Possible values are `Calendar.EntityTypes.EVENT` (for calendars shown in\\nthe Calendar app) and `Calendar.EntityTypes.REMINDER` (for the Reminders app). **Note:** if not\\ndefined, you will need both permissions: **CALENDAR** and **REMINDERS**."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Calendar"}}],"name":"Promise"}}]},{"name":"getDefaultCalendarAsync","kind":64,"kindString":"Function","signatures":[{"name":"getDefaultCalendarAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets an instance of the default calendar object.","returns":"A promise resolving to the [Calendar](#calendar) object that is the user\'s default calendar.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Calendar"}],"name":"Promise"}}]},{"name":"getEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"getEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a specific event selected by ID. If a specific instance of a recurring event is desired,\\nthe start date of this instance must also be provided, as instances of recurring events do not\\nhave their own unique and stable IDs on either iOS or Android.","returns":"A promise which fulfils with an [`Event`](#event) object matching the provided criteria, if one exists.\\n"},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the event to return."},"type":{"type":"intrinsic","name":"string"}},{"name":"recurringEventOptions","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of options for recurring events."},"type":{"type":"reference","name":"RecurringEventOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Event"}],"name":"Promise"}}]},{"name":"getEventsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getEventsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns all events in a given set of calendars over a specified time period. The filtering has\\nslightly different behavior per-platform - on iOS, all events that overlap at all with the\\n`[startDate, endDate]` interval are returned, whereas on Android, only events that begin on or\\nafter the `startDate` and end on or before the `endDate` will be returned.","returns":"A promise which fulfils with an array of [`Event`](#event) objects matching the search criteria.\\n"},"parameters":[{"name":"calendarIds","kind":32768,"kindString":"Parameter","comment":{"shortText":"Array of IDs of calendars to search for events in."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"startDate","kind":32768,"kindString":"Parameter","comment":{"shortText":"Beginning of time period to search for events in."},"type":{"type":"reference","name":"Date"}},{"name":"endDate","kind":32768,"kindString":"Parameter","comment":{"shortText":"End of time period to search for events in."},"type":{"type":"reference","name":"Date"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Event"}}],"name":"Promise"}}]},{"name":"getReminderAsync","kind":64,"kindString":"Function","signatures":[{"name":"getReminderAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a specific reminder selected by ID.","returns":"A promise which fulfils with a [`Reminder`](#reminder) matching the provided ID, if one exists.","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the reminder to return."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Reminder"}],"name":"Promise"}}]},{"name":"getRemindersAsync","kind":64,"kindString":"Function","signatures":[{"name":"getRemindersAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a list of reminders matching the provided criteria. If `startDate` and `endDate` are defined,\\nreturns all reminders that overlap at all with the [startDate, endDate] interval - i.e. all reminders\\nthat end after the `startDate` or begin before the `endDate`.","returns":"A promise which fulfils with an array of [`Reminder`](#reminder) objects matching the search criteria.","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"calendarIds","kind":32768,"kindString":"Parameter","comment":{"shortText":"Array of IDs of calendars to search for reminders in."},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}},{"name":"status","kind":32768,"kindString":"Parameter","comment":{"shortText":"One of `Calendar.ReminderStatus.COMPLETED` or `Calendar.ReminderStatus.INCOMPLETE`."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"name":"startDate","kind":32768,"kindString":"Parameter","comment":{"shortText":"Beginning of time period to search for reminders in. Required if `status` is defined."},"type":{"type":"reference","name":"Date"}},{"name":"endDate","kind":32768,"kindString":"Parameter","comment":{"shortText":"End of time period to search for reminders in. Required if `status` is defined."},"type":{"type":"reference","name":"Date"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Reminder"}}],"name":"Promise"}}]},{"name":"getRemindersPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getRemindersPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing user\'s reminders.","returns":"A promise that resolves to an object of type [`PermissionResponse`](#permissionresponse).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getSourceAsync","kind":64,"kindString":"Function","signatures":[{"name":"getSourceAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a specific source selected by ID.","returns":"A promise which fulfils with an array of [`Source`](#source) object matching the provided\\nID, if one exists.","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the source to return."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Source"}],"name":"Promise"}}]},{"name":"getSourcesAsync","kind":64,"kindString":"Function","signatures":[{"name":"getSourcesAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"A promise which fulfils with an array of [`Source`](#source) objects all sources for\\ncalendars stored on the device.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Source"}}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the Calendar API is enabled on the current device. This does not check the app permissions.","returns":"Async `boolean`, indicating whether the Calendar API is available on the current device.\\nCurrently, this resolves `true` on iOS and Android only.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"openEventInCalendar","kind":64,"kindString":"Function","signatures":[{"name":"openEventInCalendar","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sends an intent to open the specified event in the OS Calendar app.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the event to open."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"requestCalendarPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestCalendarPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing user\'s calendars.","returns":"A promise that resolves to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"Deprecated. Use [`requestCalendarPermissionsAsync()`](#calendarrequestcalendarpermissionsasync) instead.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestRemindersPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestRemindersPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing user\'s reminders.","returns":"A promise that resolves to an object of type [`PermissionResponse`](#permissionresponse).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"updateAttendeeAsync","kind":64,"kindString":"Function","signatures":[{"name":"updateAttendeeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Updates an existing attendee record. To remove a property, explicitly set it to `null` in `details`.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the attendee record to be updated."},"type":{"type":"intrinsic","name":"string"}},{"name":"details","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of properties to be updated."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Attendee"}],"name":"Partial"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"updateCalendarAsync","kind":64,"kindString":"Function","signatures":[{"name":"updateCalendarAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Updates the provided details of an existing calendar stored on the device. To remove a property,\\nexplicitly set it to `null` in `details`."},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the calendar to update."},"type":{"type":"intrinsic","name":"string"}},{"name":"details","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of properties to be updated.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Calendar"}],"name":"Partial"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"updateEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"updateEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Updates the provided details of an existing calendar stored on the device. To remove a property,\\nexplicitly set it to `null` in `details`."},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the event to be updated."},"type":{"type":"intrinsic","name":"string"}},{"name":"details","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of properties to be updated."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Event"}],"name":"Partial"},"defaultValue":"{}"},{"name":"recurringEventOptions","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of options for recurring events.\\n"},"type":{"type":"reference","name":"RecurringEventOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"updateReminderAsync","kind":64,"kindString":"Function","signatures":[{"name":"updateReminderAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Updates the provided details of an existing reminder stored on the device. To remove a property,\\nexplicitly set it to `null` in `details`.","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the reminder to be updated."},"type":{"type":"intrinsic","name":"string"}},{"name":"details","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of properties to be updated."},"type":{"type":"reference","name":"Reminder"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"useCalendarPermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"useCalendarPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to access the calendar.\\nThis uses both `getCalendarPermissionsAsync` and `requestCalendarPermissionsAsync` to interact\\nwith the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Calendar.useCalendarPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"useRemindersPermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"useRemindersPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to access reminders.\\nThis uses both `getRemindersPermissionsAsync` and `requestRemindersPermissionsAsync` to interact\\nwith the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Calendar.useRemindersPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}]}')},NNOl:function(e,w,n){"use strict";var c=n("E/Jm"),p=n("Vx/6"),d=n("O+c1"),a=n("yRGd"),m={name:"codeIndented",tokenize:i,resolve:s},r={tokenize:o,partial:!0};function s(t,l){var k={type:"codeIndented",start:t[0][1].start,end:t[t.length-1][1].end};return p(t,0,0,[["enter",k,l]]),p(t,t.length,0,[["exit",k,l]]),t}function i(t,l,k){return t.attempt(r,g,k);function g(f){return f===null?l(f):c(f)?t.attempt(r,g,l)(f):(t.enter("codeFlowValue"),h(f))}function h(f){return f===null||c(f)?(t.exit("codeFlowValue"),g(f)):(t.consume(f),h)}}function o(t,l,k){var g=this;return a(t,h,"linePrefix",4+1);function h(f){return c(f)?(t.enter("lineEnding"),t.consume(f),t.exit("lineEnding"),a(t,h,"linePrefix",4+1)):d(g.events,"linePrefix")<4?k(f):l(f)}}e.exports=m},NOby:function(e,w,n){"use strict";var c=Object.assign;e.exports=c},Ne9V:function(e){e.exports=JSON.parse(`{"name":"expo-analytics-amplitude","kind":1,"kindString":"Project","originalName":"","children":[{"name":"AmplitudeTrackingOptions","kind":256,"kindString":"Interface","children":[{"name":"disableAdid","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableCarrier","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device's carrier."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableCity","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's city."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableCountry","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's country."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableDMA","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's DMA."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableDeviceBrand","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device brand."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableDeviceManufacturer","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device manufacturer."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableDeviceModel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device model."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableIDFV","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's IDFV."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableIPAddress","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's IP address."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableLanguage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device's language."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableLatLng","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's current latitude and longitude coordinates."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableOSName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device's OS name."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableOSVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device's OS version."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disablePlatform","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device's platform."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableRegion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's region."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableVersionName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the app version the user is on for your app."},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"clearUserPropertiesAsync","kind":64,"kindString":"Function","signatures":[{"name":"clearUserPropertiesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Clear properties set by [\`setUserPropertiesAsync()\`](#amplitudesetuserpropertiesasyncuserproperties)."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"initializeAsync","kind":64,"kindString":"Function","signatures":[{"name":"initializeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Initializes Amplitude with your Amplitude API key. If you're having trouble finding your API key,\\nsee [step 4 of these instructions](https://amplitude.zendesk.com/hc/en-us/articles/207108137-Introduction-Getting-Started#getting-started)."},"parameters":[{"name":"apiKey","kind":32768,"kindString":"Parameter","comment":{"shortText":"Your Amplitude application's API key.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"logEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"logEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Log an event to Amplitude. For more information about what kind of events to track,\\n[see here](https://amplitude.zendesk.com/hc/en-us/articles/206404698-Step-3-Track-Events-and-Understand-the-Actions-Users-Take)."},"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","comment":{"shortText":"The event name.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"logEventWithPropertiesAsync","kind":64,"kindString":"Function","signatures":[{"name":"logEventWithPropertiesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Log an event to Amplitude with custom properties. For more information about what kind of events\\nto track, [see here](https://amplitude.zendesk.com/hc/en-us/articles/206404698-Step-3-Track-Events-and-Understand-the-Actions-Users-Take)."},"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","comment":{"shortText":"The event name."},"type":{"type":"intrinsic","name":"string"}},{"name":"properties","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of custom properties.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setGroupAsync","kind":64,"kindString":"Function","signatures":[{"name":"setGroupAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Add the current user to a group. For more information, see here for [iOS](https://github.com/amplitude/Amplitude-iOS#setting-groups)\\nand see here for [Android](https://github.com/amplitude/Amplitude-Android#setting-groups)."},"parameters":[{"name":"groupType","kind":32768,"kindString":"Parameter","comment":{"shortText":"The group name, e.g. \\"sports\\"."},"type":{"type":"intrinsic","name":"string"}},{"name":"groupNames","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of group names, e.g. [\\"tennis\\", \\"soccer\\"].\\n> **Note:** The iOS and Android Amplitude SDKs allow you to use a string or an array of strings. We\\nonly support an array of strings. Just use an array with one element if you only want one group\\nname.\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setTrackingOptionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"setTrackingOptionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"By default, the Amplitude SDK will track several user properties such as carrier and city. You\\ncan use this method to customize and disable individual fields.\\n> **Note:** These configurations will prevent default properties from being tracked on newly\\ncreated projects, where data has not yet been sent. Please contact [platform@amplitude.com](mailto:platform@amplitude.com)\\nif you would like default properties blocked (moving forward) on projects with existing data."},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"Options object for what should not be tracked. The table below describes what\\nproperties the object may contain. All properties are expected to be booleans. For example,\\npassing \`disableCarrier: true\` disables tracking the device's carrier.\\n"},"type":{"type":"reference","name":"AmplitudeTrackingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setUserIdAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUserIdAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Assign a user ID to the current user. If you don't have a system for user IDs you don't need to\\ncall this. See [this page](https://amplitude.zendesk.com/hc/en-us/articles/206404628-Step-2-Assign-User-IDs-and-Identify-your-Users)\\nfor details."},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","comment":{"shortText":"User ID for the current user. Can be set to \`null\` (e.g. when the user is logging out).\\n"},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setUserPropertiesAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUserPropertiesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Set properties for the current user. See [here for details](https://amplitude.zendesk.com/hc/en-us/articles/207108327-Step-4-Set-User-Properties-and-Event-Properties)."},"parameters":[{"name":"userProperties","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of custom properties.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}`)},NfWH:function(e,w){e.exports=n;function n(c){var p=c.options.listItemIndent||"tab";if(p===1||p==="1")return"one";if(p!=="tab"&&p!=="one"&&p!=="mixed")throw new Error("Cannot serialize items with `"+p+"` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`");return p}},Ny5O:function(e,w,n){"use strict";var c=n("rm/B"),p=c(/[\dA-Za-z]/);e.exports=p},"O+LE":function(e){e.exports=JSON.parse('{"name":"expo-navigation-bar","kind":1,"kindString":"Project","originalName":"","children":[{"name":"NavigationBarBehavior","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Interaction behavior for the system navigation bar."},"type":{"type":"union","types":[{"type":"literal","value":"overlay-swipe"},{"type":"literal","value":"inset-swipe"},{"type":"literal","value":"inset-touch"}]}},{"name":"NavigationBarButtonStyle","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Appearance of the foreground elements in the navigation bar, i.e. the color of the menu, back, home button icons.","text":"- `dark` makes buttons **darker** to adjust for a mostly light nav bar.\\n- `light` makes buttons **lighter** to adjust for a mostly dark nav bar.\\n"},"type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"}]}},{"name":"NavigationBarPosition","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Navigation bar positional mode."},"type":{"type":"union","types":[{"type":"literal","value":"relative"},{"type":"literal","value":"absolute"}]}},{"name":"NavigationBarVisibility","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Visibility of the navigation bar."},"type":{"type":"union","types":[{"type":"literal","value":"visible"},{"type":"literal","value":"hidden"}]}},{"name":"NavigationBarVisibilityEvent","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Current system UI visibility state. Due to platform constraints, this will return when the status bar visibility changes as well as the navigation bar."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"rawVisibility","kind":1024,"kindString":"Property","comment":{"shortText":"Native Android system UI visibility state, returned from the native Android `setOnSystemUiVisibilityChangeListener` API."},"type":{"type":"intrinsic","name":"number"}},{"name":"visibility","kind":1024,"kindString":"Property","comment":{"shortText":"Current navigation bar visibility."},"type":{"type":"reference","name":"NavigationBarVisibility"}}]}}},{"name":"addVisibilityListener","kind":64,"kindString":"Function","signatures":[{"name":"addVisibilityListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Observe changes to the system navigation bar.\\nDue to platform constraints, this callback will also be triggered when the status bar visibility changes.","tags":[{"tag":"example","text":"\\n```ts\\nNavigationBar.addVisibilityListener(({ visibility }) => {\\n  // ...\\n});\\n```\\n"}]},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"NavigationBarVisibilityEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getBackgroundColorAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBackgroundColorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the navigation bar\'s background color.","returns":"Current navigation bar color in hex format. Returns `#00000000` (transparent) on unsupported platforms (iOS, web).\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst color = await NavigationBar.getBackgroundColorAsync();\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ColorValue"}],"name":"Promise"}}]},{"name":"getBehaviorAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBehaviorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the behavior of the status and navigation bars when the user swipes or touches the screen.","returns":"Navigation bar interaction behavior. Returns `inset-touch` on unsupported platforms (iOS, web).\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait NavigationBar.getBehaviorAsync()\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"NavigationBarBehavior"}],"name":"Promise"}}]},{"name":"getBorderColorAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBorderColorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the navigation bar\'s top border color, also known as the \\"divider color\\".","returns":"Navigation bar top border color in hex format. Returns `#00000000` (transparent) on unsupported platforms (iOS, web).\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst color = await NavigationBar.getBorderColorAsync();\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ColorValue"}],"name":"Promise"}}]},{"name":"getButtonStyleAsync","kind":64,"kindString":"Function","signatures":[{"name":"getButtonStyleAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the navigation bar\'s button color styles.","returns":"Navigation bar foreground element color settings. Returns `light` on unsupported platforms (iOS, web).\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst style = await NavigationBar.getButtonStyleAsync();\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"NavigationBarButtonStyle"}],"name":"Promise"}}]},{"name":"getVisibilityAsync","kind":64,"kindString":"Function","signatures":[{"name":"getVisibilityAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the navigation bar\'s visibility.","returns":"Navigation bar\'s current visibility status. Returns `hidden` on unsupported platforms (iOS, web).\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst visibility = await NavigationBar.getVisibilityAsync(\\"hidden\\");\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"NavigationBarVisibility"}],"name":"Promise"}}]},{"name":"setBackgroundColorAsync","kind":64,"kindString":"Function","signatures":[{"name":"setBackgroundColorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Changes the navigation bar\'s background color.","tags":[{"tag":"example","text":"\\n```ts\\nNavigationBar.setBackgroundColorAsync(\\"white\\");\\n```"}]},"parameters":[{"name":"color","kind":32768,"kindString":"Parameter","comment":{"shortText":"Any valid [CSS 3 (SVG) color](http://www.w3.org/TR/css3-color/#svg-color).\\n"},"type":{"type":"reference","name":"ColorValue"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setBehaviorAsync","kind":64,"kindString":"Function","signatures":[{"name":"setBehaviorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the behavior of the status bar and navigation bar when they are hidden and the user wants to reveal them.","text":"For example, if the navigation bar is hidden (`setVisibilityAsync(false)`) and the behavior\\nis `\'overlay-swipe\'`, the user can swipe from the bottom of the screen to temporarily reveal the navigation bar.\\n\\n- `\'overlay-swipe\'`: Temporarily reveals the System UI after a swipe gesture (bottom or top) without insetting your App\'s content.\\n- `\'inset-swipe\'`: Reveals the System UI after a swipe gesture (bottom or top) and insets your App\'s content (Safe Area). The System UI is visible until you explicitly hide it again.\\n- `\'inset-touch\'`: Reveals the System UI after a touch anywhere on the screen and insets your App\'s content (Safe Area). The System UI is visible until you explicitly hide it again.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait NavigationBar.setBehaviorAsync(\'overlay-swipe\')\\n```"}]},"parameters":[{"name":"behavior","kind":32768,"kindString":"Parameter","comment":{"shortText":"Dictates the interaction behavior of the navigation bar.\\n"},"type":{"type":"reference","name":"NavigationBarBehavior"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setBorderColorAsync","kind":64,"kindString":"Function","signatures":[{"name":"setBorderColorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Changes the navigation bar\'s border color.","tags":[{"tag":"example","text":"\\n```ts\\nNavigationBar.setBorderColorAsync(\\"red\\");\\n```"}]},"parameters":[{"name":"color","kind":32768,"kindString":"Parameter","comment":{"shortText":"Any valid [CSS 3 (SVG) color](http://www.w3.org/TR/css3-color/#svg-color).\\n"},"type":{"type":"reference","name":"ColorValue"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setButtonStyleAsync","kind":64,"kindString":"Function","signatures":[{"name":"setButtonStyleAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Changes the navigation bar\'s button colors between white (`light`) and a dark gray color (`dark`).","tags":[{"tag":"example","text":"\\n```ts\\nNavigationBar.setButtonStyleAsync(\\"light\\");\\n```"}]},"parameters":[{"name":"style","kind":32768,"kindString":"Parameter","comment":{"shortText":"Dictates the color of the foreground element color.\\n"},"type":{"type":"reference","name":"NavigationBarButtonStyle"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setPositionAsync","kind":64,"kindString":"Function","signatures":[{"name":"setPositionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets positioning method used for the navigation bar (and status bar).\\nSetting position `absolute` will float the navigation bar above the content,\\nwhereas position `relative` will shrink the screen to inline the navigation bar.","text":"When drawing behind the status and navigation bars, ensure the safe area insets are adjusted accordingly.\\n","tags":[{"tag":"example","text":"\\n```ts\\n// enables edge-to-edge mode\\nawait NavigationBar.setPositionAsync(\'absolute\')\\n// transparent backgrounds to see through\\nawait NavigationBar.setBackgroundColorAsync(\'#ffffff00\')\\n```"}]},"parameters":[{"name":"position","kind":32768,"kindString":"Parameter","comment":{"shortText":"Based on CSS position property.\\n"},"type":{"type":"reference","name":"NavigationBarPosition"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setVisibilityAsync","kind":64,"kindString":"Function","signatures":[{"name":"setVisibilityAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Set the navigation bar\'s visibility.","tags":[{"tag":"example","text":"\\n```ts\\nNavigationBar.setVisibilityAsync(\\"hidden\\");\\n```"}]},"parameters":[{"name":"visibility","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"NavigationBarVisibility"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"unstable_getPositionAsync","kind":64,"kindString":"Function","signatures":[{"name":"unstable_getPositionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Whether the navigation and status bars float above the app (absolute) or sit inline with it (relative).\\nThis value can be incorrect if `androidNavigationBar.visible` is used instead of the config plugin `position` property.","text":"This method is unstable because the position can be set via another native module and get out of sync.\\nAlternatively, you can get the position by measuring the insets returned by `react-native-safe-area-context`.\\n","returns":"Navigation bar positional rendering mode. Returns `relative` on unsupported platforms (iOS, web).\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait NavigationBar.unstable_getPositionAsync()\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"NavigationBarPosition"}],"name":"Promise"}}]},{"name":"useVisibility","kind":64,"kindString":"Function","signatures":[{"name":"useVisibility","kind":4096,"kindString":"Call signature","comment":{"shortText":"React hook that statefully updates with the visibility of the system navigation bar.","returns":"Visibility of the navigation bar, `null` during async initialization.\\n","tags":[{"tag":"example","text":"\\n```ts\\nfunction App() {\\n  const visibility = NavigationBar.useVisibility()\\n  // React Component...\\n}\\n```"}]},"type":{"type":"union","types":[{"type":"reference","name":"NavigationBarVisibility"},{"type":"literal","value":null}]}}]}]}')},"O+c1":function(e,w,n){"use strict";var c=n("jeK3");function p(d,a){var m=d[d.length-1];return!m||m[1].type!==a?0:c(m[2].sliceStream(m[1]))}e.exports=p},OaLn:function(e,w,n){"use strict";var c=n("Q3zd"),p=n("HtLg"),d=n("Vx/6"),a=n("Bh6z"),m=n("Ig3s"),r=n("T0BQ"),s=n("haLp"),i=n("kViG"),o=n("9ppO"),t=n("0mGV"),l={name:"labelEnd",tokenize:b,resolveTo:S,resolveAll:f},k={tokenize:P},g={tokenize:y},h={tokenize:v};function f(u){for(var C=-1,R;++C<u.length;)R=u[C][1],!R._used&&(R.type==="labelImage"||R.type==="labelLink"||R.type==="labelEnd")&&(u.splice(C+1,R.type==="labelImage"?4:2),R.type="data",C++);return u}function S(u,C){for(var R=u.length,F=0,j,I,W,L,K,D,ee;R--;)if(L=u[R][1],K){if(L.type==="link"||L.type==="labelLink"&&L._inactive)break;u[R][0]==="enter"&&L.type==="labelLink"&&(L._inactive=!0)}else if(D){if(u[R][0]==="enter"&&(L.type==="labelImage"||L.type==="labelLink")&&!L._balanced&&(K=R,L.type!=="labelLink")){F=2;break}}else L.type==="labelEnd"&&(D=R);return j={type:u[K][1].type==="labelLink"?"link":"image",start:r(u[K][1].start),end:r(u[u.length-1][1].end)},I={type:"label",start:r(u[K][1].start),end:r(u[D][1].end)},W={type:"labelText",start:r(u[K+F+2][1].end),end:r(u[D-2][1].start)},ee=[["enter",j,C],["enter",I,C]],ee=p(ee,u.slice(K+1,K+F+3)),ee=p(ee,[["enter",W,C]]),ee=p(ee,m(C.parser.constructs.insideSpan.null,u.slice(K+F+4,D-3),C)),ee=p(ee,[["exit",W,C],u[D-2],u[D-1],["exit",I,C]]),ee=p(ee,u.slice(D+1)),ee=p(ee,[["exit",j,C]]),d(u,K,u.length,ee),u}function b(u,C,R){for(var F=this,j=F.events.length,I,W;j--;)if((F.events[j][1].type==="labelImage"||F.events[j][1].type==="labelLink")&&!F.events[j][1]._balanced){I=F.events[j][1];break}return L;function L(ee){return I?I._inactive?D(ee):(W=F.parser.defined.indexOf(a(F.sliceSerialize({start:I.end,end:F.now()})))>-1,u.enter("labelEnd"),u.enter("labelMarker"),u.consume(ee),u.exit("labelMarker"),u.exit("labelEnd"),K):R(ee)}function K(ee){return ee===40?u.attempt(k,C,W?C:D)(ee):ee===91?u.attempt(g,C,W?u.attempt(h,C,D):D)(ee):W?C(ee):D(ee)}function D(ee){return I._balanced=!0,R(ee)}}function P(u,C,R){return F;function F(K){return u.enter("resource"),u.enter("resourceMarker"),u.consume(K),u.exit("resourceMarker"),t(u,j)}function j(K){return K===41?L(K):s(u,I,R,"resourceDestination","resourceDestinationLiteral","resourceDestinationLiteralMarker","resourceDestinationRaw","resourceDestinationString",3)(K)}function I(K){return c(K)?t(u,W)(K):L(K)}function W(K){return K===34||K===39||K===40?o(u,t(u,L),R,"resourceTitle","resourceTitleMarker","resourceTitleString")(K):L(K)}function L(K){return K===41?(u.enter("resourceMarker"),u.consume(K),u.exit("resourceMarker"),u.exit("resource"),C):R(K)}}function y(u,C,R){var F=this;return j;function j(W){return i.call(F,u,I,R,"reference","referenceMarker","referenceString")(W)}function I(W){return F.parser.defined.indexOf(a(F.sliceSerialize(F.events[F.events.length-1][1]).slice(1,-1)))<0?R(W):C(W)}}function v(u,C,R){return F;function F(I){return u.enter("reference"),u.enter("referenceMarker"),u.consume(I),u.exit("referenceMarker"),j}function j(I){return I===93?(u.enter("referenceMarker"),u.consume(I),u.exit("referenceMarker"),u.exit("reference"),C):R(I)}}e.exports=l},"OiV/":function(e){e.exports=JSON.parse('{"name":"expo-sharing","kind":1,"kindString":"Project","originalName":"","children":[{"name":"SharingOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"UTI","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"[Uniform Type Identifier](https://developer.apple.com/library/archive/documentation/FileManagement/Conceptual/understanding_utis/understand_utis_conc/understand_utis_conc.html)\\n - the type of the target file.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"dialogTitle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets share dialog title.","tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"web\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"mimeType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets `mimeType` for `Intent`.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine if the sharing API can be used in this app.","returns":"A promise that fulfills with `true` if the sharing API can be used, and `false` otherwise.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"shareAsync","kind":64,"kindString":"Function","signatures":[{"name":"shareAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Opens action sheet to share file to different applications which can handle this type of file."},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"Local file URL to share."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of share options.\\n"},"type":{"type":"reference","name":"SharingOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},OrAq:function(e,w,n){"use strict";e.exports=k;var c=n("vUGn"),p=n("ZkSf"),d=n("BfbN"),a=n("Vo0Z"),m=n("3HEo"),r=n("mIr8"),s=n("di9R"),i=n("ZQy8"),o={}.hasOwnProperty,t=!1;function l(g,h){var f=h||{};f.allowDangerousHTML!==void 0&&!t&&(t=!0,console.warn("mdast-util-to-hast: deprecation: `allowDangerousHTML` is nonstandard, use `allowDangerousHtml` instead"));var S=f.allowDangerousHtml||f.allowDangerousHTML,b={};return y.dangerous=S,y.definition=m(g),y.footnoteById=b,y.footnoteOrder=[],y.augment=P,y.handlers=Object.assign({},i,f.handlers),y.unknownHandler=f.unknownHandler,y.passThrough=f.passThrough,p(g,"footnoteDefinition",v),y;function P(u,C){var R,F;return u&&u.data&&(R=u.data,R.hName&&(C.type!=="element"&&(C={type:"element",tagName:"",properties:{},children:[]}),C.tagName=R.hName),C.type==="element"&&R.hProperties&&(C.properties=Object.assign({},C.properties,R.hProperties)),C.children&&R.hChildren&&(C.children=R.hChildren)),F=u&&u.position?u:{position:u},a(F)||(C.position={start:d.start(F),end:d.end(F)}),C}function y(u,C,R,F){return F==null&&typeof R=="object"&&"length"in R&&(F=R,R={}),P(u,{type:"element",tagName:C,properties:R||{},children:F||[]})}function v(u){var C=String(u.identifier).toUpperCase();o.call(b,C)||(b[C]=u)}}function k(g,h){var f=l(g,h),S=r(f,g),b=s(f);return b&&(S.children=S.children.concat(c("text",`
`),b)),S}},P5JI:function(e){e.exports=JSON.parse('{"name":"expo-secure-store","kind":1,"kindString":"Project","originalName":"","children":[{"name":"KeychainAccessibilityConstant","kind":4194304,"kindString":"Type alias","type":{"type":"intrinsic","name":"number"}},{"name":"SecureStoreOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"authenticationPrompt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Custom message displayed to the user while `requireAuthentication` option is turned on."},"type":{"type":"intrinsic","name":"string"}},{"name":"keychainAccessible","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(iOS only)__ Specifies when the stored entry is accessible, using iOS\'s `kSecAttrAccessible`\\nproperty. See Apple\'s documentation on [keychain item accessibility](https://developer.apple.com/library/content/documentation/Security/Conceptual/keychainServConcepts/02concepts/concepts.html#//apple_ref/doc/uid/TP30000897-CH204-SW18).\\nDefault value: `SecureStore.WHEN_UNLOCKED`."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"}},{"name":"keychainService","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"- iOS: The item\'s service, equivalent to `kSecAttrService`\\n- Android: Equivalent of the public/private key pair `Alias`\\n> If the item is set with the `keychainService` option, it will be required to later fetch the value."},"type":{"type":"intrinsic","name":"string"}},{"name":"requireAuthentication","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Option responsible for enabling the usage of the user authentication methods available on the device while\\naccessing data stored in SecureStore.","text":"- iOS: Equivalent to `kSecAccessControlUserPresence`\\n- Android: Equivalent to `setUserAuthenticationRequired(true)` (requires API 23). Complete functionality\\nis unlocked only with a freshly generated key - this would not work in tandem with the `keychainService`\\nvalue used for the others non-authenticated operations.\\n"},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"AFTER_FIRST_UNLOCK","kind":32,"kindString":"Variable","comment":{"shortText":"The data in the keychain item cannot be accessed after a restart until the device has been\\nunlocked once by the user. This may be useful if you need to access the item when the phone\\nis locked."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.AFTER_FIRST_UNLOCK"},{"name":"AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","comment":{"shortText":"Similar to `AFTER_FIRST_UNLOCK`, except the entry is not migrated to a new device when restoring\\nfrom a backup."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY"},{"name":"ALWAYS","kind":32,"kindString":"Variable","comment":{"shortText":"The data in the keychain item can always be accessed regardless of whether the device is locked.\\nThis is the least secure option."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.ALWAYS"},{"name":"ALWAYS_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","comment":{"shortText":"Similar to `ALWAYS`, except the entry is not migrated to a new device when restoring from a backup."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.ALWAYS_THIS_DEVICE_ONLY"},{"name":"WHEN_PASSCODE_SET_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","comment":{"shortText":"Similar to `WHEN_UNLOCKED_THIS_DEVICE_ONLY`, except the user must have set a passcode in order to\\nstore an entry. If the user removes their passcode, the entry will be deleted."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.WHEN_PASSCODE_SET_THIS_DEVICE_ONLY"},{"name":"WHEN_UNLOCKED","kind":32,"kindString":"Variable","comment":{"shortText":"The data in the keychain item can be accessed only while the device is unlocked by the user."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.WHEN_UNLOCKED"},{"name":"WHEN_UNLOCKED_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","comment":{"shortText":"Similar to `WHEN_UNLOCKED`, except the entry is not migrated to a new device when restoring from\\na backup."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.WHEN_UNLOCKED_THIS_DEVICE_ONLY"},{"name":"deleteItemAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteItemAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Delete the value associated with the provided key.","returns":"A promise that will reject if the value couldn\'t be deleted.\\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"shortText":"The key that was used to store the associated value."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`SecureStoreOptions`](#securestoreoptions) object.\\n"},"type":{"type":"reference","name":"SecureStoreOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"getItemAsync","kind":64,"kindString":"Function","signatures":[{"name":"getItemAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Fetch the stored value associated with the provided key.","returns":"A promise that resolves to the previously stored value, or `null` if there is no entry\\nfor the given key. The promise will reject if an error occurred while retrieving the value.\\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"shortText":"The key that was used to store the associated value."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`SecureStoreOptions`](#securestoreoptions) object.\\n"},"type":{"type":"reference","name":"SecureStoreOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the SecureStore API is enabled on the current device. This does not check the app\\npermissions.","returns":"Promise which fulfils witch `boolean`, indicating whether the SecureStore API is available\\non the current device. Currently this resolves `true` on iOS and Android only.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"setItemAsync","kind":64,"kindString":"Function","signatures":[{"name":"setItemAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Store a key\u2013value pair.","returns":"A promise that will reject if value cannot be stored on the device.\\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"shortText":"The key to associate with the stored value. Keys may contain alphanumeric characters\\n`.`, `-`, and `_`."},"type":{"type":"intrinsic","name":"string"}},{"name":"value","kind":32768,"kindString":"Parameter","comment":{"shortText":"The value to store. Size limit is 2048 bytes."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`SecureStoreOptions`](#securestoreoptions) object.\\n"},"type":{"type":"reference","name":"SecureStoreOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},PBjr:function(e){e.exports=JSON.parse('{"name":"expo-splash-screen","kind":1,"kindString":"Project","originalName":"","children":[{"name":"hideAsync","kind":64,"kindString":"Function","signatures":[{"name":"hideAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Hides the native splash screen immediately. Be careful to ensure that your app has content ready\\nto display when you hide the splash screen, or you may see a blank screen briefly. See the\\n[\\"Usage\\"](#usage) section for an example."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"preventAutoHideAsync","kind":64,"kindString":"Function","signatures":[{"name":"preventAutoHideAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Makes the native splash screen (configured in `app.json`) remain visible until `hideAsync` is called."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}')},POxs:function(e,w,n){"use strict";e.exports=d;var c=n("xGQ6"),p=n("9zCd");function d(a,m){var r=a.definition(m.identifier),s;return r?(s={src:c(r.url||""),alt:m.alt},r.title!==null&&r.title!==void 0&&(s.title=r.title),a(m,"img",s)):p(a,m)}},PSll:function(e,w,n){"use strict";var c=n("E/Jm"),p=n("Q3zd"),d=n("O+c1"),a=n("yRGd"),m={name:"codeFenced",tokenize:r,concrete:!0};function r(s,i,o){var t=this,l={tokenize:j,partial:!0},k=d(this.events,"linePrefix"),g=0,h;return f;function f(I){return s.enter("codeFenced"),s.enter("codeFencedFence"),s.enter("codeFencedFenceSequence"),h=I,S(I)}function S(I){return I===h?(s.consume(I),g++,S):(s.exit("codeFencedFenceSequence"),g<3?o(I):a(s,b,"whitespace")(I))}function b(I){return I===null||c(I)?u(I):(s.enter("codeFencedFenceInfo"),s.enter("chunkString",{contentType:"string"}),P(I))}function P(I){return I===null||p(I)?(s.exit("chunkString"),s.exit("codeFencedFenceInfo"),a(s,y,"whitespace")(I)):I===96&&I===h?o(I):(s.consume(I),P)}function y(I){return I===null||c(I)?u(I):(s.enter("codeFencedFenceMeta"),s.enter("chunkString",{contentType:"string"}),v(I))}function v(I){return I===null||c(I)?(s.exit("chunkString"),s.exit("codeFencedFenceMeta"),u(I)):I===96&&I===h?o(I):(s.consume(I),v)}function u(I){return s.exit("codeFencedFence"),t.interrupt?i(I):C(I)}function C(I){return I===null?F(I):c(I)?(s.enter("lineEnding"),s.consume(I),s.exit("lineEnding"),s.attempt(l,F,k?a(s,C,"linePrefix",k+1):C)):(s.enter("codeFlowValue"),R(I))}function R(I){return I===null||c(I)?(s.exit("codeFlowValue"),C(I)):(s.consume(I),R)}function F(I){return s.exit("codeFenced"),i(I)}function j(I,W,L){var K=0;return a(I,D,"linePrefix",this.parser.constructs.disable.null.indexOf("codeIndented")>-1?void 0:4);function D(X){return I.enter("codeFencedFence"),I.enter("codeFencedFenceSequence"),ee(X)}function ee(X){return X===h?(I.consume(X),K++,ee):K<g?L(X):(I.exit("codeFencedFenceSequence"),a(I,V,"whitespace")(X))}function V(X){return X===null||c(X)?(I.exit("codeFencedFence"),W(X)):L(X)}}}e.exports=m},PXId:function(e){e.exports=JSON.parse('{"name":"expo-barcode-scanner","kind":1,"kindString":"Project","originalName":"","children":[{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"BarCodeScanner","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new BarCodeScanner","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"reference","name":"BarCodeScannerProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}]}}],"type":{"type":"reference","name":"BarCodeScanner"},"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}},{"name":"new BarCodeScanner","kind":16384,"kindString":"Constructor signature","comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BarCodeScannerProps"}},{"name":"context","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"BarCodeScanner"},"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"lastEvents","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"defaultValue":"{}"},{"name":"lastEventsTimes","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"defaultValue":"{}"},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"ReactNode"}}]}}],"name":"Readonly"}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}}],"name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"Constants","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"BarCodeType","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}},{"name":"Type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}}]}},"defaultValue":"..."},{"name":"ConversionTables","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"},"defaultValue":"Type"}]}},"defaultValue":"..."},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"defaultProps","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"barCodeTypes","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}},"defaultValue":"..."},{"name":"type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"},"defaultValue":"Type.back"}]}},"defaultValue":"..."},{"name":"usePermissions","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a new permission hook with the permission methods built-in.\\nThis can be used to quickly create specific permission hooks in every module.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = BarCodeScanner.usePermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}},"defaultValue":"..."},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"render","kind":2048,"kindString":"Method","signatures":[{"name":"render","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}},{"name":"getPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing the camera.","returns":"Return a promise that fulfills to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing the camera.","text":"On iOS this will require apps to specify the `NSCameraUsageDescription` entry in the `Info.plist`.","returns":"Return a promise that fulfills to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"scanFromURLAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"scanFromURLAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Scan bar codes from the image given by the URL.","returns":"A possibly empty array of objects of the `BarCodeScannerResult` shape, where the type\\nrefers to the bar code type that was scanned and the data is the information encoded in the bar\\ncode.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"URL to get the image from."},"type":{"type":"intrinsic","name":"string"}},{"name":"barCodeTypes","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of bar code types. Defaults to all supported bar code types on\\nthe platform.\\n> __Note:__ Only QR codes are supported on iOS."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"BarCodeScannerResult"}}],"name":"Promise"}}]}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Component"}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"BarCodeBounds","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"origin","kind":1024,"kindString":"Property","comment":{"shortText":"The origin point of the bounding box."},"type":{"type":"reference","name":"BarCodePoint"}},{"name":"size","kind":1024,"kindString":"Property","comment":{"shortText":"The size of the bounding box."},"type":{"type":"reference","name":"BarCodeSize"}}]}}},{"name":"BarCodeEvent","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"BarCodeScannerResult"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"target","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}]}}]}},{"name":"BarCodeEventCallbackArguments","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"BarCodeEvent"}}]}}},{"name":"BarCodePoint","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Those coordinates are represented in the coordinate space of the barcode source (e.g. when you\\nare using the barcode scanner view, these values are adjusted to the dimensions of the view)."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"x","kind":1024,"kindString":"Property","comment":{"shortText":"The `x` coordinate value."},"type":{"type":"intrinsic","name":"number"}},{"name":"y","kind":1024,"kindString":"Property","comment":{"shortText":"The `y` coordinate value."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"BarCodeScannedCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"params","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BarCodeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"BarCodeScannerProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"barCodeTypes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of bar code types. Usage: `BarCodeScanner.Constants.BarCodeType.<codeType>` where\\n`codeType` is one of these [listed above](#supported-formats). Defaults to all supported bar\\ncode types. It is recommended to provide only the bar code formats you expect to scan to\\nminimize battery usage.","text":"For example: `barCodeTypes={[BarCodeScanner.Constants.BarCodeType.qr]}`.\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"onBarCodeScanned","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A callback that is invoked when a bar code has been successfully scanned. The callback is\\nprovided with an [BarCodeScannerResult](#barcodescannerresult).\\n> __Note:__ Passing `undefined` to the `onBarCodeScanned` prop will result in no scanning. This\\n> can be used to effectively \\"pause\\" the scanner so that it doesn\'t continually scan even after\\n> data has been retrieved."},"type":{"type":"reference","name":"BarCodeScannedCallback"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Camera facing. Use one of `BarCodeScanner.Constants.Type`. Use either `Type.front` or `Type.back`.\\nSame as `Camera.Constants.Type`.","tags":[{"tag":"default","text":"Type.back\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":"front"},{"type":"literal","value":"back"},{"type":"intrinsic","name":"number"}]}}]}}]}},{"name":"BarCodeScannerResult","kind":4194304,"kindString":"Type alias","comment":{"shortText":"> __Note:__ `bounds` and `cornerPoints` are not always available. On iOS, for `code39` and `pdf417`\\n> you don\'t get those values. Moreover, on iOS, those values don\'t have to bounds the whole barcode.\\n> For some types, they will represent the area used by the scanner."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"bounds","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The [BarCodeBounds](#barcodebounds) object."},"type":{"type":"reference","name":"BarCodeBounds"}},{"name":"cornerPoints","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Corner points of the bounding box."},"type":{"type":"array","elementType":{"type":"reference","name":"BarCodePoint"}}},{"name":"data","kind":1024,"kindString":"Property","comment":{"shortText":"The information encoded in the bar code."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"The barcode type."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"BarCodeSize","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"The height value."},"type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"The width value."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"Constants","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"BarCodeType","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}},{"name":"Type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}}]}}},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing the camera.","returns":"Return a promise that fulfills to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing the camera.","text":"On iOS this will require apps to specify the `NSCameraUsageDescription` entry in the `Info.plist`.","returns":"Return a promise that fulfills to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"scanFromURLAsync","kind":64,"kindString":"Function","signatures":[{"name":"scanFromURLAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Scan bar codes from the image given by the URL.","returns":"A possibly empty array of objects of the `BarCodeScannerResult` shape, where the type\\nrefers to the bar code type that was scanned and the data is the information encoded in the bar\\ncode.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"URL to get the image from."},"type":{"type":"intrinsic","name":"string"}},{"name":"barCodeTypes","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of bar code types. Defaults to all supported bar code types on\\nthe platform.\\n> __Note:__ Only QR codes are supported on iOS."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"BarCodeScannerResult"}}],"name":"Promise"}}]},{"name":"usePermissions","kind":64,"kindString":"Function","signatures":[{"name":"usePermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a new permission hook with the permission methods built-in.\\nThis can be used to quickly create specific permission hooks in every module."},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}]}')},Pteq:function(e){e.exports=JSON.parse('{"name":"expo-application","kind":1,"kindString":"Project","originalName":"","children":[{"name":"ApplicationReleaseType","kind":8,"kindString":"Enumeration","children":[{"name":"AD_HOC","kind":16,"kindString":"Enumeration member","defaultValue":"4"},{"name":"APP_STORE","kind":16,"kindString":"Enumeration member","defaultValue":"5"},{"name":"DEVELOPMENT","kind":16,"kindString":"Enumeration member","defaultValue":"3"},{"name":"ENTERPRISE","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"SIMULATOR","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","defaultValue":"0"}]},{"name":"androidId","kind":32,"kindString":"Variable","comment":{"shortText":"**Android only.** The value of [`Settings.Secure.ANDROID_ID`](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID).\\nThis is a hexadecimal `string` unique to each combination of app-signing key, user, and device.\\nThe value may change if a factory reset is performed on the device or if an APK signing key changes.\\nFor more information about how the platform handles `ANDROID_ID` in Android 8.0 (API level 26)\\nand higher, see [Android 8.0 Behavior Changes](https://developer.android.com/about/versions/oreo/android-8.0-changes.html#privacy-all).\\nOn iOS and web, this value is `null`.\\n> In versions of the platform lower than Android 8.0 (API level 26), this value remains constant\\n> for the lifetime of the user\'s device. See the [ANDROID_ID](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID)\\n> official docs for more information.\\n- E.g., `\\"dd96dec43fb81c97\\"`"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"applicationId","kind":32,"kindString":"Variable","comment":{"shortText":"The ID of the application. On Android, this is the application ID. On iOS, this is the bundle ID.\\nOn web, this is `null`.\\n- E.g., `\\"com.cocoacasts.scribbles\\"`, `\\"com.apple.Pages\\"`"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"applicationName","kind":32,"kindString":"Variable","comment":{"shortText":"The human-readable name of the application that is displayed with the app\'s icon on the device\'s\\nhome screen or desktop. On Android and iOS, this value is a `string` unless the name could not be\\nretrieved, in which case this value will be `null`. On web this value is `null`.\\n- E.g., `\\"Expo\\"`, `\\"Yelp\\"`, `\\"Instagram\\"`"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"nativeApplicationVersion","kind":32,"kindString":"Variable","comment":{"shortText":"The human-readable version of the native application that may be displayed in the app store.\\nThis is the `Info.plist` value for `CFBundleShortVersionString` on iOS and the version name set\\nby `version` in `app.json` on Android at the time the native app was built.\\nOn web, this value is `null`.\\n- E.g., `\\"2.11.0\\"`"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"nativeBuildVersion","kind":32,"kindString":"Variable","comment":{"shortText":"The internal build version of the native application that the app store may use to distinguish\\nbetween different binaries. This is the `Info.plist` value for `CFBundleVersion` on iOS (set with\\n`ios.buildNumber` value in `app.json` in a standalone app) and the version code set by\\n`android.versionCode` in `app.json` on Android at the time the native app was built. On web, this\\nvalue is `null`. The return type on Android and iOS is `string`.\\n- E.g., iOS: `\\"2.11.0\\"`, Android: `\\"114\\"`"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"getInstallReferrerAsync","kind":64,"kindString":"Function","signatures":[{"name":"getInstallReferrerAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"**Android only.** Gets the referrer URL of the installed app with the [`Install Referrer API`](https://developer.android.com/google/play/installreferrer)\\nfrom the Google Play Store. In practice, the referrer URL may not be a complete, absolute URL.","returns":"A `Promise` that fulfills with a `string` of the referrer URL of the installed app.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Application.getInstallReferrerAsync();\\n// \\"utm_source=google-play&utm_medium=organic\\"\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getInstallationTimeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getInstallationTimeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the time the app was installed onto the device, not counting subsequent updates. If the app\\nis uninstalled and reinstalled, this method returns the time the app was reinstalled.\\n- On iOS, this method uses the [`NSFileCreationDate`](https://developer.apple.com/documentation/foundation/nsfilecreationdate?language=objc)\\nof the app\'s document root directory.\\n- On Android, this method uses [`PackageInfo.firstInstallTime`](https://developer.android.com/reference/android/content/pm/PackageInfo.html#firstInstallTime).\\n- On web, this method returns `null`.","returns":"Returns a `Promise` that fulfills with a `Date` object that specifies the time the app\\nwas installed on the device.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Application.getInstallationTimeAsync();\\n// 2019-07-18T18:08:26.121Z\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Date"}],"name":"Promise"}}]},{"name":"getIosApplicationReleaseTypeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIosApplicationReleaseTypeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"**iOS only.** Gets the iOS application release type.","returns":"Returns a promise which fulfills with an [`ApplicationReleaseType`](#applicationreleasetype).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ApplicationReleaseType"}],"name":"Promise"}}]},{"name":"getIosIdForVendorAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIosIdForVendorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"**iOS only.** Gets the iOS \\"identifier for vendor\\" ([IDFV](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor))\\nvalue, a string ID that uniquely identifies a device to the app\u2019s vendor. This method may\\nsometimes return `nil`, in which case wait and call the method again later. This might happen\\nwhen the device has been restarted before the user has unlocked the device.","text":"The OS will change the vendor identifier if all apps from the current app\'s vendor have been\\nuninstalled.\\n","returns":"A `Promise` that fulfills with a `string` specifying the app\'s vendor ID. Apps from the\\nsame vendor will return the same ID. See Apple\'s documentation for more information about the\\nvendor ID\'s semantics.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Application.getIosIdForVendorAsync();\\n// \\"68753A44-4D6F-1226-9C60-0050E4C00067\\"\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getIosPushNotificationServiceEnvironmentAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIosPushNotificationServiceEnvironmentAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"**iOS only.** Gets the current [Apple Push Notification (APN)](https://developer.apple.com/documentation/bundleresources/entitlements/aps-environment?language=objc)\\nservice environment.","returns":"Returns a promise fulfilled with the string, either `\'development\'` or `\'production\'`,\\nbased on the current APN environment.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getLastUpdateTimeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getLastUpdateTimeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"**Android only.** Gets the last time the app was updated from the Google Play Store.","returns":"Returns a `Promise` that fulfills with a `Date` object that specifies the last time\\nthe app was updated via the Google Play Store).\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Application.getLastUpdateTimeAsync();\\n// 2019-07-18T21:20:16.887Z\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Date"}],"name":"Promise"}}]}]}')},Q3zd:function(e,w,n){"use strict";function c(p){return p<0||p===32}e.exports=c},"QB/b":function(e,w,n){"use strict";var c=n("rm/B"),p=c(/[\dA-Fa-f]/);e.exports=p},QHLE:function(e){e.exports=JSON.parse('{"name":"expo-video-thumbnails","kind":1,"kindString":"Project","originalName":"","children":[{"name":"VideoThumbnailsOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"headers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"In case `sourceFilename` is a remote URI, `headers` object is passed in a network request."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"}},{"name":"quality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A value in range `0.0` - `1.0` specifying quality level of the result image. `1` means no\\ncompression (highest quality) and `0` the highest compression (lowest quality)."},"type":{"type":"intrinsic","name":"number"}},{"name":"time","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The time position where the image will be retrieved in ms."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"VideoThumbnailsResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"Height of the created image."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"URI to the created image (usable as the source for an Image/Video element)."},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"Width of the created image."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"getThumbnailAsync","kind":64,"kindString":"Function","signatures":[{"name":"getThumbnailAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create an image thumbnail from video provided via `sourceFilename`.","returns":"Returns a promise which fulfils with [`VideoThumbnailsResult`](#videothumbnailsresult).\\n"},"parameters":[{"name":"sourceFilename","kind":32768,"kindString":"Parameter","comment":{"text":"An URI of the video, local or remote."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"A map defining how modified thumbnail should be created.\\n"},"type":{"type":"reference","name":"VideoThumbnailsOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoThumbnailsResult"}],"name":"Promise"}}]}]}')},QKIl:function(e){e.exports=JSON.parse('{"name":"expo-application","kind":1,"kindString":"Project","originalName":"","children":[{"name":"ApplicationReleaseType","kind":8,"kindString":"Enumeration","children":[{"name":"AD_HOC","kind":16,"kindString":"Enumeration member","defaultValue":"4"},{"name":"APP_STORE","kind":16,"kindString":"Enumeration member","defaultValue":"5"},{"name":"DEVELOPMENT","kind":16,"kindString":"Enumeration member","defaultValue":"3"},{"name":"ENTERPRISE","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"SIMULATOR","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","defaultValue":"0"}]},{"name":"androidId","kind":32,"kindString":"Variable","comment":{"shortText":"The value of [`Settings.Secure.ANDROID_ID`](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID).\\nThis is a hexadecimal `string` unique to each combination of app-signing key, user, and device.\\nThe value may change if a factory reset is performed on the device or if an APK signing key changes.\\nFor more information about how the platform handles `ANDROID_ID` in Android 8.0 (API level 26)\\nand higher, see [Android 8.0 Behavior Changes](https://developer.android.com/about/versions/oreo/android-8.0-changes.html#privacy-all).\\nOn iOS and web, this value is `null`.\\n> In versions of the platform lower than Android 8.0 (API level 26), this value remains constant\\n> for the lifetime of the user\'s device. See the [ANDROID_ID](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID)\\n> official docs for more information.","tags":[{"tag":"example","text":"`\\"dd96dec43fb81c97\\"`"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"applicationId","kind":32,"kindString":"Variable","comment":{"shortText":"The ID of the application. On Android, this is the application ID. On iOS, this is the bundle ID.\\nOn web, this is `null`.","tags":[{"tag":"example","text":"`\\"com.cocoacasts.scribbles\\"`, `\\"com.apple.Pages\\"`\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"applicationName","kind":32,"kindString":"Variable","comment":{"shortText":"The human-readable name of the application that is displayed with the app\'s icon on the device\'s\\nhome screen or desktop. On Android and iOS, this value is a `string` unless the name could not be\\nretrieved, in which case this value will be `null`. On web this value is `null`.","tags":[{"tag":"example","text":"`\\"Expo\\"`, `\\"Yelp\\"`, `\\"Instagram\\"`\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"nativeApplicationVersion","kind":32,"kindString":"Variable","comment":{"shortText":"The human-readable version of the native application that may be displayed in the app store.\\nThis is the `Info.plist` value for `CFBundleShortVersionString` on iOS and the version name set\\nby `version` in `app.json` on Android at the time the native app was built.\\nOn web, this value is `null`.","tags":[{"tag":"example","text":"`\\"2.11.0\\"`\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"nativeBuildVersion","kind":32,"kindString":"Variable","comment":{"shortText":"The internal build version of the native application that the app store may use to distinguish\\nbetween different binaries. This is the `Info.plist` value for `CFBundleVersion` on iOS (set with\\n`ios.buildNumber` value in `app.json` in a standalone app) and the version code set by\\n`android.versionCode` in `app.json` on Android at the time the native app was built. On web, this\\nvalue is `null`. The return type on Android and iOS is `string`.","tags":[{"tag":"example","text":"iOS: `\\"2.11.0\\"`, Android: `\\"114\\"`\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"getInstallReferrerAsync","kind":64,"kindString":"Function","signatures":[{"name":"getInstallReferrerAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the referrer URL of the installed app with the [`Install Referrer API`](https://developer.android.com/google/play/installreferrer)\\nfrom the Google Play Store. In practice, the referrer URL may not be a complete, absolute URL.","returns":"A `Promise` that fulfills with a `string` of the referrer URL of the installed app.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Application.getInstallReferrerAsync();\\n// \\"utm_source=google-play&utm_medium=organic\\"\\n```"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getInstallationTimeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getInstallationTimeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the time the app was installed onto the device, not counting subsequent updates. If the app\\nis uninstalled and reinstalled, this method returns the time the app was reinstalled.\\n- On iOS, this method uses the [`NSFileCreationDate`](https://developer.apple.com/documentation/foundation/nsfilecreationdate?language=objc)\\nof the app\'s document root directory.\\n- On Android, this method uses [`PackageInfo.firstInstallTime`](https://developer.android.com/reference/android/content/pm/PackageInfo.html#firstInstallTime).\\n- On web, this method returns `null`.","returns":"Returns a `Promise` that fulfills with a `Date` object that specifies the time the app\\nwas installed on the device.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Application.getInstallationTimeAsync();\\n// 2019-07-18T18:08:26.121Z\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Date"}],"name":"Promise"}}]},{"name":"getIosApplicationReleaseTypeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIosApplicationReleaseTypeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the iOS application release type.","returns":"Returns a promise which fulfills with an [`ApplicationReleaseType`](#applicationreleasetype).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ApplicationReleaseType"}],"name":"Promise"}}]},{"name":"getIosIdForVendorAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIosIdForVendorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the iOS \\"identifier for vendor\\" ([IDFV](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor))\\nvalue, a string ID that uniquely identifies a device to the app\u2019s vendor. This method may\\nsometimes return `nil`, in which case wait and call the method again later. This might happen\\nwhen the device has been restarted before the user has unlocked the device.","text":"The OS will change the vendor identifier if all apps from the current app\'s vendor have been\\nuninstalled.\\n","returns":"A `Promise` that fulfills with a `string` specifying the app\'s vendor ID. Apps from the\\nsame vendor will return the same ID. See Apple\'s documentation for more information about the\\nvendor ID\'s semantics.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Application.getIosIdForVendorAsync();\\n// \\"68753A44-4D6F-1226-9C60-0050E4C00067\\"\\n```"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getIosPushNotificationServiceEnvironmentAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIosPushNotificationServiceEnvironmentAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current [Apple Push Notification (APN)](https://developer.apple.com/documentation/bundleresources/entitlements/aps-environment?language=objc)\\nservice environment.","returns":"Returns a promise fulfilled with the string, either `\'development\'` or `\'production\'`,\\nbased on the current APN environment.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getLastUpdateTimeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getLastUpdateTimeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the last time the app was updated from the Google Play Store.","returns":"Returns a `Promise` that fulfills with a `Date` object that specifies the last time\\nthe app was updated via the Google Play Store).\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Application.getLastUpdateTimeAsync();\\n// 2019-07-18T21:20:16.887Z\\n```"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Date"}],"name":"Promise"}}]}]}')},QNiX:function(e){e.exports=JSON.parse('{"name":"expo-apple-authentication","kind":1,"kindString":"Project","originalName":"","children":[{"name":"AppleAuthenticationButtonStyle","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values control which pre-defined color scheme to use when rendering an [`AppleAuthenticationButton`](#appleauthenticationappleauthenticationbutton)."},"children":[{"name":"BLACK","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Black button with white text."},"defaultValue":"2"},{"name":"WHITE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"White button with black text."},"defaultValue":"0"},{"name":"WHITE_OUTLINE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"White button with a black outline and black text."},"defaultValue":"1"}]},{"name":"AppleAuthenticationButtonType","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values control which pre-defined text to use when rendering an [`AppleAuthenticationButton`](#appleauthenticationappleauthenticationbutton)."},"children":[{"name":"CONTINUE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"\\"Continue with Apple\\""},"defaultValue":"1"},{"name":"SIGN_IN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"\\"Sign in with Apple\\""},"defaultValue":"0"},{"name":"SIGN_UP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"\\"Sign up with Apple\\" *(requires iOS 13.2 or higher)*"},"defaultValue":"2"}]},{"name":"AppleAuthenticationCredentialState","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values specify state of the credential when checked with [`AppleAuthentication.getCredentialStateAsync()`](#appleauthenticationgetcredentialstateasyncuser).","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidprovidercredentialstate)\\nfor more details.\\n"}]},"children":[{"name":"AUTHORIZED","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"NOT_FOUND","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"REVOKED","kind":16,"kindString":"Enumeration member","defaultValue":"0"},{"name":"TRANSFERRED","kind":16,"kindString":"Enumeration member","defaultValue":"3"}]},{"name":"AppleAuthenticationOperation","kind":8,"kindString":"Enumeration","children":[{"name":"IMPLICIT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An operation that depends on the particular kind of credential provider."},"defaultValue":"0"},{"name":"LOGIN","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"LOGOUT","kind":16,"kindString":"Enumeration member","defaultValue":"3"},{"name":"REFRESH","kind":16,"kindString":"Enumeration member","defaultValue":"2"}]},{"name":"AppleAuthenticationScope","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values specify scopes you can request when calling [`AppleAuthentication.signInAsync()`](#appleauthenticationsigninasyncoptions).","text":"> Note that it is possible that you will not be granted all of the scopes which you request.\\n> You will still need to handle null values for any fields you request.\\n","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationscope)\\nfor more details.\\n"}]},"children":[{"name":"EMAIL","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"FULL_NAME","kind":16,"kindString":"Enumeration member","defaultValue":"0"}]},{"name":"AppleAuthenticationUserDetectionStatus","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values specify the system\'s best guess for how likely the current user is a real person.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asuserdetectionstatus)\\nfor more details.\\n"}]},"children":[{"name":"LIKELY_REAL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The user appears to be a real person."},"defaultValue":"2"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The system has not determined whether the user might be a real person."},"defaultValue":"1"},{"name":"UNSUPPORTED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The system does not support this determination and there is no data."},"defaultValue":"0"}]},{"name":"AppleAuthenticationButtonProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"buttonStyle","kind":1024,"kindString":"Property","comment":{"shortText":"The Apple-defined color scheme to use to display the button."},"type":{"type":"reference","name":"AppleAuthenticationButtonStyle"}},{"name":"buttonType","kind":1024,"kindString":"Property","comment":{"shortText":"The type of button text to display (\\"Sign In with Apple\\" vs. \\"Continue with Apple\\")."},"type":{"type":"reference","name":"AppleAuthenticationButtonType"}},{"name":"cornerRadius","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The border radius to use when rendering the button. This works similarly to\\n`style.borderRadius` in other Views."},"type":{"type":"intrinsic","name":"number"}},{"name":"style","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The custom style to apply to the button. Should not include `backgroundColor` or `borderRadius`\\nproperties."},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"ViewStyle"},{"type":"union","types":[{"type":"literal","value":"backgroundColor"},{"type":"literal","value":"borderRadius"}]}],"name":"Omit"}],"name":"StyleProp"}},{"name":"onPress","kind":2048,"kindString":"Method","signatures":[{"name":"onPress","kind":4096,"kindString":"Call signature","comment":{"shortText":"The method to call when the user presses the button. You should call [`AppleAuthentication.signInAsync`](#isavailableasync)\\nin here."},"type":{"type":"intrinsic","name":"void"}}]}]}}]}},{"name":"AppleAuthenticationCredential","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The object type returned from a successful call to [`AppleAuthentication.signInAsync()`](#appleauthenticationsigninasyncoptions),\\n[`AppleAuthentication.refreshAsync()`](#appleauthenticationrefreshasyncoptions), or [`AppleAuthentication.signOutAsync()`](#appleauthenticationsignoutasyncoptions)\\nwhich contains all of the pertinent user and credential information.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidcredential)\\nfor more details.\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"authorizationCode","kind":1024,"kindString":"Property","comment":{"shortText":"A short-lived session token used by your app for proof of authorization when interacting with\\nthe app\'s server counterpart. Unlike `user`, this is ephemeral and will change each session."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"email","kind":1024,"kindString":"Property","comment":{"shortText":"The user\'s email address. Might not be present if you didn\'t request the `EMAIL` scope. May\\nalso be null if this is not the first time the user has signed into your app. If the user chose\\nto withhold their email address, this field will instead contain an obscured email address with\\nan Apple domain."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"fullName","kind":1024,"kindString":"Property","comment":{"shortText":"The user\'s name. May be `null` or contain `null` values if you didn\'t request the `FULL_NAME`\\nscope, if the user denied access, or if this is not the first time the user has signed into\\nyour app."},"type":{"type":"union","types":[{"type":"reference","name":"AppleAuthenticationFullName"},{"type":"literal","value":null}]}},{"name":"identityToken","kind":1024,"kindString":"Property","comment":{"shortText":"A JSON Web Token (JWT) that securely communicates information about the user to your app."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"realUserStatus","kind":1024,"kindString":"Property","comment":{"shortText":"A value that indicates whether the user appears to the system to be a real person."},"type":{"type":"reference","name":"AppleAuthenticationUserDetectionStatus"}},{"name":"state","kind":1024,"kindString":"Property","comment":{"shortText":"An arbitrary string that your app provided as `state` in the request that generated the\\ncredential. Used to verify that the response was from the request you made. Can be used to\\navoid replay attacks. If you did not provide `state` when making the sign-in request, this field\\nwill be `null`."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"user","kind":1024,"kindString":"Property","comment":{"shortText":"An identifier associated with the authenticated user. You can use this to check if the user is\\nstill authenticated later. This is stable and can be shared across apps released under the same\\ndevelopment team. The same user will have a different identifier for apps released by other\\ndevelopers."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AppleAuthenticationFullName","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object representing the tokenized portions of the user\'s full name. Any of all of the fields\\nmay be `null`. Only applicable fields that the user has allowed your app to access will be nonnull."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"familyName","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"givenName","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"middleName","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"namePrefix","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"nameSuffix","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"nickname","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}}},{"name":"AppleAuthenticationRefreshOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The options you can supply when making a call to [`AppleAuthentication.refreshAsync()`](#appleauthenticationrefreshasyncoptions).\\nYou must include the ID string of the user whose credentials you\'d like to refresh.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationopenidrequest)\\nfor more details.\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"requestedScopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Array of user information scopes to which your app is requesting access. Note that the user can\\nchoose to deny your app access to any scope at the time of logging in. You will still need to\\nhandle `null` values for any scopes you request. Additionally, note that the requested scopes\\nwill only be provided to you the first time each user signs into your app; in subsequent\\nrequests they will be `null`. Defaults to `[]` (no scopes)."},"type":{"type":"array","elementType":{"type":"reference","name":"AppleAuthenticationScope"}}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An arbitrary string that is returned unmodified in the corresponding credential after a\\nsuccessful authentication. This can be used to verify that the response was from the request\\nyou made and avoid replay attacks. More information on this property is available in the\\nOAuth 2.0 protocol [RFC6749](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"}},{"name":"user","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AppleAuthenticationSignInOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The options you can supply when making a call to [`AppleAuthentication.signInAsync()`](#appleauthenticationsigninasyncoptions).\\nNone of these options are required.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationopenidrequest)\\nfor more details.\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nonce","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An arbitrary string that is used to prevent replay attacks. See more information on this in the\\n[OpenID Connect specification](https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowSteps)."},"type":{"type":"intrinsic","name":"string"}},{"name":"requestedScopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Array of user information scopes to which your app is requesting access. Note that the user can\\nchoose to deny your app access to any scope at the time of logging in. You will still need to\\nhandle `null` values for any scopes you request. Additionally, note that the requested scopes\\nwill only be provided to you the first time each user signs into your app; in subsequent\\nrequests they will be `null`. Defaults to `[]` (no scopes)."},"type":{"type":"array","elementType":{"type":"reference","name":"AppleAuthenticationScope"}}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An arbitrary string that is returned unmodified in the corresponding credential after a\\nsuccessful authentication. This can be used to verify that the response was from the request\\nyou made and avoid replay attacks. More information on this property is available in the\\nOAuth 2.0 protocol [RFC6749](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AppleAuthenticationSignOutOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The options you can supply when making a call to [`AppleAuthentication.signOutAsync()`](#appleauthenticationsignoutasyncoptions).\\nYou must include the ID string of the user to sign out.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationopenidrequest)\\nfor more details.\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An arbitrary string that is returned unmodified in the corresponding credential after a\\nsuccessful authentication. This can be used to verify that the response was from the request\\nyou made and avoid replay attacks. More information on this property is available in the\\nOAuth 2.0 protocol [RFC6749](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"}},{"name":"user","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"AppleAuthenticationButton","kind":32,"kindString":"Variable","comment":{"shortText":"This component displays the proprietary \\"Sign In with Apple\\" / \\"Continue with Apple\\" button on\\nyour screen. The App Store Guidelines require you to use this component to start the\\nauthentication process instead of a custom button. Limited customization of the button is\\navailable via the provided properties.","text":"You should only attempt to render this if [`AppleAuthentication.isAvailableAsync()`](#isavailableasync)\\nresolves to `true`. This component will render nothing if it is not available, and you will get\\na warning in development mode (`__DEV__ === true`).\\n\\nThe properties of this component extend from `View`; however, you should not attempt to set\\n`backgroundColor` or `borderRadius` with the `style` property. This will not work and is against\\nthe App Store Guidelines. Instead, you should use the `buttonStyle` property to choose one of the\\npredefined color styles and the `cornerRadius` property to change the border radius of the\\nbutton.\\n\\nMake sure to attach height and width via the style props as without these styles, the button will\\nnot appear on the screen.\\n","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidbutton)\\nfor more details.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationButtonProps"}],"name":"React.FC"},"defaultValue":"..."},{"name":"addRevokeListener","kind":64,"kindString":"Function","signatures":[{"name":"addRevokeListener","kind":4096,"kindString":"Call signature","parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getCredentialStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCredentialStateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Queries the current state of a user credential, to determine if it is still valid or if it has been revoked.\\n> **Note:** This method must be tested on a real device. On the iOS simulator it always throws an error.","returns":"A promise that fulfills with an [`AppleAuthenticationCredentialState`](#appleauthenticationcredentialstate)\\nvalue depending on the state of the credential.\\n"},"parameters":[{"name":"user","kind":32768,"kindString":"Parameter","comment":{"text":"The unique identifier for the user whose credential state you\'d like to check.\\nThis should come from the user field of an [`AppleAuthenticationCredential`](#appleauthenticationcredentialstate) object."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredentialState"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine if the current device\'s operating system supports Apple authentication.","returns":"A promise that fulfills with `true` if the system supports Apple authentication, and `false` otherwise.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"refreshAsync","kind":64,"kindString":"Function","signatures":[{"name":"refreshAsync","kind":4096,"kindString":"Call signature","parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AppleAuthenticationRefreshOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredential"}],"name":"Promise"}}]},{"name":"signInAsync","kind":64,"kindString":"Function","signatures":[{"name":"signInAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sends a request to the operating system to initiate the Apple authentication flow, which will\\npresent a modal to the user over your app and allow them to sign in.","text":"You can request access to the user\'s full name and email address in this method, which allows you\\nto personalize your UI for signed in users. However, users can deny access to either or both\\nof these options at runtime.\\n\\nAdditionally, you will only receive Apple Authentication Credentials the first time users sign\\ninto your app, so you must store it for later use. It\'s best to store this information either\\nserver-side, or using [SecureStore](./securestore), so that the data persists across app installs.\\nYou can use [`AppleAuthenticationCredential.user`](#appleauthenticationcredential) to identify\\nthe user, since this remains the same for apps released by the same developer.\\n","returns":"A promise that fulfills with an [`AppleAuthenticationCredential`](#appleauthenticationcredential)\\nobject after a successful authentication, and rejects with `ERR_CANCELED` if the user cancels the\\nsign-in operation.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"An optional [`AppleAuthenticationSignInOptions`](#appleauthenticationsigninoptions) object"},"type":{"type":"reference","name":"AppleAuthenticationSignInOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredential"}],"name":"Promise"}}]},{"name":"signOutAsync","kind":64,"kindString":"Function","signatures":[{"name":"signOutAsync","kind":4096,"kindString":"Call signature","parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AppleAuthenticationSignOutOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredential"}],"name":"Promise"}}]}]}')},"QPc+":function(e){e.exports=JSON.parse('{"name":"expo-store-review","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"hasAction","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"hasAction","kind":4096,"kindString":"Call signature","flags":{},"comment":{"returns":"This returns a promise that fulfills to `true` if `StoreReview.requestReview()` is capable\\ndirecting the user to some kind of store review flow. If the app config (`app.json`) does not\\ncontain store URLs and native store review capabilities are not available then the promise\\nwill fulfill to `false`.\\n\\n# Example\\n```ts\\nif (await StoreReview.hasAction()) {\\n  // you can call StoreReview.requestReview()\\n}\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Determines if the platform has the capabilities to use `StoreReview.requestReview()`.","returns":"\\nThis returns a promise fulfills with `boolean`, depending on the platform:\\n- On iOS, it will resolve to `true` if the device is running iOS 10.3+.\\n- On Android, it will resolve to `true` if the device is running Android 5.0+.\\n- On Web, it will resolve to `false`.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"requestReview","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"requestReview","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"In ideal circumstances this will open a native modal and allow the user to select a star rating\\nthat will then be applied to the App Store, without leaving the app. If the device is running\\na version of iOS lower than 10.3, or a version of Android lower than 5.0, this will attempt\\nto get the store URL and link the user to it."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"storeUrl","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"storeUrl","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"This uses the `Constants` API to get the `Constants.manifest.ios.appStoreUrl` on iOS, or the\\n`Constants.manifest.android.playStoreUrl` on Android.","text":"On Web this will return `null`.\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}]}')},R5yl:function(e,w,n){"use strict";var c=["address","article","aside","base","basefont","blockquote","body","caption","center","col","colgroup","dd","details","dialog","dir","div","dl","dt","fieldset","figcaption","figure","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hr","html","iframe","legend","li","link","main","menu","menuitem","nav","noframes","ol","optgroup","option","p","param","section","source","summary","table","tbody","td","tfoot","th","thead","title","tr","track","ul"];e.exports=c},R9Rw:function(e){e.exports=JSON.parse('{"name":"expo-sensors","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"PermissionStatus","kind":4,"kindString":"Enumeration","flags":{},"children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"\\"undetermined\\""}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","flags":{},"children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"PedometerResult","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"steps","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Number of steps taken between the given dates."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PedometerUpdateCallback","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"PedometerResult"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"remove","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}]}}},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getStepCountAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getStepCountAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get the step count between two dates.","returns":"Returns a promise that fulfills with a [`PedometerResult`](#pedometerresult).\\n\\nAs [Apple documentation states](https://developer.apple.com/documentation/coremotion/cmpedometer/1613946-querypedometerdatafromdate?language=objc):\\n> Only the past seven days worth of data is stored and available for you to retrieve. Specifying\\n> a start date that is more than seven days in the past returns only the available data.\\n"},"parameters":[{"name":"start","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A date indicating the start of the range over which to measure steps."},"type":{"type":"reference","name":"Date"}},{"name":"end","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A date indicating the end of the range over which to measure steps."},"type":{"type":"reference","name":"Date"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PedometerResult"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns whether the pedometer is enabled on the device.","returns":"Returns a promise that fulfills with a `boolean`, indicating whether the pedometer is\\navailable on this device.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"watchStepCount","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"watchStepCount","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Subscribe to pedometer updates.","returns":"Returns a [`Subscription`](#subscription) that enables you to call\\n`remove()` when you would like to unsubscribe the listener.\\n"},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A callback that is invoked when new step count data is available. The callback is\\nprovided with a single argument that is [`PedometerResult`](#pedometerresult)."},"type":{"type":"reference","name":"PedometerUpdateCallback"}}],"type":{"type":"reference","name":"Subscription"}}]}]}')},REpm:function(e,w){const n=["http","https","mailto","tel"];e.exports=c;function c(p){const d=(p||"").trim(),a=d.charAt(0);if(a==="#"||a==="/")return d;const m=d.indexOf(":");if(m===-1)return d;let r=-1;for(;++r<n.length;){const s=n[r];if(m===s.length&&d.slice(0,s.length).toLowerCase()===s)return d}return r=d.indexOf("?"),r!==-1&&m>r||(r=d.indexOf("#"),r!==-1&&m>r)?d:"javascript:void(0)"}},RMiK:function(e){e.exports=JSON.parse('{"name":"expo-splash-screen","kind":1,"kindString":"Project","originalName":"","children":[{"name":"hideAsync","kind":64,"kindString":"Function","signatures":[{"name":"hideAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Hides the native splash screen immediately. Be careful to ensure that your app has content ready\\nto display when you hide the splash screen, or you may see a blank screen briefly. See the\\n[\\"Usage\\"](#usage) section for an example."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"preventAutoHideAsync","kind":64,"kindString":"Function","signatures":[{"name":"preventAutoHideAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Makes the native splash screen (configured in `app.json`) remain visible until `hideAsync` is called."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},RMnn:function(e){e.exports=JSON.parse('{"name":"expo-in-app-purchases","kind":1,"kindString":"Project","originalName":"","children":[{"name":"IAPErrorCode","kind":8,"kindString":"Enumeration","comment":{"shortText":"Abstracts over the Android [Billing Response Codes](https://developer.android.com/reference/com/android/billingclient/api/BillingClient.BillingResponseCode)\\nand iOS [SKErrorCodes](https://developer.apple.com/documentation/storekit/skerrorcode?language=objc)."},"children":[{"name":"BILLING_UNAVAILABLE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Billing API version is not supported for the type requested. See `BILLING_UNAVAILABLE` on\\nAndroid."},"defaultValue":"5"},{"name":"CLOUD_SERVICE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Apple Cloud Service connection failed or invalid permissions.\\nSee `SKErrorCloudServicePermissionDenied`, `SKErrorCloudServiceNetworkConnectionFailed` and\\n`SKErrorCloudServiceRevoked` on iOS."},"defaultValue":"10"},{"name":"DEVELOPER_ERROR","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Invalid arguments provided to the API. This error can also indicate that the application was\\nnot correctly signed or properly set up for In-app Billing in Google Play. See `DEVELOPER_ERROR`\\non Android."},"defaultValue":"7"},{"name":"INVALID_IDENTIFIER","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The offer identifier or price specified in App Store Connect is no longer valid. See\\n`SKErrorInvalidSignature`, `SKErrorInvalidOfferPrice`, `SKErrorInvalidOfferIdentifier` on iOS."},"defaultValue":"13"},{"name":"ITEM_ALREADY_OWNED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Failure to purchase since item is already owned. See `ITEM_ALREADY_OWNED` on Android."},"defaultValue":"8"},{"name":"ITEM_NOT_OWNED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Failure to consume since item is not owned. See `ITEM_NOT_OWNED` on Android."},"defaultValue":"9"},{"name":"ITEM_UNAVAILABLE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Requested product is not available for purchase. See `SKErrorStoreProductNotAvailable` on iOS,\\n`ITEM_UNAVAILABLE` on Android."},"defaultValue":"6"},{"name":"MISSING_PARAMS","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Parameters are missing in a payment discount. See `SKErrorMissingOfferParams` on iOS."},"defaultValue":"14"},{"name":"PAYMENT_INVALID","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The feature is not allowed on the current device, or the user is not authorized to make payments.\\nSee `SKErrorClientInvalid`, `SKErrorPaymentInvalid`, and `SKErrorPaymentNotAllowed` on iOS,\\n`FEATURE_NOT_SUPPORTED` on Android."},"defaultValue":"1"},{"name":"PRIVACY_UNACKNOWLEDGED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The user has not yet acknowledged Apple\u2019s privacy policy for Apple Music. See\\n`SKErrorPrivacyAcknowledgementRequired` on iOS."},"defaultValue":"11"},{"name":"SERVICE_DISCONNECTED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Play Store service is not connected now. See `SERVICE_DISCONNECTED` on Android."},"defaultValue":"2"},{"name":"SERVICE_TIMEOUT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The request has reached the maximum timeout before Google Play responds. See `SERVICE_TIMEOUT`\\non Android."},"defaultValue":"4"},{"name":"SERVICE_UNAVAILABLE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Network connection is down. See `SERVICE_UNAVAILABLE` on Android."},"defaultValue":"3"},{"name":"UNAUTHORIZED_REQUEST","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The app is attempting to use a property for which it does not have the required entitlement.\\nSee `SKErrorUnauthorizedRequestData` on iOS."},"defaultValue":"12"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An unknown or unexpected error occurred. See `SKErrorUnknown` on iOS, `ERROR` on Android."},"defaultValue":"0"}]},{"name":"IAPItemType","kind":8,"kindString":"Enumeration","children":[{"name":"PURCHASE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"One time purchase or consumable."},"defaultValue":"0"},{"name":"SUBSCRIPTION","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Subscription."},"defaultValue":"1"}]},{"name":"IAPResponseCode","kind":8,"kindString":"Enumeration","children":[{"name":"DEFERRED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"__iOS Only.__ Purchase was deferred."},"defaultValue":"3"},{"name":"ERROR","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An error occurred. Check the `errorCode` for additional details."},"defaultValue":"2"},{"name":"OK","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Response returned successfully."},"defaultValue":"0"},{"name":"USER_CANCELED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"User canceled the purchase."},"defaultValue":"1"}]},{"name":"InAppPurchaseState","kind":8,"kindString":"Enumeration","children":[{"name":"DEFERRED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"__iOS Only.__ The transaction has been received, but its final status is pending external\\naction such as the Ask to Buy feature where a child initiates a new purchase and has to wait\\nfor the family organizer\'s approval. Update your UI to show the deferred state, and wait for\\nanother callback that indicates the final status"},"defaultValue":"4"},{"name":"FAILED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The transaction failed."},"defaultValue":"2"},{"name":"PURCHASED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The App Store successfully processed payment."},"defaultValue":"1"},{"name":"PURCHASING","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The transaction is being processed."},"defaultValue":"0"},{"name":"RESTORED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"__iOS Only.__ This transaction restores content previously purchased by the user. Read the\\n`originalTransaction` properties to obtain information about the original purchase."},"defaultValue":"3"}]},{"name":"IAPItemDetails","kind":256,"kindString":"Interface","comment":{"shortText":"Details about the purchasable item that you inputted in App Store Connect and Google Play Console."},"children":[{"name":"description","kind":1024,"kindString":"Property","comment":{"shortText":"User facing description about the item.","tags":[{"tag":"example","text":"`Currency used to trade for items in the game`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"price","kind":1024,"kindString":"Property","comment":{"shortText":"The price formatted with the local currency symbol. Use this to display the price, not to make\\ncalculations.","tags":[{"tag":"example","text":"`$1.99`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"priceAmountMicros","kind":1024,"kindString":"Property","comment":{"shortText":"The price in micro-units, where 1,000,000 micro-units equal one unit of the currency. Use this\\nfor calculations.","tags":[{"tag":"example","text":"`1990000`\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"priceCurrencyCode","kind":1024,"kindString":"Property","comment":{"shortText":"The local currency code from the ISO 4217 code list.","tags":[{"tag":"example","text":"`USD`, `CAN`, `RUB`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"productId","kind":1024,"kindString":"Property","comment":{"shortText":"The product ID representing an item inputted in App Store Connect and Google Play Console.","tags":[{"tag":"example","text":"`gold`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"subscriptionPeriod","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The length of a subscription period specified in ISO 8601 format. In-app purchases return `P0D`.\\nOn iOS, non-renewable subscriptions also return `P0D`.","tags":[{"tag":"example","text":"`P0D`, `P6W`, `P3M`, `P6M`, `P1Y`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"title","kind":1024,"kindString":"Property","comment":{"shortText":"The title of the purchasable item. This should be displayed to the user and may be different\\nfrom the `productId`.","tags":[{"tag":"example","text":"`Gold Coin`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"The type of the purchase. Note that this is not very accurate on iOS as this data is only\\navailable on iOS 11.2 and higher and non-renewable subscriptions always return\\n`IAPItemType.PURCHASE`."},"type":{"type":"reference","name":"IAPItemType"}}]},{"name":"IAPPurchaseItemOptions","kind":256,"kindString":"Interface","comment":{"shortText":"The purchaseItemAsync billing context on Android"},"children":[{"name":"accountIdentifiers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__Android Only.__ account identifiers, both need to be provided to work with Google Play"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"obfuscatedAccountId","kind":1024,"kindString":"Property","comment":{"shortText":"__Android Only.__ the obfuscated account id of the user\'s Google Play account."},"type":{"type":"intrinsic","name":"string"}},{"name":"obfuscatedProfileId","kind":1024,"kindString":"Property","comment":{"shortText":"__Android Only.__ the obfuscated profile id of the user\'s Google Play account."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"isVrPurchaseFlow","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__Android Only.__ whether the purchase is happening in a VR context."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"oldPurchaseToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__Android Only.__ the `purchaseToken` of the purchase that the user is upgrading or downgrading from."},"type":{"type":"intrinsic","name":"string"}}]},{"name":"IAPQueryResponse","kind":256,"kindString":"Interface","comment":{"shortText":"The response type for queries and purchases."},"children":[{"name":"errorCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"`IAPErrorCode` that provides more detail on why an error occurred. `null` unless `responseCode`\\nis `IAPResponseCode.ERROR`."},"type":{"type":"reference","name":"IAPErrorCode"}},{"name":"responseCode","kind":1024,"kindString":"Property","comment":{"shortText":"The response code from a query or purchase."},"type":{"type":"reference","name":"IAPResponseCode"}},{"name":"results","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The array containing the `InAppPurchase` or `IAPItemDetails` objects requested depending on\\nthe method."},"type":{"type":"array","elementType":{"type":"reference","name":"QueryResult"}}}],"typeParameter":[{"name":"QueryResult","kind":131072,"kindString":"Type parameter"}]},{"name":"InAppPurchase","kind":256,"kindString":"Interface","children":[{"name":"acknowledged","kind":1024,"kindString":"Property","comment":{"shortText":"Boolean indicating whether this item has been \\"acknowledged\\" via `finishTransactionAsync`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"orderId","kind":1024,"kindString":"Property","comment":{"shortText":"A string that uniquely identifies a successful payment transaction."},"type":{"type":"intrinsic","name":"string"}},{"name":"originalOrderId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__iOS Only.__ Represents the original order ID for restored purchases."},"type":{"type":"intrinsic","name":"string"}},{"name":"originalPurchaseTime","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__iOS Only.__ Represents the original purchase time for restored purchases."},"type":{"type":"intrinsic","name":"string"}},{"name":"packageName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__Android Only.__ The application package from which the purchase originated.","tags":[{"tag":"example","text":"`com.example.myapp`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"productId","kind":1024,"kindString":"Property","comment":{"shortText":"The product ID representing an item inputted in Google Play Console and App Store Connect.","tags":[{"tag":"example","text":"`gold`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"purchaseState","kind":1024,"kindString":"Property","comment":{"shortText":"The state of the purchase."},"type":{"type":"reference","name":"InAppPurchaseState"}},{"name":"purchaseTime","kind":1024,"kindString":"Property","comment":{"shortText":"The time the product was purchased, in milliseconds since the epoch (Jan 1, 1970)."},"type":{"type":"intrinsic","name":"number"}},{"name":"purchaseToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__Android Only.__ A token that uniquely identifies a purchase for a given item and user pair."},"type":{"type":"intrinsic","name":"string"}},{"name":"transactionReceipt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__iOS Only.__ The App Store receipt found in the main bundle encoded as a Base64 String."},"type":{"type":"intrinsic","name":"string"}}]},{"name":"IAPPurchaseHistoryOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"useGooglePlayCache","kind":1024,"kindString":"Property","comment":{"shortText":"__Android Only.__ A boolean that indicates whether or not you want to make a network request\\nto sync expired/consumed purchases and those on other devices.","text":"- If set to `true`, this method returns purchase details **only** for the user\'s currently\\n  owned items (active subscriptions and non-consumed one-time purchases). If set to `false`, it\\n  will make a network request and return the most recent purchase made by the user for each\\n  product, even if that purchase is expired, canceled, or consumed.\\n- The return type if this is `false` is actually a subset of when it\'s `true`. This is because\\n  Android returns a [`PurchaseHistoryRecord`](https://developer.android.com/reference/com/android/billingclient/api/PurchaseHistoryRecord)\\n  which only contains the purchase time, purchase token, and product ID, rather than all of the\\n  attributes found in the [`InAppPurchase`](#inapppurchase) type.\\n","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"QueryResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"InAppPurchase"},{"type":"reference","name":"IAPItemDetails"}]}},{"name":"connectAsync","kind":64,"kindString":"Function","signatures":[{"name":"connectAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Connects to the app store and performs all of the necessary initialization to prepare the module\\nto accept payments.\\nThis method must be called before anything else, otherwise an error will be thrown.","returns":"Returns a Promise that fulfills when connection is established.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"disconnectAsync","kind":64,"kindString":"Function","signatures":[{"name":"disconnectAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Disconnects from the app store and cleans up memory internally. Call this when you are done using\\nthe In-App Purchases API in your app.","text":"No other methods can be used until the next time you call `connectAsync`.\\n","returns":"Returns a Promise that fulfils when disconnecting process is finished.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"finishTransactionAsync","kind":64,"kindString":"Function","signatures":[{"name":"finishTransactionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Marks a transaction as completed. This _must_ be called on successful purchases only after you\\nhave verified the transaction and unlocked the functionality purchased by the user.","text":"On Android, this will either \\"acknowledge\\" or \\"consume\\" the purchase depending on the value of\\n`consumeItem`. Acknowledging indicates that this is a one time purchase (e.g. premium upgrade),\\nwhereas consuming a purchase allows it to be bought more than once. You cannot buy an item again\\nuntil it\'s consumed. Both consuming and acknowledging let Google know that you are done\\nprocessing the transaction. If you do not acknowledge or consume a purchase within three days,\\nthe user automatically receives a refund, and Google Play revokes the purchase.\\n\\nOn iOS, this will mark the transaction as finished and prevent it from reappearing in the\\npurchase listener callback. It will also let the user know their purchase was successful.\\n\\n`consumeItem` is ignored on iOS because you must specify whether an item is a consumable or\\nnon-consumable in its product entry in App Store Connect, whereas on Android you indicate an item\\nis consumable at runtime.\\n\\n> Make sure that you verify each purchase to prevent faulty transactions and protect against\\nfraud _before_ you call `finishTransactionAsync`. On iOS, you can validate the purchase\'s\\n`transactionReceipt` with the App Store as described [here](https://developer.apple.com/library/archive/releasenotes/General/ValidateAppStoreReceipt/Chapters/ValidateRemotely.html).\\nOn Android, you can verify your purchase using the Google Play Developer API as described [here](https://developer.android.com/google/play/billing/billing_best_practices#validating-purchase).\\n","tags":[{"tag":"example","text":"\\n```ts\\nif (!purchase.acknowledged) {\\n  await finishTransactionAsync(purchase, false); // or true for consumables\\n}\\n```"}]},"parameters":[{"name":"purchase","kind":32768,"kindString":"Parameter","comment":{"shortText":"The purchase you want to mark as completed."},"type":{"type":"reference","name":"InAppPurchase"}},{"name":"consumeItem","kind":32768,"kindString":"Parameter","comment":{"shortText":"__Android Only.__ A boolean indicating whether or not the item is a consumable.\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"getBillingResponseCodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBillingResponseCodeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns the last response code. This is more descriptive on Android since there is native support\\nfor retrieving the billing response code.","text":"On Android, this will return `IAPResponseCode.ERROR` if you are not connected or one of the\\nbilling response codes found [here](https://developer.android.com/reference/com/android/billingclient/api/BillingClient.BillingResponseCode)\\nif you are.\\n\\nOn iOS, this will return `IAPResponseCode.OK` if you are connected or `IAPResponseCode.ERROR` if\\nyou are not. Therefore, it\'s a good way to test whether or not you are connected and it\'s safe to\\nuse the other methods.\\n","returns":"Returns a Promise that fulfils with an number representing the `IAPResponseCode`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst responseCode = await getBillingResponseCodeAsync();\\n if (responseCode !== IAPResponseCode.OK) {\\n  // Either we\'re not connected or the last response returned an error (Android)\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"IAPResponseCode"}],"name":"Promise"}}]},{"name":"getProductsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getProductsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Retrieves the product details (price, description, title, etc) for each item that you inputted in\\nthe Google Play Console and App Store Connect. These products are associated with your app\'s\\nspecific Application/Bundle ID and cannot be retrieved from other apps. This queries both in-app\\nproducts and subscriptions so there\'s no need to pass those in separately.","text":"You must retrieve an item\'s details before you attempt to purchase it via `purchaseItemAsync`.\\nThis is a prerequisite to buying a product even if you have the item details bundled in your app\\nor on your own servers.\\n\\nIf any of the product IDs passed in are invalid and don\'t exist, you will not receive an\\n`IAPItemDetails` object corresponding to that ID. For example, if you pass in four product IDs\\nin but one of them has a typo, you will only get three response objects back.\\n","returns":"Returns a Promise that resolves with an `IAPQueryResponse` containing `IAPItemDetails`\\nobjects in the `results` array.\\n","tags":[{"tag":"example","text":"\\n```ts\\n// These product IDs must match the item entries you created in the App Store Connect and Google Play Console.\\n// If you want to add more or edit their attributes you can do so there.\\n\\nconst items = Platform.select({\\n  ios: [\\n    \'dev.products.gas\',\\n    \'dev.products.premium\',\\n    \'dev.products.gold_monthly\',\\n    \'dev.products.gold_yearly\',\\n  ],\\n  android: [\'gas\', \'premium\', \'gold_monthly\', \'gold_yearly\'],\\n});\\n\\n // Retrieve product details\\nconst { responseCode, results } = await getProductsAsync(items);\\nif (responseCode === IAPResponseCode.OK) {\\n  this.setState({ items: results });\\n}\\n```\\n"}]},"parameters":[{"name":"itemList","kind":32768,"kindString":"Parameter","comment":{"shortText":"The list of product IDs whose details you want to query from the app store."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"IAPItemDetails"}],"name":"IAPQueryResponse"}],"name":"Promise"}}]},{"name":"getPurchaseHistoryAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPurchaseHistoryAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Retrieves the user\'s purchase history.","text":"Please note that on iOS, StoreKit actually creates a new transaction object every time you\\nrestore completed transactions, therefore the `purchaseTime` and `orderId` may be inaccurate if\\nit\'s a restored purchase. If you need the original transaction\'s information you can use\\n`originalPurchaseTime` and `originalOrderId`, but those will be 0 and an empty string\\nrespectively if it is the original transaction.\\n\\nYou should not call this method on launch because restoring purchases on iOS prompts for the\\nuser\u2019s App Store credentials, which could interrupt the flow of your app.\\n","returns":"Returns a `Promise` that fulfills with an `IAPQueryResponse` that contains an array of\\n`InAppPurchase` objects.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An optional `PurchaseHistoryOptions` object."},"type":{"type":"reference","name":"IAPPurchaseHistoryOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"InAppPurchase"}],"name":"IAPQueryResponse"}],"name":"Promise"}}]},{"name":"purchaseItemAsync","kind":64,"kindString":"Function","signatures":[{"name":"purchaseItemAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Initiates the purchase flow to buy the item associated with this `productId`. This will display\\na prompt to the user that will allow them to either buy the item or cancel the purchase. When the\\npurchase completes, the result must be handled in the callback that you passed in to\\n[`setPurchaseListener`](#setpurchaselistener).","text":"Remember, you have to query an item\'s details via `getProductsAsync` and set the purchase\\nlistener before you attempt to buy an item.\\n\\n> [Apple](https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/StoreKitGuide/Chapters/Subscriptions.html)\\nand [Google](https://developer.android.com/google/play/billing/billing_subscriptions) both have\\ntheir own workflows for dealing with subscriptions. In general, you can deal with them in the\\nsame way you do one-time purchases but there are caveats including if a user decides to cancel\\nbefore the expiration date. To check the status of a subscription, you can use the [Google Play Developer](https://developers.google.com/android-publisher/api-ref/purchases/subscriptions/get)\\nAPI on Android and the [Status Update Notifications](https://developer.apple.com/documentation/storekit/in-app_purchase/enabling_status_update_notifications)\\nservice on iOS.\\n","returns":"Returns a `Promise` that resolves when the purchase is done processing. To get the actual\\nresult of the purchase, you must handle purchase events inside the `setPurchaseListener` callback.\\n"},"parameters":[{"name":"itemId","kind":32768,"kindString":"Parameter","comment":{"shortText":"The product ID of the item you want to buy."},"type":{"type":"intrinsic","name":"string"}},{"name":"details","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"__Android Only.__ details for billing flow is an object with the following properties:\\n - \'oldPurchaseToken\' : the `purchaseToken` of the purchase that the user is upgrading or downgrading from. This is mandatory\\n   for replacing an old subscription such as when a user upgrades from a monthly subscription to a yearly\\n   one that provides the same content. You can get the purchase token from [`getPurchaseHistoryAsync`](#inapppurchasesgetpurchasehistoryasyncrefresh-boolean).\\n - \'accountIdentifiers\' : account identifiers. Note: both ids must be provided for payments to work on Google Play.\\n     - \'obfuscatedAccountId\' : the obfuscated account ID of the user in the app\'s system.\\n     - \'obfuscatedProfileId\' : the obfuscated profile ID of the user in the app\'s system.\\n - \'isVrPurchaseFlow\' : whether the purchase is happening in a VR context."},"type":{"type":"reference","name":"IAPPurchaseItemOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setPurchaseListener","kind":64,"kindString":"Function","signatures":[{"name":"setPurchaseListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a callback that handles incoming purchases. This must be done before any calls to\\n`purchaseItemAsync` are made, otherwise those transactions will be lost. You should **set the\\npurchase listener globally**, and not inside a specific screen, to ensure that you receive\\nincomplete transactions, subscriptions, and deferred transactions.","text":"Purchases can either be instantiated by the user (via `purchaseItemAsync`) or they can come from\\nsubscription renewals or unfinished transactions on iOS (e.g. if your app exits before\\n`finishTransactionAsync` was called).\\n\\n> Note that on iOS, the results array will only contain one item: the one that was just purchased.\\nOn Android, it will return both finished and unfinished purchases, hence the array return type.\\nThis is because the Google Play Billing API detects purchase updates but doesn\'t differentiate\\nwhich item was just purchased, therefore there\'s no good way to tell but in general it will be\\nwhichever purchase has `acknowledged` set to `false`, so those are the ones that you have to\\nhandle in the response. Consumed items will not be returned however, so if you consume an item\\nthat record will be gone and no longer appear in the results array when a new purchase is made.\\n","tags":[{"tag":"example","text":"\\n```ts\\n// Set purchase listener\\n setPurchaseListener(({ responseCode, results, errorCode }) => {\\n  // Purchase was successful\\n  if (responseCode === IAPResponseCode.OK) {\\n    results.forEach(purchase => {\\n      if (!purchase.acknowledged) {\\n        console.log(`Successfully purchased ${purchase.productId}`);\\n        // Process transaction here and unlock content...\\n\\n        // Then when you\'re done\\n        finishTransactionAsync(purchase, true);\\n      }\\n    });\\n  } else if (responseCode === IAPResponseCode.USER_CANCELED) {\\n    console.log(\'User canceled the transaction\');\\n  } else if (responseCode === IAPResponseCode.DEFERRED) {\\n    console.log(\'User does not have permissions to buy but requested parental approval (iOS only)\');\\n  } else {\\n    console.warn(`Something went wrong with the purchase. Received errorCode ${errorCode}`);\\n  }\\n});\\n```"}]},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"shortText":"The callback function you want to run when there is an update to the purchases.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"result","kind":32768,"kindString":"Parameter","type":{"type":"reference","typeArguments":[{"type":"reference","name":"InAppPurchase"}],"name":"IAPQueryResponse"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}]}')},RrMp:function(e,w,n){"use strict";Object.defineProperty(w,"__esModule",{value:!0});var c=n("+Pz5"),p=n("dAEq"),d=n("Atxm"),a=n("kQY0"),m=n("Ue0c"),r=n("42yH"),s=n("PSll"),i=n("NNOl"),o=n("/apb"),t=n("HxRD"),l=n("gyVW"),k=n("CUvb"),g=n("KynH"),h=n("3iNw"),f=n("OaLn"),S=n("7enW"),b=n("Ie4K"),P=n("escJ"),y=n("5bit"),v=n("Iv+h"),u=n("33Zt"),C={42:y,43:y,45:y,48:y,49:y,50:y,51:y,52:y,53:y,54:y,55:y,56:y,57:y,62:a},R={91:t},F={"-2":i,"-1":i,32:i},j={35:k,42:u,45:[v,u],60:g,61:v,95:u,96:s,126:s},I={38:r,92:m},W={"-5":P,"-4":P,"-3":P,33:S,38:r,42:p,60:[d,h],91:b,92:[l,m],93:f,95:p,96:o},L={null:[p,c.resolver]},K={null:[]};w.contentInitial=R,w.disable=K,w.document=C,w.flow=j,w.flowInitial=F,w.insideSpan=L,w.string=I,w.text=W},Rt5X:function(e){e.exports=JSON.parse('{"name":"expo-constants","kind":1,"originalName":"","children":[{"name":"AndroidManifest","kind":16777216,"kindString":"Reference"},{"name":"AndroidManifest","kind":256,"kindString":"Interface","children":[{"name":"versionCode","kind":1024,"kindString":"Property","comment":{"shortText":"The version code set by `android.versionCode` in app.json.\\nThe value is set to `null` in case you run your app in Expo Go.","tags":[{"tag":"deprecated","text":"Deprecated. Use `expo-application`\'s [`Application.nativeBuildVersion`](./application/#applicationnativebuildversion).\\n"}]},"type":{"type":"intrinsic","name":"number"}}],"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}},{"name":"AppOwnership","kind":16777216,"kindString":"Reference"},{"name":"AppOwnership","kind":8,"kindString":"Enumeration","children":[{"name":"Expo","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The experience is running inside of the Expo Go app."},"defaultValue":"\\"expo\\""},{"name":"Guest","kind":16,"kindString":"Enumeration member","comment":{"shortText":"It has been opened through a link from a standalone app."},"defaultValue":"\\"guest\\""},{"name":"Standalone","kind":16,"kindString":"Enumeration member","comment":{"shortText":"It is a [standalone app](/classic/building-standalone-apps#building-standalone-apps)."},"defaultValue":"\\"standalone\\""}]},{"name":"ClientScopingConfig","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"scopeKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An opaque unique string for scoping client-side data to this project. This value\\nwill not change when a project is transferred between accounts or renamed."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Constants","kind":16777216,"kindString":"Reference"},{"name":"Constants","kind":256,"kindString":"Interface","children":[{"name":"appOwnership","kind":1024,"kindString":"Property","comment":{"shortText":"Returns `expo`, `standalone`, or `guest`. This property only applies to the managed workflow\\nand classic builds; for apps built with EAS Build and in bare workflow, the result is\\nalways `null`."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"AppOwnership"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.appOwnership"}},{"name":"debugMode","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"NativeConstants.debugMode"}},{"name":"deviceName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A human-readable name for the device type."},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"NativeConstants.deviceName"}},{"name":"deviceYearClass","kind":1024,"kindString":"Property","comment":{"shortText":"The [device year class](https://github.com/facebook/device-year-class) of this device.","tags":[{"tag":"deprecated","text":"Deprecated. Moved to `expo-device` as [`Device.deviceYearClass`](./device/#deviceyearclass).\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"number"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.deviceYearClass"}},{"name":"executionEnvironment","kind":1024,"kindString":"Property","type":{"type":"reference","name":"ExecutionEnvironment"},"inheritedFrom":{"type":"reference","name":"NativeConstants.executionEnvironment"}},{"name":"experienceUrl","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"NativeConstants.experienceUrl"}},{"name":"expoRuntimeVersion","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.expoRuntimeVersion"}},{"name":"expoVersion","kind":1024,"kindString":"Property","comment":{"shortText":"The version string of the Expo Go app currently running.\\nReturns `null` in bare workflow and web."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.expoVersion"}},{"name":"installationId","kind":1024,"kindString":"Property","comment":{"shortText":"An identifier that is unique to this particular device and whose lifetime is at least as long\\nas the installation of the app.","tags":[{"tag":"deprecated","text":"`Constants.installationId` is deprecated in favor of generating your own ID and\\nstoring it. This API will be removed in SDK 44.\\n"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"NativeConstants.installationId"}},{"name":"intentUri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"NativeConstants.intentUri"}},{"name":"isDetached","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"NativeConstants.isDetached"}},{"name":"isDevice","kind":1024,"kindString":"Property","comment":{"shortText":"`true` if the app is running on a device, `false` if running in a simulator or emulator.","tags":[{"tag":"deprecated","text":"Deprecated. Use `expo-device`\'s [`Device.isDevice`](./device/#deviceisdevice).\\n"}]},"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"NativeConstants.isDevice"}},{"name":"isHeadless","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"NativeConstants.isHeadless"}},{"name":"linkingUri","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"NativeConstants.linkingUri"}},{"name":"manifest","kind":1024,"kindString":"Property","comment":{"shortText":"Classic manifest for Expo apps using classic updates.\\nReturns `null` in bare workflow and when `manifest2` is non-null."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"AppManifest"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.manifest"}},{"name":"manifest2","kind":1024,"kindString":"Property","comment":{"shortText":"New manifest for Expo apps using modern Expo Updates.\\nReturns `null` in bare workflow and when `manifest` is non-null."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"Manifest"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.manifest2"}},{"name":"name","kind":1024,"kindString":"Property","type":{"type":"literal","value":"ExponentConstants"},"inheritedFrom":{"type":"reference","name":"NativeConstants.name"}},{"name":"nativeAppVersion","kind":1024,"kindString":"Property","comment":{"shortText":"The **Info.plist** value for `CFBundleShortVersionString` on iOS and the version name set\\nby `version` in app.json on Android at the time the native app was built.","tags":[{"tag":"deprecated","text":"Deprecated. Use `expo-application`\'s [`Application.nativeApplicationVersion`](./application/#applicationnativeapplicationversion).\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.nativeAppVersion"}},{"name":"nativeBuildVersion","kind":1024,"kindString":"Property","comment":{"shortText":"The **Info.plist** value for `CFBundleVersion` on iOS (set with `ios.buildNumber` value in\\n**app.json** in a standalone app) and the version code set by `android.versionCode` in\\n**app.json** on Android at the time the native app was built.","tags":[{"tag":"deprecated","text":"Deprecated. Use `expo-application`\'s [`Application.nativeBuildVersion`](./application/#applicationnativebuildversion).\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.nativeBuildVersion"}},{"name":"platform","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"PlatformManifest"},"inheritedFrom":{"type":"reference","name":"NativeConstants.platform"}},{"name":"sessionId","kind":1024,"kindString":"Property","comment":{"shortText":"A string that is unique to the current session of your app. It is different across apps and\\nacross multiple launches of the same app."},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"NativeConstants.sessionId"}},{"name":"statusBarHeight","kind":1024,"kindString":"Property","comment":{"shortText":"The default status bar height for the device. Does not factor in changes when location tracking\\nis in use or a phone call is active."},"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"NativeConstants.statusBarHeight"}},{"name":"systemFonts","kind":1024,"kindString":"Property","comment":{"shortText":"A list of the system font names available on the current device."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"NativeConstants.systemFonts"}},{"name":"systemVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"NativeConstants.systemVersion"}},{"name":"getWebViewUserAgentAsync","kind":2048,"kindString":"Method","signatures":[{"name":"getWebViewUserAgentAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the user agent string which would be included in requests sent by a web view running on\\nthis device. This is probably not the same user agent you might be providing in your JS `fetch`\\nrequests."},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}],"name":"Promise"},"inheritedFrom":{"type":"reference","name":"NativeConstants.getWebViewUserAgentAsync"}}],"inheritedFrom":{"type":"reference","name":"NativeConstants.getWebViewUserAgentAsync"}}],"extendedTypes":[{"type":"reference","name":"NativeConstants"}]},{"name":"default","kind":1024,"kindString":"Property","type":{"type":"reference","name":"Constants"}},{"name":"EASConfig","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"projectId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The ID for this project if it\'s using EAS. UUID. This value will not change when a project is\\ntransferred between accounts or renamed."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"ExecutionEnvironment","kind":16777216,"kindString":"Reference"},{"name":"ExecutionEnvironment","kind":8,"kindString":"Enumeration","children":[{"name":"Bare","kind":16,"kindString":"Enumeration member","defaultValue":"\\"bare\\""},{"name":"Standalone","kind":16,"kindString":"Enumeration member","defaultValue":"\\"standalone\\""},{"name":"StoreClient","kind":16,"kindString":"Enumeration member","defaultValue":"\\"storeClient\\""}]},{"name":"ExpoClientConfig","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ExpoConfig"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"bundleUrl","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"currentFullName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The Expo account name and slug used for display purposes. Formatted like `@username/slug`.\\nWhen unauthenticated, the username is `@anonymous`. For published projects, this value\\nmay change when a project is transferred between accounts or renamed."},"type":{"type":"intrinsic","name":"string"}},{"name":"hostUri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"id","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The Expo account name and slug for this project.","tags":[{"tag":"deprecated","text":"Prefer `projectId` or `originalFullName` instead for identification and\\n`scopeKey` for scoping due to immutability.\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"originalFullName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The original Expo account name and slug for this project. Formatted like `@username/slug`.\\nWhen unauthenticated, the username is `@anonymous`. For published projects, this value\\nwill not change when a project is transferred between accounts or renamed."},"type":{"type":"intrinsic","name":"string"}},{"name":"publishedTime","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"releaseChannel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"releaseId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Published apps only."},"type":{"type":"intrinsic","name":"string"}},{"name":"revisionId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"ExpoGoConfig","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"debuggerHost","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"developer","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"tool","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}},{"name":"logUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"mainModuleName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"packagerOpts","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"ExpoGoPackagerOpts"}}]}}},{"name":"ExpoGoPackagerOpts","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"dev","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"hostType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"lanType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"minify","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"strict","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"urlRandomness","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"urlType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}},{"name":"IOSManifest","kind":16777216,"kindString":"Reference"},{"name":"IOSManifest","kind":256,"kindString":"Interface","children":[{"name":"buildNumber","kind":1024,"kindString":"Property","comment":{"shortText":"The build number specified in the embedded **Info.plist** value for `CFBundleVersion` in this app.\\nIn a standalone app, you can set this with the `ios.buildNumber` value in **app.json**. This\\nmay differ from the value in `Constants.manifest.ios.buildNumber` because the manifest\\ncan be updated, whereas this value will never change for a given native binary.\\nThe value is set to `null` in case you run your app in Expo Go."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"name":"model","kind":1024,"kindString":"Property","comment":{"shortText":"The human-readable model name of this device, e.g. `\\"iPhone 7 Plus\\"` if it can be determined,\\notherwise will be `null`.","tags":[{"tag":"deprecated","text":"Deprecated. Moved to `expo-device` as [`Device.modelName`](./device/#devicemodelname).\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"name":"platform","kind":1024,"kindString":"Property","comment":{"shortText":"The Apple internal model identifier for this device, e.g. `iPhone1,1`.","tags":[{"tag":"deprecated","text":"Deprecated. Use `expo-device`\'s [`Device.modelId`](./device/#devicemodelid).\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"systemVersion","kind":1024,"kindString":"Property","comment":{"shortText":"The version of iOS running on this device, e.g. `10.3`.","tags":[{"tag":"deprecated","text":"Deprecated. Use `expo-device`\'s [`Device.osVersion`](./device/#deviceosversion).\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"userInterfaceIdiom","kind":1024,"kindString":"Property","comment":{"shortText":"The user interface idiom of this device, i.e. whether the app is running on an iPhone or an iPad.","tags":[{"tag":"deprecated","text":"Deprecated. Use `expo-device`\'s [`Device.getDeviceTypeAsync()`](./device/#devicegetdevicetypeasync).\\n"}]},"type":{"type":"reference","name":"UserInterfaceIdiom"}}],"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}},{"name":"Manifest","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A modern manifest."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"assets","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"reference","name":"ManifestAsset"}}},{"name":"createdAt","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"extra","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"ManifestExtra"}},{"name":"id","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"launchAsset","kind":1024,"kindString":"Property","type":{"type":"reference","name":"ManifestAsset"}},{"name":"metadata","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"object"}},{"name":"runtimeVersion","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"ManifestAsset","kind":256,"kindString":"Interface","children":[{"name":"url","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]},{"name":"ManifestExtra","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ClientScopingConfig"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"eas","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"EASConfig"}},{"name":"expoClient","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"ExpoClientConfig"}},{"name":"expoGo","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"ExpoGoConfig"}}]}}]}},{"name":"PlatformManifest","kind":16777216,"kindString":"Reference"},{"name":"PlatformManifest","kind":256,"kindString":"Interface","children":[{"name":"android","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"AndroidManifest"}},{"name":"detach","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"scheme","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}},{"name":"developer","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"hostUri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"ios","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"IOSManifest"}},{"name":"logUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"scheme","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"web","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"WebManifest"}}],"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}},{"name":"UserInterfaceIdiom","kind":16777216,"kindString":"Reference"},{"name":"UserInterfaceIdiom","kind":8,"kindString":"Enumeration","comment":{"shortText":"Current supported values are `handset` and `tablet`. Apple TV and CarPlay will show up\\nas `unsupported`."},"children":[{"name":"Handset","kind":16,"kindString":"Enumeration member","defaultValue":"\\"handset\\""},{"name":"Tablet","kind":16,"kindString":"Enumeration member","defaultValue":"\\"tablet\\""},{"name":"Unsupported","kind":16,"kindString":"Enumeration member","defaultValue":"\\"unsupported\\""}]},{"name":"WebManifest","kind":16777216,"kindString":"Reference"},{"name":"WebManifest","kind":256,"kindString":"Interface","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}]}')},RuaP:function(e){e.exports=JSON.parse('{"name":"expo-checkbox","kind":1,"kindString":"Project","originalName":"","children":[{"name":"default","kind":4,"kindString":"Namespace","children":[{"name":"displayName","kind":32,"kindString":"Variable","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Promise"}}]}]},{"name":"CheckboxComponent","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"CheckboxProps"}],"name":"React.FC"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isAvailableAsync","kind":2048,"kindString":"Method","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}}]}},{"name":"CheckboxEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"target","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"value","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}}]}}],"name":"NativeSyntheticEvent"}},{"name":"CheckboxProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"color","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The tint or color of the checkbox. This overrides the disabled opaque style."},"type":{"type":"reference","name":"ColorValue"}},{"name":"disabled","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the checkbox is disabled, it becomes opaque and uncheckable."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"value","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Value indicating if the checkbox should be rendered as checked or not. Default value is `false`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"onChange","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onChange","kind":4096,"kindString":"Call signature","comment":{"shortText":"Callback that is invoked when the user presses the checkbox."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","comment":{"shortText":"A native event containing the checkbox change.\\n"},"type":{"type":"reference","name":"CheckboxEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onValueChange","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onValueChange","kind":4096,"kindString":"Call signature","comment":{"shortText":"Callback that is invoked when the user presses the checkbox."},"parameters":[{"name":"value","kind":32768,"kindString":"Parameter","comment":{"shortText":"A boolean indicating the new checked state of the checkbox.\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]}]}}]}},{"name":"default","kind":32,"kindString":"Variable","type":{"type":"reference","name":"CheckboxComponent"},"defaultValue":"..."}]}')},S1BJ:function(e){e.exports=JSON.parse('{"name":"expo-mail-composer","kind":1,"kindString":"Project","originalName":"","children":[{"name":"MailComposerStatus","kind":8,"kindString":"Enumeration","children":[{"name":"CANCELLED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"cancelled\\""},{"name":"SAVED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"saved\\""},{"name":"SENT","kind":16,"kindString":"Enumeration member","defaultValue":"\\"sent\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"MailComposerOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A map defining the data to fill the mail."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"attachments","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of app\'s internal file URIs to attach."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"bccRecipients","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of e-mail addresses of the BCC recipients."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"body","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Body of the e-mail."},"type":{"type":"intrinsic","name":"string"}},{"name":"ccRecipients","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of e-mail addresses of the CC recipients."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"isHtml","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the body contains HTML tags so it could be formatted properly.\\nNot working perfectly on Android."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"recipients","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of e-mail addresses of the recipients."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"subject","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Subject of the e-mail."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"MailComposerResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"MailComposerStatus"}}]}}},{"name":"composeAsync","kind":64,"kindString":"Function","signatures":[{"name":"composeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Opens a mail modal for iOS and a mail app intent for Android and fills the fields with provided\\ndata. On iOS you will need to be signed into the Mail app.","returns":"A promise fulfilled with an object containing a `status` field that specifies whether an\\nemail was sent, saved, or cancelled. Android does not provide this info, so the status is always\\nset as if the email were sent.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"MailComposerOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"MailComposerResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine if the `MailComposer` API can be used in this app.","returns":"A promise resolves to `true` if the API can be used, and `false` otherwise.\\n- Returns `true` on iOS when the device has a default email setup for sending mail.\\n- Can return `false` on iOS if an MDM profile is setup to block outgoing mail. If this is the\\ncase, you may want to use the Linking API instead.\\n- Always returns `true` in the browser and on Android.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},S872:function(e,w,n){"use strict";e.exports=p;var c=n("vUGn");function p(d,a){var m=d.footnoteOrder,r=String(a.identifier);return m.indexOf(r)===-1&&m.push(r),d(a.position,"sup",{id:"fnref-"+r},[d(a,"a",{href:"#fn-"+r,className:["footnote-ref"]},[c("text",a.label||r)])])}},SKkZ:function(e){e.exports=JSON.parse('{"name":"expo-tracking-transparency","kind":1,"kindString":"Project","originalName":"","children":[{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"getTrackingPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getTrackingPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks whether or not the user has authorized the app to access app-related data that can be used\\nfor tracking the user or the device. See `requestTrackingPermissionsAsync` for more details.","text":"On Android, web, and iOS 13 and below, this method always returns that the permission was\\ngranted.\\n","tags":[{"tag":"example","text":"\\n```typescript\\nconst { granted } = await getTrackingPermissionsAsync();\\n\\nif (granted) {\\n  // Your app is authorized to track the user or their device\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"isAvailable","kind":64,"kindString":"Function","signatures":[{"name":"isAvailable","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the TrackingTransparency API is available on the current device.","returns":"Currently this is `true` on iOS 14 and above only. On devices where the\\nTracking Transparency API is unavailable, the get and request permissions methods will always\\nresolve to `granted`.\\n"},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"requestTrackingPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestTrackingPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Requests the user to authorize or deny access to app-related data that can be used for tracking\\nthe user or the device. Examples of data used for tracking include email address, device ID,\\nadvertising ID, etc. On iOS 14.5 and above, if the user denies this permission, any attempt to\\ncollect the IDFA will return a string of 0s.","text":"The system remembers the user\u2019s choice and doesn\u2019t prompt again unless a user uninstalls and then\\nreinstalls the app on the device.\\n\\nOn Android, web, and iOS 13 and below, this method always returns that the permission was\\ngranted.","tags":[{"tag":"example","text":"\\n```typescript\\nconst { granted } = await requestTrackingPermissionsAsync();\\n\\nif (granted) {\\n  // Your app is authorized to track the user or their device\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"useTrackingPermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"useTrackingPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request the user to authorize or deny access to app-related data that can be used for tracking\\nthe user or the device. Examples of data used for tracking include email address, device ID,\\nadvertising ID, etc. On iOS 14.5 and above, if the user denies this permission, any attempt to\\ncollect the IDFA will return a string of 0s.","text":"The system remembers the user\u2019s choice and doesn\u2019t prompt again unless a user uninstalls and then\\nreinstalls the app on the device.\\n\\nOn Android, web, and iOS 13 and below, this method always returns that the permission was\\ngranted.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = useTrackingPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}]}')},SRxd:function(e){e.exports=JSON.parse('{"name":"expo-video-thumbnails","kind":1,"kindString":"Project","originalName":"","children":[{"name":"VideoThumbnailsOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"headers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"In case `sourceFilename` is a remote URI, `headers` object is passed in a network request."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"}},{"name":"quality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A value in range `0.0` - `1.0` specifying quality level of the result image. `1` means no\\ncompression (highest quality) and `0` the highest compression (lowest quality)."},"type":{"type":"intrinsic","name":"number"}},{"name":"time","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The time position where the image will be retrieved in ms."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"VideoThumbnailsResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"Height of the created image."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"URI to the created image (usable as the source for an Image/Video element)."},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"Width of the created image."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"getThumbnailAsync","kind":64,"kindString":"Function","signatures":[{"name":"getThumbnailAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create an image thumbnail from video provided via `sourceFilename`.","returns":"Returns a promise which fulfils with [`VideoThumbnailsResult`](#videothumbnailsresult).\\n"},"parameters":[{"name":"sourceFilename","kind":32768,"kindString":"Parameter","comment":{"shortText":"An URI of the video, local or remote."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map defining how modified thumbnail should be created.\\n"},"type":{"type":"reference","name":"VideoThumbnailsOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoThumbnailsResult"}],"name":"Promise"}}]}]}')},Sbsf:function(e){e.exports=JSON.parse('{"name":"expo-blur","kind":1,"kindString":"Project","originalName":"","children":[{"name":"BlurTint","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"},{"type":"literal","value":"default"}]}},{"name":"BlurViewProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"intensity","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A number from `1` to `100` to control the intensity of the blur effect.","text":"You can animate this property using `Animated API` from React Native or using `react-native-reanimated`.\\n> Animating this property using `Animated API` from React Native with `setNativeDriver: true` does not work.\\n","tags":[{"tag":"default","text":"50\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"tint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A tint mode which will be applied to the view.","tags":[{"tag":"default","text":"\'default\'\\n"}]},"type":{"type":"reference","name":"BlurTint"}}]}},{"type":"reference","qualifiedName":"ViewProps","package":"@types/react-native","name":"ViewProps"}]}},{"name":"BlurView","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"intensity","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A number from `1` to `100` to control the intensity of the blur effect.","text":"You can animate this property using `Animated API` from React Native or using `react-native-reanimated`.\\n> Animating this property using `Animated API` from React Native with `setNativeDriver: true` does not work.\\n","tags":[{"tag":"default","text":"50\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"tint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A tint mode which will be applied to the view.","tags":[{"tag":"default","text":"\'default\'\\n"}]},"type":{"type":"reference","name":"BlurTint"}}]}},{"type":"reference","qualifiedName":"ViewProps","package":"@types/react-native","name":"ViewProps"},{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"View","package":"@types/react-native","name":"View"}],"qualifiedName":"React.RefAttributes","package":"@types/react","name":"RefAttributes"}]}],"qualifiedName":"React.ForwardRefExoticComponent","package":"@types/react","name":"ForwardRefExoticComponent"},"defaultValue":"..."}]}')},ScQ6:function(e,w,n){e.exports=r;var c=n("RjOF"),p=n("/cIb"),d=n("NfWH"),a=n("B5Lt"),m=n("deF/");function r(s,i,o){var t=p(o),l=d(o),k,g,h;return i&&i.ordered&&(t=(i.start>-1?i.start:1)+(o.options.incrementListMarker===!1?0:i.children.indexOf(s))+"."),k=t.length+1,(l==="tab"||l==="mixed"&&(i&&i.spread||s.spread))&&(k=Math.ceil(k/4)*4),h=o.enter("listItem"),g=m(a(s,o),f),h(),g;function f(S,b,P){return b?(P?"":c(" ",k))+S:(P?t:t+c(" ",k-t.length))+S}}},Sgn2:function(e){e.exports=JSON.parse('{"name":"expo-splash-screen","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"hideAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"hideAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Hides the native splash screen immediately. Be careful to ensure that your app has content ready\\nto display when you hide the splash screen, or you may see a blank screen briefly. See the\\n[\\"Usage\\"](#usage) section for an example."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"preventAutoHideAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"preventAutoHideAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Makes the native splash screen (configured in `app.json`) remain visible until `hideAsync` is called."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}')},"ShV+":function(e){e.exports=JSON.parse('{"name":"expo-keep-awake","kind":1,"kindString":"Project","originalName":"","children":[{"name":"ExpoKeepAwakeTag","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"literal","value":"ExpoKeepAwakeDefaultTag"},"defaultValue":"\'ExpoKeepAwakeDefaultTag\'"},{"name":"activateKeepAwake","kind":64,"kindString":"Function","signatures":[{"name":"activateKeepAwake","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prevents the screen from sleeping until `deactivateKeepAwake` is called with the same `tag` value.","text":"If the `tag` argument is specified, the screen will not sleep until you call `deactivateKeepAwake`\\nwith the same `tag` argument. When using multiple `tags` for activation you\'ll have to deactivate\\neach one in order to re-enable screen sleep. If tag is unspecified, the default `tag` is used."},"parameters":[{"name":"tag","kind":32768,"kindString":"Parameter","comment":{"shortText":"*Optional* - Tag to lock screen sleep prevention. If not provided, the default tag is used.\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoKeepAwakeTag"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"deactivateKeepAwake","kind":64,"kindString":"Function","signatures":[{"name":"deactivateKeepAwake","kind":4096,"kindString":"Call signature","comment":{"shortText":"Releases the lock on screen-sleep prevention associated with the given `tag` value. If `tag`\\nis unspecified, it defaults to the same default tag that `activateKeepAwake` uses."},"parameters":[{"name":"tag","kind":32768,"kindString":"Parameter","comment":{"shortText":"*Optional* - Tag to release the lock on screen sleep prevention. If not provided,\\nthe default tag is used.\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoKeepAwakeTag"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"useKeepAwake","kind":64,"kindString":"Function","signatures":[{"name":"useKeepAwake","kind":4096,"kindString":"Call signature","comment":{"shortText":"A React hook to keep the screen awake for as long as the owner component is mounted.\\nThe optionally provided `tag` argument is used when activating and deactivating the keep-awake\\nfeature. If unspecified, the default `tag` is used. See the documentation for `activateKeepAwake`\\nbelow to learn more about the `tag` argument."},"parameters":[{"name":"tag","kind":32768,"kindString":"Parameter","comment":{"shortText":"*Optional* - Tag to lock screen sleep prevention. If not provided, the default tag is used."},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoKeepAwakeTag"},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"*Optional*\\n  - `suppressDeactivateWarnings` *Optional* -\\n     The call will throw an unhandled promise rejection on Android\\n     when the original Activity is dead or deactivated.\\n     Set the value to true for suppressing the uncaught exception.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"suppressDeactivateWarnings","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}]}')},SuaR:function(e){e.exports=JSON.parse('{"name":"expo-updates","kind":1,"kindString":"Project","originalName":"","children":[{"name":"UpdateEventType","kind":8,"kindString":"Enumeration","comment":{"shortText":"The types of update-related events."},"children":[{"name":"ERROR","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An error occurred trying to fetch the latest update."},"defaultValue":"\\"error\\""},{"name":"NO_UPDATE_AVAILABLE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"No updates are available, and the most up-to-date update is already running."},"defaultValue":"\\"noUpdateAvailable\\""},{"name":"UPDATE_AVAILABLE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A new update has finished downloading to local storage. If you would like to start using this\\nupdate at any point before the user closes and restarts the app on their own, you can call\\n[`Updates.reloadAsync()`](#reloadasync) to launch this new update."},"defaultValue":"\\"updateAvailable\\""}]},{"name":"UpdateCheckResult","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The result of checking for a new update."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isAvailable","kind":1024,"kindString":"Property","comment":{"shortText":"`true` if an update is available, `false` if the app is already running the latest available\\nupdate."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"manifest","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `isAvailable` is `true`, the manifest of the available update, and `undefined` otherwise."},"type":{"type":"reference","name":"Manifest"}}]}}},{"name":"UpdateEvent","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object that is passed into each event listener when an auto-update check occurs."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"manifest","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `type` is `Updates.UpdateEventType.UPDATE_AVAILABLE`, the manifest of the newly downloaded\\nupdate, and `undefined` otherwise."},"type":{"type":"reference","name":"Manifest"}},{"name":"message","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `type` is `Updates.UpdateEventType.ERROR`, the error message, and `undefined` otherwise."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the event."},"type":{"type":"reference","name":"UpdateEventType"}}]}}},{"name":"UpdateFetchResult","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The result of fetching a new update."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isNew","kind":1024,"kindString":"Property","comment":{"shortText":"`true` if the fetched bundle is new (that is, a different version than what\'s currently\\nrunning), `false` otherwise."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"manifest","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `isNew` is `true`, the manifest of the newly downloaded update, and `undefined` otherwise."},"type":{"type":"reference","name":"Manifest"}}]}}},{"name":"channel","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The channel name of the current build, if configured for use with EAS Update. Null otherwise."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"createdAt","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"If `expo-updates` is enabled, this is a `Date` object representing the creation time of the update that\'s currently running (whether it was embedded or downloaded at runtime).","text":"In development mode, or any other environment in which `expo-updates` is disabled, this value is\\nnull.\\n"},"type":{"type":"union","types":[{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"isEmergencyLaunch","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"`expo-updates` does its very best to always launch monotonically newer versions of your app so\\nyou don\'t need to worry about backwards compatibility when you put out an update. In very rare\\ncases, it\'s possible that `expo-updates` may need to fall back to the update that\'s embedded in\\nthe app binary, even after newer updates have been downloaded and run (an \\"emergency launch\\").\\nThis boolean will be `true` if the app is launching under this fallback mechanism and `false`\\notherwise. If you are concerned about backwards compatibility of future updates to your app, you\\ncan use this constant to provide special behavior for this rare case."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"..."},{"name":"manifest","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"If `expo-updates` is enabled, this is the\\n[manifest](/guides/how-expo-works#expo-development-server) object for the update that\'s currently\\nrunning.","text":"In development mode, or any other environment in which `expo-updates` is disabled, this object is\\nempty.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Manifest"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},"defaultValue":"..."},{"name":"releaseChannel","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The name of the release channel currently configured in this standalone or bare app when using\\nclassic updates. When using Expo Updates, the value of this field is always `\\"default\\"`."},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"runtimeVersion","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The runtime version of the current build."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"updateId","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The UUID that uniquely identifies the currently running update if `expo-updates` is enabled. The\\nUUID is represented in its canonical string form (`xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx`) and\\nwill always use lowercase letters. In development mode, or any other environment in which\\n`expo-updates` is disabled, this value is `null`."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"addListener","kind":64,"kindString":"Function","signatures":[{"name":"addListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Adds a callback to be invoked when updates-related events occur (such as upon the initial app\\nload) due to auto-update settings chosen at build-time.","returns":"An `EventSubscription` object on which you can call `remove()` to unsubscribe the\\nlistener.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"A function that will be invoked with an [`UpdateEvent`](#updateevent) instance\\nand should not return any value."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"UpdateEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","qualifiedName":"EventSubscription","package":"@types/fbemitter","name":"EventSubscription"}}]},{"name":"checkForUpdateAsync","kind":64,"kindString":"Function","signatures":[{"name":"checkForUpdateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks the server to see if a newly deployed update to your project is available. Does not\\nactually download the update. This method cannot be used in development mode, and the returned\\npromise will be rejected if you try to do so.","text":"Checking for an update uses a device\'s bandwidth and battery life like any network call.\\nAdditionally, updates served by Expo may be rate limited. A good rule of thumb to check for\\nupdates judiciously is to check when the user launches or foregrounds the app. Avoid polling for\\nupdates in a frequent loop.\\n","returns":"A promise that fulfills with an [`UpdateCheckResult`](#updatecheckresult) object.\\n\\nThe promise rejects if the app is in development mode, or if there is an unexpected error or\\ntimeout communicating with the server.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"UpdateCheckResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"fetchUpdateAsync","kind":64,"kindString":"Function","signatures":[{"name":"fetchUpdateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Downloads the most recently deployed update to your project from server to the device\'s local\\nstorage. This method cannot be used in development mode, and the returned promise will be\\nrejected if you try to do so.","returns":"A promise that fulfills with an [`UpdateFetchResult`](#updatefetchresult) object.\\n\\nThe promise rejects if the app is in development mode, or if there is an unexpected error or\\ntimeout communicating with the server.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"UpdateFetchResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"reloadAsync","kind":64,"kindString":"Function","signatures":[{"name":"reloadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Instructs the app to reload using the most recently downloaded version. This is useful for\\ntriggering a newly downloaded update to launch without the user needing to manually restart the\\napp.","text":"It is not recommended to place any meaningful logic after a call to `await\\nUpdates.reloadAsync()`. This is because the promise is resolved after verifying that the app can\\nbe reloaded, and immediately before posting an asynchronous task to the main thread to actually\\nreload the app. It is unsafe to make any assumptions about whether any more JS code will be\\nexecuted after the `Updates.reloadAsync` method call resolves, since that depends on the OS and\\nthe state of the native module and main threads.\\n\\nThis method cannot be used in development mode, and the returned promise will be rejected if you\\ntry to do so.\\n","returns":"A promise that fulfills right before the reload instruction is sent to the JS runtime, or\\nrejects if it cannot find a reference to the JS runtime. If the promise is rejected in production\\nmode, it most likely means you have installed the module incorrectly. Double check you\'ve\\nfollowed the installation instructions. In particular, on iOS ensure that you set the `bridge`\\nproperty on `EXUpdatesAppController` with a pointer to the `RCTBridge` you want to reload, and on\\nAndroid ensure you either call `UpdatesController.initialize` with the instance of\\n`ReactApplication` you want to reload, or call `UpdatesController.setReactNativeHost` with the\\nproper instance of `ReactNativeHost`.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},T0BQ:function(e,w,n){"use strict";var c=n("NOby");function p(d){return c({},d)}e.exports=p},T73F:function(e,w,n){var c={"./unversioned/expo-analytics-amplitude.json":"Ne9V","./unversioned/expo-analytics-segment.json":"htPg","./unversioned/expo-app-loading.json":"4n5I","./unversioned/expo-apple-authentication.json":"sjE/","./unversioned/expo-application.json":"npd2","./unversioned/expo-asset.json":"mT/O","./unversioned/expo-auth-session.json":"kMOC","./unversioned/expo-background-fetch.json":"svZi","./unversioned/expo-barcode-scanner.json":"e9iv","./unversioned/expo-battery.json":"6+oe","./unversioned/expo-blur.json":"Sbsf","./unversioned/expo-brightness.json":"v0AZ","./unversioned/expo-build-properties.json":"G5G/","./unversioned/expo-calendar.json":"2lNy","./unversioned/expo-camera.json":"loKZ","./unversioned/expo-cellular.json":"EjwE","./unversioned/expo-checkbox.json":"9tKq","./unversioned/expo-clipboard.json":"kMNA","./unversioned/expo-constants.json":"lQ1o","./unversioned/expo-crypto.json":"fuzM","./unversioned/expo-document-picker.json":"LyHK","./unversioned/expo-error-recovery.json":"i1Ns","./unversioned/expo-face-detector.json":"YyrF","./unversioned/expo-facebook.json":"KuEM","./unversioned/expo-firebase-analytics.json":"9/+P","./unversioned/expo-firebase-core.json":"2aGx","./unversioned/expo-font.json":"l/4a","./unversioned/expo-haptics.json":"v+nw","./unversioned/expo-image-manipulator.json":"nZNs","./unversioned/expo-image-picker.json":"y3+S","./unversioned/expo-in-app-purchases.json":"dlkv","./unversioned/expo-intent-launcher.json":"n3ED","./unversioned/expo-keep-awake.json":"ShV+","./unversioned/expo-linear-gradient.json":"bnyH","./unversioned/expo-linking.json":"X2tN","./unversioned/expo-local-authentication.json":"tyUG","./unversioned/expo-localization.json":"wwGf","./unversioned/expo-location.json":"Hon/","./unversioned/expo-mail-composer.json":"S1BJ","./unversioned/expo-media-library.json":"LaSM","./unversioned/expo-navigation-bar.json":"z78n","./unversioned/expo-network.json":"KYel","./unversioned/expo-pedometer.json":"IMTd","./unversioned/expo-print.json":"pJmk","./unversioned/expo-random.json":"uF0q","./unversioned/expo-screen-capture.json":"AssK","./unversioned/expo-screen-orientation.json":"pIaa","./unversioned/expo-secure-store.json":"Mg8r","./unversioned/expo-sharing.json":"OiV/","./unversioned/expo-sms.json":"dakO","./unversioned/expo-speech.json":"sBWF","./unversioned/expo-splash-screen.json":"RMiK","./unversioned/expo-sqlite.json":"dOo3","./unversioned/expo-status-bar.json":"0W06","./unversioned/expo-store-review.json":"2zhJ","./unversioned/expo-system-ui.json":"4L9f","./unversioned/expo-task-manager.json":"fgf6","./unversioned/expo-tracking-transparency.json":"+zj1","./unversioned/expo-updates.json":"SuaR","./unversioned/expo-video-thumbnails.json":"tkPk","./unversioned/expo-video.json":"IVOw","./unversioned/expo-web-browser.json":"HGtU","./v42.0.0/expo-analytics-segment.json":"cLJU","./v42.0.0/expo-apple-authentication.json":"FLXD","./v42.0.0/expo-application.json":"r82V","./v42.0.0/expo-background-fetch.json":"0sWW","./v42.0.0/expo-battery.json":"TzL0","./v42.0.0/expo-blur.json":"L6gl","./v42.0.0/expo-cellular.json":"aoAd","./v42.0.0/expo-clipboard.json":"vcXm","./v42.0.0/expo-facebook.json":"/clR","./v42.0.0/expo-haptics.json":"HuD+","./v42.0.0/expo-keep-awake.json":"26Rv","./v42.0.0/expo-linear-gradient.json":"Fb3X","./v42.0.0/expo-localization.json":"JPSL","./v42.0.0/expo-mail-composer.json":"BMpi","./v42.0.0/expo-network.json":"KgOP","./v42.0.0/expo-pedometer.json":"R9Rw","./v42.0.0/expo-print.json":"T7uG","./v42.0.0/expo-random.json":"MeRB","./v42.0.0/expo-secure-store.json":"DSdd","./v42.0.0/expo-sharing.json":"oMG0","./v42.0.0/expo-splash-screen.json":"Sgn2","./v42.0.0/expo-store-review.json":"QPc+","./v42.0.0/expo-task-manager.json":"5qE1","./v42.0.0/expo-tracking-transparency.json":"VDlU","./v42.0.0/expo-video-thumbnails.json":"Tvsv","./v43.0.0/expo-analytics-amplitude.json":"Ac4N","./v43.0.0/expo-analytics-segment.json":"KTko","./v43.0.0/expo-app-loading.json":"Ufk8","./v43.0.0/expo-apple-authentication.json":"QNiX","./v43.0.0/expo-application.json":"Pteq","./v43.0.0/expo-background-fetch.json":"3QmW","./v43.0.0/expo-barcode-scanner.json":"Aieo","./v43.0.0/expo-battery.json":"xTuD","./v43.0.0/expo-blur.json":"+5jK","./v43.0.0/expo-brightness.json":"1SvC","./v43.0.0/expo-cellular.json":"aBQg","./v43.0.0/expo-checkbox.json":"+E1r","./v43.0.0/expo-clipboard.json":"bqQJ","./v43.0.0/expo-document-picker.json":"Jfu2","./v43.0.0/expo-error-recovery.json":"Jc/f","./v43.0.0/expo-face-detector.json":"mXiA","./v43.0.0/expo-facebook.json":"FYBV","./v43.0.0/expo-firebase-analytics.json":"UCJE","./v43.0.0/expo-firebase-core.json":"8Adp","./v43.0.0/expo-font.json":"MNZ5","./v43.0.0/expo-haptics.json":"kb4Z","./v43.0.0/expo-image-manipulator.json":"hDeP","./v43.0.0/expo-in-app-purchases.json":"W9GW","./v43.0.0/expo-intent-launcher.json":"iqAl","./v43.0.0/expo-keep-awake.json":"s4R/","./v43.0.0/expo-linear-gradient.json":"Ek58","./v43.0.0/expo-local-authentication.json":"MSbt","./v43.0.0/expo-localization.json":"nOHu","./v43.0.0/expo-mail-composer.json":"j56j","./v43.0.0/expo-media-library.json":"+ZFF","./v43.0.0/expo-network.json":"DAxP","./v43.0.0/expo-pedometer.json":"5/8l","./v43.0.0/expo-print.json":"XItG","./v43.0.0/expo-random.json":"GHFy","./v43.0.0/expo-screen-capture.json":"mfAU","./v43.0.0/expo-screen-orientation.json":"+kOb","./v43.0.0/expo-secure-store.json":"+5ou","./v43.0.0/expo-sharing.json":"o77H","./v43.0.0/expo-sms.json":"5V+r","./v43.0.0/expo-speech.json":"qvht","./v43.0.0/expo-splash-screen.json":"57Mm","./v43.0.0/expo-sqlite.json":"dSIC","./v43.0.0/expo-store-review.json":"UHex","./v43.0.0/expo-task-manager.json":"aqL2","./v43.0.0/expo-tracking-transparency.json":"SKkZ","./v43.0.0/expo-updates.json":"WDeQ","./v43.0.0/expo-video-thumbnails.json":"QHLE","./v43.0.0/expo-web-browser.json":"wWWu","./v44.0.0/expo-analytics-amplitude.json":"iN0G","./v44.0.0/expo-analytics-segment.json":"F8DJ","./v44.0.0/expo-app-loading.json":"sRe0","./v44.0.0/expo-apple-authentication.json":"Lo+j","./v44.0.0/expo-application.json":"QKIl","./v44.0.0/expo-asset.json":"zq41","./v44.0.0/expo-background-fetch.json":"fFWI","./v44.0.0/expo-barcode-scanner.json":"8Ox7","./v44.0.0/expo-battery.json":"xzBm","./v44.0.0/expo-blur.json":"Kuxm","./v44.0.0/expo-brightness.json":"19je","./v44.0.0/expo-calendar.json":"N7yo","./v44.0.0/expo-cellular.json":"WJQt","./v44.0.0/expo-checkbox.json":"RuaP","./v44.0.0/expo-clipboard.json":"sMeo","./v44.0.0/expo-constants.json":"Rt5X","./v44.0.0/expo-document-picker.json":"yAol","./v44.0.0/expo-error-recovery.json":"1kJa","./v44.0.0/expo-face-detector.json":"aYgM","./v44.0.0/expo-facebook.json":"Mv2H","./v44.0.0/expo-firebase-analytics.json":"/qs6","./v44.0.0/expo-firebase-core.json":"tQUn","./v44.0.0/expo-font.json":"ie/8","./v44.0.0/expo-haptics.json":"jvvS","./v44.0.0/expo-image-manipulator.json":"jmlN","./v44.0.0/expo-image-picker.json":"MqzE","./v44.0.0/expo-in-app-purchases.json":"+J/d","./v44.0.0/expo-intent-launcher.json":"Ufm5","./v44.0.0/expo-keep-awake.json":"Z9Vk","./v44.0.0/expo-linear-gradient.json":"eHPn","./v44.0.0/expo-linking.json":"K7yW","./v44.0.0/expo-local-authentication.json":"5Dam","./v44.0.0/expo-localization.json":"8j0n","./v44.0.0/expo-location.json":"oNQa","./v44.0.0/expo-mail-composer.json":"3zYo","./v44.0.0/expo-media-library.json":"3ZbZ","./v44.0.0/expo-navigation-bar.json":"O+LE","./v44.0.0/expo-network.json":"4iWs","./v44.0.0/expo-pedometer.json":"2J2/","./v44.0.0/expo-print.json":"GVHk","./v44.0.0/expo-random.json":"Lpsv","./v44.0.0/expo-screen-capture.json":"jkj1","./v44.0.0/expo-screen-orientation.json":"+Z/f","./v44.0.0/expo-secure-store.json":"P5JI","./v44.0.0/expo-sharing.json":"3w6F","./v44.0.0/expo-sms.json":"gugV","./v44.0.0/expo-speech.json":"4YI0","./v44.0.0/expo-splash-screen.json":"PBjr","./v44.0.0/expo-sqlite.json":"9gYW","./v44.0.0/expo-status-bar.json":"DUyF","./v44.0.0/expo-store-review.json":"n06p","./v44.0.0/expo-system-ui.json":"v21+","./v44.0.0/expo-task-manager.json":"aTeO","./v44.0.0/expo-tracking-transparency.json":"mtsx","./v44.0.0/expo-updates.json":"a55V","./v44.0.0/expo-video-thumbnails.json":"SRxd","./v44.0.0/expo-web-browser.json":"0Wqv","./v45.0.0/expo-analytics-amplitude.json":"EFjC","./v45.0.0/expo-analytics-segment.json":"nVXh","./v45.0.0/expo-app-loading.json":"7Up6","./v45.0.0/expo-apple-authentication.json":"M+TP","./v45.0.0/expo-application.json":"CteC","./v45.0.0/expo-asset.json":"g+7D","./v45.0.0/expo-auth-session.json":"C1pd","./v45.0.0/expo-background-fetch.json":"Fc2U","./v45.0.0/expo-barcode-scanner.json":"PXId","./v45.0.0/expo-battery.json":"WmHN","./v45.0.0/expo-blur.json":"VrUE","./v45.0.0/expo-brightness.json":"TW2x","./v45.0.0/expo-build-properties.json":"XER9","./v45.0.0/expo-calendar.json":"ncJ5","./v45.0.0/expo-camera.json":"J7nH","./v45.0.0/expo-cellular.json":"rv7F","./v45.0.0/expo-checkbox.json":"ZIlA","./v45.0.0/expo-clipboard.json":"6LYA","./v45.0.0/expo-constants.json":"5fiV","./v45.0.0/expo-crypto.json":"oAbb","./v45.0.0/expo-document-picker.json":"K0Ff","./v45.0.0/expo-error-recovery.json":"En7T","./v45.0.0/expo-face-detector.json":"/aKz","./v45.0.0/expo-facebook.json":"9jIY","./v45.0.0/expo-firebase-analytics.json":"bz2G","./v45.0.0/expo-firebase-core.json":"67vQ","./v45.0.0/expo-font.json":"IOUy","./v45.0.0/expo-haptics.json":"dnFg","./v45.0.0/expo-image-manipulator.json":"4Xk1","./v45.0.0/expo-image-picker.json":"DyW7","./v45.0.0/expo-in-app-purchases.json":"RMnn","./v45.0.0/expo-intent-launcher.json":"ma6P","./v45.0.0/expo-keep-awake.json":"cG7X","./v45.0.0/expo-linear-gradient.json":"CX3E","./v45.0.0/expo-linking.json":"pBrz","./v45.0.0/expo-local-authentication.json":"hage","./v45.0.0/expo-localization.json":"pqfe","./v45.0.0/expo-location.json":"x/L1","./v45.0.0/expo-mail-composer.json":"DnsU","./v45.0.0/expo-media-library.json":"+HKP","./v45.0.0/expo-navigation-bar.json":"lgSD","./v45.0.0/expo-network.json":"X9SE","./v45.0.0/expo-pedometer.json":"KmcT","./v45.0.0/expo-print.json":"qZ5V","./v45.0.0/expo-random.json":"qOiC","./v45.0.0/expo-screen-capture.json":"H7O6","./v45.0.0/expo-screen-orientation.json":"5rbR","./v45.0.0/expo-secure-store.json":"wSUl","./v45.0.0/expo-sharing.json":"taDj","./v45.0.0/expo-sms.json":"tjMG","./v45.0.0/expo-speech.json":"7npz","./v45.0.0/expo-splash-screen.json":"5+N5","./v45.0.0/expo-sqlite.json":"DBzr","./v45.0.0/expo-status-bar.json":"3jkV","./v45.0.0/expo-store-review.json":"eEfU","./v45.0.0/expo-system-ui.json":"/Xwa","./v45.0.0/expo-task-manager.json":"0cwX","./v45.0.0/expo-tracking-transparency.json":"If04","./v45.0.0/expo-updates.json":"e4Dq","./v45.0.0/expo-video-thumbnails.json":"nB7t","./v45.0.0/expo-video.json":"L+rI","./v45.0.0/expo-web-browser.json":"ngZM"};function p(a){var m=d(a);return n(m)}function d(a){if(!n.o(c,a)){var m=new Error("Cannot find module '"+a+"'");throw m.code="MODULE_NOT_FOUND",m}return c[a]}p.keys=function(){return Object.keys(c)},p.resolve=d,e.exports=p,p.id="T73F"},T7uG:function(e){e.exports=JSON.parse('{"name":"expo-print","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"OrientationType","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"The possible values of orientation for the printed content."},"children":[{"name":"landscape","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"}},{"name":"portrait","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"}}]},{"name":"FilePrintOptions","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to include base64 encoded string of the file in the returned object."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Height of the single page in pixels. Defaults to `792` which is a height of US Letter paper\\nformat with 72 PPI."},"type":{"type":"intrinsic","name":"number"}},{"name":"html","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"HTML string to print into PDF file."},"type":{"type":"intrinsic","name":"string"}},{"name":"padding","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Padding for the printed document."},"type":{"type":"reference","name":"FilePrintPadding"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Width of the single page in pixels. Defaults to `612` which is a width of US Letter paper\\nformat with 72 PPI."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"FilePrintResult","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Base64 encoded string containing the data of the PDF file. **Available only if `base64`\\noption is truthy**. It doesn\'t include data URI prefix `data:application/pdf;base64,`."},"type":{"type":"intrinsic","name":"string"}},{"name":"numberOfPages","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Number of pages that were needed to render given content."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A URI to the printed PDF file."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"PrintOptions","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Height of the single page in pixels. Defaults to `792` which is a height of US Letter paper\\nformat with 72 PPI. **Available only with `html` option.**"},"type":{"type":"intrinsic","name":"number"}},{"name":"html","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"HTML string to print. **Available on Android and iOS only.**"},"type":{"type":"intrinsic","name":"string"}},{"name":"markupFormatterIOS","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"**Available on iOS only.** Alternative to `html` option that uses [UIMarkupTextPrintFormatter](https://developer.apple.com/documentation/uikit/uimarkuptextprintformatter)\\ninstead of WebView. Might be removed in the future releases."},"type":{"type":"intrinsic","name":"string"}},{"name":"orientation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"**Available on iOS only.** The orientation of the printed content, `Print.Orientation.portrait`\\nor `Print.Orientation.landscape`."},"type":{"type":"union","types":[{"type":"indexedAccess","indexType":{"type":"literal","value":"portrait"},"objectType":{"type":"reference","name":"OrientationType"}},{"type":"indexedAccess","indexType":{"type":"literal","value":"landscape"},"objectType":{"type":"reference","name":"OrientationType"}}]}},{"name":"printerUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL of the printer to use. Returned from `selectPrinterAsync`. **Available on iOS only.**"},"type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URI of a PDF file to print. Remote, local (ex. selected via `DocumentPicker`) or base64 data URI\\nstarting with `data:application/pdf;base64,`. This only supports PDF, not other types of\\ndocument (e.g. images). **Available on Android and iOS only.**"},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Width of the single page in pixels. Defaults to `612` which is a width of US Letter paper\\nformat with 72 PPI. **Available only with `html` option.**"},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"Printer","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"name","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Name of the printer."},"type":{"type":"intrinsic","name":"string"}},{"name":"url","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"URL of the printer."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Orientation","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The orientation of the printed content."},"type":{"type":"reference","name":"OrientationType"},"defaultValue":"..."},{"name":"printAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"printAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Prints a document or HTML, on web this prints the HTML from the page.\\n> Note: On iOS, printing from HTML source doesn\'t support local asset URLs (due to `WKWebView`\\n> limitations). As a workaround you can use inlined base64-encoded strings.\\n> See [this comment](https://github.com/expo/expo/issues/7940#issuecomment-657111033) for more details.","returns":"Resolves to an empty `Promise` if printing started.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A map defining what should be printed."},"type":{"type":"reference","name":"PrintOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"printToFileAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"printToFileAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Prints HTML to PDF file and saves it to [app\'s cache directory](./filesystem/#filesystemcachedirectory).\\nOn Web this method opens the print dialog."},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A map of print options.\\n"},"type":{"type":"reference","name":"FilePrintOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"FilePrintResult"}],"name":"Promise"}}]},{"name":"selectPrinterAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"selectPrinterAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"**Available on iOS only.** Chooses a printer that can be later used in `printAsync`","returns":"A promise which fulfils with an object containing `name` and `url` of the selected printer.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Printer"}],"name":"Promise"}}]}]}')},TDhK:function(e,w,n){"use strict";var c={}.hasOwnProperty;e.exports=c},THrT:function(e,w,n){e.exports=n("qOO9")},TOwV:function(e,w,n){"use strict";e.exports=n("qT12")},TW2x:function(e){e.exports=JSON.parse('{"name":"expo-brightness","kind":1,"kindString":"Project","originalName":"","children":[{"name":"BrightnessMode","kind":8,"kindString":"Enumeration","children":[{"name":"AUTOMATIC","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Mode in which the device OS will automatically adjust the screen brightness depending on the\\nambient light."},"defaultValue":"1"},{"name":"MANUAL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Mode in which the screen brightness will remain constant and will not be adjusted by the OS."},"defaultValue":"2"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Means that the current brightness mode cannot be determined."},"defaultValue":"0"}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"BrightnessEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"brightness","kind":1024,"kindString":"Property","comment":{"shortText":"A number between `0` and `1`, inclusive, representing the current screen brightness."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"addBrightnessListener","kind":64,"kindString":"Function","signatures":[{"name":"addBrightnessListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to brightness (iOS) updates. The event fires whenever\\nthe power mode is toggled.","text":"On web and android the event never fires.","returns":"A `Subscription` object on which you can call `remove()` to unsubscribe from the listener.","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"A callback that is invoked when brightness (iOS) changes.\\nThe callback is provided a single argument that is an object with a `brightness` key."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BrightnessEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current brightness level of the device\'s main screen.","returns":"A `Promise` that fulfils with a number between `0` and `1`, inclusive, representing the\\ncurrent screen brightness.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing system brightness.","returns":"A promise that fulfils with an object of type [PermissionResponse](#permissionrespons).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getSystemBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"getSystemBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the global system screen brightness.","returns":"A `Promise` that is resolved with a number between `0` and `1`, inclusive, representing\\nthe current system screen brightness.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise"}}]},{"name":"getSystemBrightnessModeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getSystemBrightnessModeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the system brightness mode (e.g. whether or not the OS will automatically\\nadjust the screen brightness depending on ambient light).","returns":"A `Promise` that fulfils with a [`BrightnessMode`](#brightnessmode). Requires\\n`SYSTEM_BRIGHTNESS` permissions.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BrightnessMode"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the Brightness API is enabled on the current device. This does not check the app\\npermissions.","returns":"Async `boolean`, indicating whether the Brightness API is available on the current device.\\nCurrently this resolves `true` on iOS and Android only.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isUsingSystemBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"isUsingSystemBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a boolean specifying whether or not the current activity is using the\\nsystem-wide brightness value.","returns":"A `Promise` that fulfils with `true` when the current activity is using the system-wide\\nbrightness value, and `false` otherwise.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing system brightness.","returns":"A promise that fulfils with an object of type [PermissionResponse](#permissionrespons).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"setBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"setBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the current screen brightness. On iOS, this setting will persist until the device is locked,\\nafter which the screen brightness will revert to the user\'s default setting. On Android, this\\nsetting only applies to the current activity; it will override the system brightness value\\nwhenever your app is in the foreground.","returns":"A `Promise` that fulfils when the brightness has been successfully set.\\n"},"parameters":[{"name":"brightnessValue","kind":32768,"kindString":"Parameter","comment":{"shortText":"A number between `0` and `1`, inclusive, representing the desired screen\\nbrightness."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setSystemBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"setSystemBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"> __WARNING:__ This method is experimental.","text":"Sets the global system screen brightness and changes the brightness mode to\\n`MANUAL`. Requires `SYSTEM_BRIGHTNESS` permissions.","returns":"A `Promise` that fulfils when the brightness has been successfully set.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"brightnessValue","kind":32768,"kindString":"Parameter","comment":{"shortText":"A number between `0` and `1`, inclusive, representing the desired screen\\nbrightness."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setSystemBrightnessModeAsync","kind":64,"kindString":"Function","signatures":[{"name":"setSystemBrightnessModeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the system brightness mode.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"brightnessMode","kind":32768,"kindString":"Parameter","comment":{"shortText":"One of `BrightnessMode.MANUAL` or `BrightnessMode.AUTOMATIC`. The system\\nbrightness mode cannot be set to `BrightnessMode.UNKNOWN`."},"type":{"type":"reference","name":"BrightnessMode"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"usePermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"usePermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to modify the system brightness.\\nThis uses both `requestPermissionAsync` and `getPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Brightness.usePermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"useSystemBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"useSystemBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Resets the brightness setting of the current activity to use the system-wide\\nbrightness value rather than overriding it.","returns":"A `Promise` that fulfils when the setting has been successfully changed.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},TfMZ:function(e,w,n){"use strict";e.exports=p;var c=n("2jS9");function p(d,a){return d(a,"p",c(d,a))}},Tl76:function(e,w,n){"use strict";e.exports=p;var c=n("vUGn");function p(d,a){return[d(a,"br"),c("text",`
`)]}},Tvsv:function(e){e.exports=JSON.parse('{"name":"expo-video-thumbnails","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"VideoThumbnailsOptions","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"headers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"In case `sourceFilename` is a remote URI, `headers` object is passed in a network request."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"}},{"name":"quality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A value in range `0.0` - `1.0` specifying quality level of the result image. `1` means no\\ncompression (highest quality) and `0` the highest compression (lowest quality)."},"type":{"type":"intrinsic","name":"number"}},{"name":"time","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The time position where the image will be retrieved in ms."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"VideoThumbnailsResult","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"height","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Height of the created image."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"URI to the created image (usable as the source for an Image/Video element)."},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Width of the created image."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"getThumbnailAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getThumbnailAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Create an image thumbnail from video provided via `sourceFilename`.","returns":"Returns a promise which fulfils with [`VideoThumbnailsResult`](#videothumbnailsresult).\\n"},"parameters":[{"name":"sourceFilename","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"An URI of the video, local or remote."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A map defining how modified thumbnail should be created.\\n"},"type":{"type":"reference","name":"VideoThumbnailsOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoThumbnailsResult"}],"name":"Promise"}}]}]}')},TzL0:function(e){e.exports=JSON.parse('{"name":"expo-battery","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"BatteryState","kind":4,"kindString":"Enumeration","flags":{},"children":[{"name":"CHARGING","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"if battery is charging."},"defaultValue":"2"},{"name":"FULL","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"if the battery level is full."},"defaultValue":"3"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"if the battery state is unknown or inaccessible."},"defaultValue":"0"},{"name":"UNPLUGGED","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"if battery is not charging or discharging."},"defaultValue":"1"}]},{"name":"BatteryLevelEvent","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"batteryLevel","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A number between `0` and `1`, inclusive, or `-1` if the battery level is unknown."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"BatteryStateEvent","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"batteryState","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"An enum value representing the battery state."},"type":{"type":"reference","name":"BatteryState"}}]}}},{"name":"PowerModeEvent","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"lowPowerMode","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A boolean value, `true` if lowPowerMode is on, `false` if lowPowerMode is off"},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"PowerState","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"batteryLevel","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A number between `0` and `1`, inclusive, or `-1` if the battery level is unknown."},"type":{"type":"intrinsic","name":"number"}},{"name":"batteryState","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"An enum value representing the battery state."},"type":{"type":"reference","name":"BatteryState"}},{"name":"lowPowerMode","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A boolean value, `true` if lowPowerMode is on, `false` if lowPowerMode is off"},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"remove","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}]}}},{"name":"addBatteryLevelListener","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"addBatteryLevelListener","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Subscribe to the battery level change updates.","text":"On iOS devices, the event fires when the battery level drops one percent or more, but is only\\nfired once per minute at maximum.\\n\\nOn Android devices, the event fires only when significant changes happens, which is when the\\nbattery level drops below [`\\"android.intent.action.BATTERY_LOW\\"`](https://developer.android.com/reference/android/content/Intent#ACTION_BATTERY_LOW)\\nor rises above [`\\"android.intent.action.BATTERY_OKAY\\"`](https://developer.android.com/reference/android/content/Intent#ACTION_BATTERY_OKAY)\\nfrom a low battery level. See [here](https://developer.android.com/training/monitoring-device-state/battery-monitoring)\\nto read more from the Android docs.\\n\\nOn web, the event never fires.","returns":"A `Subscription` object on which you can call `remove()` to unsubscribe from the listener.s\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A callback that is invoked when battery level changes. The callback is provided a\\nsingle argument that is an object with a `batteryLevel` key."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"BatteryLevelEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"addBatteryStateListener","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"addBatteryStateListener","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Subscribe to the battery state change updates to receive an object with a [`Battery.BatteryState`](#batterystate)\\nenum value for whether the device is any of the four states.","text":"On web, the event never fires.","returns":"A `Subscription` object on which you can call `remove()` to unsubscribe from the listener.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A callback that is invoked when battery state changes. The callback is provided a\\nsingle argument that is an object with a `batteryState` key."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"BatteryStateEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"addLowPowerModeListener","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"addLowPowerModeListener","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Subscribe to Low Power Mode (iOS) or Power Saver Mode (Android) updates. The event fires whenever\\nthe power mode is toggled.","text":"On web, the event never fires.","returns":"A `Subscription` object on which you can call `remove()` to unsubscribe from the listener.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A callback that is invoked when Low Power Mode (iOS) or Power Saver Mode (Android)\\nchanges. The callback is provided a single argument that is an object with a `lowPowerMode` key."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"PowerModeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getBatteryLevelAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getBatteryLevelAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the battery level of the device as a number between `0` and `1`, inclusive. If the device\\ndoes not support retrieving the battery level, this method returns `-1`. On web, this method\\nalways returns `-1`.","returns":"A `Promise` that fulfils with a number between `0` and `1` representing the battery level,\\nor `-1` if the device does not provide it.\\n# Example\\n```ts\\nawait Battery.getBatteryLevelAsync();\\n// 0.759999\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise"}}]},{"name":"getBatteryStateAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getBatteryStateAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Tells the battery\'s current state. On web, this always returns `BatteryState.UNKNOWN`.","returns":"Returns a `Promise` which fulfills with a [`Battery.BatteryState`](#batterystate) enum\\nvalue for whether the device is any of the four states.\\n# Example\\n```ts\\nawait Battery.getBatteryStateAsync();\\n// BatteryState.CHARGING\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BatteryState"}],"name":"Promise"}}]},{"name":"getPowerStateAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getPowerStateAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the power state of the device including the battery level, whether it is plugged in, and if\\nthe system is currently operating in Low Power Mode (iOS) or Power Saver Mode (Android). This\\nmethod re-throws any errors that occur when retrieving any of the power-state information.","returns":"Returns a `Promise` which fulfills with [`PowerState`](#powerstate) object.\\n# Example\\n```ts\\nawait Battery.getPowerStateAsync();\\n// {\\n//   batteryLevel: 0.759999,\\n//   batteryState: BatteryState.UNPLUGGED,\\n//   lowPowerMode: true,\\n// }\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PowerState"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Resolves with whether the battery API is available on the current device. The value of this\\nproperty is `true` on Android and physical iOS devices and `false` on iOS simulators. On web,\\nit depends on whether the browser supports the web battery API."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isBatteryOptimizationEnabledAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"isBatteryOptimizationEnabledAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Checks whether battery optimization is enabled for your application.\\nIf battery optimization is enabled for your app, background tasks might be affected\\nwhen your app goes into doze mode state. (only on Android 6.0 or later)","returns":"Returns a `Promise` which fulfills with a `boolean` value of either `true` or `false`,\\nindicating whether the battery optimization is enabled or disabled, respectively. (Android only)\\n# Example\\n```ts\\nawait Battery.isBatteryOptimizationEnabledAsync();\\n// true\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isLowPowerModeEnabledAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"isLowPowerModeEnabledAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the current status of Low Power mode on iOS and Power Saver mode on Android. If a platform\\ndoesn\'t support Low Power mode reporting (like web, older Android devices), the reported low-power\\nstate is always `false`, even if the device is actually in low-power mode.","returns":"Returns a `Promise` which fulfills with a `boolean` value of either `true` or `false`,\\nindicating whether low power mode is enabled or disabled, respectively.\\n# Example\\nLow Power Mode (iOS) or Power Saver Mode (Android) are enabled.\\n```ts\\nawait Battery.isLowPowerModeEnabledAsync();\\n// true\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}')},UCJE:function(e){e.exports=JSON.parse('{"name":"expo-firebase-analytics","kind":1,"kindString":"Project","originalName":"","children":[{"name":"FirebaseAnalyticsJS","kind":128,"kindString":"Class","comment":{"shortText":"A pure JavaScript Google Firebase Analytics implementation that uses\\nthe HTTPS Measurement API 2 to send events to Google Analytics.","text":"This class provides an alternative for the Firebase Analytics module\\nshipped with the Firebase JS SDK. That library uses the gtag.js dependency\\nand requires certain browser features. This prevents the use\\nanalytics on other platforms, such as Node-js and react-native.\\n\\nFirebaseAnalyticsJS provides a bare-bone implementation of the new\\nHTTPS Measurement API 2 protocol (which is undocumented), with an API\\nthat follows the Firebase Analytics JS SDK.\\n"},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new FirebaseAnalyticsJS","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"config","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"FirebaseAnalyticsJSConfig"}},{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"FirebaseAnalyticsJSOptions"}}],"type":{"type":"reference","name":"FirebaseAnalyticsJS"}}]},{"name":"config","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"type":{"type":"reference","name":"FirebaseAnalyticsJSConfig"}},{"name":"url","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"type":{"type":"intrinsic","name":"string"}},{"name":"clearEvents","kind":2048,"kindString":"Method","signatures":[{"name":"clearEvents","kind":4096,"kindString":"Call signature","comment":{"shortText":"Clears any queued events and cancels the flush timer."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"logEvent","kind":2048,"kindString":"Method","signatures":[{"name":"logEvent","kind":4096,"kindString":"Call signature","comment":{"shortText":"https://firebase.google.com/docs/reference/js/firebase.analytics.Analytics#log-event"},"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"eventParams","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"resetAnalyticsData","kind":2048,"kindString":"Method","signatures":[{"name":"resetAnalyticsData","kind":4096,"kindString":"Call signature","comment":{"shortText":"Clears all analytics data for this instance."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setAnalyticsCollectionEnabled","kind":2048,"kindString":"Method","signatures":[{"name":"setAnalyticsCollectionEnabled","kind":4096,"kindString":"Call signature","comment":{"shortText":"https://firebase.google.com/docs/reference/js/firebase.analytics.Analytics#set-analytics-collection-enabled"},"parameters":[{"name":"isEnabled","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setClientId","kind":2048,"kindString":"Method","signatures":[{"name":"setClientId","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a new value for the client ID."},"parameters":[{"name":"clientId","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setCurrentScreen","kind":2048,"kindString":"Method","signatures":[{"name":"setCurrentScreen","kind":4096,"kindString":"Call signature","comment":{"shortText":"https://firebase.google.com/docs/reference/js/firebase.analytics.Analytics#set-current-screen"},"parameters":[{"name":"screenName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"screenClassOverride","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setDebugModeEnabled","kind":2048,"kindString":"Method","signatures":[{"name":"setDebugModeEnabled","kind":4096,"kindString":"Call signature","comment":{"shortText":"Enables or disabled debug mode."},"parameters":[{"name":"isEnabled","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserId","kind":2048,"kindString":"Method","signatures":[{"name":"setUserId","kind":4096,"kindString":"Call signature","comment":{"shortText":"https://firebase.google.com/docs/reference/js/firebase.analytics.Analytics#set-user-id"},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserProperties","kind":2048,"kindString":"Method","signatures":[{"name":"setUserProperties","kind":4096,"kindString":"Call signature","comment":{"shortText":"https://firebase.google.com/docs/reference/js/firebase.analytics.Analytics#set-user-properties"},"parameters":[{"name":"userProperties","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"parseEvent","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"parseEvent","kind":4096,"kindString":"Call signature","comment":{"shortText":"Parses an event (as passed to logEvent) and throws an error when the\\nevent-name or parameters are invalid.","text":"Upon success, returns the event in encoded format, ready to be send\\nthrough the Google Measurement API v2.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"FirebaseAnalyticsJSOptions"}},{"name":"eventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"eventParams","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}}],"type":{"type":"reference","name":"FirebaseAnalyticsJSCodedEvent"}}]},{"name":"parseUserProperty","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"parseUserProperty","kind":4096,"kindString":"Call signature","comment":{"shortText":"Parses user-properties (as passed to setUserProperties) and throws an error when\\none of the user properties is invalid.","text":"Upon success, returns the user-properties in encoded format, ready to be send\\nthrough the Google Measurement API v2.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"FirebaseAnalyticsJSOptions"}},{"name":"userPropertyName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"userPropertyValue","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"string"}}]}]},{"name":"logEvent","kind":64,"kindString":"Function","signatures":[{"name":"logEvent","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs an app event. The event can have up to 25 parameters. Events with the same name must have\\nthe same parameters. Up to 500 event names are supported. Using predefined events and/or\\nparameters is recommended for optimal reporting. See [the Google Analytics event reference](https://developers.google.com/gtagjs/reference/event)\\nfor a list of all predefined events.","text":"> The following event names are reserved for the native SDKs automatic collection and cannot be used: `ad_activeview, ad_click, ad_exposure, ad_query, ad_reward, adunit_exposure, app_background, app_clear_data, app_exception, app_remove, app_store_refund, app_store_subscription_cancel, ad_activeview, ad_click, ad_exposure, ad_query, ad_reward, adunit_exposure, app_background, app_clear_data, app_exception, app_remove, app_store_refund, app_store_subscription_cancel, app_store_subscription_convert, app_store_subscription_renew, app_update, app_upgrade, dynamic_link_app_open, dynamic_link_app_update, dynamic_link_first_open, error, firebase_campaign, first_open, first_visit, in_app_purchase, notification_dismiss, notification_foreground, notification_open, notification_receive, os_update, session_start, session_start_with_rollout, user_engagement`\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Analytics.logEvent(\'add_to_cart\', {\\n  currency: \'USD\',\\n  value: 29.98\\n  items: [{\\n    id: \\"P12345\\",\\n    name: \\"Expo Warhol T-Shirt\\",\\n    brand: \\"Expo\\",\\n    category: \\"Apparel/T-Shirts\\",\\n    coupon: \\"SUMMER_DISCOUNT\\",\\n    list_name: \\"Search Results\\",\\n    list_position: 1,\\n    price: 14.99,\\n    quantity: 2,\\n    variant: \\"Blue\\"\\n  }]\\n});\\n```\\n"}]},"parameters":[{"name":"name","kind":32768,"kindString":"Parameter","comment":{"text":"The name of the event. Should contain 1 to 40 alphanumeric characters or underscores.\\nThe name must start with an alphabetic character. Some event names are  reserved. The `firebase_`,\\n`google_`, and `ga_` prefixes are reserved and should not be used. Note that event names are\\ncase-sensitive and that logging two events whose names differ only in case will result in two\\ndistinct events. To manually log screen view events, use the `screen_view` event name."},"type":{"type":"intrinsic","name":"string"}},{"name":"properties","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"The dictionary of event parameters. Passing `undefined` indicates that the\\nevent has no parameters. Parameter names can be up to 40 characters long and must start with an\\nalphabetic character and contain only alphanumeric characters and underscores. Only `String` and\\n`Number` parameter types are supported; and `items` arrays containing dictionaries.\\n`String` parameter values can be up to 100 characters long. The `firebase_`,  `google_`, and\\n`ga_` prefixes are reserved and should not be used for parameter names.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"resetAnalyticsData","kind":64,"kindString":"Function","signatures":[{"name":"resetAnalyticsData","kind":4096,"kindString":"Call signature","comment":{"shortText":"Clears all analytics data for this instance from the device and resets the app instance ID."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setAnalyticsCollectionEnabled","kind":64,"kindString":"Function","signatures":[{"name":"setAnalyticsCollectionEnabled","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets whether analytics collection is enabled for this app on this device. This setting is\\npersisted across app sessions. __By default it is enabled__."},"parameters":[{"name":"isEnabled","kind":32768,"kindString":"Parameter","comment":{"text":"A flag that enables or disables Analytics collection.\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setClientId","kind":64,"kindString":"Function","signatures":[{"name":"setClientId","kind":4096,"kindString":"Call signature","comment":{"shortText":"__Expo Go Only.__ Sets the clientId to the given value. For best results, set this value before\\ncalling any other functions on this module.","text":"By default, the clientId is set to `Constants.installationId` in Expo Go, which is deprecated and\\nwill be removed in SDK 44. At that time, this method will need to be used to set the `clientId`\\nwhen using Expo Go.\\n"},"parameters":[{"name":"clientId","kind":32768,"kindString":"Parameter","comment":{"text":"UUIDv4 string value to set for the current session in Expo Go.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setCurrentScreen","kind":64,"kindString":"Function","signatures":[{"name":"setCurrentScreen","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the current screen name, which specifies the current visual context in your app. This helps\\nidentify the areas in your app where users spend their time and how they interact with your app."},"parameters":[{"name":"screenName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"The name of the current screen. Should contain 1 to 100 characters. Set to\\n`undefined` to clear the current screen name."},"type":{"type":"intrinsic","name":"string"}},{"name":"screenClassOverride","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"The name of the screen class. Should contain 1 to 100 characters. By\\ndefault this is the class name of the current screen (UIViewController on iOS). Set to\\n`undefined` to revert to the default class name.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setDebugModeEnabled","kind":64,"kindString":"Function","signatures":[{"name":"setDebugModeEnabled","kind":4096,"kindString":"Call signature","comment":{"shortText":"__Expo Go Only.__ Enables or disabled debug mode on the Expo client, so events can\\nbe tracked using the [DebugView in the Analytics dashboard](https://firebase.google.com/docs/analytics/debugview#reporting).","text":"This option is only available in Expo Go. When using a custom development app, a standalone app,\\nthe bare workflow or web, use the [natively available options](https://firebase.google.com/docs/analytics/debugview).\\n"},"parameters":[{"name":"isEnabled","kind":32768,"kindString":"Parameter","comment":{"text":"A flag that enables or disables debug mode.\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setSessionTimeoutDuration","kind":64,"kindString":"Function","signatures":[{"name":"setSessionTimeoutDuration","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the interval of inactivity in seconds that terminates the current session. The default\\nvalue is 1800000 milliseconds (30 minutes)."},"parameters":[{"name":"sessionTimeoutInterval","kind":32768,"kindString":"Parameter","comment":{"text":"The custom time of inactivity in milliseconds before the current\\nsession terminates.\\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUnavailabilityLogging","kind":64,"kindString":"Function","signatures":[{"name":"setUnavailabilityLogging","kind":4096,"kindString":"Call signature","comment":{"shortText":"Enables or disables the warning and log messages when using Firebase Analytics on the Expo client.","text":"Firebase Analytics is not available on the Expo client and therefore logs the requests to the\\nconsole for development purposes. To test Firebase Analytics, create a standalone build or custom\\nclient. Use this function to suppress the warning and log messages.\\n"},"parameters":[{"name":"isEnabled","kind":32768,"kindString":"Parameter","comment":{"text":"A flag that enables or disables unavailability logging.\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setUserId","kind":64,"kindString":"Function","signatures":[{"name":"setUserId","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the user ID property. This feature must be used in accordance with [Google\'s Privacy Policy](https://www.google.com/policies/privacy)"},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","comment":{"text":"The user ID to ascribe to the user of this app on this device, which must be\\nnon-empty and no more than 256 characters long. Setting userID to null removes the user ID.\\n"},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserProperties","kind":64,"kindString":"Function","signatures":[{"name":"setUserProperties","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets multiple user properties to the supplied values.","tags":[{"tag":"example","text":"\\n```ts\\nawait Analytics.setUserProperties({\\n  loves_expo: \'a lot\',\\n});\\n```\\n"}]},"parameters":[{"name":"properties","kind":32768,"kindString":"Parameter","comment":{"text":"Key/value set of user properties. Values can be up to 36 characters long.\\nSetting the value to null removes the user property.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}],"name":"Record"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserProperty","kind":64,"kindString":"Function","signatures":[{"name":"setUserProperty","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a user property to a given value. Up to 25 user property names are supported. Once set,\\nuser property values persist throughout the app life-cycle and across sessions.","text":"The following user property names are reserved and cannot be used:\\n- `first_open_time`\\n- `last_deep_link_referrer`\\n- `user_id`\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Analytics.setUserProperty(\'favorite_batmobile\', \'1989 Burton-mobile\');\\n```\\n"}]},"parameters":[{"name":"name","kind":32768,"kindString":"Parameter","comment":{"text":"The name of the user property to set. Should contain 1 to 24 alphanumeric characters\\nor underscores and must start with an alphabetic character. The `firebase_`, `google_`, and\\n`ga_` prefixes are reserved and should not be used for user property names."},"type":{"type":"intrinsic","name":"string"}},{"name":"value","kind":32768,"kindString":"Parameter","comment":{"text":"The value of the user property. Values can be up to 36 characters long. Setting the\\nvalue to null removes the user property.\\n"},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},UFN4:function(e,w,n){"use strict";e.exports=p;var c=n("vUGn");function p(d,a){var m=[],r=-1,s=d.length;for(a&&m.push(c("text",`
`));++r<s;)r&&m.push(c("text",`
`)),m.push(d[r]);return a&&d.length>0&&m.push(c("text",`
`)),m}},UHex:function(e){e.exports=JSON.parse('{"name":"expo-store-review","kind":1,"kindString":"Project","originalName":"","children":[{"name":"hasAction","kind":64,"kindString":"Function","signatures":[{"name":"hasAction","kind":4096,"kindString":"Call signature","comment":{"returns":"This returns a promise that fulfills to `true` if `StoreReview.requestReview()` is capable\\ndirecting the user to some kind of store review flow. If the app config (`app.json`) does not\\ncontain store URLs and native store review capabilities are not available then the promise\\nwill fulfill to `false`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nif (await StoreReview.hasAction()) {\\n  // you can call StoreReview.requestReview()\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determines if the platform has the capabilities to use `StoreReview.requestReview()`.","returns":"\\nThis returns a promise fulfills with `boolean`, depending on the platform:\\n- On iOS, it will resolve to `true` if the device is running iOS 10.3+.\\n- On Android, it will resolve to `true` if the device is running Android 5.0+.\\n- On Web, it will resolve to `false`.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"requestReview","kind":64,"kindString":"Function","signatures":[{"name":"requestReview","kind":4096,"kindString":"Call signature","comment":{"shortText":"In ideal circumstances this will open a native modal and allow the user to select a star rating\\nthat will then be applied to the App Store, without leaving the app. If the device is running\\na version of iOS lower than 10.3, or a version of Android lower than 5.0, this will attempt\\nto get the store URL and link the user to it."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"storeUrl","kind":64,"kindString":"Function","signatures":[{"name":"storeUrl","kind":4096,"kindString":"Call signature","comment":{"shortText":"This uses the `Constants` API to get the `Constants.manifest.ios.appStoreUrl` on iOS, or the\\n`Constants.manifest.android.playStoreUrl` on Android.","text":"On Web this will return `null`.\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}]}')},Ue0c:function(e,w,n){"use strict";var c=n("qF1g"),p={name:"characterEscape",tokenize:d};function d(a,m,r){return s;function s(o){return a.enter("characterEscape"),a.enter("escapeMarker"),a.consume(o),a.exit("escapeMarker"),i}function i(o){return c(o)?(a.enter("characterEscapeValue"),a.consume(o),a.exit("characterEscapeValue"),a.exit("characterEscape"),m):r(o)}}e.exports=p},Ufk8:function(e){e.exports=JSON.parse('{"name":"expo-app-loading","kind":1,"kindString":"Project","originalName":"","children":[{"name":"default","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new default","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"reference","name":"AppLoadingProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}]}}],"type":{"type":"reference","name":"AppLoading"},"inheritedFrom":{"type":"reference","name":"React.Component<AppLoadingProps>.constructor"}},{"name":"new default","kind":16384,"kindString":"Constructor signature","comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AppLoadingProps"}},{"name":"context","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"AppLoading"},"inheritedFrom":{"type":"reference","name":"React.Component<AppLoadingProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<AppLoadingProps>.constructor"}},{"name":"_isMounted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoHideSplash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to hide the native splash screen as soon as you unmount the `AppLoading` component.\\nAuto-hiding is enabled by default. See [SplashScreen](../splash-screen) module for an example."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"onError","kind":2048,"kindString":"Method","signatures":[{"name":"onError","kind":4096,"kindString":"Call signature","comment":{"shortText":"If `startAsync` throws an error, it is caught and passed into the function provided to `onError`.","tags":[{"tag":"deprecated","text":"\\n"}]},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Error"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onFinish","kind":2048,"kindString":"Method","signatures":[{"name":"onFinish","kind":4096,"kindString":"Call signature","comment":{"shortText":"__(Required if you provide startAsync).__ Called when `startAsync` resolves or rejects.\\nThis should be used to set state and unmount the `AppLoading` component.","tags":[{"tag":"deprecated","text":"\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"name":"startAsync","kind":2048,"kindString":"Method","signatures":[{"name":"startAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"A function that returns a `Promise`, and the `Promise` should fulfil when the app is done\\nloading required data and assets. You can do this process manually if you prefer.\\nThis is mainly for backwards compatibility and it is not recommended.","text":"When provided, requires providing `onError` prop as well.","tags":[{"tag":"deprecated","text":"\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"ReactNode"}}]}}],"name":"Readonly"}]},{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoHideSplash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to hide the native splash screen as soon as you unmount the `AppLoading` component.\\nAuto-hiding is enabled by default. See [SplashScreen](../splash-screen) module for an example."},"type":{"type":"intrinsic","name":"boolean"}}]}}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"ReactNode"}}]}}],"name":"Readonly"}]}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}}],"name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"},"overwrites":{"type":"reference","name":"React.Component.componentDidMount"}}],"overwrites":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"},"overwrites":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"overwrites":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"render","kind":2048,"kindString":"Method","signatures":[{"name":"render","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Component"}]},{"name":"AppLoadingProps","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The following props are recommended, but optional. If you do not provide any props, you are\\nresponsible for coordinating loading assets, handling errors, and updating state to unmount\\nthe `AppLoading` component."},"type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoHideSplash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to hide the native splash screen as soon as you unmount the `AppLoading` component.\\nAuto-hiding is enabled by default. See [SplashScreen](../splash-screen) module for an example."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"onError","kind":2048,"kindString":"Method","signatures":[{"name":"onError","kind":4096,"kindString":"Call signature","comment":{"shortText":"If `startAsync` throws an error, it is caught and passed into the function provided to `onError`.","tags":[{"tag":"deprecated","text":"\\n"}]},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Error"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onFinish","kind":2048,"kindString":"Method","signatures":[{"name":"onFinish","kind":4096,"kindString":"Call signature","comment":{"shortText":"__(Required if you provide startAsync).__ Called when `startAsync` resolves or rejects.\\nThis should be used to set state and unmount the `AppLoading` component.","tags":[{"tag":"deprecated","text":"\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"name":"startAsync","kind":2048,"kindString":"Method","signatures":[{"name":"startAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"A function that returns a `Promise`, and the `Promise` should fulfil when the app is done\\nloading required data and assets. You can do this process manually if you prefer.\\nThis is mainly for backwards compatibility and it is not recommended.","text":"When provided, requires providing `onError` prop as well.","tags":[{"tag":"deprecated","text":"\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoHideSplash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to hide the native splash screen as soon as you unmount the `AppLoading` component.\\nAuto-hiding is enabled by default. See [SplashScreen](../splash-screen) module for an example."},"type":{"type":"intrinsic","name":"boolean"}}]}}]}}]}')},Ufm5:function(e){e.exports=JSON.parse('{"name":"expo-intent-launcher","kind":1,"kindString":"Project","originalName":"","children":[{"name":"ActivityAction","kind":8,"kindString":"Enumeration","comment":{"shortText":"Constants are from the source code of [Settings provider](https://developer.android.com/reference/android/provider/Settings)."},"children":[{"name":"ACCESSIBILITY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ACCESSIBILITY_SETTINGS\\""},{"name":"ADD_ACCOUNT_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ADD_ACCOUNT_SETTINGS\\""},{"name":"AIRPLANE_MODE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.AIRPLANE_MODE_SETTINGS\\""},{"name":"APN_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APN_SETTINGS\\""},{"name":"APPLICATION_DETAILS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APPLICATION_DETAILS_SETTINGS\\""},{"name":"APPLICATION_DEVELOPMENT_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APPLICATION_DEVELOPMENT_SETTINGS\\""},{"name":"APPLICATION_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APPLICATION_SETTINGS\\""},{"name":"APP_NOTIFICATION_REDACTION","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ACTION_APP_NOTIFICATION_REDACTION\\""},{"name":"APP_NOTIFICATION_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APP_NOTIFICATION_SETTINGS\\""},{"name":"APP_OPS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APP_OPS_SETTINGS\\""},{"name":"BATTERY_SAVER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.BATTERY_SAVER_SETTINGS\\""},{"name":"BLUETOOTH_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.BLUETOOTH_SETTINGS\\""},{"name":"CAPTIONING_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.CAPTIONING_SETTINGS\\""},{"name":"CAST_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.CAST_SETTINGS\\""},{"name":"CONDITION_PROVIDER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ACTION_CONDITION_PROVIDER_SETTINGS\\""},{"name":"DATA_ROAMING_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DATA_ROAMING_SETTINGS\\""},{"name":"DATE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DATE_SETTINGS\\""},{"name":"DEVICE_INFO_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DEVICE_INFO_SETTINGS\\""},{"name":"DEVICE_NAME","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DEVICE_NAME\\""},{"name":"DISPLAY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DISPLAY_SETTINGS\\""},{"name":"DREAM_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DREAM_SETTINGS\\""},{"name":"HARD_KEYBOARD_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.HARD_KEYBOARD_SETTINGS\\""},{"name":"HOME_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.HOME_SETTINGS\\""},{"name":"IGNORE_BACKGROUND_DATA_RESTRICTIONS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.IGNORE_BACKGROUND_DATA_RESTRICTIONS_SETTINGS\\""},{"name":"IGNORE_BATTERY_OPTIMIZATION_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.IGNORE_BATTERY_OPTIMIZATION_SETTINGS\\""},{"name":"INPUT_METHOD_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.INPUT_METHOD_SETTINGS\\""},{"name":"INPUT_METHOD_SUBTYPE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.INPUT_METHOD_SUBTYPE_SETTINGS\\""},{"name":"INTERNAL_STORAGE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.INTERNAL_STORAGE_SETTINGS\\""},{"name":"LOCALE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.LOCALE_SETTINGS\\""},{"name":"LOCATION_SOURCE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.LOCATION_SOURCE_SETTINGS\\""},{"name":"MANAGE_ALL_APPLICATIONS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.MANAGE_ALL_APPLICATIONS_SETTINGS\\""},{"name":"MANAGE_APPLICATIONS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.MANAGE_APPLICATIONS_SETTINGS\\""},{"name":"MANAGE_DEFAULT_APPS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.MANAGE_DEFAULT_APPS_SETTINGS\\""},{"name":"MEMORY_CARD_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.MEMORY_CARD_SETTINGS\\""},{"name":"MONITORING_CERT_INFO","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.MONITORING_CERT_INFO\\""},{"name":"NETWORK_OPERATOR_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NETWORK_OPERATOR_SETTINGS\\""},{"name":"NFCSHARING_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NFCSHARING_SETTINGS\\""},{"name":"NFC_PAYMENT_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NFC_PAYMENT_SETTINGS\\""},{"name":"NFC_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NFC_SETTINGS\\""},{"name":"NIGHT_DISPLAY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NIGHT_DISPLAY_SETTINGS\\""},{"name":"NOTIFICATION_LISTENER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ACTION_NOTIFICATION_LISTENER_SETTINGS\\""},{"name":"NOTIFICATION_POLICY_ACCESS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NOTIFICATION_POLICY_ACCESS_SETTINGS\\""},{"name":"NOTIFICATION_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NOTIFICATION_SETTINGS\\""},{"name":"PAIRING_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.PAIRING_SETTINGS\\""},{"name":"PRINT_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ACTION_PRINT_SETTINGS\\""},{"name":"PRIVACY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.PRIVACY_SETTINGS\\""},{"name":"QUICK_LAUNCH_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.QUICK_LAUNCH_SETTINGS\\""},{"name":"REQUEST_IGNORE_BATTERY_OPTIMIZATIONS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS\\""},{"name":"SECURITY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SECURITY_SETTINGS\\""},{"name":"SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SETTINGS\\""},{"name":"SHOW_ADMIN_SUPPORT_DETAILS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SHOW_ADMIN_SUPPORT_DETAILS\\""},{"name":"SHOW_INPUT_METHOD_PICKER","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SHOW_INPUT_METHOD_PICKER\\""},{"name":"SHOW_REGULATORY_INFO","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SHOW_REGULATORY_INFO\\""},{"name":"SHOW_REMOTE_BUGREPORT_DIALOG","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SHOW_REMOTE_BUGREPORT_DIALOG\\""},{"name":"SOUND_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SOUND_SETTINGS\\""},{"name":"STORAGE_MANAGER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.STORAGE_MANAGER_SETTINGS\\""},{"name":"SYNC_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SYNC_SETTINGS\\""},{"name":"SYSTEM_UPDATE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SYSTEM_UPDATE_SETTINGS\\""},{"name":"TETHER_PROVISIONING_UI","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.TETHER_PROVISIONING_UI\\""},{"name":"TRUSTED_CREDENTIALS_USER","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.TRUSTED_CREDENTIALS_USER\\""},{"name":"USAGE_ACCESS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.USAGE_ACCESS_SETTINGS\\""},{"name":"USER_DICTIONARY_INSERT","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.USER_DICTIONARY_INSERT\\""},{"name":"USER_DICTIONARY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.USER_DICTIONARY_SETTINGS\\""},{"name":"USER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.USER_SETTINGS\\""},{"name":"VOICE_CONTROL_AIRPLANE_MODE","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VOICE_CONTROL_AIRPLANE_MODE\\""},{"name":"VOICE_CONTROL_BATTERY_SAVER_MODE","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VOICE_CONTROL_BATTERY_SAVER_MODE\\""},{"name":"VOICE_CONTROL_DO_NOT_DISTURB_MODE","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VOICE_CONTROL_DO_NOT_DISTURB_MODE\\""},{"name":"VOICE_INPUT_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VOICE_INPUT_SETTINGS\\""},{"name":"VPN_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VPN_SETTINGS\\""},{"name":"VR_LISTENER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VR_LISTENER_SETTINGS\\""},{"name":"WEBVIEW_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.WEBVIEW_SETTINGS\\""},{"name":"WIFI_IP_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.WIFI_IP_SETTINGS\\""},{"name":"WIFI_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.WIFI_SETTINGS\\""},{"name":"WIRELESS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.WIRELESS_SETTINGS\\""},{"name":"ZEN_MODE_AUTOMATION_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_AUTOMATION_SETTINGS\\""},{"name":"ZEN_MODE_EVENT_RULE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_EVENT_RULE_SETTINGS\\""},{"name":"ZEN_MODE_EXTERNAL_RULE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_EXTERNAL_RULE_SETTINGS\\""},{"name":"ZEN_MODE_PRIORITY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_PRIORITY_SETTINGS\\""},{"name":"ZEN_MODE_SCHEDULE_RULE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_SCHEDULE_RULE_SETTINGS\\""},{"name":"ZEN_MODE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_SETTINGS\\""}]},{"name":"ResultCode","kind":8,"kindString":"Enumeration","children":[{"name":"Canceled","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Means that the activity was canceled, e.g. by tapping on the back button."},"defaultValue":"0"},{"name":"FirstUser","kind":16,"kindString":"Enumeration member","comment":{"shortText":"First custom, user-defined value that can be returned by the activity."},"defaultValue":"1"},{"name":"Success","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates that the activity operation succeeded."},"defaultValue":"-1"}]},{"name":"IntentLauncherParams","kind":256,"kindString":"Interface","children":[{"name":"category","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Category provides more details about the action the intent performs. See [Intent.addCategory](https://developer.android.com/reference/android/content/Intent.html#addCategory(java.lang.String))."},"type":{"type":"intrinsic","name":"string"}},{"name":"className","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Class name of the ComponentName."},"type":{"type":"intrinsic","name":"string"}},{"name":"data","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A URI specifying the data that the intent should operate upon. (_Note:_ Android requires the URI\\nscheme to be lowercase, unlike the formal RFC.)"},"type":{"type":"intrinsic","name":"string"}},{"name":"extra","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A map specifying additional key-value pairs which are passed with the intent as `extras`.\\nThe keys must include a package prefix, for example the app `com.android.contacts` would use\\nnames like `com.android.contacts.ShowAll`."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"flags","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Bitmask of flags to be used. See [Intent.setFlags](<https://developer.android.com/reference/android/content/Intent.html#setFlags(int)>) for more details."},"type":{"type":"intrinsic","name":"number"}},{"name":"packageName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Package name used as an identifier of ComponentName. Set this only if you want to explicitly\\nset the component to handle the intent."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A string specifying the MIME type of the data represented by the data parameter. Ignore this\\nargument to allow Android to infer the correct MIME type."},"type":{"type":"intrinsic","name":"string"}}]},{"name":"IntentLauncherResult","kind":256,"kindString":"Interface","children":[{"name":"data","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Optional data URI that can be returned by the activity."},"type":{"type":"intrinsic","name":"string"}},{"name":"extra","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Optional extras object that can be returned by the activity."},"type":{"type":"intrinsic","name":"object"}},{"name":"resultCode","kind":1024,"kindString":"Property","comment":{"shortText":"Result code returned by the activity."},"type":{"type":"reference","name":"ResultCode"}}]},{"name":"startActivityAsync","kind":64,"kindString":"Function","signatures":[{"name":"startActivityAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Starts the specified activity. The method will return a promise which resolves when the user\\nreturns to the app.","returns":"A promise which fulfils with `IntentLauncherResult` object.\\n"},"parameters":[{"name":"activityAction","kind":32768,"kindString":"Parameter","comment":{"shortText":"The action to be performed, e.g. `IntentLauncher.ActivityAction.WIRELESS_SETTINGS`.\\nThere are a few pre-defined constants you can use for this parameter.\\nYou can find them at [expo-intent-launcher/src/IntentLauncher.ts](https://github.com/expo/expo/tree/main/packages/expo-intent-launcher/src/IntentLauncher.ts)."},"type":{"type":"reference","name":"ActivityAction"}},{"name":"params","kind":32768,"kindString":"Parameter","comment":{"shortText":"An object of intent parameters."},"type":{"type":"reference","name":"IntentLauncherParams"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"IntentLauncherResult"}],"name":"Promise"}}]}]}')},UhtW:function(e,w){e.exports=n;function n(c,p){var d=-1,a;if(p.extensions)for(;++d<p.extensions.length;)n(c,p.extensions[d]);for(a in p)a==="extensions"||(a==="unsafe"||a==="join"?c[a]=c[a].concat(p[a]||[]):a==="handlers"?c[a]=Object.assign(c[a],p[a]||{}):c.options[a]=p[a]);return c}},VDlU:function(e){e.exports=JSON.parse('{"name":"expo-tracking-transparency","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"PermissionStatus","kind":4,"kindString":"Enumeration","flags":{},"children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"\\"undetermined\\""}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","flags":{},"children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"getTrackingPermissionsAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getTrackingPermissionsAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Checks whether or not the user has authorized the app to access app-related data that can be used\\nfor tracking the user or the device. See `requestPermissionsAsync` for more details.","text":"On Android, web, and iOS 13 and below, this method always returns that the permission was\\ngranted.\\n","tags":[{"tag":"example","text":"\\n```typescript\\nconst { granted } = await getTrackingPermissionsAsync();\\n\\nif (granted) {\\n  // Your app is authorized to track the user or their device\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"isAvailable","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"isAvailable","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns whether the TrackingTransparency API is available on the current device.","returns":"Currently this is `true` on iOS 14 and above only. On devices where the\\nTracking Transparency API is unavailable, the get and request permissions methods will always\\nresolve to `granted`.\\n"},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"requestTrackingPermissionsAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"requestTrackingPermissionsAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Requests the user to authorize or deny access to app-related data that can be used for tracking\\nthe user or the device. Examples of data used for tracking include email address, device ID,\\nadvertising ID, etc. On iOS 14.5 and above, if the user denies this permission, any attempt to\\ncollect the IDFA will return a string of 0s.","text":"The system remembers the user\u2019s choice and doesn\u2019t prompt again unless a user uninstalls and then\\nreinstalls the app on the device.\\n\\nOn Android, web, and iOS 13 and below, this method always returns that the permission was\\ngranted.","tags":[{"tag":"example","text":"\\n```typescript\\nconst { granted } = await requestTrackingPermissionsAsync();\\n\\nif (granted) {\\n  // Your app is authorized to track the user or their device\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]}]}')},VEy4:function(e,w,n){"use strict";e.exports=a;var c=n("xGQ6"),p=n("9zCd"),d=n("2jS9");function a(m,r){var s=m.definition(r.identifier),i;return s?(i={href:c(s.url||"")},s.title!==null&&s.title!==void 0&&(i.title=s.title),m(r,"a",i,d(m,r))):p(m,r)}},VLot:function(e,w,n){"use strict";var c=n("E/Jm"),p=n("yRGd"),d={tokenize:a,partial:!0};function a(m,r,s){return p(m,i,"linePrefix");function i(o){return o===null||c(o)?r(o):s(o)}}e.exports=d},VrUE:function(e){e.exports=JSON.parse('{"name":"expo-blur","kind":1,"kindString":"Project","originalName":"","children":[{"name":"BlurTint","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"},{"type":"literal","value":"default"}]}},{"name":"BlurViewProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"intensity","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A number from `1` to `100` to control the intensity of the blur effect.","text":"You can animate this property using `Animated API` from React Native or using `react-native-reanimated`.\\n> Animating this property using `Animated API` from React Native with `setNativeDriver: true` does not work.\\n","tags":[{"tag":"default","text":"50\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"tint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A tint mode which will be applied to the view.","tags":[{"tag":"default","text":"\'default\'\\n"}]},"type":{"type":"reference","name":"BlurTint"}}]}},{"type":"reference","name":"ViewProps"}]}},{"name":"BlurView","kind":32,"kindString":"Variable","type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"intensity","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A number from `1` to `100` to control the intensity of the blur effect.","text":"You can animate this property using `Animated API` from React Native or using `react-native-reanimated`.\\n> Animating this property using `Animated API` from React Native with `setNativeDriver: true` does not work.\\n","tags":[{"tag":"default","text":"50\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"tint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A tint mode which will be applied to the view.","tags":[{"tag":"default","text":"\'default\'\\n"}]},"type":{"type":"reference","name":"BlurTint"}}]}},{"type":"reference","name":"ViewProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"View"}],"name":"RefAttributes"}]}],"name":"ForwardRefExoticComponent"},"defaultValue":"..."}]}')},"Vx/6":function(e,w,n){"use strict";var c=n("0aKP");function p(d,a,m,r){var s=d.length,i=0,o;if(a<0?a=-a>s?0:s+a:a=a>s?s:a,m=m>0?m:0,r.length<1e4)o=Array.from(r),o.unshift(a,m),c.apply(d,o);else for(m&&c.apply(d,[a,m]);i<r.length;)o=r.slice(i,i+1e4),o.unshift(a,0),c.apply(d,o),i+=1e4,a+=1e4}e.exports=p},W9GW:function(e){e.exports=JSON.parse('{"name":"expo-in-app-purchases","kind":1,"kindString":"Project","originalName":"","children":[{"name":"IAPErrorCode","kind":8,"kindString":"Enumeration","comment":{"shortText":"Abstracts over the Android [Billing Response Codes](https://developer.android.com/reference/com/android/billingclient/api/BillingClient.BillingResponseCode)\\nand iOS [SKErrorCodes](https://developer.apple.com/documentation/storekit/skerrorcode?language=objc)."},"children":[{"name":"BILLING_UNAVAILABLE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Billing API version is not supported for the type requested. See `BILLING_UNAVAILABLE` on\\nAndroid."},"defaultValue":"5"},{"name":"CLOUD_SERVICE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Apple Cloud Service connection failed or invalid permissions.\\nSee `SKErrorCloudServicePermissionDenied`, `SKErrorCloudServiceNetworkConnectionFailed` and\\n`SKErrorCloudServiceRevoked` on iOS."},"defaultValue":"10"},{"name":"DEVELOPER_ERROR","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Invalid arguments provided to the API. This error can also indicate that the application was\\nnot correctly signed or properly set up for In-app Billing in Google Play. See `DEVELOPER_ERROR`\\non Android."},"defaultValue":"7"},{"name":"INVALID_IDENTIFIER","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The offer identifier or price specified in App Store Connect is no longer valid. See\\n`SKErrorInvalidSignature`, `SKErrorInvalidOfferPrice`, `SKErrorInvalidOfferIdentifier` on iOS."},"defaultValue":"13"},{"name":"ITEM_ALREADY_OWNED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Failure to purchase since item is already owned. See `ITEM_ALREADY_OWNED` on Android."},"defaultValue":"8"},{"name":"ITEM_NOT_OWNED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Failure to consume since item is not owned. See `ITEM_NOT_OWNED` on Android."},"defaultValue":"9"},{"name":"ITEM_UNAVAILABLE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Requested product is not available for purchase. See `SKErrorStoreProductNotAvailable` on iOS,\\n`ITEM_UNAVAILABLE` on Android."},"defaultValue":"6"},{"name":"MISSING_PARAMS","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Parameters are missing in a payment discount. See `SKErrorMissingOfferParams` on iOS."},"defaultValue":"14"},{"name":"PAYMENT_INVALID","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The feature is not allowed on the current device, or the user is not authorized to make payments.\\nSee `SKErrorClientInvalid`, `SKErrorPaymentInvalid`, and `SKErrorPaymentNotAllowed` on iOS,\\n`FEATURE_NOT_SUPPORTED` on Android."},"defaultValue":"1"},{"name":"PRIVACY_UNACKNOWLEDGED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The user has not yet acknowledged Apple\u2019s privacy policy for Apple Music. See\\n`SKErrorPrivacyAcknowledgementRequired` on iOS."},"defaultValue":"11"},{"name":"SERVICE_DISCONNECTED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Play Store service is not connected now. See `SERVICE_DISCONNECTED` on Android."},"defaultValue":"2"},{"name":"SERVICE_TIMEOUT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The request has reached the maximum timeout before Google Play responds. See `SERVICE_TIMEOUT`\\non Android."},"defaultValue":"4"},{"name":"SERVICE_UNAVAILABLE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Network connection is down. See `SERVICE_UNAVAILABLE` on Android."},"defaultValue":"3"},{"name":"UNAUTHORIZED_REQUEST","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The app is attempting to use a property for which it does not have the required entitlement.\\nSee `SKErrorUnauthorizedRequestData` on iOS."},"defaultValue":"12"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An unknown or unexpected error occurred. See `SKErrorUnknown` on iOS, `ERROR` on Android."},"defaultValue":"0"}]},{"name":"IAPItemType","kind":8,"kindString":"Enumeration","children":[{"name":"PURCHASE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"One time purchase or consumable."},"defaultValue":"0"},{"name":"SUBSCRIPTION","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Subscription."},"defaultValue":"1"}]},{"name":"IAPResponseCode","kind":8,"kindString":"Enumeration","children":[{"name":"DEFERRED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"__iOS Only.__ Purchase was deferred."},"defaultValue":"3"},{"name":"ERROR","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An error occurred. Check the `errorCode` for additional details."},"defaultValue":"2"},{"name":"OK","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Response returned successfully."},"defaultValue":"0"},{"name":"USER_CANCELED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"User canceled the purchase."},"defaultValue":"1"}]},{"name":"InAppPurchaseState","kind":8,"kindString":"Enumeration","children":[{"name":"DEFERRED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"__iOS Only.__ The transaction has been received, but its final status is pending external\\naction such as the Ask to Buy feature where a child initiates a new purchase and has to wait\\nfor the family organizer\'s approval. Update your UI to show the deferred state, and wait for\\nanother callback that indicates the final status"},"defaultValue":"4"},{"name":"FAILED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The transaction failed."},"defaultValue":"2"},{"name":"PURCHASED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The App Store successfully processed payment."},"defaultValue":"1"},{"name":"PURCHASING","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The transaction is being processed."},"defaultValue":"0"},{"name":"RESTORED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"__iOS Only.__ This transaction restores content previously purchased by the user. Read the\\n`originalTransaction` properties to obtain information about the original purchase."},"defaultValue":"3"}]},{"name":"IAPItemDetails","kind":256,"kindString":"Interface","comment":{"shortText":"Details about the purchasable item that you inputted in App Store Connect and Google Play Console."},"children":[{"name":"description","kind":1024,"kindString":"Property","comment":{"shortText":"User facing description about the item.","tags":[{"tag":"example","text":"`Currency used to trade for items in the game`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"price","kind":1024,"kindString":"Property","comment":{"shortText":"The price formatted with the local currency symbol. Use this to display the price, not to make\\ncalculations.","tags":[{"tag":"example","text":"`$1.99`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"priceAmountMicros","kind":1024,"kindString":"Property","comment":{"shortText":"The price in micro-units, where 1,000,000 micro-units equal one unit of the currency. Use this\\nfor calculations.","tags":[{"tag":"example","text":"`1990000`\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"priceCurrencyCode","kind":1024,"kindString":"Property","comment":{"shortText":"The local currency code from the ISO 4217 code list.","tags":[{"tag":"example","text":"`USD`, `CAN`, `RUB`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"productId","kind":1024,"kindString":"Property","comment":{"shortText":"The product ID representing an item inputted in App Store Connect and Google Play Console.","tags":[{"tag":"example","text":"`gold`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"subscriptionPeriod","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The length of a subscription period specified in ISO 8601 format. In-app purchases return `P0D`.\\nOn iOS, non-renewable subscriptions also return `P0D`.","tags":[{"tag":"example","text":"`P0D`, `P6W`, `P3M`, `P6M`, `P1Y`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"title","kind":1024,"kindString":"Property","comment":{"shortText":"The title of the purchasable item. This should be displayed to the user and may be different\\nfrom the `productId`.","tags":[{"tag":"example","text":"`Gold Coin`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"The type of the purchase. Note that this is not very accurate on iOS as this data is only\\navailable on iOS 11.2 and higher and non-renewable subscriptions always return\\n`IAPItemType.PURCHASE`."},"type":{"type":"reference","name":"IAPItemType"}}]},{"name":"IAPQueryResponse","kind":256,"kindString":"Interface","comment":{"shortText":"The response type for queries and purchases."},"children":[{"name":"errorCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"`IAPErrorCode` that provides more detail on why an error occurred. `null` unless `responseCode`\\nis `IAPResponseCode.ERROR`."},"type":{"type":"reference","name":"IAPErrorCode"}},{"name":"responseCode","kind":1024,"kindString":"Property","comment":{"shortText":"The response code from a query or purchase."},"type":{"type":"reference","name":"IAPResponseCode"}},{"name":"results","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The array containing the `InAppPurchase` or `IAPItemDetails` objects requested depending on\\nthe method."},"type":{"type":"array","elementType":{"type":"reference","name":"QueryResult"}}}],"typeParameter":[{"name":"QueryResult","kind":131072,"kindString":"Type parameter"}]},{"name":"InAppPurchase","kind":256,"kindString":"Interface","children":[{"name":"acknowledged","kind":1024,"kindString":"Property","comment":{"shortText":"Boolean indicating whether this item has been \\"acknowledged\\" via `finishTransactionAsync`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"orderId","kind":1024,"kindString":"Property","comment":{"shortText":"A string that uniquely identifies a successful payment transaction."},"type":{"type":"intrinsic","name":"string"}},{"name":"originalOrderId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__iOS Only.__ Represents the original order ID for restored purchases."},"type":{"type":"intrinsic","name":"string"}},{"name":"originalPurchaseTime","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__iOS Only.__ Represents the original purchase time for restored purchases."},"type":{"type":"intrinsic","name":"string"}},{"name":"packageName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__Android Only.__ The application package from which the purchase originated.","tags":[{"tag":"example","text":"`com.example.myapp`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"productId","kind":1024,"kindString":"Property","comment":{"shortText":"The product ID representing an item inputted in Google Play Console and App Store Connect.","tags":[{"tag":"example","text":"`gold`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"purchaseState","kind":1024,"kindString":"Property","comment":{"shortText":"The state of the purchase."},"type":{"type":"reference","name":"InAppPurchaseState"}},{"name":"purchaseTime","kind":1024,"kindString":"Property","comment":{"shortText":"The time the product was purchased, in milliseconds since the epoch (Jan 1, 1970)."},"type":{"type":"intrinsic","name":"number"}},{"name":"purchaseToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__Android Only.__ A token that uniquely identifies a purchase for a given item and user pair."},"type":{"type":"intrinsic","name":"string"}},{"name":"transactionReceipt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__iOS Only.__ The App Store receipt found in the main bundle encoded as a Base64 String."},"type":{"type":"intrinsic","name":"string"}}]},{"name":"IAPPurchaseHistoryOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"useGooglePlayCache","kind":1024,"kindString":"Property","comment":{"shortText":"__Android Only.__ A boolean that indicates whether or not you want to make a network request\\nto sync expired/consumed purchases and those on other devices.","tags":[{"tag":"default","text":"`true`.\\n- If set to `true`, this method returns purchase details **only** for the user\'s currently\\n  owned items (active subscriptions and non-consumed one-time purchases). If set to `false`, it\\n  will make a network request and return the most recent purchase made by the user for each\\n  product, even if that purchase is expired, canceled, or consumed.\\n- The return type if this is `false` is actually a subset of when it\'s `true`. This is because\\n  Android returns a [`PurchaseHistoryRecord`](https://developer.android.com/reference/com/android/billingclient/api/PurchaseHistoryRecord)\\n  which only contains the purchase time, purchase token, and product ID, rather than all of the\\n  attributes found in the [`InAppPurchase`](#inapppurchase) type.\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"QueryResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"InAppPurchase"},{"type":"reference","name":"IAPItemDetails"}]}},{"name":"connectAsync","kind":64,"kindString":"Function","signatures":[{"name":"connectAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Connects to the app store and performs all of the necessary initialization to prepare the module\\nto accept payments.\\nThis method must be called before anything else, otherwise an error will be thrown.","returns":"Returns a Promise that fulfills when connection is established.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"disconnectAsync","kind":64,"kindString":"Function","signatures":[{"name":"disconnectAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Disconnects from the app store and cleans up memory internally. Call this when you are done using\\nthe In-App Purchases API in your app.","text":"No other methods can be used until the next time you call `connectAsync`.\\n","returns":"Returns a Promise that fulfils when disconnecting process is finished.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"finishTransactionAsync","kind":64,"kindString":"Function","signatures":[{"name":"finishTransactionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Marks a transaction as completed. This _must_ be called on successful purchases only after you\\nhave verified the transaction and unlocked the functionality purchased by the user.","text":"On Android, this will either \\"acknowledge\\" or \\"consume\\" the purchase depending on the value of\\n`consumeItem`. Acknowledging indicates that this is a one time purchase (e.g. premium upgrade),\\nwhereas consuming a purchase allows it to be bought more than once. You cannot buy an item again\\nuntil it\'s consumed. Both consuming and acknowledging let Google know that you are done\\nprocessing the transaction. If you do not acknowledge or consume a purchase within three days,\\nthe user automatically receives a refund, and Google Play revokes the purchase.\\n\\nOn iOS, this will mark the transaction as finished and prevent it from reappearing in the\\npurchase listener callback. It will also let the user know their purchase was successful.\\n\\n`consumeItem` is ignored on iOS because you must specify whether an item is a consumable or\\nnon-consumable in its product entry in App Store Connect, whereas on Android you indicate an item\\nis consumable at runtime.\\n\\n> Make sure that you verify each purchase to prevent faulty transactions and protect against\\nfraud _before_ you call `finishTransactionAsync`. On iOS, you can validate the purchase\'s\\n`transactionReceipt` with the App Store as described [here](https://developer.apple.com/library/archive/releasenotes/General/ValidateAppStoreReceipt/Chapters/ValidateRemotely.html).\\nOn Android, you can verify your purchase using the Google Play Developer API as described [here](https://developer.android.com/google/play/billing/billing_best_practices#validating-purchase).\\n","tags":[{"tag":"example","text":"\\n```ts\\nif (!purchase.acknowledged) {\\n  await finishTransactionAsync(purchase, false); // or true for consumables\\n}\\n```"}]},"parameters":[{"name":"purchase","kind":32768,"kindString":"Parameter","comment":{"text":"The purchase you want to mark as completed."},"type":{"type":"reference","name":"InAppPurchase"}},{"name":"consumeItem","kind":32768,"kindString":"Parameter","comment":{"text":"__Android Only.__ A boolean indicating whether or not the item is a consumable.\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"getBillingResponseCodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBillingResponseCodeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns the last response code. This is more descriptive on Android since there is native support\\nfor retrieving the billing response code.","text":"On Android, this will return `IAPResponseCode.ERROR` if you are not connected or one of the\\nbilling response codes found [here](https://developer.android.com/reference/com/android/billingclient/api/BillingClient.BillingResponseCode)\\nif you are.\\n\\nOn iOS, this will return `IAPResponseCode.OK` if you are connected or `IAPResponseCode.ERROR` if\\nyou are not. Therefore, it\'s a good way to test whether or not you are connected and it\'s safe to\\nuse the other methods.\\n","returns":"Returns a Promise that fulfils with an number representing the `IAPResponseCode`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst responseCode = await getBillingResponseCodeAsync();\\n if (responseCode !== IAPResponseCode.OK) {\\n  // Either we\'re not connected or the last response returned an error (Android)\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"IAPResponseCode"}],"name":"Promise"}}]},{"name":"getProductsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getProductsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Retrieves the product details (price, description, title, etc) for each item that you inputted in\\nthe Google Play Console and App Store Connect. These products are associated with your app\'s\\nspecific Application/Bundle ID and cannot be retrieved from other apps. This queries both in-app\\nproducts and subscriptions so there\'s no need to pass those in separately.","text":"You must retrieve an item\'s details before you attempt to purchase it via `purchaseItemAsync`.\\nThis is a prerequisite to buying a product even if you have the item details bundled in your app\\nor on your own servers.\\n\\nIf any of the product IDs passed in are invalid and don\'t exist, you will not receive an\\n`IAPItemDetails` object corresponding to that ID. For example, if you pass in four product IDs\\nin but one of them has a typo, you will only get three response objects back.\\n","returns":"Returns a Promise that resolves with an `IAPQueryResponse` containing `IAPItemDetails`\\nobjects in the `results` array.\\n","tags":[{"tag":"example","text":"\\n```ts\\n// These product IDs must match the item entries you created in the App Store Connect and Google Play Console.\\n// If you want to add more or edit their attributes you can do so there.\\n\\nconst items = Platform.select({\\n  ios: [\\n    \'dev.products.gas\',\\n    \'dev.products.premium\',\\n    \'dev.products.gold_monthly\',\\n    \'dev.products.gold_yearly\',\\n  ],\\n  android: [\'gas\', \'premium\', \'gold_monthly\', \'gold_yearly\'],\\n});\\n\\n // Retrieve product details\\nconst { responseCode, results } = await getProductsAsync(items);\\nif (responseCode === IAPResponseCode.OK) {\\n  this.setState({ items: results });\\n}\\n```\\n"}]},"parameters":[{"name":"itemList","kind":32768,"kindString":"Parameter","comment":{"text":"The list of product IDs whose details you want to query from the app store."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"IAPItemDetails"}],"name":"IAPQueryResponse"}],"name":"Promise"}}]},{"name":"getPurchaseHistoryAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPurchaseHistoryAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Retrieves the user\'s purchase history.","text":"Please note that on iOS, StoreKit actually creates a new transaction object every time you\\nrestore completed transactions, therefore the `purchaseTime` and `orderId` may be inaccurate if\\nit\'s a restored purchase. If you need the original transaction\'s information you can use\\n`originalPurchaseTime` and `originalOrderId`, but those will be 0 and an empty string\\nrespectively if it is the original transaction.\\n\\nYou should not call this method on launch because restoring purchases on iOS prompts for the\\nuser\u2019s App Store credentials, which could interrupt the flow of your app.\\n","returns":"Returns a `Promise` that fulfills with an `IAPQueryResponse` that contains an array of\\n`InAppPurchase` objects.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"An optional `PurchaseHistoryOptions` object."},"type":{"type":"reference","name":"IAPPurchaseHistoryOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"InAppPurchase"}],"name":"IAPQueryResponse"}],"name":"Promise"}}]},{"name":"purchaseItemAsync","kind":64,"kindString":"Function","signatures":[{"name":"purchaseItemAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Initiates the purchase flow to buy the item associated with this `productId`. This will display\\na prompt to the user that will allow them to either buy the item or cancel the purchase. When the\\npurchase completes, the result must be handled in the callback that you passed in to\\n[`setPurchaseListener`](#setpurchaselistener).","text":"Remember, you have to query an item\'s details via `getProductsAsync` and set the purchase\\nlistener before you attempt to buy an item.\\n\\n> [Apple](https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/StoreKitGuide/Chapters/Subscriptions.html)\\nand [Google](https://developer.android.com/google/play/billing/billing_subscriptions) both have\\ntheir own workflows for dealing with subscriptions. In general, you can deal with them in the\\nsame way you do one-time purchases but there are caveats including if a user decides to cancel\\nbefore the expiration date. To check the status of a subscription, you can use the [Google Play Developer](https://developers.google.com/android-publisher/api-ref/purchases/subscriptions/get)\\nAPI on Android and the [Status Update Notifications](https://developer.apple.com/documentation/storekit/in-app_purchase/enabling_status_update_notifications)\\nservice on iOS.\\n","returns":"Returns a `Promise` that resolves when the purchase is done processing. To get the actual\\nresult of the purchase, you must handle purchase events inside the `setPurchaseListener` callback.\\n"},"parameters":[{"name":"itemId","kind":32768,"kindString":"Parameter","comment":{"text":"The product ID of the item you want to buy."},"type":{"type":"intrinsic","name":"string"}},{"name":"oldPurchaseToken","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"__Android Only.__ The `purchaseToken` of the purchase that the user is\\nupgrading or downgrading from. This is mandatory for replacing an old subscription such as when\\na user upgrades from a monthly subscription to a yearly one that provides the same content.\\nYou can get the purchase token from [`getPurchaseHistoryAsync`](#inapppurchasesgetpurchasehistoryasyncrefresh-boolean)."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setPurchaseListener","kind":64,"kindString":"Function","signatures":[{"name":"setPurchaseListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a callback that handles incoming purchases. This must be done before any calls to\\n`purchaseItemAsync` are made, otherwise those transactions will be lost. You should **set the\\npurchase listener globally**, and not inside a specific screen, to ensure that you receive\\nincomplete transactions, subscriptions, and deferred transactions.","text":"Purchases can either be instantiated by the user (via `purchaseItemAsync`) or they can come from\\nsubscription renewals or unfinished transactions on iOS (e.g. if your app exits before\\n`finishTransactionAsync` was called).\\n\\n> Note that on iOS, the results array will only contain one item: the one that was just purchased.\\nOn Android, it will return both finished and unfinished purchases, hence the array return type.\\nThis is because the Google Play Billing API detects purchase updates but doesn\'t differentiate\\nwhich item was just purchased, therefore there\'s no good way to tell but in general it will be\\nwhichever purchase has `acknowledged` set to `false`, so those are the ones that you have to\\nhandle in the response. Consumed items will not be returned however, so if you consume an item\\nthat record will be gone and no longer appear in the results array when a new purchase is made.\\n","tags":[{"tag":"example","text":"\\n```ts\\n// Set purchase listener\\n setPurchaseListener(({ responseCode, results, errorCode }) => {\\n  // Purchase was successful\\n  if (responseCode === IAPResponseCode.OK) {\\n    results.forEach(purchase => {\\n      if (!purchase.acknowledged) {\\n        console.log(`Successfully purchased ${purchase.productId}`);\\n        // Process transaction here and unlock content...\\n\\n        // Then when you\'re done\\n        finishTransactionAsync(purchase, true);\\n      }\\n    });\\n  } else if (responseCode === IAPResponseCode.USER_CANCELED) {\\n    console.log(\'User canceled the transaction\');\\n  } else if (responseCode === IAPResponseCode.DEFERRED) {\\n    console.log(\'User does not have permissions to buy but requested parental approval (iOS only)\');\\n  } else {\\n    console.warn(`Something went wrong with the purchase. Received errorCode ${errorCode}`);\\n  }\\n});\\n```"}]},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"text":"The callback function you want to run when there is an update to the purchases.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"result","kind":32768,"kindString":"Parameter","type":{"type":"reference","typeArguments":[{"type":"reference","name":"InAppPurchase"}],"name":"IAPQueryResponse"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}]}')},WDeQ:function(e){e.exports=JSON.parse('{"name":"expo-updates","kind":1,"kindString":"Project","originalName":"","children":[{"name":"UpdateEventType","kind":8,"kindString":"Enumeration","comment":{"shortText":"The types of update-related events."},"children":[{"name":"ERROR","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An error occurred trying to fetch the latest update."},"defaultValue":"\\"error\\""},{"name":"NO_UPDATE_AVAILABLE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"No updates are available, and the most up-to-date update is already running."},"defaultValue":"\\"noUpdateAvailable\\""},{"name":"UPDATE_AVAILABLE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A new update has finished downloading to local storage. If you would like to start using this\\nupdate at any point before the user closes and restarts the app on their own, you can call\\n[`Updates.reloadAsync()`](#reloadasync) to launch this new update."},"defaultValue":"\\"updateAvailable\\""}]},{"name":"UpdateCheckResult","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The result of checking for a new update."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isAvailable","kind":1024,"kindString":"Property","comment":{"shortText":"`true` if an update is available, `false` if the app is already running the latest available\\nupdate."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"manifest","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `isAvailable` is `true`, the manifest of the available update, and `undefined` otherwise."},"type":{"type":"reference","name":"Manifest"}}]}}},{"name":"UpdateEvent","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object that is passed into each event listener when an auto-update check occurs."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"manifest","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `type` is `Updates.UpdateEventType.UPDATE_AVAILABLE`, the manifest of the newly downloaded\\nupdate, and `undefined` otherwise."},"type":{"type":"reference","name":"Manifest"}},{"name":"message","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `type` is `Updates.UpdateEventType.ERROR`, the error message, and `undefined` otherwise."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the event."},"type":{"type":"reference","name":"UpdateEventType"}}]}}},{"name":"UpdateFetchResult","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The result of fetching a new update."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isNew","kind":1024,"kindString":"Property","comment":{"shortText":"`true` if the fetched bundle is new (that is, a different version than what\'s currently\\nrunning), `false` otherwise."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"manifest","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `isNew` is `true`, the manifest of the newly downloaded update, and `undefined` otherwise."},"type":{"type":"reference","name":"Manifest"}}]}}},{"name":"isEmergencyLaunch","kind":32,"kindString":"Variable","comment":{"shortText":"`expo-updates` does its very best to always launch monotonically newer versions of your app so\\nyou don\'t need to worry about backwards compatibility when you put out an update. In very rare\\ncases, it\'s possible that `expo-updates` may need to fall back to the update that\'s embedded in\\nthe app binary, even after newer updates have been downloaded and run (an \\"emergency launch\\").\\nThis boolean will be `true` if the app is launching under this fallback mechanism and `false`\\notherwise. If you are concerned about backwards compatibility of future updates to your app, you\\ncan use this constant to provide special behavior for this rare case."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"..."},{"name":"manifest","kind":32,"kindString":"Variable","comment":{"shortText":"If `expo-updates` is enabled, this is the\\n[manifest](/guides/how-expo-works#expo-development-server) object for the update that\'s currently\\nrunning.","text":"In development mode, or any other environment in which `expo-updates` is disabled, this object is\\nempty.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Manifest"}],"name":"Partial"},"defaultValue":"..."},{"name":"releaseChannel","kind":32,"kindString":"Variable","comment":{"shortText":"The name of the release channel currently configured in this standalone or bare app when using\\nclassic updates. When using Expo Updates, the value of this field is always `\\"default\\"`."},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"updateId","kind":32,"kindString":"Variable","comment":{"shortText":"The UUID that uniquely identifies the currently running update if `expo-updates` is enabled. The\\nUUID is represented in its canonical string form (`xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx`) and\\nwill always use lowercase letters. In development mode, or any other environment in which\\n`expo-updates` is disabled, this value is `null`."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"addListener","kind":64,"kindString":"Function","signatures":[{"name":"addListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Adds a callback to be invoked when updates-related events occur (such as upon the initial app\\nload) due to auto-update settings chosen at build-time.","returns":"An `EventSubscription` object on which you can call `remove()` to unsubscribe the\\nlistener.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"text":"A function that will be invoked with an [`UpdateEvent`](#updateevent) instance\\nand should not return any value."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"UpdateEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"EventSubscription"}}]},{"name":"checkForUpdateAsync","kind":64,"kindString":"Function","signatures":[{"name":"checkForUpdateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks the server to see if a newly deployed update to your project is available. Does not\\nactually download the update. This method cannot be used in development mode, and the returned\\npromise will be rejected if you try to do so.","returns":"A promise that fulfills with an [`UpdateCheckResult`](#updatecheckresult) object.\\n\\nThe promise rejects if the app is in development mode, or if there is an unexpected error or\\ntimeout communicating with the server.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"UpdateCheckResult"}],"name":"Promise"}}]},{"name":"fetchUpdateAsync","kind":64,"kindString":"Function","signatures":[{"name":"fetchUpdateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Downloads the most recently deployed update to your project from server to the device\'s local\\nstorage. This method cannot be used in development mode, and the returned promise will be\\nrejected if you try to do so.","returns":"A promise that fulfills with an [`UpdateFetchResult`](#updatefetchresult) object.\\n\\nThe promise rejects if the app is in development mode, or if there is an unexpected error or\\ntimeout communicating with the server.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"UpdateFetchResult"}],"name":"Promise"}}]},{"name":"reloadAsync","kind":64,"kindString":"Function","signatures":[{"name":"reloadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Instructs the app to reload using the most recently downloaded version. This is useful for\\ntriggering a newly downloaded update to launch without the user needing to manually restart the\\napp.","text":"It is not recommended to place any meaningful logic after a call to `await\\nUpdates.reloadAsync()`. This is because the promise is resolved after verifying that the app can\\nbe reloaded, and immediately before posting an asynchronous task to the main thread to actually\\nreload the app. It is unsafe to make any assumptions about whether any more JS code will be\\nexecuted after the `Updates.reloadAsync` method call resolves, since that depends on the OS and\\nthe state of the native module and main threads.\\n\\nThis method cannot be used in development mode, and the returned promise will be rejected if you\\ntry to do so.\\n","returns":"A promise that fulfills right before the reload instruction is sent to the JS runtime, or\\nrejects if it cannot find a reference to the JS runtime. If the promise is rejected in production\\nmode, it most likely means you have installed the module incorrectly. Double check you\'ve\\nfollowed the installation instructions. In particular, on iOS ensure that you set the `bridge`\\nproperty on `EXUpdatesAppController` with a pointer to the `RCTBridge` you want to reload, and on\\nAndroid ensure you either call `UpdatesController.initialize` with the instance of\\n`ReactApplication` you want to reload, or call `UpdatesController.setReactNativeHost` with the\\nproper instance of `ReactNativeHost`.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},WJQt:function(e){e.exports=JSON.parse('{"name":"expo-cellular","kind":1,"kindString":"Project","originalName":"","children":[{"name":"CellularGeneration","kind":8,"kindString":"Enumeration","comment":{"shortText":"Describes the current generation of the cellular connection. It is an enum with these possible\\nvalues:"},"children":[{"name":"CELLULAR_2G","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Currently connected to a 2G cellular network. Includes CDMA, EDGE, GPRS, and IDEN type connections."},"defaultValue":"1"},{"name":"CELLULAR_3G","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Currently connected to a 3G cellular network. Includes EHRPD, EVDO, HSPA, HSUPA, HSDPA, and UTMS type connections."},"defaultValue":"2"},{"name":"CELLULAR_4G","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Currently connected to a 4G cellular network. Includes HSPAP and LTE type connections."},"defaultValue":"3"},{"name":"CELLULAR_5G","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Currently connected to a 5G cellular network. Includes NR and NRNSA type connections."},"defaultValue":"4"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Either we are not currently connected to a cellular network or type could not be determined."},"defaultValue":"0"}]},{"name":"allowsVoip","kind":32,"kindString":"Variable","comment":{"shortText":"Indicates if the carrier allows making VoIP calls on its network. On Android, this checks whether\\nthe system supports SIP-based VoIP API. See [here](https://developer.android.com/reference/android/net/sip/SipManager.html#isVoipSupported(android.content.Context))\\nto view more information.","text":"On iOS, if you configure a device for a carrier and then remove the SIM card, this property\\nretains the `boolean` value indicating the carrier\u2019s policy regarding VoIP. If you then install\\na new SIM card, its VoIP policy `boolean` replaces the previous value of this property.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nCellular.allowsVoip; // true or false\\n```"},{"tag":"deprecated","text":"Deprecated field, use [`allowsVoipAsync()`](#allowsvoipasync) instead.\\n\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"carrier","kind":32,"kindString":"Variable","comment":{"shortText":"The name of the user\u2019s home cellular service provider. If the device has dual SIM cards, only the\\ncarrier for the currently active SIM card will be returned. On Android, this value is only\\navailable when the SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY).\\nOtherwise, this returns `null`.","text":"On iOS, if you configure a device for a carrier and then remove the SIM card, this property\\nretains the name of the carrier. If you then install a new SIM card, its carrier name replaces\\nthe previous value of this property. The value for this property is `null` if the user never\\nconfigured a carrier for the device.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nCellular.carrier; // \\"T-Mobile\\" or \\"Verizon\\"\\n```"},{"tag":"deprecated","text":"Deprecated field, use [`getCarrierNameAsync()`](#getcarriernameasync) instead.\\n\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"isoCountryCode","kind":32,"kindString":"Variable","comment":{"shortText":"The ISO country code for the user\u2019s cellular service provider. On iOS, the value is `null` if any\\nof the following apply:\\n- The device is in airplane mode.\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.","text":"On web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nCellular.isoCountryCode; // \\"us\\" or \\"au\\"\\n```"},{"tag":"deprecated","text":"Deprecated field, use [`getIsoCountryCodeAsync()`](#getisocountrycodeAsync) instead.\\n\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"mobileCountryCode","kind":32,"kindString":"Variable","comment":{"shortText":"The mobile country code (MCC) for the user\u2019s current registered cellular service provider.\\nOn Android, this value is only available when SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY). Otherwise, this\\nreturns `null`. On iOS, the value may be null on hardware prior to iPhone 4S when in airplane mode.\\nFurthermore, the value for this property is `null` if any of the following apply:\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.","text":"On web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nCellular.mobileCountryCode; // \\"310\\"\\n```"},{"tag":"deprecated","text":"Deprecated field, use [`getMobileCountryCodeAsync()`](#getmobilecountrycodeasync) instead.\\n\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"mobileNetworkCode","kind":32,"kindString":"Variable","comment":{"shortText":"The ISO country code for the user\u2019s cellular service provider. On iOS, the value is `null` if\\nany of the following apply:\\n- The device is in airplane mode.\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.","text":"On web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nCellular.mobileNetworkCode; // \\"260\\"\\n```"},{"tag":"deprecated","text":"Deprecated field, use [`getMobileNetworkCodeAsync()`](#getmobilenetworkcodeasync) instead.\\n\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"allowsVoipAsync","kind":64,"kindString":"Function","signatures":[{"name":"allowsVoipAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns if the carrier allows making VoIP calls on its network. On Android, this checks whether\\nthe system supports SIP-based VoIP API. See [here](https://developer.android.com/reference/android/net/sip/SipManager.html#isVoipSupported(android.content.Context))\\nto view more information.\\n\\nOn iOS, if you configure a device for a carrier and then remove the SIM card, this property\\nretains the `boolean` value indicating the carrier\u2019s policy regarding VoIP. If you then install\\na new SIM card, its VoIP policy `boolean` replaces the previous value of this property.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.allowsVoipAsync(); // true or false\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getCarrierNameAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCarrierNameAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns name of the user\u2019s home cellular service provider. If the device has dual SIM cards, only the\\ncarrier for the currently active SIM card will be returned.\\n\\nOn Android, this value is only available when the SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY).\\nOtherwise, this returns `null`.\\n\\nOn iOS, if you configure a device for a carrier and then remove the SIM card, this property\\nretains the name of the carrier. If you then install a new SIM card, its carrier name replaces\\nthe previous value of this property. The value for this property is `null` if the user never\\nconfigured a carrier for the device.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.getCarrierNameAsync(); // \\"T-Mobile\\" or \\"Verizon\\"\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getCellularGenerationAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCellularGenerationAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns a promise which fulfils with a [`Cellular.CellularGeneration`](#cellulargeneration)\\nenum value that represents the current cellular-generation type.\\n\\nOn web, this method uses [`navigator.connection.effectiveType`](https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/effectiveType)\\nto detect the effective type of the connection using a combination of recently observed\\nround-trip time and downlink values. See [here](https://developer.mozilla.org/en-US/docs/Web/API/Network_Information_API)\\nto view browser compatibility.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.getCellularGenerationAsync();\\n// CellularGeneration.CELLULAR_4G\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CellularGeneration"}],"name":"Promise"}}]},{"name":"getIsoCountryCodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIsoCountryCodeAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns the ISO country code for the user\u2019s cellular service provider.\\n\\nOn iOS, the value is `null` if any of the following apply:\\n- The device is in airplane mode.\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.getIsoCountryCodeAsync(); // \\"us\\" or \\"au\\"\\n```\\n\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getMobileCountryCodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMobileCountryCodeAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns mobile country code (MCC) for the user\u2019s current registered cellular service provider.\\n\\nOn Android, this value is only available when SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY). Otherwise, this\\nreturns `null`. On iOS, the value may be null on hardware prior to iPhone 4S when in airplane mode.\\nFurthermore, the value for this property is `null` if any of the following apply:\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.getMobileCountryCodeAsync(); // \\"310\\"\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getMobileNetworkCodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMobileNetworkCodeAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns the mobile network code (MNC) for the user\u2019s current registered cellular service provider.\\n\\nOn Android, this value is only available when SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY). Otherwise, this\\nreturns `null`. On iOS, the value may be null on hardware prior to iPhone 4S when in airplane mode.\\nFurthermore, the value for this property is `null` if any of the following apply:\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.getMobileNetworkCodeAsync(); // \\"310\\"\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]}]}')},WmHN:function(e){e.exports=JSON.parse('{"name":"expo-battery","kind":1,"kindString":"Project","originalName":"","children":[{"name":"BatteryState","kind":8,"kindString":"Enumeration","children":[{"name":"CHARGING","kind":16,"kindString":"Enumeration member","comment":{"shortText":"if battery is charging."},"defaultValue":"2"},{"name":"FULL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"if the battery level is full."},"defaultValue":"3"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"if the battery state is unknown or inaccessible."},"defaultValue":"0"},{"name":"UNPLUGGED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"if battery is not charging or discharging."},"defaultValue":"1"}]},{"name":"BatteryLevelEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"batteryLevel","kind":1024,"kindString":"Property","comment":{"shortText":"A number between `0` and `1`, inclusive, or `-1` if the battery level is unknown."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"BatteryStateEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"batteryState","kind":1024,"kindString":"Property","comment":{"shortText":"An enum value representing the battery state."},"type":{"type":"reference","name":"BatteryState"}}]}}},{"name":"PowerModeEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"lowPowerMode","kind":1024,"kindString":"Property","comment":{"shortText":"A boolean value, `true` if lowPowerMode is on, `false` if lowPowerMode is off"},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"PowerState","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"batteryLevel","kind":1024,"kindString":"Property","comment":{"shortText":"A number between `0` and `1`, inclusive, or `-1` if the battery level is unknown."},"type":{"type":"intrinsic","name":"number"}},{"name":"batteryState","kind":1024,"kindString":"Property","comment":{"shortText":"An enum value representing the battery state."},"type":{"type":"reference","name":"BatteryState"}},{"name":"lowPowerMode","kind":1024,"kindString":"Property","comment":{"shortText":"A boolean value, `true` if lowPowerMode is on, `false` if lowPowerMode is off"},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"addBatteryLevelListener","kind":64,"kindString":"Function","signatures":[{"name":"addBatteryLevelListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to the battery level change updates.","text":"On iOS devices, the event fires when the battery level drops one percent or more, but is only\\nfired once per minute at maximum.\\n\\nOn Android devices, the event fires only when significant changes happens, which is when the\\nbattery level drops below [`\\"android.intent.action.BATTERY_LOW\\"`](https://developer.android.com/reference/android/content/Intent#ACTION_BATTERY_LOW)\\nor rises above [`\\"android.intent.action.BATTERY_OKAY\\"`](https://developer.android.com/reference/android/content/Intent#ACTION_BATTERY_OKAY)\\nfrom a low battery level. See [here](https://developer.android.com/training/monitoring-device-state/battery-monitoring)\\nto read more from the Android docs.\\n\\nOn web, the event never fires.","returns":"A `Subscription` object on which you can call `remove()` to unsubscribe from the listener.s\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"A callback that is invoked when battery level changes. The callback is provided a\\nsingle argument that is an object with a `batteryLevel` key."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BatteryLevelEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"addBatteryStateListener","kind":64,"kindString":"Function","signatures":[{"name":"addBatteryStateListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to the battery state change updates to receive an object with a [`Battery.BatteryState`](#batterystate)\\nenum value for whether the device is any of the four states.","text":"On web, the event never fires.","returns":"A `Subscription` object on which you can call `remove()` to unsubscribe from the listener.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"A callback that is invoked when battery state changes. The callback is provided a\\nsingle argument that is an object with a `batteryState` key."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BatteryStateEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"addLowPowerModeListener","kind":64,"kindString":"Function","signatures":[{"name":"addLowPowerModeListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to Low Power Mode (iOS) or Power Saver Mode (Android) updates. The event fires whenever\\nthe power mode is toggled.","text":"On web, the event never fires.","returns":"A `Subscription` object on which you can call `remove()` to unsubscribe from the listener.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"A callback that is invoked when Low Power Mode (iOS) or Power Saver Mode (Android)\\nchanges. The callback is provided a single argument that is an object with a `lowPowerMode` key."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"PowerModeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getBatteryLevelAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBatteryLevelAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the battery level of the device as a number between `0` and `1`, inclusive. If the device\\ndoes not support retrieving the battery level, this method returns `-1`. On web, this method\\nalways returns `-1`.","returns":"A `Promise` that fulfils with a number between `0` and `1` representing the battery level,\\nor `-1` if the device does not provide it.","tags":[{"tag":"example","text":"\\n```ts\\nawait Battery.getBatteryLevelAsync();\\n// 0.759999\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise"}}]},{"name":"getBatteryStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBatteryStateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Tells the battery\'s current state. On web, this always returns `BatteryState.UNKNOWN`.","returns":"Returns a `Promise` which fulfills with a [`Battery.BatteryState`](#batterystate) enum\\nvalue for whether the device is any of the four states.","tags":[{"tag":"example","text":"\\n```ts\\nawait Battery.getBatteryStateAsync();\\n// BatteryState.CHARGING\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BatteryState"}],"name":"Promise"}}]},{"name":"getPowerStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPowerStateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the power state of the device including the battery level, whether it is plugged in, and if\\nthe system is currently operating in Low Power Mode (iOS) or Power Saver Mode (Android). This\\nmethod re-throws any errors that occur when retrieving any of the power-state information.","returns":"Returns a `Promise` which fulfills with [`PowerState`](#powerstate) object.","tags":[{"tag":"example","text":"\\n```ts\\nawait Battery.getPowerStateAsync();\\n// {\\n//   batteryLevel: 0.759999,\\n//   batteryState: BatteryState.UNPLUGGED,\\n//   lowPowerMode: true,\\n// }\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PowerState"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Resolves with whether the battery API is available on the current device. The value of this\\nproperty is `true` on Android and physical iOS devices and `false` on iOS simulators. On web,\\nit depends on whether the browser supports the web battery API."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isBatteryOptimizationEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"isBatteryOptimizationEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks whether battery optimization is enabled for your application.\\nIf battery optimization is enabled for your app, background tasks might be affected\\nwhen your app goes into doze mode state. (only on Android 6.0 or later)","returns":"Returns a `Promise` which fulfills with a `boolean` value of either `true` or `false`,\\nindicating whether the battery optimization is enabled or disabled, respectively. (Android only)","tags":[{"tag":"example","text":"\\n```ts\\nawait Battery.isBatteryOptimizationEnabledAsync();\\n// true\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isLowPowerModeEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"isLowPowerModeEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current status of Low Power mode on iOS and Power Saver mode on Android. If a platform\\ndoesn\'t support Low Power mode reporting (like web, older Android devices), the reported low-power\\nstate is always `false`, even if the device is actually in low-power mode.","returns":"Returns a `Promise` which fulfills with a `boolean` value of either `true` or `false`,\\nindicating whether low power mode is enabled or disabled, respectively.","tags":[{"tag":"example","text":"\\nLow Power Mode (iOS) or Power Saver Mode (Android) are enabled.\\n```ts\\nawait Battery.isLowPowerModeEnabledAsync();\\n// true\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}')},X0Jp:function(e,w,n){"use strict";e.exports=d;var c=n("UFN4"),p=n("2jS9");function d(a,m){var r={},s=m.ordered?"ol":"ul",i,o=-1,t;for(typeof m.start=="number"&&m.start!==1&&(r.start=m.start),i=p(a,m),t=i.length;++o<t;)if(i[o].properties.className&&i[o].properties.className.indexOf("task-list-item")!==-1){r.className=["contains-task-list"];break}return a(m,s,r,c(i,!0))}},X2tN:function(e){e.exports=JSON.parse('{"name":"expo-linking","kind":1,"kindString":"Project","originalName":"","children":[{"name":"CreateURLOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isTripleSlashed","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Should the URI be triple slashed `scheme:///path` or double slashed `scheme://path`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"queryParams","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An object of parameters that will be converted into a query string."},"type":{"type":"reference","name":"QueryParams"}},{"name":"scheme","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URI protocol `<scheme>://` that must be built into your native app."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"EventType","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","qualifiedName":"MessageEvent","package":"typescript","name":"MessageEvent"}},{"name":"url","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"NativeURLListener","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"nativeEvent","kind":32768,"kindString":"Parameter","type":{"type":"reference","qualifiedName":"MessageEvent","package":"typescript","name":"MessageEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"ParsedURL","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"hostname","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"path","kind":1024,"kindString":"Property","comment":{"shortText":"The path into the app specified by the URL."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"queryParams","kind":1024,"kindString":"Property","comment":{"shortText":"The set of query parameters specified by the query string of the url used to open the app."},"type":{"type":"union","types":[{"type":"reference","name":"QueryParams"},{"type":"literal","value":null}]}},{"name":"scheme","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}}},{"name":"QueryParams","kind":4194304,"kindString":"Type alias","type":{"type":"reference","qualifiedName":"QueryString.ParsedQs","package":"@types/qs","name":"ParsedQs"}},{"name":"SendIntentExtras","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"key","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"value","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"}]}}]}}},{"name":"URLListener","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"EventType"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"addEventListener","kind":64,"kindString":"Function","signatures":[{"name":"addEventListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Add a handler to `Linking` changes by listening to the `url` event type and providing the handler.\\nIt is recommended to use the [`useURL()`](#useurl) hook instead.","returns":"An EmitterSubscription that has the remove method from EventSubscription","tags":[{"tag":"see","text":"[React Native Docs Linking page](https://reactnative.dev/docs/linking#addeventlistener).\\n"}]},"parameters":[{"name":"type","kind":32768,"kindString":"Parameter","comment":{"shortText":"The only valid type is `\'url\'`."},"type":{"type":"literal","value":"url"}},{"name":"handler","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`URLListener`](#urllistener) function that takes an `event` object of the type\\n[`EventType`](#eventype)."},"type":{"type":"reference","name":"URLListener"}}],"type":{"type":"reference","qualifiedName":"EmitterSubscription","package":"@types/react-native","name":"EmitterSubscription"}}]},{"name":"canOpenURL","kind":64,"kindString":"Function","signatures":[{"name":"canOpenURL","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine whether or not an installed app can handle a given URL.\\nOn web this always returns `true` because there is no API for detecting what URLs can be opened.","returns":"A `Promise` object that is fulfilled with `true` if the URL can be handled, otherwise it\\n`false` if not.\\n\\nThe `Promise` will reject on Android if it was impossible to check if the URL can be opened, and\\non iOS if you didn\'t [add the specific scheme in the `LSApplicationQueriesSchemes` key inside **Info.plist**](/guides/linking#opening-links-to-other-apps).\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"The URL that you want to test can be opened."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"collectManifestSchemes","kind":64,"kindString":"Function","signatures":[{"name":"collectManifestSchemes","kind":4096,"kindString":"Call signature","comment":{"shortText":"Collect a list of platform schemes from the manifest.","text":"This method is based on the `Scheme` modules from `@expo/config-plugins`\\nwhich are used for collecting the schemes before prebuilding a native app.\\n\\n- iOS: scheme -> ios.scheme -> ios.bundleIdentifier\\n- Android: scheme -> android.scheme -> android.package\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]},{"name":"createURL","kind":64,"kindString":"Function","signatures":[{"name":"createURL","kind":4096,"kindString":"Call signature","comment":{"shortText":"Helper method for constructing a deep link into your app, given an optional path and set of query\\nparameters. Creates a URI scheme with two slashes by default.","text":"The scheme in bare and standalone must be defined in the Expo config (`app.config.js` or `app.json`)\\nunder `expo.scheme`.\\n\\n# Examples\\n- Bare: `<scheme>://path` - uses provided scheme or scheme from Expo config `scheme`.\\n- Standalone, Custom: `yourscheme://path`\\n- Web (dev): `https://localhost:19006/path`\\n- Web (prod): `https://myapp.com/path`\\n- Expo Client (dev): `exp://128.0.0.1:19000/--/path`\\n- Expo Client (prod): `exp://exp.host/@yourname/your-app/--/path`\\n","returns":"A URL string which points to your app with the given deep link information.\\n"},"parameters":[{"name":"path","kind":32768,"kindString":"Parameter","comment":{"shortText":"Addition path components to append to the base URL."},"type":{"type":"intrinsic","name":"string"}},{"name":"namedParameters","kind":32768,"kindString":"Parameter","comment":{"shortText":"Additional options object."},"originalName":"__namedParameters","type":{"type":"reference","name":"CreateURLOptions"},"defaultValue":"{}"}],"type":{"type":"intrinsic","name":"string"}}]},{"name":"getInitialURL","kind":64,"kindString":"Function","signatures":[{"name":"getInitialURL","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the URL that was used to launch the app if it was launched by a link.","returns":"The URL string that launched your app, or `null`.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"hasConstantsManifest","kind":64,"kindString":"Function","signatures":[{"name":"hasConstantsManifest","kind":4096,"kindString":"Call signature","comment":{"shortText":"Ensure the user has linked the expo-constants manifest in bare workflow."},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"hasCustomScheme","kind":64,"kindString":"Function","signatures":[{"name":"hasCustomScheme","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"boolean"}}]},{"name":"makeUrl","kind":64,"kindString":"Function","signatures":[{"name":"makeUrl","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a URL that works for the environment the app is currently running in.\\nThe scheme in bare and standalone must be defined in the app.json under `expo.scheme`.","text":"# Examples\\n- Bare: empty string\\n- Standalone, Custom: `yourscheme:///path`\\n- Web (dev): `https://localhost:19006/path`\\n- Web (prod): `https://myapp.com/path`\\n- Expo Client (dev): `exp://128.0.0.1:19000/--/path`\\n- Expo Client (prod): `exp://exp.host/@yourname/your-app/--/path`\\n","returns":"A URL string which points to your app with the given deep link information.","tags":[{"tag":"deprecated","text":"An alias for [`createURL()`](#linkingcreateurlpath-namedparameters). This method is\\ndeprecated and will be removed in a future SDK version.\\n"}]},"parameters":[{"name":"path","kind":32768,"kindString":"Parameter","comment":{"shortText":"addition path components to append to the base URL."},"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"},{"name":"queryParams","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"An object with a set of query parameters. These will be merged with any\\nExpo-specific parameters that are needed (e.g. release channel) and then appended to the URL\\nas a query string."},"type":{"type":"reference","qualifiedName":"QueryString.ParsedQs","package":"@types/qs","name":"ParsedQs"}},{"name":"scheme","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Optional URI protocol to use in the URL `<scheme>:///`, when `undefined` the scheme\\nwill be chosen from the Expo config (`app.config.js` or `app.json`)."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]},{"name":"openSettings","kind":64,"kindString":"Function","signatures":[{"name":"openSettings","kind":4096,"kindString":"Call signature","comment":{"shortText":"Open the operating system settings app and displays the app\u2019s custom settings, if it has any."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"openURL","kind":64,"kindString":"Function","signatures":[{"name":"openURL","kind":4096,"kindString":"Call signature","comment":{"shortText":"Attempt to open the given URL with an installed app. See the [Linking guide](/guides/linking)\\nfor more information.","returns":"A `Promise` that is fulfilled with `true` if the link is opened operating system\\nautomatically or the user confirms the prompt to open the link. The `Promise` rejects if there\\nare no applications registered for the URL or the user cancels the dialog.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"A URL for the operating system to open, eg: `tel:5555555`, `exp://`."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"literal","value":true}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"parse","kind":64,"kindString":"Function","signatures":[{"name":"parse","kind":4096,"kindString":"Call signature","comment":{"shortText":"Helper method for parsing out deep link information from a URL.","returns":"A `ParsedURL` object.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"A URL that points to the currently running experience (e.g. an output of `Linking.createURL()`)."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ParsedURL"}}]},{"name":"parseInitialURLAsync","kind":64,"kindString":"Function","signatures":[{"name":"parseInitialURLAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Helper method which wraps React Native\'s `Linking.getInitialURL()` in `Linking.parse()`.\\nParses the deep link information out of the URL used to open the experience initially.\\nIf no link opened the app, all the fields will be `null`.\\n> On the web it parses the current window URL.","returns":"A promise that resolves with `ParsedURL` object.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ParsedURL"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"removeEventListener","kind":64,"kindString":"Function","signatures":[{"name":"removeEventListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Remove a handler by passing the `url` event type and the handler.","tags":[{"tag":"see","text":"[React Native Docs Linking page](https://reactnative.dev/docs/linking#removeeventlistener).\\n"}]},"parameters":[{"name":"type","kind":32768,"kindString":"Parameter","comment":{"shortText":"The only valid type is `\'url\'`."},"type":{"type":"literal","value":"url"}},{"name":"handler","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`URLListener`](#urllistener) function that takes an `event` object of the type\\n[`EventType`](#eventype)."},"type":{"type":"reference","name":"URLListener"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"resolveScheme","kind":64,"kindString":"Function","signatures":[{"name":"resolveScheme","kind":4096,"kindString":"Call signature","parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isSilent","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"scheme","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}]}}}],"type":{"type":"intrinsic","name":"string"}}]},{"name":"sendIntent","kind":64,"kindString":"Function","signatures":[{"name":"sendIntent","kind":4096,"kindString":"Call signature","comment":{"shortText":"Launch an Android intent with extras.\\n> Use [IntentLauncher](./intent-launcher) instead, `sendIntent` is only included in\\n> `Linking` for API compatibility with React Native\'s Linking API.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"action","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"extras","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"reference","name":"SendIntentExtras"}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"useURL","kind":64,"kindString":"Function","signatures":[{"name":"useURL","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns the initial URL followed by any subsequent changes to the URL.","returns":"Returns the initial URL or `null`.\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}]}')},X9SE:function(e){e.exports=JSON.parse('{"name":"expo-network","kind":1,"kindString":"Project","originalName":"","children":[{"name":"NetworkStateType","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum of the different types of devices supported by Expo."},"children":[{"name":"BLUETOOTH","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over Bluetooth."},"defaultValue":"\\"BLUETOOTH\\""},{"name":"CELLULAR","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over mobile data or [`DUN-specific`](https://developer.android.com/reference/android/net/ConnectivityManager#TYPE_MOBILE_DUN)\\nmobile connection when setting an upstream connection for tethering."},"defaultValue":"\\"CELLULAR\\""},{"name":"ETHERNET","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over Ethernet."},"defaultValue":"\\"ETHERNET\\""},{"name":"NONE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"No active network connection detected."},"defaultValue":"\\"NONE\\""},{"name":"OTHER","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over other network connection types."},"defaultValue":"\\"OTHER\\""},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The connection type could not be determined."},"defaultValue":"\\"UNKNOWN\\""},{"name":"VPN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over VPN."},"defaultValue":"\\"VPN\\""},{"name":"WIFI","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over WiFi."},"defaultValue":"\\"WIFI\\""},{"name":"WIMAX","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over Wimax."},"defaultValue":"\\"WIMAX\\""}]},{"name":"NetworkState","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isConnected","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If there is an active network connection. Note that this does not mean that internet is reachable.\\nThis field is `false` if the type is either `Network.NetworkStateType.NONE` or `Network.NetworkStateType.UNKNOWN`,\\n`true` otherwise."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isInternetReachable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the internet is reachable with the currently active network connection. On Android, this\\ndepends on `NetInfo.isConnected()` (API level < 29) or `ConnectivityManager.getActiveNetwork()`\\n(API level >= 29). On iOS, this value will always be the same as `isConnected`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A [`NetworkStateType`](#networkstatetype) enum value that represents the current network\\nconnection type."},"type":{"type":"reference","name":"NetworkStateType"}}]}}},{"name":"getIpAddressAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIpAddressAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the device\'s current IPv4 address. Returns `0.0.0.0` if the IP address could not be retrieved.","text":"On web, this method uses the third-party [`ipify service`](https://www.ipify.org/) to get the\\npublic IP address of the current device.","returns":"A `Promise` that fulfils with a `string` of the current IP address of the device\'s main\\nnetwork interface. Can only be IPv4 address.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Network.getIpAddressAsync();\\n// \\"92.168.32.44\\"\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getMacAddressAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMacAddressAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the specified network interface\'s MAC address.","text":"> Beginning with iOS 7 and Android 11, non-system applications can no longer access the device\'s\\nMAC address. In SDK 41 and above, this method will always resolve to a predefined value that\\nisn\'t useful.\\n\\nIf you need to identify the device, use the `getIosIdForVendorAsync()` method / `androidId`\\nproperty of the `expo-application` unimodule instead.\\n","returns":"A `Promise` that fulfils with the value `\'02:00:00:00:00:00\'`.\\n","tags":[{"tag":"deprecated","text":"This method is deprecated and will be removed in a future SDK version.\\n"}]},"parameters":[{"name":"interfaceName","kind":32768,"kindString":"Parameter","comment":{"shortText":"A string representing interface name (`eth0`, `wlan0`) or `null` (default),\\nmeaning the method should fetch the MAC address of the first available interface.\\n"},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"null"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getNetworkStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getNetworkStateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the device\'s current network connection state.","text":"On web, `navigator.connection.type` is not available on browsers. So if there is an active\\nnetwork connection, the field `type` returns `NetworkStateType.UNKNOWN`. Otherwise, it returns\\n`NetworkStateType.NONE`.","returns":"A `Promise` that fulfils with a `NetworkState` object.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Network.getNetworkStateAsync();\\n// {\\n//   type: NetworkStateType.CELLULAR,\\n//   isConnected: true,\\n//   isInternetReachable: true,\\n// }\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"NetworkState"}],"name":"Promise"}}]},{"name":"isAirplaneModeEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAirplaneModeEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Tells if the device is in airplane mode.","returns":"Returns a `Promise` that fulfils with a `boolean` value for whether the device is in\\nairplane mode or not.","tags":[{"tag":"platform","text":"android\\n"},{"tag":"example","text":"\\n```ts\\nawait Network.isAirplaneModeEnabledAsync();\\n// false\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}')},XER9:function(e){e.exports=JSON.parse('{"name":"expo-build-properties","kind":1,"originalName":"","children":[{"name":"default","kind":16777216,"kindString":"Reference"},{"name":"PluginConfigType","kind":256,"kindString":"Interface","comment":{"shortText":"Configuration for `expo-build-properties`"},"children":[{"name":"android","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"PluginConfigTypeAndroid"}},{"name":"ios","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"PluginConfigTypeIos"}}]},{"name":"PluginConfigTypeAndroid","kind":256,"kindString":"Interface","comment":{"shortText":"Config for Android native build properties"},"children":[{"name":"buildToolsVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Override the default `buildToolsVersion` version number in `build.gradle`"},"type":{"type":"intrinsic","name":"string"}},{"name":"compileSdkVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Override the default `compileSdkVersion` version number in `build.gradle`"},"type":{"type":"intrinsic","name":"number"}},{"name":"enableProguardInReleaseBuilds","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Enable Proguard (R8) in release builds to obfuscate Java code and reduce app size"},"type":{"type":"intrinsic","name":"boolean"}},{"name":"extraProguardRules","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Append custom [Proguard rules](https://www.guardsquare.com/manual/configuration/usage) to `android/app/proguard-rules.pro`"},"type":{"type":"intrinsic","name":"string"}},{"name":"kotlinVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Override the default Kotlin version when building the app"},"type":{"type":"intrinsic","name":"string"}},{"name":"packagingOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"AGP [PackagingOptions](https://developer.android.com/reference/tools/gradle-api/7.0/com/android/build/api/dsl/PackagingOptions)"},"type":{"type":"reference","name":"PluginConfigTypeAndroidPackagingOptions"}},{"name":"targetSdkVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Override the default `targetSdkVersion` version number in `build.gradle`"},"type":{"type":"intrinsic","name":"number"}}]},{"name":"PluginConfigTypeAndroidPackagingOptions","kind":256,"kindString":"Interface","comment":{"shortText":"AGP [PackagingOptions](https://developer.android.com/reference/tools/gradle-api/7.0/com/android/build/api/dsl/PackagingOptions)"},"children":[{"name":"doNotStrip","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Adds a doNotStrip pattern"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"exclude","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Adds an excluded pattern"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"merge","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Adds a merge pattern"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"pickFirst","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Adds a first-pick pattern"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]},{"name":"PluginConfigTypeIos","kind":256,"kindString":"Interface","comment":{"shortText":"Config for iOS native build properties"},"children":[{"name":"deploymentTarget","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Override the default iOS *Deployment Target* version in the following projects:\\n - in CocoaPods projects\\n - `PBXNativeTarget` with `com.apple.product-type.application` productType in the app project"},"type":{"type":"intrinsic","name":"string"}},{"name":"useFrameworks","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Enable [`use_frameworks!`](https://guides.cocoapods.org/syntax/podfile.html#use_frameworks_bang) in `Podfile`"},"type":{"type":"union","types":[{"type":"literal","value":"static"},{"type":"literal","value":"dynamic"}]}}]},{"name":"withBuildProperties","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"withBuildProperties","kind":4096,"kindString":"Call signature","comment":{"shortText":"Config plugin to customize native Android or iOS build properties for managed apps"},"parameters":[{"name":"config","kind":32768,"kindString":"Parameter","comment":{"shortText":"ExpoConfig"},"type":{"type":"reference","name":"ExpoConfig"}},{"name":"props","kind":32768,"kindString":"Parameter","comment":{"shortText":"Configuration for the config plugin\\n"},"type":{"type":"reference","name":"PluginConfigType"}}],"type":{"type":"reference","name":"ExpoConfig"}}]}]}')},XItG:function(e){e.exports=JSON.parse('{"name":"expo-print","kind":1,"kindString":"Project","originalName":"","children":[{"name":"OrientationType","kind":256,"kindString":"Interface","comment":{"shortText":"The possible values of orientation for the printed content."},"children":[{"name":"landscape","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"portrait","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]},{"name":"FilePrintOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to include base64 encoded string of the file in the returned object."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Height of the single page in pixels. Defaults to `792` which is a height of US Letter paper\\nformat with 72 PPI."},"type":{"type":"intrinsic","name":"number"}},{"name":"html","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"HTML string to print into PDF file."},"type":{"type":"intrinsic","name":"string"}},{"name":"padding","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Padding for the printed document."},"type":{"type":"reference","name":"FilePrintPadding"}},{"name":"useMarkupFormatter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"**Available on iOS only.** Alternative to default option that uses [UIMarkupTextPrintFormatter](https://developer.apple.com/documentation/uikit/uimarkuptextprintformatter)\\ninstead of WebView, but it doesn\'t display images."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Width of the single page in pixels. Defaults to `612` which is a width of US Letter paper\\nformat with 72 PPI."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"FilePrintResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Base64 encoded string containing the data of the PDF file. **Available only if `base64`\\noption is truthy**. It doesn\'t include data URI prefix `data:application/pdf;base64,`."},"type":{"type":"intrinsic","name":"string"}},{"name":"numberOfPages","kind":1024,"kindString":"Property","comment":{"shortText":"Number of pages that were needed to render given content."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"A URI to the printed PDF file."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"PrintOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Height of the single page in pixels. Defaults to `792` which is a height of US Letter paper\\nformat with 72 PPI. **Available only with `html` option.**"},"type":{"type":"intrinsic","name":"number"}},{"name":"html","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"HTML string to print. **Available on Android and iOS only.**"},"type":{"type":"intrinsic","name":"string"}},{"name":"markupFormatterIOS","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"deprecated","text":"\\n**Available on iOS only.** This argument is deprecated, use `useMarkupFormatter` instead.\\nMight be removed in the future releases.\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"orientation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"**Available on iOS only.** The orientation of the printed content, `Print.Orientation.portrait`\\nor `Print.Orientation.landscape`."},"type":{"type":"union","types":[{"type":"indexedAccess","indexType":{"type":"literal","value":"portrait"},"objectType":{"type":"reference","name":"OrientationType"}},{"type":"indexedAccess","indexType":{"type":"literal","value":"landscape"},"objectType":{"type":"reference","name":"OrientationType"}}]}},{"name":"printerUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL of the printer to use. Returned from `selectPrinterAsync`. **Available on iOS only.**"},"type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URI of a PDF file to print. Remote, local (ex. selected via `DocumentPicker`) or base64 data URI\\nstarting with `data:application/pdf;base64,`. This only supports PDF, not other types of\\ndocument (e.g. images). **Available on Android and iOS only.**"},"type":{"type":"intrinsic","name":"string"}},{"name":"useMarkupFormatter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"**Available on iOS only.** Alternative to default option that uses [UIMarkupTextPrintFormatter](https://developer.apple.com/documentation/uikit/uimarkuptextprintformatter)\\ninstead of WebView, but it doesn\'t display images."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Width of the single page in pixels. Defaults to `612` which is a width of US Letter paper\\nformat with 72 PPI. **Available only with `html` option.**"},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"Printer","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"Name of the printer."},"type":{"type":"intrinsic","name":"string"}},{"name":"url","kind":1024,"kindString":"Property","comment":{"shortText":"URL of the printer."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Orientation","kind":32,"kindString":"Variable","comment":{"shortText":"The orientation of the printed content."},"type":{"type":"reference","name":"OrientationType"},"defaultValue":"..."},{"name":"printAsync","kind":64,"kindString":"Function","signatures":[{"name":"printAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prints a document or HTML, on web this prints the HTML from the page.\\n> Note: On iOS, printing from HTML source doesn\'t support local asset URLs (due to `WKWebView`\\n> limitations). As a workaround you can use inlined base64-encoded strings.\\n> See [this comment](https://github.com/expo/expo/issues/7940#issuecomment-657111033) for more details.","returns":"Resolves to an empty `Promise` if printing started.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"A map defining what should be printed."},"type":{"type":"reference","name":"PrintOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"printToFileAsync","kind":64,"kindString":"Function","signatures":[{"name":"printToFileAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prints HTML to PDF file and saves it to [app\'s cache directory](./filesystem/#filesystemcachedirectory).\\nOn Web this method opens the print dialog."},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"A map of print options.\\n"},"type":{"type":"reference","name":"FilePrintOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"FilePrintResult"}],"name":"Promise"}}]},{"name":"selectPrinterAsync","kind":64,"kindString":"Function","signatures":[{"name":"selectPrinterAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"**Available on iOS only.** Chooses a printer that can be later used in `printAsync`","returns":"A promise which fulfils with an object containing `name` and `url` of the selected printer.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Printer"}],"name":"Promise"}}]}]}')},YK6v:function(e,w,n){var c=n("oJEb"),p=n("321L"),d=n("f8fV"),a=n("THrT"),m=n("uGmZ");e.exports=r;function r(s){return c([p,d(s),a,m])}},Yoeg:function(e,w,n){"use strict";Object.defineProperty(w,"__esModule",{value:!0});var c=n("E/Jm"),p=n("yRGd"),d=n("VLot"),a=s,m={tokenize:i},r={tokenize:o};function s(t){var l=this,k=[],g=0,h={tokenize:W,partial:!0},f,S,b;return P;function P(L){return g<k.length?(l.containerState=k[g][1],t.attempt(k[g][0].continuation,y,v)(L)):v(L)}function y(L){return g++,P(L)}function v(L){return f&&f.flowContinue?C(L):(l.interrupt=S&&S.currentConstruct&&S.currentConstruct.interruptible,l.containerState={},t.attempt(m,u,C)(L))}function u(L){return k.push([l.currentConstruct,l.containerState]),l.containerState=void 0,v(L)}function C(L){if(L===null){I(0,!0),t.consume(L);return}return S=S||l.parser.flow(l.now()),t.enter("chunkFlow",{contentType:"flow",previous:b,_tokenizer:S}),R(L)}function R(L){return L===null?(j(t.exit("chunkFlow")),C(L)):c(L)?(t.consume(L),j(t.exit("chunkFlow")),t.check(h,F)):(t.consume(L),R)}function F(L){return I(f.continued,f&&f.flowEnd),g=0,P(L)}function j(L){b&&(b.next=L),b=L,S.lazy=f&&f.lazy,S.defineSkip(L.start),S.write(l.sliceStream(L))}function I(L,K){var D=k.length;for(S&&K&&(S.write([null]),b=S=void 0);D-- >L;)l.containerState=k[D][1],k[D][0].exit.call(l,t);k.length=L}function W(L,K){var D=0;return f={},ee;function ee(B){return D<k.length?(l.containerState=k[D][1],L.attempt(k[D][0].continuation,V,X)(B)):S.currentConstruct&&S.currentConstruct.concrete?(f.flowContinue=!0,ne(B)):(l.interrupt=S.currentConstruct&&S.currentConstruct.interruptible,l.containerState={},L.attempt(m,re,ne)(B))}function V(B){return D++,l.containerState._closeFlow?re(B):ee(B)}function X(B){return S.currentConstruct&&S.currentConstruct.lazy?(l.containerState={},L.attempt(m,re,L.attempt(r,re,L.check(d,re,$)))(B)):re(B)}function $(B){return D=k.length,f.lazy=!0,f.flowContinue=!0,ne(B)}function re(B){return f.flowEnd=!0,ne(B)}function ne(B){return f.continued=D,l.interrupt=l.containerState=void 0,K(B)}}}function i(t,l,k){return p(t,t.attempt(this.parser.constructs.document,l,k),"linePrefix",this.parser.constructs.disable.null.indexOf("codeIndented")>-1?void 0:4)}function o(t,l,k){return p(t,t.lazy(this.parser.constructs.flow,l,k),"linePrefix",this.parser.constructs.disable.null.indexOf("codeIndented")>-1?void 0:4)}w.tokenize=a},Yq9d:function(e,w,n){"use strict";var c=n("xGQ6"),p=n("2jS9");e.exports=d;function d(a,m){var r={href:c(m.url)};return m.title!==null&&m.title!==void 0&&(r.title=m.title),a(m,"a",r,p(a,m))}},YyrF:function(e){e.exports=JSON.parse('{"name":"expo-face-detector","kind":1,"kindString":"Project","originalName":"","children":[{"name":"FaceDetectorClassifications","kind":8,"kindString":"Enumeration","children":[{"name":"all","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"none","kind":16,"kindString":"Enumeration member","defaultValue":"1"}]},{"name":"FaceDetectorLandmarks","kind":8,"kindString":"Enumeration","children":[{"name":"all","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"none","kind":16,"kindString":"Enumeration member","defaultValue":"1"}]},{"name":"FaceDetectorMode","kind":8,"kindString":"Enumeration","children":[{"name":"accurate","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"fast","kind":16,"kindString":"Enumeration member","defaultValue":"1"}]},{"name":"DetectionOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"In order to configure detector\'s behavior modules pass a settings object which is then\\ninterpreted by this module."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"detectLandmarks","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to detect and return landmarks positions on the face (ears, eyes, mouth, cheeks, nose).\\nUse `FaceDetector.FaceDetectorLandmarks.{all, none}`."},"type":{"type":"reference","name":"FaceDetectorLandmarks"}},{"name":"minDetectionInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Minimal interval in milliseconds between two face detection events being submitted to JS.\\nUse, when you expect lots of faces for long time and are afraid of JS Bridge being overloaded.","tags":[{"tag":"default","text":"0\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"mode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to detect faces in fast or accurate mode. Use `FaceDetector.FaceDetectorMode.{fast, accurate}`."},"type":{"type":"reference","name":"FaceDetectorMode"}},{"name":"runClassifications","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to run additional classifications on detected faces (smiling probability, open eye\\nprobabilities). Use `FaceDetector.FaceDetectorClassifications.{all, none}`."},"type":{"type":"reference","name":"FaceDetectorClassifications"}},{"name":"tracking","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Flag to enable tracking of faces between frames. If true, each face will be returned with\\n`faceID` attribute which should be consistent across frames.","tags":[{"tag":"default","text":"false\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"DetectionResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"faces","kind":1024,"kindString":"Property","comment":{"shortText":"Array of faces objects."},"type":{"type":"array","elementType":{"type":"reference","name":"FaceFeature"}}},{"name":"image","kind":1024,"kindString":"Property","type":{"type":"reference","name":"Image"}}]}}},{"name":"FaceFeature","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"bottomMouthPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the bottom edge of the mouth in image coordinates. Returned only if detection\\nclassifications property is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"bounds","kind":1024,"kindString":"Property","comment":{"shortText":"An object containing face bounds."},"type":{"type":"reference","name":"FaceFeatureBounds"}},{"name":"faceID","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A face identifier (used for tracking, if the same face appears on consecutive frames it will\\nhave the same `faceID`)."},"type":{"type":"intrinsic","name":"number"}},{"name":"leftCheekPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the left cheek in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"leftEarPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the left ear in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"leftEyeOpenProbability","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Probability that the left eye is open. Returned only if detection classifications property is\\nset to `FaceDetectorClassifications.all`."},"type":{"type":"intrinsic","name":"number"}},{"name":"leftEyePosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the left eye in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"leftMouthPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the left edge of the mouth in image coordinates. Returned only if detection\\nclassifications property is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"mouthPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the center of the mouth in image coordinates. Returned only if detection\\nclassifications property is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"noseBasePosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the nose base in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"rightCheekPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the right cheek in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"rightEarPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the right ear in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"rightEyeOpenProbability","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Probability that the right eye is open. Returned only if detection classifications property is\\nset to `FaceDetectorClassifications.all`."},"type":{"type":"intrinsic","name":"number"}},{"name":"rightEyePosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the right eye in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"rightMouthPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the right edge of the mouth in image coordinates. Returned only if detection\\nclassifications property is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"rollAngle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Roll angle of the face (bank)."},"type":{"type":"intrinsic","name":"number"}},{"name":"smilingProbability","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Probability that the face is smiling. Returned only if detection classifications property is\\nset to `FaceDetectorClassifications.all`."},"type":{"type":"intrinsic","name":"number"}},{"name":"yawAngle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Yaw angle of the face (heading, turning head left or right)."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"FaceFeatureBounds","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"origin","kind":1024,"kindString":"Property","comment":{"shortText":"Position of the top left corner of a square containing the face in image coordinates,"},"type":{"type":"reference","name":"Point"}},{"name":"size","kind":1024,"kindString":"Property","comment":{"shortText":"Size of the square containing the face in image coordinates,"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}}]}}},{"name":"Image","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"Height of the image in pixels."},"type":{"type":"intrinsic","name":"number"}},{"name":"orientation","kind":1024,"kindString":"Property","comment":{"shortText":"Orientation of the image (value conforms to the EXIF orientation tag standard)."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"URI of the image."},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"Width of the image in pixels."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"Point","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"x","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"y","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}},{"name":"detectFacesAsync","kind":64,"kindString":"Function","signatures":[{"name":"detectFacesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Detect faces on a picture.","returns":"Returns a Promise which fulfils with [`DetectionResult`](#detectionresult) object.\\n"},"parameters":[{"name":"uri","kind":32768,"kindString":"Parameter","comment":{"shortText":"`file://` URI to the image."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of detection options."},"type":{"type":"reference","name":"DetectionOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DetectionResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},Z0IX:function(e,w,n){"use strict";var c=n("EIjK");function p(d,a){var m=parseInt(d,a);return m<9||m===11||m>13&&m<32||m>126&&m<160||m>55295&&m<57344||m>64975&&m<65008||(m&65535)===65535||(m&65535)===65534||m>1114111?"\uFFFD":c(m)}e.exports=p},Z9Vk:function(e){e.exports=JSON.parse('{"name":"expo-keep-awake","kind":1,"kindString":"Project","originalName":"","children":[{"name":"activateKeepAwake","kind":64,"kindString":"Function","signatures":[{"name":"activateKeepAwake","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prevents the screen from sleeping until `deactivateKeepAwake` is called with the same `tag` value.","text":"If the `tag` argument is specified, the screen will not sleep until you call `deactivateKeepAwake`\\nwith the same `tag` argument. When using multiple `tags` for activation you\'ll have to deactivate\\neach one in order to re-enable screen sleep. If tag is unspecified, the default `tag` is used."},"parameters":[{"name":"tag","kind":32768,"kindString":"Parameter","comment":{"shortText":"*Optional* - Tag to lock screen sleep prevention. If not provided, the default tag is used.\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoKeepAwakeTag"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"deactivateKeepAwake","kind":64,"kindString":"Function","signatures":[{"name":"deactivateKeepAwake","kind":4096,"kindString":"Call signature","comment":{"shortText":"Releases the lock on screen-sleep prevention associated with the given `tag` value. If `tag`\\nis unspecified, it defaults to the same default tag that `activateKeepAwake` uses."},"parameters":[{"name":"tag","kind":32768,"kindString":"Parameter","comment":{"shortText":"*Optional* - Tag to release the lock on screen sleep prevention. If not provided,\\nthe default tag is used.\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoKeepAwakeTag"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"useKeepAwake","kind":64,"kindString":"Function","signatures":[{"name":"useKeepAwake","kind":4096,"kindString":"Call signature","comment":{"shortText":"A React hook to keep the screen awake for as long as the owner component is mounted.\\nThe optionally provided `tag` argument is used when activating and deactivating the keep-awake\\nfeature. If unspecified, the default `tag` is used. See the documentation for `activateKeepAwake`\\nbelow to learn more about the `tag` argument."},"parameters":[{"name":"tag","kind":32768,"kindString":"Parameter","comment":{"shortText":"*Optional*\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoKeepAwakeTag"}],"type":{"type":"intrinsic","name":"void"}}]}]}')},"ZEx/":function(e,w,n){"use strict";var c=n("Gdbo"),p=n("BEtg"),d=n("6dBs"),a=n("NkL+"),m=n("xkQk"),r=n("Esvb");e.exports=g().freeze();var s=[].slice,i={}.hasOwnProperty,o=m().use(t).use(l).use(k);function t(u,C){C.tree=u.parse(C.file)}function l(u,C,R){u.run(C.tree,C.file,F);function F(j,I,W){j?R(j):(C.tree=I,C.file=W,R())}}function k(u,C){var R=u.stringify(C.tree,C.file);R==null||(typeof R=="string"||p(R)?("value"in C.file&&(C.file.value=R),C.file.contents=R):C.file.result=R)}function g(){var u=[],C=m(),R={},F=-1,j;return I.data=L,I.freeze=W,I.attachers=u,I.use=K,I.parse=ee,I.stringify=$,I.run=V,I.runSync=X,I.process=re,I.processSync=ne,I;function I(){for(var B=g(),N=-1;++N<u.length;)B.use.apply(null,u[N]);return B.data(d(!0,{},R)),B}function W(){var B,N;if(j)return I;for(;++F<u.length;)B=u[F],B[1]!==!1&&(B[1]===!0&&(B[1]=void 0),N=B[0].apply(I,B.slice(1)),typeof N=="function"&&C.use(N));return j=!0,F=1/0,I}function L(B,N){return typeof B=="string"?arguments.length===2?(P("data",j),R[B]=N,I):i.call(R,B)&&R[B]||null:B?(P("data",j),R=B,I):R}function K(B){var N;if(P("use",j),B!=null)if(typeof B=="function")oe.apply(null,arguments);else if(typeof B=="object")"length"in B?E(B):z(B);else throw new Error("Expected usable value, not `"+B+"`");return N&&(R.settings=d(R.settings||{},N)),I;function z(J){E(J.plugins),J.settings&&(N=d(N||{},J.settings))}function H(J){if(typeof J=="function")oe(J);else if(typeof J=="object")"length"in J?oe.apply(null,J):z(J);else throw new Error("Expected usable value, not `"+J+"`")}function E(J){var Y=-1;if(J!=null)if(typeof J=="object"&&"length"in J)for(;++Y<J.length;)H(J[Y]);else throw new Error("Expected a list of plugins, not `"+J+"`")}function oe(J,Y){var ae=D(J);ae?(a(ae[1])&&a(Y)&&(Y=d(!0,ae[1],Y)),ae[1]=Y):u.push(s.call(arguments))}}function D(B){for(var N=-1;++N<u.length;)if(u[N][0]===B)return u[N]}function ee(B){var N=r(B),z;return W(),z=I.Parser,S("parse",z),h(z,"parse")?new z(String(N),N).parse():z(String(N),N)}function V(B,N,z){if(y(B),W(),!z&&typeof N=="function"&&(z=N,N=null),!z)return new Promise(H);H(null,z);function H(E,oe){C.run(B,r(N),J);function J(Y,ae,T){ae=ae||B,Y?oe(Y):E?E(ae):z(null,ae,T)}}}function X(B,N){var z,H;return V(B,N,E),v("runSync","run",H),z;function E(oe,J){H=!0,z=J,c(oe)}}function $(B,N){var z=r(N),H;return W(),H=I.Compiler,b("stringify",H),y(B),h(H,"compile")?new H(B,z).compile():H(B,z)}function re(B,N){if(W(),S("process",I.Parser),b("process",I.Compiler),!N)return new Promise(z);z(null,N);function z(H,E){var oe=r(B);o.run(I,{file:oe},J);function J(Y){Y?E(Y):H?H(oe):N(null,oe)}}}function ne(B){var N,z;return W(),S("processSync",I.Parser),b("processSync",I.Compiler),N=r(B),re(N,H),v("processSync","process",z),N;function H(E){z=!0,c(E)}}}function h(u,C){return typeof u=="function"&&u.prototype&&(f(u.prototype)||C in u.prototype)}function f(u){var C;for(C in u)return!0;return!1}function S(u,C){if(typeof C!="function")throw new Error("Cannot `"+u+"` without `Parser`")}function b(u,C){if(typeof C!="function")throw new Error("Cannot `"+u+"` without `Compiler`")}function P(u,C){if(C)throw new Error("Cannot invoke `"+u+"` on a frozen processor.\nCreate a new processor first, by invoking it: use `processor()` instead of `processor`.")}function y(u){if(!u||typeof u.type!="string")throw new Error("Expected node, got `"+u+"`")}function v(u,C,R){if(!R)throw new Error("`"+u+"` finished async. Use `"+C+"` instead")}},ZIlA:function(e){e.exports=JSON.parse('{"name":"expo-checkbox","kind":1,"kindString":"Project","originalName":"","children":[{"name":"default","kind":4,"kindString":"Namespace","children":[{"name":"displayName","kind":32,"kindString":"Variable","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Promise"}}]}]},{"name":"CheckboxComponent","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"CheckboxProps"}],"name":"React.FC"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isAvailableAsync","kind":2048,"kindString":"Method","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}}]}},{"name":"CheckboxEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"target","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"value","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}}]}}],"name":"NativeSyntheticEvent"}},{"name":"CheckboxProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"color","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The tint or color of the checkbox. This overrides the disabled opaque style."},"type":{"type":"reference","name":"ColorValue"}},{"name":"disabled","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the checkbox is disabled, it becomes opaque and uncheckable."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"value","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Value indicating if the checkbox should be rendered as checked or not. Default value is `false`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"onChange","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onChange","kind":4096,"kindString":"Call signature","comment":{"shortText":"Callback that is invoked when the user presses the checkbox."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","comment":{"shortText":"A native event containing the checkbox change.\\n"},"type":{"type":"reference","name":"CheckboxEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onValueChange","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onValueChange","kind":4096,"kindString":"Call signature","comment":{"shortText":"Callback that is invoked when the user presses the checkbox."},"parameters":[{"name":"value","kind":32768,"kindString":"Parameter","comment":{"shortText":"A boolean indicating the new checked state of the checkbox.\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]}]}}]}},{"name":"default","kind":32,"kindString":"Variable","type":{"type":"reference","name":"CheckboxComponent"},"defaultValue":"..."}]}')},ZQy8:function(e,w,n){"use strict";e.exports={blockquote:n("yuB8"),break:n("Tl76"),code:n("pDO9"),delete:n("I6iC"),emphasis:n("j65y"),footnoteReference:n("S872"),footnote:n("994R"),heading:n("F5xr"),html:n("CCaE"),imageReference:n("POxs"),image:n("2AxE"),inlineCode:n("wBw1"),linkReference:n("VEy4"),link:n("Yq9d"),listItem:n("gNlx"),list:n("X0Jp"),paragraph:n("TfMZ"),root:n("GyoX"),strong:n("e1Am"),table:n("L2QL"),text:n("gseP"),thematicBreak:n("uxQZ"),toml:c,yaml:c,definition:c,footnoteDefinition:c};function c(){return null}},a55V:function(e){e.exports=JSON.parse('{"name":"expo-updates","kind":1,"kindString":"Project","originalName":"","children":[{"name":"UpdateEventType","kind":8,"kindString":"Enumeration","comment":{"shortText":"The types of update-related events."},"children":[{"name":"ERROR","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An error occurred trying to fetch the latest update."},"defaultValue":"\\"error\\""},{"name":"NO_UPDATE_AVAILABLE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"No updates are available, and the most up-to-date update is already running."},"defaultValue":"\\"noUpdateAvailable\\""},{"name":"UPDATE_AVAILABLE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A new update has finished downloading to local storage. If you would like to start using this\\nupdate at any point before the user closes and restarts the app on their own, you can call\\n[`Updates.reloadAsync()`](#reloadasync) to launch this new update."},"defaultValue":"\\"updateAvailable\\""}]},{"name":"UpdateCheckResult","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The result of checking for a new update."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isAvailable","kind":1024,"kindString":"Property","comment":{"shortText":"`true` if an update is available, `false` if the app is already running the latest available\\nupdate."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"manifest","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `isAvailable` is `true`, the manifest of the available update, and `undefined` otherwise."},"type":{"type":"reference","name":"Manifest"}}]}}},{"name":"UpdateEvent","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object that is passed into each event listener when an auto-update check occurs."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"manifest","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `type` is `Updates.UpdateEventType.UPDATE_AVAILABLE`, the manifest of the newly downloaded\\nupdate, and `undefined` otherwise."},"type":{"type":"reference","name":"Manifest"}},{"name":"message","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `type` is `Updates.UpdateEventType.ERROR`, the error message, and `undefined` otherwise."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the event."},"type":{"type":"reference","name":"UpdateEventType"}}]}}},{"name":"UpdateFetchResult","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The result of fetching a new update."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isNew","kind":1024,"kindString":"Property","comment":{"shortText":"`true` if the fetched bundle is new (that is, a different version than what\'s currently\\nrunning), `false` otherwise."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"manifest","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `isNew` is `true`, the manifest of the newly downloaded update, and `undefined` otherwise."},"type":{"type":"reference","name":"Manifest"}}]}}},{"name":"isEmergencyLaunch","kind":32,"kindString":"Variable","comment":{"shortText":"`expo-updates` does its very best to always launch monotonically newer versions of your app so\\nyou don\'t need to worry about backwards compatibility when you put out an update. In very rare\\ncases, it\'s possible that `expo-updates` may need to fall back to the update that\'s embedded in\\nthe app binary, even after newer updates have been downloaded and run (an \\"emergency launch\\").\\nThis boolean will be `true` if the app is launching under this fallback mechanism and `false`\\notherwise. If you are concerned about backwards compatibility of future updates to your app, you\\ncan use this constant to provide special behavior for this rare case."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"..."},{"name":"manifest","kind":32,"kindString":"Variable","comment":{"shortText":"If `expo-updates` is enabled, this is the\\n[manifest](/guides/how-expo-works#expo-development-server) object for the update that\'s currently\\nrunning.","text":"In development mode, or any other environment in which `expo-updates` is disabled, this object is\\nempty.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Manifest"}],"name":"Partial"},"defaultValue":"..."},{"name":"releaseChannel","kind":32,"kindString":"Variable","comment":{"shortText":"The name of the release channel currently configured in this standalone or bare app when using\\nclassic updates. When using Expo Updates, the value of this field is always `\\"default\\"`."},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"updateId","kind":32,"kindString":"Variable","comment":{"shortText":"The UUID that uniquely identifies the currently running update if `expo-updates` is enabled. The\\nUUID is represented in its canonical string form (`xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx`) and\\nwill always use lowercase letters. In development mode, or any other environment in which\\n`expo-updates` is disabled, this value is `null`."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"addListener","kind":64,"kindString":"Function","signatures":[{"name":"addListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Adds a callback to be invoked when updates-related events occur (such as upon the initial app\\nload) due to auto-update settings chosen at build-time.","returns":"An `EventSubscription` object on which you can call `remove()` to unsubscribe the\\nlistener.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"A function that will be invoked with an [`UpdateEvent`](#updateevent) instance\\nand should not return any value."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"UpdateEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"EventSubscription"}}]},{"name":"checkForUpdateAsync","kind":64,"kindString":"Function","signatures":[{"name":"checkForUpdateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks the server to see if a newly deployed update to your project is available. Does not\\nactually download the update. This method cannot be used in development mode, and the returned\\npromise will be rejected if you try to do so.","returns":"A promise that fulfills with an [`UpdateCheckResult`](#updatecheckresult) object.\\n\\nThe promise rejects if the app is in development mode, or if there is an unexpected error or\\ntimeout communicating with the server.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"UpdateCheckResult"}],"name":"Promise"}}]},{"name":"fetchUpdateAsync","kind":64,"kindString":"Function","signatures":[{"name":"fetchUpdateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Downloads the most recently deployed update to your project from server to the device\'s local\\nstorage. This method cannot be used in development mode, and the returned promise will be\\nrejected if you try to do so.","returns":"A promise that fulfills with an [`UpdateFetchResult`](#updatefetchresult) object.\\n\\nThe promise rejects if the app is in development mode, or if there is an unexpected error or\\ntimeout communicating with the server.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"UpdateFetchResult"}],"name":"Promise"}}]},{"name":"reloadAsync","kind":64,"kindString":"Function","signatures":[{"name":"reloadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Instructs the app to reload using the most recently downloaded version. This is useful for\\ntriggering a newly downloaded update to launch without the user needing to manually restart the\\napp.","text":"It is not recommended to place any meaningful logic after a call to `await\\nUpdates.reloadAsync()`. This is because the promise is resolved after verifying that the app can\\nbe reloaded, and immediately before posting an asynchronous task to the main thread to actually\\nreload the app. It is unsafe to make any assumptions about whether any more JS code will be\\nexecuted after the `Updates.reloadAsync` method call resolves, since that depends on the OS and\\nthe state of the native module and main threads.\\n\\nThis method cannot be used in development mode, and the returned promise will be rejected if you\\ntry to do so.\\n","returns":"A promise that fulfills right before the reload instruction is sent to the JS runtime, or\\nrejects if it cannot find a reference to the JS runtime. If the promise is rejected in production\\nmode, it most likely means you have installed the module incorrectly. Double check you\'ve\\nfollowed the installation instructions. In particular, on iOS ensure that you set the `bridge`\\nproperty on `EXUpdatesAppController` with a pointer to the `RCTBridge` you want to reload, and on\\nAndroid ensure you either call `UpdatesController.initialize` with the instance of\\n`ReactApplication` you want to reload, or call `UpdatesController.setReactNativeHost` with the\\nproper instance of `ReactNativeHost`.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},aBQg:function(e){e.exports=JSON.parse('{"name":"expo-cellular","kind":1,"kindString":"Project","originalName":"","children":[{"name":"CellularGeneration","kind":8,"kindString":"Enumeration","comment":{"shortText":"Describes the current generation of the cellular connection. It is an enum with these possible\\nvalues:"},"children":[{"name":"CELLULAR_2G","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Currently connected to a 2G cellular network. Includes CDMA, EDGE, GPRS, and IDEN type connections."},"defaultValue":"1"},{"name":"CELLULAR_3G","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Currently connected to a 3G cellular network. Includes EHRPD, EVDO, HSPA, HSUPA, HSDPA, and UTMS type connections."},"defaultValue":"2"},{"name":"CELLULAR_4G","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Currently connected to a 4G cellular network. Includes HSPAP and LTE type connections."},"defaultValue":"3"},{"name":"CELLULAR_5G","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Currently connected to a 5G cellular network. Includes NR and NRNSA type connections."},"defaultValue":"4"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Either we are not currently connected to a cellular network or type could not be determined."},"defaultValue":"0"}]},{"name":"allowsVoip","kind":32,"kindString":"Variable","comment":{"shortText":"Indicates if the carrier allows making VoIP calls on its network. On Android, this checks whether\\nthe system supports SIP-based VoIP API. See [here](https://developer.android.com/reference/android/net/sip/SipManager.html#isVoipSupported(android.content.Context))\\nto view more information.","text":"On iOS, if you configure a device for a carrier and then remove the SIM card, this property\\nretains the `boolean` value indicating the carrier\u2019s policy regarding VoIP. If you then install\\na new SIM card, its VoIP policy `boolean` replaces the previous value of this property.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nCellular.allowsVoip; // true or false\\n```"},{"tag":"deprecated","text":"Deprecated field, use [`allowsVoipAsync()`](#allowsvoipasync) instead.\\n\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"carrier","kind":32,"kindString":"Variable","comment":{"shortText":"The name of the user\u2019s home cellular service provider. If the device has dual SIM cards, only the\\ncarrier for the currently active SIM card will be returned. On Android, this value is only\\navailable when the SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY).\\nOtherwise, this returns `null`.","text":"On iOS, if you configure a device for a carrier and then remove the SIM card, this property\\nretains the name of the carrier. If you then install a new SIM card, its carrier name replaces\\nthe previous value of this property. The value for this property is `null` if the user never\\nconfigured a carrier for the device.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nCellular.carrier; // \\"T-Mobile\\" or \\"Verizon\\"\\n```"},{"tag":"deprecated","text":"Deprecated field, use [`getCarrierNameAsync()`](#getcarriernameasync) instead.\\n\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"isoCountryCode","kind":32,"kindString":"Variable","comment":{"shortText":"The ISO country code for the user\u2019s cellular service provider. On iOS, the value is `null` if any\\nof the following apply:\\n- The device is in airplane mode.\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.","text":"On web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nCellular.isoCountryCode; // \\"us\\" or \\"au\\"\\n```"},{"tag":"deprecated","text":"Deprecated field, use [`getIsoCountryCodeAsync()`](#getisocountrycodeAsync) instead.\\n\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"mobileCountryCode","kind":32,"kindString":"Variable","comment":{"shortText":"The mobile country code (MCC) for the user\u2019s current registered cellular service provider.\\nOn Android, this value is only available when SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY). Otherwise, this\\nreturns `null`. On iOS, the value may be null on hardware prior to iPhone 4S when in airplane mode.\\nFurthermore, the value for this property is `null` if any of the following apply:\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.","text":"On web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nCellular.mobileCountryCode; // \\"310\\"\\n```"},{"tag":"deprecated","text":"Deprecated field, use [`getMobileCountryCodeAsync()`](#getmobilecountrycodeasync) instead.\\n\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"mobileNetworkCode","kind":32,"kindString":"Variable","comment":{"shortText":"The ISO country code for the user\u2019s cellular service provider. On iOS, the value is `null` if\\nany of the following apply:\\n- The device is in airplane mode.\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.","text":"On web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nCellular.mobileNetworkCode; // \\"260\\"\\n```"},{"tag":"deprecated","text":"Deprecated field, use [`getMobileNetworkCodeAsync()`](#getmobilenetworkcodeasync) instead.\\n\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"allowsVoipAsync","kind":64,"kindString":"Function","signatures":[{"name":"allowsVoipAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns if the carrier allows making VoIP calls on its network. On Android, this checks whether\\nthe system supports SIP-based VoIP API. See [here](https://developer.android.com/reference/android/net/sip/SipManager.html#isVoipSupported(android.content.Context))\\nto view more information.\\n\\nOn iOS, if you configure a device for a carrier and then remove the SIM card, this property\\nretains the `boolean` value indicating the carrier\u2019s policy regarding VoIP. If you then install\\na new SIM card, its VoIP policy `boolean` replaces the previous value of this property.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.allowsVoipAsync(); // true or false\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getCarrierNameAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCarrierNameAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns name of the user\u2019s home cellular service provider. If the device has dual SIM cards, only the\\ncarrier for the currently active SIM card will be returned.\\n\\nOn Android, this value is only available when the SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY).\\nOtherwise, this returns `null`.\\n\\nOn iOS, if you configure a device for a carrier and then remove the SIM card, this property\\nretains the name of the carrier. If you then install a new SIM card, its carrier name replaces\\nthe previous value of this property. The value for this property is `null` if the user never\\nconfigured a carrier for the device.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.getCarrierNameAsync(); // \\"T-Mobile\\" or \\"Verizon\\"\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getCellularGenerationAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCellularGenerationAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns a promise which fulfils with a [`Cellular.CellularGeneration`](#cellulargeneration)\\nenum value that represents the current cellular-generation type.\\n\\nOn web, this method uses [`navigator.connection.effectiveType`](https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/effectiveType)\\nto detect the effective type of the connection using a combination of recently observed\\nround-trip time and downlink values. See [here](https://developer.mozilla.org/en-US/docs/Web/API/Network_Information_API)\\nto view browser compatibility.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.getCellularGenerationAsync();\\n// CellularGeneration.CELLULAR_4G\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CellularGeneration"}],"name":"Promise"}}]},{"name":"getIsoCountryCodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIsoCountryCodeAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns the ISO country code for the user\u2019s cellular service provider.\\n\\nOn iOS, the value is `null` if any of the following apply:\\n- The device is in airplane mode.\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.getIsoCountryCodeAsync(); // \\"us\\" or \\"au\\"\\n```\\n\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getMobileCountryCodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMobileCountryCodeAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns mobile country code (MCC) for the user\u2019s current registered cellular service provider.\\n\\nOn Android, this value is only available when SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY). Otherwise, this\\nreturns `null`. On iOS, the value may be null on hardware prior to iPhone 4S when in airplane mode.\\nFurthermore, the value for this property is `null` if any of the following apply:\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.getMobileCountryCodeAsync(); // \\"310\\"\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getMobileNetworkCodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMobileNetworkCodeAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns the mobile network code (MNC) for the user\u2019s current registered cellular service provider.\\n\\nOn Android, this value is only available when SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY). Otherwise, this\\nreturns `null`. On iOS, the value may be null on hardware prior to iPhone 4S when in airplane mode.\\nFurthermore, the value for this property is `null` if any of the following apply:\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.getMobileNetworkCodeAsync(); // \\"310\\"\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]}]}')},aTeO:function(e){e.exports=JSON.parse('{"name":"expo-task-manager","kind":1,"kindString":"Project","originalName":"","children":[{"name":"TaskManagerError","kind":256,"kindString":"Interface","comment":{"shortText":"Error object that can be received through [`TaskManagerTaskBody`](#taskmanagertaskbody) when the\\ntask fails."},"children":[{"name":"code","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}},{"name":"message","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]},{"name":"TaskManagerTask","kind":256,"kindString":"Interface","comment":{"shortText":"Represents an already registered task."},"children":[{"name":"options","kind":1024,"kindString":"Property","comment":{"shortText":"Provides `options` that the task was registered with."},"type":{"type":"intrinsic","name":"any"}},{"name":"taskName","kind":1024,"kindString":"Property","comment":{"shortText":"Name that the task is registered with."},"type":{"type":"intrinsic","name":"string"}},{"name":"taskType","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the task which depends on how the task was registered."},"type":{"type":"intrinsic","name":"string"}}]},{"name":"TaskManagerTaskBody","kind":256,"kindString":"Interface","comment":{"shortText":"Represents the object that is passed to the task executor."},"children":[{"name":"data","kind":1024,"kindString":"Property","comment":{"shortText":"An object of data passed to the task executor. Its properties depends on the type of the task."},"type":{"type":"reference","name":"T"}},{"name":"error","kind":1024,"kindString":"Property","comment":{"shortText":"Error object if the task failed or `null` otherwise."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"TaskManagerError"}]}},{"name":"executionInfo","kind":1024,"kindString":"Property","comment":{"shortText":"Additional details containing unique ID of task event and name of the task."},"type":{"type":"reference","name":"TaskManagerTaskBodyExecutionInfo"}}],"typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter","default":{"type":"intrinsic","name":"object"}}]},{"name":"TaskManagerTaskBodyExecutionInfo","kind":256,"kindString":"Interface","comment":{"shortText":"Additional details about execution provided in `TaskManagerTaskBody`."},"children":[{"name":"appState","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(iOS only)__ State of the application."},"type":{"type":"union","types":[{"type":"literal","value":"active"},{"type":"literal","value":"background"},{"type":"literal","value":"inactive"}]}},{"name":"eventId","kind":1024,"kindString":"Property","comment":{"shortText":"Unique ID of task event."},"type":{"type":"intrinsic","name":"string"}},{"name":"taskName","kind":1024,"kindString":"Property","comment":{"shortText":"Name of the task."},"type":{"type":"intrinsic","name":"string"}}]},{"name":"TaskManagerTaskExecutor","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Type of task executor \u2013 a function that handles the task."},"parameters":[{"name":"body","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"TaskManagerTaskBody"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"defineTask","kind":64,"kindString":"Function","signatures":[{"name":"defineTask","kind":4096,"kindString":"Call signature","comment":{"shortText":"Defines task function. It must be called in the global scope of your JavaScript bundle.\\nIn particular, it cannot be called in any of React lifecycle methods like `componentDidMount`.\\nThis limitation is due to the fact that when the application is launched in the background,\\nwe need to spin up your JavaScript app, run your task and then shut down \u2014 no views are mounted\\nin this scenario."},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task. It must be the same as the name you provided when registering the task."},"type":{"type":"intrinsic","name":"string"}},{"name":"taskExecutor","kind":32768,"kindString":"Parameter","comment":{"shortText":"A function that will be invoked when the task with given `taskName` is executed.\\n"},"type":{"type":"reference","name":"TaskManagerTaskExecutor"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"getRegisteredTasksAsync","kind":64,"kindString":"Function","signatures":[{"name":"getRegisteredTasksAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Provides information about tasks registered in the app.","returns":"A promise which fulfills with an array of tasks registered in the app. Example:\\n```json\\n[\\n  {\\n    taskName: \'location-updates-task-name\',\\n    taskType: \'location\',\\n    options: {\\n      accuracy: Location.Accuracy.High,\\n      showsBackgroundLocationIndicator: false,\\n    },\\n  },\\n  {\\n    taskName: \'geofencing-task-name\',\\n    taskType: \'geofencing\',\\n    options: {\\n      regions: [...],\\n    },\\n  },\\n]\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"TaskManagerTask"}}],"name":"Promise"}}]},{"name":"getTaskOptionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getTaskOptionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Retrieves `options` associated with the task, that were passed to the function registering the task\\n(eg. `Location.startLocationUpdatesAsync`).","returns":"A promise which fulfills with the `options` object that was passed while registering task\\nwith given name or `null` if task couldn\'t be found.\\n"},"typeParameter":[{"name":"TaskOptions","kind":131072,"kindString":"Type parameter"}],"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TaskOptions"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine if the `TaskManager` API can be used in this app.","returns":"A promise fulfills with `true` if the API can be used, and `false` otherwise.\\nOn the web it always returns `false`.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isTaskDefined","kind":64,"kindString":"Function","signatures":[{"name":"isTaskDefined","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks whether the task is already defined."},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"isTaskRegisteredAsync","kind":64,"kindString":"Function","signatures":[{"name":"isTaskRegisteredAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine whether the task is registered. Registered tasks are stored in a persistent storage and\\npreserved between sessions.","returns":"A promise which fulfills with a `boolean` value whether or not the task with given name\\nis already registered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"unregisterAllTasksAsync","kind":64,"kindString":"Function","signatures":[{"name":"unregisterAllTasksAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unregisters all tasks registered for the running app. You may want to call this when the user is\\nsigning out and you no longer need to track his location or run any other background tasks.","returns":"A promise which fulfills as soon as all tasks are completely unregistered.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"unregisterTaskAsync","kind":64,"kindString":"Function","signatures":[{"name":"unregisterTaskAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unregisters task from the app, so the app will not be receiving updates for that task anymore.\\n_It is recommended to use methods specialized by modules that registered the task, eg.\\n[`Location.stopLocationUpdatesAsync`](./location/#expolocationstoplocationupdatesasynctaskname)._","returns":"A promise which fulfills as soon as the task is unregistered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task to unregister."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},aYgM:function(e){e.exports=JSON.parse('{"name":"expo-face-detector","kind":1,"kindString":"Project","originalName":"","children":[{"name":"FaceDetectorClassifications","kind":8,"kindString":"Enumeration","children":[{"name":"all","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"none","kind":16,"kindString":"Enumeration member","defaultValue":"2"}]},{"name":"FaceDetectorLandmarks","kind":8,"kindString":"Enumeration","children":[{"name":"all","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"none","kind":16,"kindString":"Enumeration member","defaultValue":"2"}]},{"name":"FaceDetectorMode","kind":8,"kindString":"Enumeration","children":[{"name":"accurate","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"fast","kind":16,"kindString":"Enumeration member","defaultValue":"1"}]},{"name":"DetectionOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"In order to configure detector\'s behavior modules pass a settings object which is then\\ninterpreted by this module."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"detectLandmarks","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to detect and return landmarks positions on the face (ears, eyes, mouth, cheeks, nose).\\nUse `FaceDetector.FaceDetectorLandmarks.{all, none}`."},"type":{"type":"reference","name":"FaceDetectorLandmarks"}},{"name":"minDetectionInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Minimal interval in milliseconds between two face detection events being submitted to JS.\\nUse, when you expect lots of faces for long time and are afraid of JS Bridge being overloaded.","tags":[{"tag":"default","text":"`0`\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"mode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to detect faces in fast or accurate mode. Use `FaceDetector.FaceDetectorMode.{fast, accurate}`."},"type":{"type":"reference","name":"FaceDetectorMode"}},{"name":"runClassifications","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to run additional classifications on detected faces (smiling probability, open eye\\nprobabilities). Use `FaceDetector.FaceDetectorClassifications.{all, none}`."},"type":{"type":"reference","name":"FaceDetectorClassifications"}},{"name":"tracking","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Flag to enable tracking of faces between frames. If true, each face will be returned with\\n`faceID` attribute which should be consistent across frames.","tags":[{"tag":"default","text":"`false`\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"DetectionResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"faces","kind":1024,"kindString":"Property","comment":{"shortText":"Array of faces objects."},"type":{"type":"array","elementType":{"type":"reference","name":"FaceFeature"}}},{"name":"image","kind":1024,"kindString":"Property","type":{"type":"reference","name":"Image"}}]}}},{"name":"FaceFeature","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"bottomMouthPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the bottom edge of the mouth in image coordinates. Returned only if detection\\nclassifications property is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"bounds","kind":1024,"kindString":"Property","comment":{"shortText":"An object containing face bounds."},"type":{"type":"reference","name":"FaceFeatureBounds"}},{"name":"faceID","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A face identifier (used for tracking, if the same face appears on consecutive frames it will\\nhave the same `faceID`)."},"type":{"type":"intrinsic","name":"number"}},{"name":"leftCheekPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the left cheek in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"leftEarPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the left ear in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"leftEyeOpenProbability","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Probability that the left eye is open. Returned only if detection classifications property is\\nset to `FaceDetectorClassifications.all`."},"type":{"type":"intrinsic","name":"number"}},{"name":"leftEyePosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the left eye in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"leftMouthPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the left edge of the mouth in image coordinates. Returned only if detection\\nclassifications property is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"mouthPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the center of the mouth in image coordinates. Returned only if detection\\nclassifications property is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"noseBasePosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the nose base in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"rightCheekPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the right cheek in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"rightEarPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the right ear in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"rightEyeOpenProbability","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Probability that the right eye is open. Returned only if detection classifications property is\\nset to `FaceDetectorClassifications.all`."},"type":{"type":"intrinsic","name":"number"}},{"name":"rightEyePosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the right eye in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"rightMouthPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the right edge of the mouth in image coordinates. Returned only if detection\\nclassifications property is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"rollAngle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Roll angle of the face (bank)."},"type":{"type":"intrinsic","name":"number"}},{"name":"smilingProbability","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Probability that the face is smiling. Returned only if detection classifications property is\\nset to `FaceDetectorClassifications.all`."},"type":{"type":"intrinsic","name":"number"}},{"name":"yawAngle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Yaw angle of the face (heading, turning head left or right)."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"FaceFeatureBounds","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"origin","kind":1024,"kindString":"Property","comment":{"shortText":"Position of the top left corner of a square containing the face in image coordinates,"},"type":{"type":"reference","name":"Point"}},{"name":"size","kind":1024,"kindString":"Property","comment":{"shortText":"Size of the square containing the face in image coordinates,"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}}]}}},{"name":"Image","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"Height of the image in pixels."},"type":{"type":"intrinsic","name":"number"}},{"name":"orientation","kind":1024,"kindString":"Property","comment":{"shortText":"Orientation of the image (value conforms to the EXIF orientation tag standard)."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"URI of the image."},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"Width of the image in pixels."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"Point","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"x","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"y","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}},{"name":"detectFacesAsync","kind":64,"kindString":"Function","signatures":[{"name":"detectFacesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Detect faces on a picture.","returns":"Returns a Promise which fulfils with [`DetectionResult`](#detectionresult) object.\\n"},"parameters":[{"name":"uri","kind":32768,"kindString":"Parameter","comment":{"shortText":"`file://` URI to the image."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of detection options."},"type":{"type":"reference","name":"DetectionOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DetectionResult"}],"name":"Promise"}}]}]}')},abZZ:function(e,w,n){"use strict";var c="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";e.exports=c},aoAd:function(e){e.exports=JSON.parse('{"name":"expo-cellular","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"CellularGeneration","kind":4,"kindString":"Enumeration","flags":{},"comment":{"shortText":"Describes the current generation of the cellular connection. It is an enum with these possible\\nvalues:"},"children":[{"name":"CELLULAR_2G","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Currently connected to a 2G cellular network. Includes CDMA, EDGE, GPRS, and IDEN type connections."},"defaultValue":"1"},{"name":"CELLULAR_3G","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Currently connected to a 3G cellular network. Includes EHRPD, EVDO, HSPA, HSUPA, HSDPA, and UTMS type connections."},"defaultValue":"2"},{"name":"CELLULAR_4G","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Currently connected to a 4G cellular network. Includes HSPAP and LTE type connections."},"defaultValue":"3"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","flags":{},"comment":{"shortText":"Either we are not currently connected to a cellular network or type could not be determined."},"defaultValue":"0"}]},{"name":"allowsVoip","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Indicates if the carrier allows making VoIP calls on its network. On Android, this checks whether\\nthe system supports SIP-based VoIP API. See [here](https://developer.android.com/reference/android/net/sip/SipManager.html#isVoipSupported(android.content.Context))\\nto view more information.","text":"On iOS, if you configure a device for a carrier and then remove the SIM card, this property\\nretains the `boolean` value indicating the carrier\u2019s policy regarding VoIP. If you then install\\na new SIM card, its VoIP policy `boolean` replaces the previous value of this property.\\n\\nOn web, this returns `null`.\\n\\n# Examples\\n```ts\\nCellular.allowsVoip; // true or false\\n```\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"carrier","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The name of the user\u2019s home cellular service provider. If the device has dual SIM cards, only the\\ncarrier for the currently active SIM card will be returned. On Android, this value is only\\navailable when the SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY).\\nOtherwise, this returns `null`.","text":"On iOS, if you configure a device for a carrier and then remove the SIM card, this property\\nretains the name of the carrier. If you then install a new SIM card, its carrier name replaces\\nthe previous value of this property. The value for this property is `null` if the user never\\nconfigured a carrier for the device.\\n\\nOn web, this returns `null`.\\n\\n# Examples\\n```ts\\nCellular.carrier; // \\"T-Mobile\\" or \\"Verizon\\"\\n```\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"isoCountryCode","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The ISO country code for the user\u2019s cellular service provider. On iOS, the value is `null` if any\\nof the following apply:\\n- The device is in airplane mode.\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.","text":"On web, this returns `null`.\\n\\n# Examples\\n```ts\\nCellular.isoCountryCode; // \\"us\\" or \\"au\\"\\n```\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"mobileCountryCode","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The mobile country code (MCC) for the user\u2019s current registered cellular service provider.\\nOn Android, this value is only available when SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY). Otherwise, this\\nreturns `null`. On iOS, the value may be null on hardware prior to iPhone 4S when in airplane mode.\\nFurthermore, the value for this property is `null` if any of the following apply:\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.","text":"On web, this returns `null`.\\n\\n# Examples\\n```ts\\nCellular.mobileCountryCode; // \\"310\\"\\n```\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"mobileNetworkCode","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The ISO country code for the user\u2019s cellular service provider. On iOS, the value is `null` if\\nany of the following apply:\\n- The device is in airplane mode.\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.","text":"On web, this returns `null`.\\n\\n# Examples\\n```ts\\nCellular.mobileNetworkCode; // \\"260\\"\\n```\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"getCellularGenerationAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getCellularGenerationAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"returns":"Returns a promise which fulfils with a [`Cellular.CellularGeneration`](#cellulargeneration)\\nenum value that represents the current cellular-generation type.\\n\\nOn web, this method uses [`navigator.connection.effectiveType`](https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/effectiveType)\\nto detect the effective type of the connection using a combination of recently observed\\nround-trip time and downlink values. See [here](https://developer.mozilla.org/en-US/docs/Web/API/Network_Information_API)\\nto view browser compatibility.\\n\\n# Example\\n```ts\\nawait Cellular.getCellularGenerationAsync();\\n// CellularGeneration.CELLULAR_4G\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CellularGeneration"}],"name":"Promise"}}]}]}')},aqL2:function(e){e.exports=JSON.parse('{"name":"expo-task-manager","kind":1,"kindString":"Project","originalName":"","children":[{"name":"TaskManagerError","kind":256,"kindString":"Interface","comment":{"shortText":"Error object that can be received through [`TaskManagerTaskBody`](#taskmanagertaskbody) when the\\ntask fails."},"children":[{"name":"code","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}},{"name":"message","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]},{"name":"TaskManagerTask","kind":256,"kindString":"Interface","comment":{"shortText":"Represents an already registered task."},"children":[{"name":"options","kind":1024,"kindString":"Property","comment":{"shortText":"Provides `options` that the task was registered with."},"type":{"type":"intrinsic","name":"any"}},{"name":"taskName","kind":1024,"kindString":"Property","comment":{"shortText":"Name that the task is registered with."},"type":{"type":"intrinsic","name":"string"}},{"name":"taskType","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the task which depends on how the task was registered."},"type":{"type":"intrinsic","name":"string"}}]},{"name":"TaskManagerTaskBody","kind":256,"kindString":"Interface","comment":{"shortText":"Represents the object that is passed to the task executor."},"children":[{"name":"data","kind":1024,"kindString":"Property","comment":{"shortText":"An object of data passed to the task executor. Its properties depends on the type of the task."},"type":{"type":"reference","name":"T"}},{"name":"error","kind":1024,"kindString":"Property","comment":{"shortText":"Error object if the task failed or `null` otherwise."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"TaskManagerError"}]}},{"name":"executionInfo","kind":1024,"kindString":"Property","comment":{"shortText":"Additional details containing unique ID of task event and name of the task."},"type":{"type":"reference","name":"TaskManagerTaskBodyExecutionInfo"}}],"typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter","default":{"type":"intrinsic","name":"object"}}]},{"name":"TaskManagerTaskBodyExecutionInfo","kind":256,"kindString":"Interface","comment":{"shortText":"Additional details about execution provided in `TaskManagerTaskBody`."},"children":[{"name":"appState","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(iOS only)__ State of the application."},"type":{"type":"union","types":[{"type":"literal","value":"active"},{"type":"literal","value":"background"},{"type":"literal","value":"inactive"}]}},{"name":"eventId","kind":1024,"kindString":"Property","comment":{"shortText":"Unique ID of task event."},"type":{"type":"intrinsic","name":"string"}},{"name":"taskName","kind":1024,"kindString":"Property","comment":{"shortText":"Name of the task."},"type":{"type":"intrinsic","name":"string"}}]},{"name":"TaskManagerTaskExecutor","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","comment":{"shortText":"Type of task executor \u2013 a function that handles the task."},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Type of task executor \u2013 a function that handles the task."},"parameters":[{"name":"body","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"TaskManagerTaskBody"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"defineTask","kind":64,"kindString":"Function","signatures":[{"name":"defineTask","kind":4096,"kindString":"Call signature","comment":{"shortText":"Defines task function. It must be called in the global scope of your JavaScript bundle.\\nIn particular, it cannot be called in any of React lifecycle methods like `componentDidMount`.\\nThis limitation is due to the fact that when the application is launched in the background,\\nwe need to spin up your JavaScript app, run your task and then shut down \u2014 no views are mounted\\nin this scenario."},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"text":"Name of the task. It must be the same as the name you provided when registering the task."},"type":{"type":"intrinsic","name":"string"}},{"name":"taskExecutor","kind":32768,"kindString":"Parameter","comment":{"text":"A function that will be invoked when the task with given `taskName` is executed.\\n"},"type":{"type":"reference","name":"TaskManagerTaskExecutor"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"getRegisteredTasksAsync","kind":64,"kindString":"Function","signatures":[{"name":"getRegisteredTasksAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Provides information about tasks registered in the app.","returns":"A promise which fulfills with an array of tasks registered in the app. Example:\\n```json\\n[\\n  {\\n    taskName: \'location-updates-task-name\',\\n    taskType: \'location\',\\n    options: {\\n      accuracy: Location.Accuracy.High,\\n      showsBackgroundLocationIndicator: false,\\n    },\\n  },\\n  {\\n    taskName: \'geofencing-task-name\',\\n    taskType: \'geofencing\',\\n    options: {\\n      regions: [...],\\n    },\\n  },\\n]\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"TaskManagerTask"}}],"name":"Promise"}}]},{"name":"getTaskOptionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getTaskOptionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Retrieves `options` associated with the task, that were passed to the function registering the task\\n(eg. `Location.startLocationUpdatesAsync`).","returns":"A promise which fulfills with the `options` object that was passed while registering task\\nwith given name or `null` if task couldn\'t be found.\\n"},"typeParameter":[{"name":"TaskOptions","kind":131072,"kindString":"Type parameter"}],"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"text":"Name of the task."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TaskOptions"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine if the `TaskManager` API can be used in this app.","returns":"A promise fulfills with `true` if the API can be used, and `false` otherwise.\\nOn the web it always returns `false`.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isTaskDefined","kind":64,"kindString":"Function","signatures":[{"name":"isTaskDefined","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks whether the task is already defined."},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"text":"Name of the task.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"isTaskRegisteredAsync","kind":64,"kindString":"Function","signatures":[{"name":"isTaskRegisteredAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine whether the task is registered. Registered tasks are stored in a persistent storage and\\npreserved between sessions.","returns":"A promise which fulfills with a `boolean` value whether or not the task with given name\\nis already registered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"text":"Name of the task."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"unregisterAllTasksAsync","kind":64,"kindString":"Function","signatures":[{"name":"unregisterAllTasksAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unregisters all tasks registered for the running app. You may want to call this when the user is\\nsigning out and you no longer need to track his location or run any other background tasks.","returns":"A promise which fulfills as soon as all tasks are completely unregistered.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"unregisterTaskAsync","kind":64,"kindString":"Function","signatures":[{"name":"unregisterTaskAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unregisters task from the app, so the app will not be receiving updates for that task anymore.\\n_It is recommended to use methods specialized by modules that registered the task, eg.\\n[`Location.stopLocationUpdatesAsync`](./location/#expolocationstoplocationupdatesasynctaskname)._","returns":"A promise which fulfills as soon as the task is unregistered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"text":"Name of the task to unregister."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},bnyH:function(e){e.exports=JSON.parse('{"name":"expo-linear-gradient","kind":1,"kindString":"Project","originalName":"","children":[{"name":"LinearGradient","kind":128,"kindString":"Class","comment":{"shortText":"Renders a native view that transitions between multiple colors in a linear direction."},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new LinearGradient","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"reference","name":"LinearGradientProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}]}}],"type":{"type":"reference","name":"LinearGradient"},"inheritedFrom":{"type":"reference","name":"React.Component<LinearGradientProps>.constructor"}},{"name":"new LinearGradient","kind":16384,"kindString":"Constructor signature","comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"LinearGradientProps"}},{"name":"context","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"LinearGradient"},"inheritedFrom":{"type":"reference","name":"React.Component<LinearGradientProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<LinearGradientProps>.constructor"}},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"React.ReactNode","package":"@types/react","name":"ReactNode"}}]}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","qualifiedName":"React.ReactInstance","package":"@types/react","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"React.Context","package":"@types/react","name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"React.ErrorInfo","package":"@types/react","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"render","kind":2048,"kindString":"Method","signatures":[{"name":"render","kind":4096,"kindString":"Call signature","type":{"type":"reference","qualifiedName":"global.JSX.Element","package":"@types/react","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","qualifiedName":"K","package":"@types/react","name":"K"}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","qualifiedName":"K","package":"@types/react","name":"K"}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"qualifiedName":"React.Component","package":"@types/react","name":"Component"}]},{"name":"LinearGradientPoint","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object `{ x: number; y: number }` or array `[x, y]` that represents the point\\nat which the gradient starts or ends, as a fraction of the overall size of the gradient ranging\\nfrom `0` to `1`, inclusive."},"type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"x","kind":1024,"kindString":"Property","comment":{"shortText":"A number ranging from `0` to `1`, representing the position of gradient transformation."},"type":{"type":"intrinsic","name":"number"}},{"name":"y","kind":1024,"kindString":"Property","comment":{"shortText":"A number ranging from `0` to `1`, representing the position of gradient transformation."},"type":{"type":"intrinsic","name":"number"}}]}},{"type":"reference","name":"NativeLinearGradientPoint"}]}},{"name":"LinearGradientProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"ViewProps","package":"@types/react-native","name":"ViewProps"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"colors","kind":1024,"kindString":"Property","comment":{"shortText":"An array of colors that represent stops in the gradient. At least two colors are required\\n(for a single-color background, use the `style.backgroundColor` prop on a `View` component)."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"end","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"For example, `{ x: 0.1, y: 0.2 }` means that the gradient will end `10%` from the left and `20%` from the bottom.","text":"**On web**, this only changes the angle of the gradient because CSS gradients don\'t support changing the end position.","tags":[{"tag":"default","text":"{ x: 0.5, y: 1.0 }\\n"}]},"type":{"type":"union","types":[{"type":"reference","name":"LinearGradientPoint"},{"type":"literal","value":null}]}},{"name":"locations","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array that contains `number`s ranging from `0` to `1`, inclusive, and is the same length as the `colors` property.\\nEach number indicates a color-stop location where each respective color should be located.\\nIf not specified, the colors will be distributed evenly across the gradient.","text":"For example, `[0.5, 0.8]` would render:\\n- the first color, solid, from the beginning of the gradient view to 50% through (the middle);\\n- a gradient from the first color to the second from the 50% point to the 80% point; and\\n- the second color, solid, from the 80% point to the end of the gradient view.\\n\\n> The color-stop locations must be ascending from least to greatest.","tags":[{"tag":"default","text":"[]\\n"}]},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"literal","value":null}]}},{"name":"start","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"For example, `{ x: 0.1, y: 0.2 }` means that the gradient will start `10%` from the left and `20%` from the top.","text":"**On web**, this only changes the angle of the gradient because CSS gradients don\'t support changing the starting position.","tags":[{"tag":"default","text":"{ x: 0.5, y: 0.0 }\\n"}]},"type":{"type":"union","types":[{"type":"reference","name":"LinearGradientPoint"},{"type":"literal","value":null}]}}]}}]}}]}')},bqQJ:function(e){e.exports=JSON.parse('{"name":"expo-clipboard","kind":1,"kindString":"Project","originalName":"","children":[{"name":"EventEmitter","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new EventEmitter","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"nativeModule","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"NativeModule"}}],"type":{"type":"reference","name":"EventEmitter"}}]},{"name":"_eventEmitter","kind":1024,"kindString":"Property","type":{"type":"reference","name":"NativeEventEmitter"}},{"name":"_listenerCount","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"_nativeModule","kind":1024,"kindString":"Property","type":{"type":"reference","name":"NativeModule"}},{"name":"addListener","kind":2048,"kindString":"Method","signatures":[{"name":"addListener","kind":4096,"kindString":"Call signature","typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter"}],"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"listener","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"T"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"emit","kind":2048,"kindString":"Method","signatures":[{"name":"emit","kind":4096,"kindString":"Call signature","parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"params","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeAllListeners","kind":2048,"kindString":"Method","signatures":[{"name":"removeAllListeners","kind":4096,"kindString":"Call signature","parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeSubscription","kind":2048,"kindString":"Method","signatures":[{"name":"removeSubscription","kind":4096,"kindString":"Call signature","parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]}]},{"name":"ClipboardEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"content","kind":1024,"kindString":"Property","comment":{"shortText":"The new content of the user\'s clipboard."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"addClipboardListener","kind":64,"kindString":"Function","signatures":[{"name":"addClipboardListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Adds a listener that will fire whenever the content of the user\'s clipboard changes. This method\\nis a no-op on Web.","tags":[{"tag":"example","text":"\\n```typescript\\naddClipboardListener(({ content }: ClipboardEvent) => {\\n  alert(\'Copy pasta! Here\'s the string that was copied: \' + content);\\n});\\n```\\n"}]},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"text":"Callback to execute when listener is triggered. The callback is provided a\\nsingle argument that is an object with a `content` key.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"ClipboardEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getStringAsync","kind":64,"kindString":"Function","signatures":[{"name":"getStringAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the content of the user\'s clipboard. Please note that calling this method on web will prompt\\nthe user to grant your app permission to \\"see text and images copied to the clipboard.\\"","returns":"A promise that resolves to the content of the clipboard.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"removeClipboardListener","kind":64,"kindString":"Function","signatures":[{"name":"removeClipboardListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes the listener added by addClipboardListener. This method is a no-op on Web.","tags":[{"tag":"example","text":"\\n```typescript\\nconst subscription = addClipboardListener(() => {\\n  alert(\'Copy pasta!\');\\n});\\nremoveClipboardListener(subscription);\\n```\\n"}]},"parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","comment":{"text":"The subscription to remove (created by addClipboardListener).\\n"},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setString","kind":64,"kindString":"Function","signatures":[{"name":"setString","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the content of the user\'s clipboard.","returns":"On web, this returns a boolean value indicating whether or not the string was saved to\\nthe user\'s clipboard. On iOS and Android, nothing is returned.\\n"},"parameters":[{"name":"text","kind":32768,"kindString":"Parameter","comment":{"text":"The string to save to the clipboard.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]}]}')},bz2G:function(e){e.exports=JSON.parse('{"name":"expo-firebase-analytics","kind":1,"kindString":"Project","originalName":"","children":[{"name":"FirebaseAnalyticsJS","kind":128,"kindString":"Class","comment":{"shortText":"A pure JavaScript Google Firebase Analytics implementation that uses\\nthe HTTPS Measurement API 2 to send events to Google Analytics.","text":"This class provides an alternative for the Firebase Analytics module\\nshipped with the Firebase JS SDK. That library uses the gtag.js dependency\\nand requires certain browser features. This prevents the use\\nanalytics on other platforms, such as Node-js and react-native.\\n\\nFirebaseAnalyticsJS provides a bare-bone implementation of the new\\nHTTPS Measurement API 2 protocol (which is undocumented), with an API\\nthat follows the Firebase Analytics JS SDK.\\n"},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new FirebaseAnalyticsJS","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"config","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"FirebaseAnalyticsJSConfig"}},{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"FirebaseAnalyticsJSOptions"}}],"type":{"type":"reference","name":"FirebaseAnalyticsJS"}}]},{"name":"config","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"type":{"type":"reference","name":"FirebaseAnalyticsJSConfig"}},{"name":"url","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"type":{"type":"intrinsic","name":"string"}},{"name":"clearEvents","kind":2048,"kindString":"Method","signatures":[{"name":"clearEvents","kind":4096,"kindString":"Call signature","comment":{"shortText":"Clears any queued events and cancels the flush timer."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"logEvent","kind":2048,"kindString":"Method","signatures":[{"name":"logEvent","kind":4096,"kindString":"Call signature","comment":{"shortText":"https://firebase.google.com/docs/reference/js/firebase.analytics.Analytics#log-event"},"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"eventParams","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"resetAnalyticsData","kind":2048,"kindString":"Method","signatures":[{"name":"resetAnalyticsData","kind":4096,"kindString":"Call signature","comment":{"shortText":"Clears all analytics data for this instance."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setAnalyticsCollectionEnabled","kind":2048,"kindString":"Method","signatures":[{"name":"setAnalyticsCollectionEnabled","kind":4096,"kindString":"Call signature","comment":{"shortText":"https://firebase.google.com/docs/reference/js/firebase.analytics.Analytics#set-analytics-collection-enabled"},"parameters":[{"name":"isEnabled","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setClientId","kind":2048,"kindString":"Method","signatures":[{"name":"setClientId","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a new value for the client ID."},"parameters":[{"name":"clientId","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setDebugModeEnabled","kind":2048,"kindString":"Method","signatures":[{"name":"setDebugModeEnabled","kind":4096,"kindString":"Call signature","comment":{"shortText":"Enables or disabled debug mode."},"parameters":[{"name":"isEnabled","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setSessionTimeoutDuration","kind":2048,"kindString":"Method","signatures":[{"name":"setSessionTimeoutDuration","kind":4096,"kindString":"Call signature","comment":{"shortText":"Not supported, this method is a no-op"},"parameters":[{"name":"_sessionTimeoutInterval","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserId","kind":2048,"kindString":"Method","signatures":[{"name":"setUserId","kind":4096,"kindString":"Call signature","comment":{"shortText":"https://firebase.google.com/docs/reference/js/firebase.analytics.Analytics#set-user-id"},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserProperties","kind":2048,"kindString":"Method","signatures":[{"name":"setUserProperties","kind":4096,"kindString":"Call signature","comment":{"shortText":"https://firebase.google.com/docs/reference/js/firebase.analytics.Analytics#set-user-properties"},"parameters":[{"name":"userProperties","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"parseEvent","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"parseEvent","kind":4096,"kindString":"Call signature","comment":{"shortText":"Parses an event (as passed to logEvent) and throws an error when the\\nevent-name or parameters are invalid.","text":"Upon success, returns the event in encoded format, ready to be send\\nthrough the Google Measurement API v2.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"FirebaseAnalyticsJSOptions"}},{"name":"eventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"eventParams","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}}],"type":{"type":"reference","name":"FirebaseAnalyticsJSCodedEvent"}}]},{"name":"parseUserProperty","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"parseUserProperty","kind":4096,"kindString":"Call signature","comment":{"shortText":"Parses user-properties (as passed to setUserProperties) and throws an error when\\none of the user properties is invalid.","text":"Upon success, returns the user-properties in encoded format, ready to be send\\nthrough the Google Measurement API v2.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"FirebaseAnalyticsJSOptions"}},{"name":"userPropertyName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"userPropertyValue","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"string"}}]}]},{"name":"logEvent","kind":64,"kindString":"Function","signatures":[{"name":"logEvent","kind":4096,"kindString":"Call signature","comment":{"shortText":"Logs an app event. The event can have up to 25 parameters. Events with the same name must have\\nthe same parameters. Up to 500 event names are supported. Using predefined events and/or\\nparameters is recommended for optimal reporting. See [the Google Analytics event reference](https://developers.google.com/gtagjs/reference/event)\\nfor a list of all predefined events.","text":"> The following event names are reserved for the native SDKs automatic collection and cannot be used: `ad_activeview, ad_click, ad_exposure, ad_query, ad_reward, adunit_exposure, app_background, app_clear_data, app_exception, app_remove, app_store_refund, app_store_subscription_cancel, ad_activeview, ad_click, ad_exposure, ad_query, ad_reward, adunit_exposure, app_background, app_clear_data, app_exception, app_remove, app_store_refund, app_store_subscription_cancel, app_store_subscription_convert, app_store_subscription_renew, app_update, app_upgrade, dynamic_link_app_open, dynamic_link_app_update, dynamic_link_first_open, error, firebase_campaign, first_open, first_visit, in_app_purchase, notification_dismiss, notification_foreground, notification_open, notification_receive, os_update, session_start, session_start_with_rollout, user_engagement`\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Analytics.logEvent(\'add_to_cart\', {\\n  currency: \'USD\',\\n  value: 29.98\\n  items: [{\\n    id: \\"P12345\\",\\n    name: \\"Expo Warhol T-Shirt\\",\\n    brand: \\"Expo\\",\\n    category: \\"Apparel/T-Shirts\\",\\n    coupon: \\"SUMMER_DISCOUNT\\",\\n    list_name: \\"Search Results\\",\\n    list_position: 1,\\n    price: 14.99,\\n    quantity: 2,\\n    variant: \\"Blue\\"\\n  }]\\n});\\n```\\n"}]},"parameters":[{"name":"name","kind":32768,"kindString":"Parameter","comment":{"shortText":"The name of the event. Should contain 1 to 40 alphanumeric characters or underscores.\\nThe name must start with an alphabetic character. Some event names are  reserved. The `firebase_`,\\n`google_`, and `ga_` prefixes are reserved and should not be used. Note that event names are\\ncase-sensitive and that logging two events whose names differ only in case will result in two\\ndistinct events. To manually log screen view events, use the `screen_view` event name."},"type":{"type":"intrinsic","name":"string"}},{"name":"properties","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The dictionary of event parameters. Passing `undefined` indicates that the\\nevent has no parameters. Parameter names can be up to 40 characters long and must start with an\\nalphabetic character and contain only alphanumeric characters and underscores. Only `String` and\\n`Number` parameter types are supported; and `items` arrays containing dictionaries.\\n`String` parameter values can be up to 100 characters long. The `firebase_`,  `google_`, and\\n`ga_` prefixes are reserved and should not be used for parameter names.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"resetAnalyticsData","kind":64,"kindString":"Function","signatures":[{"name":"resetAnalyticsData","kind":4096,"kindString":"Call signature","comment":{"shortText":"Clears all analytics data for this instance from the device and resets the app instance ID."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setAnalyticsCollectionEnabled","kind":64,"kindString":"Function","signatures":[{"name":"setAnalyticsCollectionEnabled","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets whether analytics collection is enabled for this app on this device. This setting is\\npersisted across app sessions. __By default it is enabled__."},"parameters":[{"name":"isEnabled","kind":32768,"kindString":"Parameter","comment":{"shortText":"A flag that enables or disables Analytics collection.\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setClientId","kind":64,"kindString":"Function","signatures":[{"name":"setClientId","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the clientId to the given value. For best results, set this value before\\ncalling any other functions on this module.","text":"By default, the clientId is set to `Constants.installationId` in Expo Go, which is deprecated and\\nwill be removed in SDK 44. At that time, this method will need to be used to set the `clientId`\\nwhen using Expo Go.\\n","tags":[{"tag":"platform","text":"expo\\n"}]},"parameters":[{"name":"clientId","kind":32768,"kindString":"Parameter","comment":{"shortText":"UUIDv4 string value to set for the current session in Expo Go."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setDebugModeEnabled","kind":64,"kindString":"Function","signatures":[{"name":"setDebugModeEnabled","kind":4096,"kindString":"Call signature","comment":{"shortText":"Enables or disabled debug mode on the Expo client, so events can\\nbe tracked using the [DebugView in the Analytics dashboard](https://firebase.google.com/docs/analytics/debugview#reporting).","text":"This option is only available in Expo Go. When using a custom development app, a standalone app,\\nthe bare workflow or web, use the [natively available options](https://firebase.google.com/docs/analytics/debugview).\\n","tags":[{"tag":"platform","text":"expo\\n"}]},"parameters":[{"name":"isEnabled","kind":32768,"kindString":"Parameter","comment":{"shortText":"A flag that enables or disables debug mode."},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setSessionTimeoutDuration","kind":64,"kindString":"Function","signatures":[{"name":"setSessionTimeoutDuration","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the interval of inactivity in seconds that terminates the current session. The default\\nvalue is 1800000 milliseconds (30 minutes).","text":"> Setting the session timeout only applies to the native iOS and Android SDKs. Calling this\\n> method does nothing on Expo Go or web.\\n"},"parameters":[{"name":"sessionTimeoutInterval","kind":32768,"kindString":"Parameter","comment":{"shortText":"The custom time of inactivity in milliseconds before the current\\nsession terminates.\\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUnavailabilityLogging","kind":64,"kindString":"Function","signatures":[{"name":"setUnavailabilityLogging","kind":4096,"kindString":"Call signature","comment":{"shortText":"Enables or disables the warning and log messages when using Firebase Analytics on the Expo client.","text":"Firebase Analytics is not available on the Expo client and therefore logs the requests to the\\nconsole for development purposes. To test Firebase Analytics, create a standalone build or custom\\nclient. Use this function to suppress the warning and log messages.\\n"},"parameters":[{"name":"isEnabled","kind":32768,"kindString":"Parameter","comment":{"shortText":"A flag that enables or disables unavailability logging.\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setUserId","kind":64,"kindString":"Function","signatures":[{"name":"setUserId","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the user ID property. This feature must be used in accordance with [Google\'s Privacy Policy](https://www.google.com/policies/privacy)"},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","comment":{"shortText":"The user ID to ascribe to the user of this app on this device, which must be\\nnon-empty and no more than 256 characters long. Setting userID to null removes the user ID.\\n"},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserProperties","kind":64,"kindString":"Function","signatures":[{"name":"setUserProperties","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets multiple user properties to the supplied values.","tags":[{"tag":"example","text":"\\n```ts\\nawait Analytics.setUserProperties({\\n  loves_expo: \'a lot\',\\n});\\n```\\n"}]},"parameters":[{"name":"properties","kind":32768,"kindString":"Parameter","comment":{"shortText":"Key/value set of user properties. Values can be up to 36 characters long.\\nSetting the value to null removes the user property.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}],"name":"Record"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserProperty","kind":64,"kindString":"Function","signatures":[{"name":"setUserProperty","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a user property to a given value. Up to 25 user property names are supported. Once set,\\nuser property values persist throughout the app life-cycle and across sessions.","text":"The following user property names are reserved and cannot be used:\\n- `first_open_time`\\n- `last_deep_link_referrer`\\n- `user_id`\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Analytics.setUserProperty(\'favorite_batmobile\', \'1989 Burton-mobile\');\\n```\\n"}]},"parameters":[{"name":"name","kind":32768,"kindString":"Parameter","comment":{"shortText":"The name of the user property to set. Should contain 1 to 24 alphanumeric characters\\nor underscores and must start with an alphabetic character. The `firebase_`, `google_`, and\\n`ga_` prefixes are reserved and should not be used for user property names."},"type":{"type":"intrinsic","name":"string"}},{"name":"value","kind":32768,"kindString":"Parameter","comment":{"shortText":"The value of the user property. Values can be up to 36 characters long. Setting the\\nvalue to null removes the user property.\\n"},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},cG7X:function(e){e.exports=JSON.parse('{"name":"expo-keep-awake","kind":1,"kindString":"Project","originalName":"","children":[{"name":"ExpoKeepAwakeTag","kind":32,"kindString":"Variable","type":{"type":"literal","value":"ExpoKeepAwakeDefaultTag"},"defaultValue":"\'ExpoKeepAwakeDefaultTag\'"},{"name":"activateKeepAwake","kind":64,"kindString":"Function","signatures":[{"name":"activateKeepAwake","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prevents the screen from sleeping until `deactivateKeepAwake` is called with the same `tag` value.","text":"If the `tag` argument is specified, the screen will not sleep until you call `deactivateKeepAwake`\\nwith the same `tag` argument. When using multiple `tags` for activation you\'ll have to deactivate\\neach one in order to re-enable screen sleep. If tag is unspecified, the default `tag` is used."},"parameters":[{"name":"tag","kind":32768,"kindString":"Parameter","comment":{"shortText":"*Optional* - Tag to lock screen sleep prevention. If not provided, the default tag is used.\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoKeepAwakeTag"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"deactivateKeepAwake","kind":64,"kindString":"Function","signatures":[{"name":"deactivateKeepAwake","kind":4096,"kindString":"Call signature","comment":{"shortText":"Releases the lock on screen-sleep prevention associated with the given `tag` value. If `tag`\\nis unspecified, it defaults to the same default tag that `activateKeepAwake` uses."},"parameters":[{"name":"tag","kind":32768,"kindString":"Parameter","comment":{"shortText":"*Optional* - Tag to release the lock on screen sleep prevention. If not provided,\\nthe default tag is used.\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoKeepAwakeTag"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"useKeepAwake","kind":64,"kindString":"Function","signatures":[{"name":"useKeepAwake","kind":4096,"kindString":"Call signature","comment":{"shortText":"A React hook to keep the screen awake for as long as the owner component is mounted.\\nThe optionally provided `tag` argument is used when activating and deactivating the keep-awake\\nfeature. If unspecified, the default `tag` is used. See the documentation for `activateKeepAwake`\\nbelow to learn more about the `tag` argument."},"parameters":[{"name":"tag","kind":32768,"kindString":"Parameter","comment":{"shortText":"*Optional* - Tag to lock screen sleep prevention. If not provided, the default tag is used."},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoKeepAwakeTag"},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"*Optional*\\n  - `suppressDeactivateWarnings` *Optional* -\\n     The call will throw an unhandled promise rejection on Android\\n     when the original Activity is dead or deactivated.\\n     Set the value to true for suppressing the uncaught exception.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"suppressDeactivateWarnings","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}]}')},cLJU:function(e){e.exports=JSON.parse('{"name":"expo-analytics-segment","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"CommonOptions","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"},{"type":"literal","value":null}]}},{"name":"InitializeOptions","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"androidWriteKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Write key for Android source."},"type":{"type":"intrinsic","name":"string"}},{"name":"iosWriteKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Write key for iOS source."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"alias","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"alias","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Associate current identity with a new identifier. See [Segment Alias docs](https://segment.com/docs/spec/alias/).","returns":"A `Promise` which fulfils witch a `boolean` indicating whether the method has been\\nexecuted on the underlying `Segment` instance or not.\\n"},"parameters":[{"name":"newId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Identifier to associate with."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"An extra dictionary with options for the call, [see here](https://segment.com/docs/connections/spec/common/)\\nfor possible configuration options. An example options object would be:\\n```json\\n{\\n  \\"integrations\\": {\\n    \\"Sentry\\": {\\n      \\"enabled\\": true\\n     }\\n  },\\n  \\"context\\": {\\n    \\"ip\\": \\"0.0.0.0\\"\\n  }\\n}\\n```\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"flush","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"flush","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Manually flush the event queue. You shouldn\'t need to call this in most cases."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"getEnabledAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getEnabledAsync","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"group","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"group","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Associate the user with a group. See [Segment Group docs](https://segment.com/docs/spec/group/)."},"parameters":[{"name":"groupId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"ID of the group.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"groupWithTraits","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"groupWithTraits","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Associate the user with a group with traits. See [Segment Group docs](https://segment.com/docs/spec/group/)."},"parameters":[{"name":"groupId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"ID of the group."},"type":{"type":"intrinsic","name":"string"}},{"name":"traits","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Free-form dictionary of traits of the group."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A map that can include any of [these common fields](https://segment.com/docs/connections/spec/common/).\\nDefaults to `null`.\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"identify","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"identify","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Associates the current user with a user ID. Call this after calling [`Segment.initialize()`](#initialize)\\nbut before other segment calls. See [Segment Identify docs](https://segment.com/docs/spec/identify/)."},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"User ID for the current user.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"identifyWithTraits","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"identifyWithTraits","kind":4096,"kindString":"Call signature","flags":{},"comment":{},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"User ID for the current user."},"type":{"type":"intrinsic","name":"string"}},{"name":"traits","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A map of custom properties."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Map that can include any of [these common fields](https://segment.com/docs/connections/spec/common/).\\nDefaults to `null`.\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"initialize","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"initialize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Segment requires separate write keys for iOS and Android. You will need to log in to Segment\\nto receive these keys: [https://segment.com/docs/guides/setup/how-do-i-find-my-write-key/](https://segment.com/docs/guides/setup/how-do-i-find-my-write-key/)"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"An [`InitializeOptions`](#initializeoptions) object.\\n"},"type":{"type":"reference","name":"InitializeOptions"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"reset","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"reset","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Clears the current user. See [https://segment.com/docs/sources/mobile/ios/#reset](https://segment.com/docs/sources/mobile/ios/#reset)."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"screen","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"screen","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Record that a user has seen a screen to Segment. See [Segment Screen docs](https://segment.com/docs/spec/screen/)."},"parameters":[{"name":"screenName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Name of the screen.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"screenWithProperties","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"screenWithProperties","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Record that a user has seen a screen to Segment with custom properties. See [Segment Screen docs](https://segment.com/docs/spec/screen/)."},"parameters":[{"name":"screenName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Name of the screen."},"type":{"type":"intrinsic","name":"string"}},{"name":"properties","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A map of custom properties."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A map that can include any of [these common fields](https://segment.com/docs/connections/spec/common/).\\nDefaults to `null`.\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setEnabledAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"setEnabledAsync","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"track","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"track","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Log an event to Segment. See [Segment Track docs](https://segment.com/docs/spec/track/)."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The event name.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"trackWithProperties","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"trackWithProperties","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Log an event to Segment with custom properties. See [Segment Track docs](https://segment.com/docs/spec/track/)."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The event name."},"type":{"type":"intrinsic","name":"string"}},{"name":"properties","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A map of custom properties."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A map that can include any of [these common fields](https://segment.com/docs/connections/spec/common/).\\nDefaults to `null`.\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"intrinsic","name":"void"}}]}]}')},dAEq:function(e,w,n){"use strict";var c=n("HtLg"),p=n("Vx/6"),d=n("fuKP"),a=n("/+k/"),m=n("Ig3s"),r=n("T0BQ"),s={name:"attention",tokenize:o,resolveAll:i};function i(t,l){for(var k=-1,g,h,f,S,b,P,y,v;++k<t.length;)if(t[k][0]==="enter"&&t[k][1].type==="attentionSequence"&&t[k][1]._close){for(g=k;g--;)if(t[g][0]==="exit"&&t[g][1].type==="attentionSequence"&&t[g][1]._open&&l.sliceSerialize(t[g][1]).charCodeAt(0)===l.sliceSerialize(t[k][1]).charCodeAt(0)){if((t[g][1]._close||t[k][1]._open)&&(t[k][1].end.offset-t[k][1].start.offset)%3&&!((t[g][1].end.offset-t[g][1].start.offset+t[k][1].end.offset-t[k][1].start.offset)%3))continue;P=t[g][1].end.offset-t[g][1].start.offset>1&&t[k][1].end.offset-t[k][1].start.offset>1?2:1,S={type:P>1?"strongSequence":"emphasisSequence",start:a(r(t[g][1].end),-P),end:r(t[g][1].end)},b={type:P>1?"strongSequence":"emphasisSequence",start:r(t[k][1].start),end:a(r(t[k][1].start),P)},f={type:P>1?"strongText":"emphasisText",start:r(t[g][1].end),end:r(t[k][1].start)},h={type:P>1?"strong":"emphasis",start:r(S.start),end:r(b.end)},t[g][1].end=r(S.start),t[k][1].start=r(b.end),y=[],t[g][1].end.offset-t[g][1].start.offset&&(y=c(y,[["enter",t[g][1],l],["exit",t[g][1],l]])),y=c(y,[["enter",h,l],["enter",S,l],["exit",S,l],["enter",f,l]]),y=c(y,m(l.parser.constructs.insideSpan.null,t.slice(g+1,k),l)),y=c(y,[["exit",f,l],["enter",b,l],["exit",b,l],["exit",h,l]]),t[k][1].end.offset-t[k][1].start.offset?(v=2,y=c(y,[["enter",t[k][1],l],["exit",t[k][1],l]])):v=0,p(t,g-1,k-g+3,y),k=g+y.length-v-2;break}}for(k=-1;++k<t.length;)t[k][1].type==="attentionSequence"&&(t[k][1].type="data");return t}function o(t,l){var k=d(this.previous),g;return h;function h(S){return t.enter("attentionSequence"),g=S,f(S)}function f(S){var b,P,y,v;return S===g?(t.consume(S),f):(b=t.exit("attentionSequence"),P=d(S),y=!P||P===2&&k,v=!k||k===2&&P,b._open=g===42?y:y&&(k||!v),b._close=g===42?v:v&&(P||!y),l(S))}}e.exports=s},dOo3:function(e){e.exports=JSON.parse('{"name":"expo-sqlite","kind":1,"kindString":"Project","originalName":"","children":[{"name":"SQLError","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new SQLError","kind":16384,"kindString":"Constructor signature","type":{"type":"reference","name":"SQLError"}}]},{"name":"code","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"message","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"CONSTRAINT_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"DATABASE_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"QUOTA_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"SYNTAX_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"TIMEOUT_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"TOO_LARGE_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"UNKNOWN_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"VERSION_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}}]},{"name":"Database","kind":256,"kindString":"Interface","comment":{"shortText":"`Database` objects are returned by calls to `SQLite.openDatabase()`. Such an object represents a\\nconnection to a database on your device."},"children":[{"name":"version","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"readTransaction","kind":2048,"kindString":"Method","signatures":[{"name":"readTransaction","kind":4096,"kindString":"Call signature","parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLTransactionCallback"}},{"name":"errorCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"SQLTransactionErrorCallback"}},{"name":"successCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"transaction","kind":2048,"kindString":"Method","signatures":[{"name":"transaction","kind":4096,"kindString":"Call signature","comment":{"shortText":"Execute a database transaction."},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"shortText":"A function representing the transaction to perform. Takes a Transaction\\n(see below) as its only parameter, on which it can add SQL statements to execute."},"type":{"type":"reference","name":"SQLTransactionCallback"}},{"name":"errorCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Called if an error occurred processing this transaction. Takes a single\\nparameter describing the error."},"type":{"type":"reference","name":"SQLTransactionErrorCallback"}},{"name":"successCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Called when the transaction has completed executing on the database.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}],"extendedBy":[{"type":"reference","name":"WebSQLDatabase"}]},{"name":"SQLResultSetRowList","kind":256,"kindString":"Interface","children":[{"name":"_array","kind":1024,"kindString":"Property","comment":{"shortText":"The actual array of rows returned by the query. Can be used directly instead of\\ngetting rows through rows.item()."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"name":"length","kind":1024,"kindString":"Property","comment":{"shortText":"The number of rows returned by the query."},"type":{"type":"intrinsic","name":"number"}},{"name":"item","kind":2048,"kindString":"Method","signatures":[{"name":"item","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns the row with the given `index`. If there is no such row, returns `null`."},"parameters":[{"name":"index","kind":32768,"kindString":"Parameter","comment":{"shortText":"Index of row to get.\\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"any"}}]}]},{"name":"SQLTransaction","kind":256,"kindString":"Interface","comment":{"shortText":"A `SQLTransaction` object is passed in as a parameter to the `callback` parameter for the\\n`db.transaction()` method on a `Database` (see above). It allows enqueuing SQL statements to\\nperform in a database transaction."},"children":[{"name":"executeSql","kind":2048,"kindString":"Method","signatures":[{"name":"executeSql","kind":4096,"kindString":"Call signature","comment":{"shortText":"Enqueue a SQL statement to execute in the transaction. Authors are strongly recommended to make\\nuse of the `?` placeholder feature of the method to avoid against SQL injection attacks, and to\\nnever construct SQL statements on the fly."},"parameters":[{"name":"sqlStatement","kind":32768,"kindString":"Parameter","comment":{"shortText":"A string containing a database query to execute expressed as SQL. The string\\nmay contain `?` placeholders, with values to be substituted listed in the `arguments` parameter."},"type":{"type":"intrinsic","name":"string"}},{"name":"args","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"An array of values (numbers or strings) to substitute for `?` placeholders in the\\nSQL statement."},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Called when the query is successfully completed during the transaction. Takes\\ntwo parameters: the transaction itself, and a `ResultSet` object (see below) with the results\\nof the query."},"type":{"type":"reference","name":"SQLStatementCallback"}},{"name":"errorCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Called if an error occurred executing this particular query in the\\ntransaction. Takes two parameters: the transaction itself, and the error object.\\n"},"type":{"type":"reference","name":"SQLStatementErrorCallback"}}],"type":{"type":"intrinsic","name":"void"}}]}]},{"name":"WebSQLDatabase","kind":256,"kindString":"Interface","children":[{"name":"version","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Database.version"}},{"name":"closeAsync","kind":2048,"kindString":"Method","signatures":[{"name":"closeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Close the database."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"deleteAsync","kind":2048,"kindString":"Method","signatures":[{"name":"deleteAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Delete the database file.\\n> The database has to be closed prior to deletion."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"exec","kind":2048,"kindString":"Method","signatures":[{"name":"exec","kind":4096,"kindString":"Call signature","parameters":[{"name":"queries","kind":32768,"kindString":"Parameter","type":{"type":"array","elementType":{"type":"reference","name":"Query"}}},{"name":"readOnly","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}},{"name":"callback","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLiteCallback"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"readTransaction","kind":2048,"kindString":"Method","signatures":[{"name":"readTransaction","kind":4096,"kindString":"Call signature","parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLTransactionCallback"}},{"name":"errorCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"SQLTransactionErrorCallback"}},{"name":"successCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"Database.readTransaction"}}],"inheritedFrom":{"type":"reference","name":"Database.readTransaction"}},{"name":"transaction","kind":2048,"kindString":"Method","signatures":[{"name":"transaction","kind":4096,"kindString":"Call signature","comment":{"shortText":"Execute a database transaction."},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"shortText":"A function representing the transaction to perform. Takes a Transaction\\n(see below) as its only parameter, on which it can add SQL statements to execute."},"type":{"type":"reference","name":"SQLTransactionCallback"}},{"name":"errorCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Called if an error occurred processing this transaction. Takes a single\\nparameter describing the error."},"type":{"type":"reference","name":"SQLTransactionErrorCallback"}},{"name":"successCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Called when the transaction has completed executing on the database.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"Database.transaction"}}],"inheritedFrom":{"type":"reference","name":"Database.transaction"}}],"extendedTypes":[{"type":"reference","name":"Database"}]},{"name":"Window","kind":256,"kindString":"Interface","children":[{"name":"openDatabase","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"openDatabase","kind":4096,"kindString":"Call signature","parameters":[{"name":"name","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"version","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"displayName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"estimatedSize","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}},{"name":"creationCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"DatabaseCallback"}}],"type":{"type":"reference","name":"Database"}}]}]},{"name":"DatabaseCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"database","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Database"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"Query","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"args","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}},{"name":"sql","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"ResultSet","kind":4194304,"kindString":"Type alias","comment":{"shortText":"`ResultSet` objects are returned through second parameter of the `success` callback for the\\n`tx.executeSql()` method on a `SQLTransaction` (see above)."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"insertId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The row ID of the row that the SQL statement inserted into the database, if a row was inserted."},"type":{"type":"intrinsic","name":"number"}},{"name":"rows","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"column","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}}},{"name":"rowsAffected","kind":1024,"kindString":"Property","comment":{"shortText":"The number of rows that were changed by the SQL statement."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"ResultSetError","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"error","kind":1024,"kindString":"Property","type":{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"}}]}}},{"name":"SQLResultSet","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"insertId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The row ID of the row that the SQL statement inserted into the database, if a row was inserted."},"type":{"type":"intrinsic","name":"number"}},{"name":"rows","kind":1024,"kindString":"Property","type":{"type":"reference","name":"SQLResultSetRowList"}},{"name":"rowsAffected","kind":1024,"kindString":"Property","comment":{"shortText":"The number of rows that were changed by the SQL statement."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"SQLStatementCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"transaction","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLTransaction"}},{"name":"resultSet","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLResultSet"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"SQLStatementErrorCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"transaction","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLTransaction"}},{"name":"error","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLError"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"SQLTransactionCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"transaction","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLTransaction"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"SQLTransactionErrorCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"error","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLError"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"SQLiteCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"},{"type":"literal","value":null}]}},{"name":"resultSet","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","name":"ResultSetError"},{"type":"reference","name":"ResultSet"}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"openDatabase","kind":64,"kindString":"Function","signatures":[{"name":"openDatabase","kind":4096,"kindString":"Call signature","comment":{"shortText":"Open a database, creating it if it doesn\'t exist, and return a `Database` object. On disk,\\nthe database will be created under the app\'s [documents directory](./filesystem), i.e.\\n`${FileSystem.documentDirectory}/SQLite/${name}`.\\n> The `version`, `description` and `size` arguments are ignored, but are accepted by the function\\nfor compatibility with the WebSQL specification.","returns":"\\n"},"parameters":[{"name":"name","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the database file to open."},"type":{"type":"intrinsic","name":"string"}},{"name":"version","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'1.0\'"},{"name":"description","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"intrinsic","name":"string"},"defaultValue":"name"},{"name":"size","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"intrinsic","name":"number"},"defaultValue":"1"},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"db","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"WebSQLDatabase"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"WebSQLDatabase"}}]}]}')},dSIC:function(e){e.exports=JSON.parse('{"name":"expo-sqlite","kind":1,"kindString":"Project","originalName":"","children":[{"name":"SQLError","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new SQLError","kind":16384,"kindString":"Constructor signature","type":{"type":"reference","name":"SQLError"}}]},{"name":"code","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"message","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"CONSTRAINT_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"DATABASE_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"QUOTA_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"SYNTAX_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"TIMEOUT_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"TOO_LARGE_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"UNKNOWN_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}},{"name":"VERSION_ERR","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"intrinsic","name":"number"}}]},{"name":"Database","kind":256,"kindString":"Interface","comment":{"shortText":"`Database` objects are returned by calls to `SQLite.openDatabase()`. Such an object represents a\\nconnection to a database on your device."},"children":[{"name":"version","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"readTransaction","kind":2048,"kindString":"Method","signatures":[{"name":"readTransaction","kind":4096,"kindString":"Call signature","parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLTransactionCallback"}},{"name":"errorCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"SQLTransactionErrorCallback"}},{"name":"successCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"transaction","kind":2048,"kindString":"Method","signatures":[{"name":"transaction","kind":4096,"kindString":"Call signature","comment":{"shortText":"Execute a database transaction."},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"text":"A function representing the transaction to perform. Takes a Transaction\\n(see below) as its only parameter, on which it can add SQL statements to execute."},"type":{"type":"reference","name":"SQLTransactionCallback"}},{"name":"errorCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"Called if an error occurred processing this transaction. Takes a single\\nparameter describing the error."},"type":{"type":"reference","name":"SQLTransactionErrorCallback"}},{"name":"successCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"Called when the transaction has completed executing on the database.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}],"extendedBy":[{"type":"reference","name":"WebSQLDatabase"}]},{"name":"SQLResultSetRowList","kind":256,"kindString":"Interface","children":[{"name":"_array","kind":1024,"kindString":"Property","comment":{"shortText":"The actual array of rows returned by the query. Can be used directly instead of\\ngetting rows through rows.item()."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"name":"length","kind":1024,"kindString":"Property","comment":{"shortText":"The number of rows returned by the query."},"type":{"type":"intrinsic","name":"number"}},{"name":"item","kind":2048,"kindString":"Method","signatures":[{"name":"item","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns the row with the given `index`. If there is no such row, returns `null`."},"parameters":[{"name":"index","kind":32768,"kindString":"Parameter","comment":{"text":"Index of row to get.\\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"any"}}]}]},{"name":"SQLTransaction","kind":256,"kindString":"Interface","comment":{"shortText":"A `SQLTransaction` object is passed in as a parameter to the `callback` parameter for the\\n`db.transaction()` method on a `Database` (see above). It allows enqueuing SQL statements to\\nperform in a database transaction."},"children":[{"name":"executeSql","kind":2048,"kindString":"Method","signatures":[{"name":"executeSql","kind":4096,"kindString":"Call signature","comment":{"shortText":"Enqueue a SQL statement to execute in the transaction. Authors are strongly recommended to make\\nuse of the `?` placeholder feature of the method to avoid against SQL injection attacks, and to\\nnever construct SQL statements on the fly."},"parameters":[{"name":"sqlStatement","kind":32768,"kindString":"Parameter","comment":{"text":"A string containing a database query to execute expressed as SQL. The string\\nmay contain `?` placeholders, with values to be substituted listed in the `arguments` parameter."},"type":{"type":"intrinsic","name":"string"}},{"name":"args","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"An array of values (numbers or strings) to substitute for `?` placeholders in the\\nSQL statement."},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"Called when the query is successfully completed during the transaction. Takes\\ntwo parameters: the transaction itself, and a `ResultSet` object (see below) with the results\\nof the query."},"type":{"type":"reference","name":"SQLStatementCallback"}},{"name":"errorCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"Called if an error occurred executing this particular query in the\\ntransaction. Takes two parameters: the transaction itself, and the error object.\\n"},"type":{"type":"reference","name":"SQLStatementErrorCallback"}}],"type":{"type":"intrinsic","name":"void"}}]}]},{"name":"WebSQLDatabase","kind":256,"kindString":"Interface","children":[{"name":"version","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Database.version"}},{"name":"exec","kind":2048,"kindString":"Method","signatures":[{"name":"exec","kind":4096,"kindString":"Call signature","parameters":[{"name":"queries","kind":32768,"kindString":"Parameter","type":{"type":"array","elementType":{"type":"reference","name":"Query"}}},{"name":"readOnly","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}},{"name":"callback","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLiteCallback"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"readTransaction","kind":2048,"kindString":"Method","signatures":[{"name":"readTransaction","kind":4096,"kindString":"Call signature","parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLTransactionCallback"}},{"name":"errorCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"SQLTransactionErrorCallback"}},{"name":"successCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"Database.readTransaction"}}],"inheritedFrom":{"type":"reference","name":"Database.readTransaction"}},{"name":"transaction","kind":2048,"kindString":"Method","signatures":[{"name":"transaction","kind":4096,"kindString":"Call signature","comment":{"shortText":"Execute a database transaction."},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"text":"A function representing the transaction to perform. Takes a Transaction\\n(see below) as its only parameter, on which it can add SQL statements to execute."},"type":{"type":"reference","name":"SQLTransactionCallback"}},{"name":"errorCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"Called if an error occurred processing this transaction. Takes a single\\nparameter describing the error."},"type":{"type":"reference","name":"SQLTransactionErrorCallback"}},{"name":"successCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"Called when the transaction has completed executing on the database.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"Database.transaction"}}],"inheritedFrom":{"type":"reference","name":"Database.transaction"}}],"extendedTypes":[{"type":"reference","name":"Database"}]},{"name":"Window","kind":256,"kindString":"Interface","children":[{"name":"openDatabase","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"openDatabase","kind":4096,"kindString":"Call signature","parameters":[{"name":"name","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"version","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"displayName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"estimatedSize","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}},{"name":"creationCallback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"DatabaseCallback"}}],"type":{"type":"reference","name":"Database"}}]}]},{"name":"DatabaseCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"database","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Database"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"Query","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"args","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}},{"name":"sql","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"ResultSet","kind":4194304,"kindString":"Type alias","comment":{"shortText":"`ResultSet` objects are returned through second parameter of the `success` callback for the\\n`tx.executeSql()` method on a `SQLTransaction` (see above)."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"insertId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The row ID of the row that the SQL statement inserted into the database, if a row was inserted."},"type":{"type":"intrinsic","name":"number"}},{"name":"rows","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"column","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}}},{"name":"rowsAffected","kind":1024,"kindString":"Property","comment":{"shortText":"The number of rows that were changed by the SQL statement."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"ResultSetError","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"error","kind":1024,"kindString":"Property","type":{"type":"reference","name":"Error"}}]}}},{"name":"SQLResultSet","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"insertId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The row ID of the row that the SQL statement inserted into the database, if a row was inserted."},"type":{"type":"intrinsic","name":"number"}},{"name":"rows","kind":1024,"kindString":"Property","type":{"type":"reference","name":"SQLResultSetRowList"}},{"name":"rowsAffected","kind":1024,"kindString":"Property","comment":{"shortText":"The number of rows that were changed by the SQL statement."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"SQLStatementCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"transaction","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLTransaction"}},{"name":"resultSet","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLResultSet"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"SQLStatementErrorCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"transaction","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLTransaction"}},{"name":"error","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLError"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"SQLTransactionCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"transaction","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLTransaction"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"SQLTransactionErrorCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"error","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SQLError"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"SQLiteCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"Error"},{"type":"literal","value":null}]}},{"name":"resultSet","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","name":"ResultSetError"},{"type":"reference","name":"ResultSet"}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"openDatabase","kind":64,"kindString":"Function","signatures":[{"name":"openDatabase","kind":4096,"kindString":"Call signature","comment":{"shortText":"Open a database, creating it if it doesn\'t exist, and return a `Database` object. On disk,\\nthe database will be created under the app\'s [documents directory](../filesystem), i.e.\\n`${FileSystem.documentDirectory}/SQLite/${name}`.\\n> The `version`, `description` and `size` arguments are ignored, but are accepted by the function\\nfor compatibility with the WebSQL specification.","returns":"\\n"},"parameters":[{"name":"name","kind":32768,"kindString":"Parameter","comment":{"text":"Name of the database file to open."},"type":{"type":"intrinsic","name":"string"}},{"name":"version","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'1.0\'"},{"name":"description","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"size","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"intrinsic","name":"number"},"defaultValue":"1"},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"db","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"WebSQLDatabase"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"WebSQLDatabase"}}]}]}')},dakO:function(e){e.exports=JSON.parse('{"name":"expo-sms","kind":1,"kindString":"Project","originalName":"","children":[{"name":"SMSAttachment","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object that is used to describe an attachment that is included with a SMS message."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"filename","kind":1024,"kindString":"Property","comment":{"shortText":"The filename of the attachment."},"type":{"type":"intrinsic","name":"string"}},{"name":"mimeType","kind":1024,"kindString":"Property","comment":{"shortText":"The mime type of the attachment such as `image/png`."},"type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"The content URI of the attachment. The URI needs be a content URI so that it can be accessed by\\nother applications outside of Expo. See [FileSystem.getContentUriAsync](./filesystem/#filesystemgetcontenturiasyncfileuri))."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"SMSOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"attachments","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SMSAttachment"},{"type":"array","elementType":{"type":"reference","name":"SMSAttachment"}}]}}]}}},{"name":"SMSResponse","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"result","kind":1024,"kindString":"Property","comment":{"shortText":"Status of SMS action invoked by the user."},"type":{"type":"union","types":[{"type":"literal","value":"unknown"},{"type":"literal","value":"sent"},{"type":"literal","value":"cancelled"}]}}]}}},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determines whether SMS is available. Always returns `false` in the iOS simulator, and in browser.","returns":"Returns a promise that fulfils with a `boolean`, indicating whether SMS is available on this device.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst isAvailable = await SMS.isAvailableAsync();\\nif (isAvailable) {\\n  // do your SMS stuff here\\n} else {\\n  // misfortune... there\'s no SMS available on this device\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"sendSMSAsync","kind":64,"kindString":"Function","signatures":[{"name":"sendSMSAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Opens the default UI/app for sending SMS messages with prefilled addresses and message.","returns":"Returns a Promise that fulfils with the SMS action is invoked by the user, with corresponding result:\\n- If the user cancelled the SMS sending process: `{ result: \'cancelled\' }`.\\n- If the user has sent/scheduled message for sending: `{ result: \'sent\' }`.\\n- If the status of the SMS message cannot be determined: `{ result: \'unknown\' }`.\\n\\nAndroid does not provide information about the status of the SMS message, so on Android devices\\nthe Promise will always resolve with { result: \'unknown\' }.\\n\\n> Note: The only feedback collected by this module is whether any message has been sent. That\\nmeans we do not check actual content of message nor recipients list.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst { result } = await SMS.sendSMSAsync(\\n  [\'0123456789\', \'9876543210\'],\\n  \'My sample HelloWorld message\',\\n  {\\n    attachments: {\\n      uri: \'path/myfile.png\',\\n      mimeType: \'image/png\',\\n      filename: \'myfile.png\',\\n    },\\n  }\\n);\\n```\\n"}]},"parameters":[{"name":"addresses","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of addresses (phone numbers) or single address passed as strings. Those\\nwould appear as recipients of the prepared message."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"name":"message","kind":32768,"kindString":"Parameter","comment":{"shortText":"Message to be sent."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"A `SMSOptions` object defining additional SMS configuration options.\\n"},"type":{"type":"reference","name":"SMSOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"SMSResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},"deF/":function(e,w){e.exports=c;var n=/\r?\n|\r/g;function c(p,d){for(var a=[],m=0,r=0,s;s=n.exec(p);)i(p.slice(m,s.index)),a.push(s[0]),m=s.index+s[0].length,r++;return i(p.slice(m)),a.join("");function i(o){a.push(d(o,r,!o))}}},di9R:function(e,w,n){"use strict";e.exports=a;var c=n("uxQZ"),p=n("X0Jp"),d=n("UFN4");function a(m){for(var r=m.footnoteById,s=m.footnoteOrder,i=s.length,o=-1,t=[],l,k,g,h;++o<i;)l=r[s[o].toUpperCase()],!!l&&(g=l.children.concat(),h=g[g.length-1],k={type:"link",url:"#fnref-"+l.identifier,data:{hProperties:{className:["footnote-backref"]}},children:[{type:"text",value:"\u21A9"}]},(!h||h.type!=="paragraph")&&(h={type:"paragraph",children:[]},g.push(h)),h.children.push(k),t.push({type:"listItem",data:{hProperties:{id:"fn-"+l.identifier}},children:g,position:l.position}));return t.length===0?null:m(null,"div",{className:["footnotes"]},d([c(m),p(m,{type:"list",ordered:!0,children:t})],!0))}},dlkv:function(e){e.exports=JSON.parse('{"name":"expo-in-app-purchases","kind":1,"kindString":"Project","originalName":"","children":[{"name":"IAPErrorCode","kind":8,"kindString":"Enumeration","comment":{"shortText":"Abstracts over the Android [Billing Response Codes](https://developer.android.com/reference/com/android/billingclient/api/BillingClient.BillingResponseCode)\\nand iOS [SKErrorCodes](https://developer.apple.com/documentation/storekit/skerrorcode?language=objc)."},"children":[{"name":"BILLING_UNAVAILABLE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Billing API version is not supported for the type requested. See `BILLING_UNAVAILABLE` on\\nAndroid."},"defaultValue":"5"},{"name":"CLOUD_SERVICE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Apple Cloud Service connection failed or invalid permissions.\\nSee `SKErrorCloudServicePermissionDenied`, `SKErrorCloudServiceNetworkConnectionFailed` and\\n`SKErrorCloudServiceRevoked` on iOS."},"defaultValue":"10"},{"name":"DEVELOPER_ERROR","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Invalid arguments provided to the API. This error can also indicate that the application was\\nnot correctly signed or properly set up for In-app Billing in Google Play. See `DEVELOPER_ERROR`\\non Android."},"defaultValue":"7"},{"name":"INVALID_IDENTIFIER","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The offer identifier or price specified in App Store Connect is no longer valid. See\\n`SKErrorInvalidSignature`, `SKErrorInvalidOfferPrice`, `SKErrorInvalidOfferIdentifier` on iOS."},"defaultValue":"13"},{"name":"ITEM_ALREADY_OWNED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Failure to purchase since item is already owned. See `ITEM_ALREADY_OWNED` on Android."},"defaultValue":"8"},{"name":"ITEM_NOT_OWNED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Failure to consume since item is not owned. See `ITEM_NOT_OWNED` on Android."},"defaultValue":"9"},{"name":"ITEM_UNAVAILABLE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Requested product is not available for purchase. See `SKErrorStoreProductNotAvailable` on iOS,\\n`ITEM_UNAVAILABLE` on Android."},"defaultValue":"6"},{"name":"MISSING_PARAMS","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Parameters are missing in a payment discount. See `SKErrorMissingOfferParams` on iOS."},"defaultValue":"14"},{"name":"PAYMENT_INVALID","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The feature is not allowed on the current device, or the user is not authorized to make payments.\\nSee `SKErrorClientInvalid`, `SKErrorPaymentInvalid`, and `SKErrorPaymentNotAllowed` on iOS,\\n`FEATURE_NOT_SUPPORTED` on Android."},"defaultValue":"1"},{"name":"PRIVACY_UNACKNOWLEDGED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The user has not yet acknowledged Apple\u2019s privacy policy for Apple Music. See\\n`SKErrorPrivacyAcknowledgementRequired` on iOS."},"defaultValue":"11"},{"name":"SERVICE_DISCONNECTED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Play Store service is not connected now. See `SERVICE_DISCONNECTED` on Android."},"defaultValue":"2"},{"name":"SERVICE_TIMEOUT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The request has reached the maximum timeout before Google Play responds. See `SERVICE_TIMEOUT`\\non Android."},"defaultValue":"4"},{"name":"SERVICE_UNAVAILABLE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Network connection is down. See `SERVICE_UNAVAILABLE` on Android."},"defaultValue":"3"},{"name":"UNAUTHORIZED_REQUEST","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The app is attempting to use a property for which it does not have the required entitlement.\\nSee `SKErrorUnauthorizedRequestData` on iOS."},"defaultValue":"12"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An unknown or unexpected error occurred. See `SKErrorUnknown` on iOS, `ERROR` on Android."},"defaultValue":"0"}]},{"name":"IAPItemType","kind":8,"kindString":"Enumeration","children":[{"name":"PURCHASE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"One time purchase or consumable."},"defaultValue":"0"},{"name":"SUBSCRIPTION","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Subscription."},"defaultValue":"1"}]},{"name":"IAPResponseCode","kind":8,"kindString":"Enumeration","children":[{"name":"DEFERRED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"__iOS Only.__ Purchase was deferred."},"defaultValue":"3"},{"name":"ERROR","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An error occurred. Check the `errorCode` for additional details."},"defaultValue":"2"},{"name":"OK","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Response returned successfully."},"defaultValue":"0"},{"name":"USER_CANCELED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"User canceled the purchase."},"defaultValue":"1"}]},{"name":"InAppPurchaseState","kind":8,"kindString":"Enumeration","children":[{"name":"DEFERRED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"__iOS Only.__ The transaction has been received, but its final status is pending external\\naction such as the Ask to Buy feature where a child initiates a new purchase and has to wait\\nfor the family organizer\'s approval. Update your UI to show the deferred state, and wait for\\nanother callback that indicates the final status"},"defaultValue":"4"},{"name":"FAILED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The transaction failed."},"defaultValue":"2"},{"name":"PURCHASED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The App Store successfully processed payment."},"defaultValue":"1"},{"name":"PURCHASING","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The transaction is being processed."},"defaultValue":"0"},{"name":"RESTORED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"__iOS Only.__ This transaction restores content previously purchased by the user. Read the\\n`originalTransaction` properties to obtain information about the original purchase."},"defaultValue":"3"}]},{"name":"IAPItemDetails","kind":256,"kindString":"Interface","comment":{"shortText":"Details about the purchasable item that you inputted in App Store Connect and Google Play Console."},"children":[{"name":"description","kind":1024,"kindString":"Property","comment":{"shortText":"User facing description about the item.","tags":[{"tag":"example","text":"`Currency used to trade for items in the game`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"price","kind":1024,"kindString":"Property","comment":{"shortText":"The price formatted with the local currency symbol. Use this to display the price, not to make\\ncalculations.","tags":[{"tag":"example","text":"`$1.99`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"priceAmountMicros","kind":1024,"kindString":"Property","comment":{"shortText":"The price in micro-units, where 1,000,000 micro-units equal one unit of the currency. Use this\\nfor calculations.","tags":[{"tag":"example","text":"`1990000`\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"priceCurrencyCode","kind":1024,"kindString":"Property","comment":{"shortText":"The local currency code from the ISO 4217 code list.","tags":[{"tag":"example","text":"`USD`, `CAN`, `RUB`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"productId","kind":1024,"kindString":"Property","comment":{"shortText":"The product ID representing an item inputted in App Store Connect and Google Play Console.","tags":[{"tag":"example","text":"`gold`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"subscriptionPeriod","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The length of a subscription period specified in ISO 8601 format. In-app purchases return `P0D`.\\nOn iOS, non-renewable subscriptions also return `P0D`.","tags":[{"tag":"example","text":"`P0D`, `P6W`, `P3M`, `P6M`, `P1Y`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"title","kind":1024,"kindString":"Property","comment":{"shortText":"The title of the purchasable item. This should be displayed to the user and may be different\\nfrom the `productId`.","tags":[{"tag":"example","text":"`Gold Coin`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"The type of the purchase. Note that this is not very accurate on iOS as this data is only\\navailable on iOS 11.2 and higher and non-renewable subscriptions always return\\n`IAPItemType.PURCHASE`."},"type":{"type":"reference","name":"IAPItemType"}}]},{"name":"IAPPurchaseItemOptions","kind":256,"kindString":"Interface","comment":{"shortText":"The purchaseItemAsync billing context on Android"},"children":[{"name":"accountIdentifiers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__Android Only.__ account identifiers, both need to be provided to work with Google Play"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"obfuscatedAccountId","kind":1024,"kindString":"Property","comment":{"shortText":"__Android Only.__ the obfuscated account id of the user\'s Google Play account."},"type":{"type":"intrinsic","name":"string"}},{"name":"obfuscatedProfileId","kind":1024,"kindString":"Property","comment":{"shortText":"__Android Only.__ the obfuscated profile id of the user\'s Google Play account."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"isVrPurchaseFlow","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__Android Only.__ whether the purchase is happening in a VR context."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"oldPurchaseToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__Android Only.__ the `purchaseToken` of the purchase that the user is upgrading or downgrading from."},"type":{"type":"intrinsic","name":"string"}}]},{"name":"IAPQueryResponse","kind":256,"kindString":"Interface","comment":{"shortText":"The response type for queries and purchases."},"children":[{"name":"errorCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"`IAPErrorCode` that provides more detail on why an error occurred. `null` unless `responseCode`\\nis `IAPResponseCode.ERROR`."},"type":{"type":"reference","name":"IAPErrorCode"}},{"name":"responseCode","kind":1024,"kindString":"Property","comment":{"shortText":"The response code from a query or purchase."},"type":{"type":"reference","name":"IAPResponseCode"}},{"name":"results","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The array containing the `InAppPurchase` or `IAPItemDetails` objects requested depending on\\nthe method."},"type":{"type":"array","elementType":{"type":"reference","name":"QueryResult"}}}],"typeParameter":[{"name":"QueryResult","kind":131072,"kindString":"Type parameter"}]},{"name":"InAppPurchase","kind":256,"kindString":"Interface","children":[{"name":"acknowledged","kind":1024,"kindString":"Property","comment":{"shortText":"Boolean indicating whether this item has been \\"acknowledged\\" via `finishTransactionAsync`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"orderId","kind":1024,"kindString":"Property","comment":{"shortText":"A string that uniquely identifies a successful payment transaction."},"type":{"type":"intrinsic","name":"string"}},{"name":"originalOrderId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__iOS Only.__ Represents the original order ID for restored purchases."},"type":{"type":"intrinsic","name":"string"}},{"name":"originalPurchaseTime","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__iOS Only.__ Represents the original purchase time for restored purchases."},"type":{"type":"intrinsic","name":"string"}},{"name":"packageName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__Android Only.__ The application package from which the purchase originated.","tags":[{"tag":"example","text":"`com.example.myapp`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"productId","kind":1024,"kindString":"Property","comment":{"shortText":"The product ID representing an item inputted in Google Play Console and App Store Connect.","tags":[{"tag":"example","text":"`gold`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"purchaseState","kind":1024,"kindString":"Property","comment":{"shortText":"The state of the purchase."},"type":{"type":"reference","name":"InAppPurchaseState"}},{"name":"purchaseTime","kind":1024,"kindString":"Property","comment":{"shortText":"The time the product was purchased, in milliseconds since the epoch (Jan 1, 1970)."},"type":{"type":"intrinsic","name":"number"}},{"name":"purchaseToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__Android Only.__ A token that uniquely identifies a purchase for a given item and user pair."},"type":{"type":"intrinsic","name":"string"}},{"name":"transactionReceipt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__iOS Only.__ The App Store receipt found in the main bundle encoded as a Base64 String."},"type":{"type":"intrinsic","name":"string"}}]},{"name":"IAPPurchaseHistoryOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"useGooglePlayCache","kind":1024,"kindString":"Property","comment":{"shortText":"__Android Only.__ A boolean that indicates whether or not you want to make a network request\\nto sync expired/consumed purchases and those on other devices.","text":"- If set to `true`, this method returns purchase details **only** for the user\'s currently\\n  owned items (active subscriptions and non-consumed one-time purchases). If set to `false`, it\\n  will make a network request and return the most recent purchase made by the user for each\\n  product, even if that purchase is expired, canceled, or consumed.\\n- The return type if this is `false` is actually a subset of when it\'s `true`. This is because\\n  Android returns a [`PurchaseHistoryRecord`](https://developer.android.com/reference/com/android/billingclient/api/PurchaseHistoryRecord)\\n  which only contains the purchase time, purchase token, and product ID, rather than all of the\\n  attributes found in the [`InAppPurchase`](#inapppurchase) type.\\n","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"QueryResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"InAppPurchase"},{"type":"reference","name":"IAPItemDetails"}]}},{"name":"connectAsync","kind":64,"kindString":"Function","signatures":[{"name":"connectAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Connects to the app store and performs all of the necessary initialization to prepare the module\\nto accept payments.\\nThis method must be called before anything else, otherwise an error will be thrown.","returns":"Returns a Promise that fulfills when connection is established.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"disconnectAsync","kind":64,"kindString":"Function","signatures":[{"name":"disconnectAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Disconnects from the app store and cleans up memory internally. Call this when you are done using\\nthe In-App Purchases API in your app.","text":"No other methods can be used until the next time you call `connectAsync`.\\n","returns":"Returns a Promise that fulfils when disconnecting process is finished.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"finishTransactionAsync","kind":64,"kindString":"Function","signatures":[{"name":"finishTransactionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Marks a transaction as completed. This _must_ be called on successful purchases only after you\\nhave verified the transaction and unlocked the functionality purchased by the user.","text":"On Android, this will either \\"acknowledge\\" or \\"consume\\" the purchase depending on the value of\\n`consumeItem`. Acknowledging indicates that this is a one time purchase (e.g. premium upgrade),\\nwhereas consuming a purchase allows it to be bought more than once. You cannot buy an item again\\nuntil it\'s consumed. Both consuming and acknowledging let Google know that you are done\\nprocessing the transaction. If you do not acknowledge or consume a purchase within three days,\\nthe user automatically receives a refund, and Google Play revokes the purchase.\\n\\nOn iOS, this will mark the transaction as finished and prevent it from reappearing in the\\npurchase listener callback. It will also let the user know their purchase was successful.\\n\\n`consumeItem` is ignored on iOS because you must specify whether an item is a consumable or\\nnon-consumable in its product entry in App Store Connect, whereas on Android you indicate an item\\nis consumable at runtime.\\n\\n> Make sure that you verify each purchase to prevent faulty transactions and protect against\\nfraud _before_ you call `finishTransactionAsync`. On iOS, you can validate the purchase\'s\\n`transactionReceipt` with the App Store as described [here](https://developer.apple.com/library/archive/releasenotes/General/ValidateAppStoreReceipt/Chapters/ValidateRemotely.html).\\nOn Android, you can verify your purchase using the Google Play Developer API as described [here](https://developer.android.com/google/play/billing/billing_best_practices#validating-purchase).\\n","tags":[{"tag":"example","text":"\\n```ts\\nif (!purchase.acknowledged) {\\n  await finishTransactionAsync(purchase, false); // or true for consumables\\n}\\n```"}]},"parameters":[{"name":"purchase","kind":32768,"kindString":"Parameter","comment":{"shortText":"The purchase you want to mark as completed."},"type":{"type":"reference","name":"InAppPurchase"}},{"name":"consumeItem","kind":32768,"kindString":"Parameter","comment":{"shortText":"__Android Only.__ A boolean indicating whether or not the item is a consumable.\\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getBillingResponseCodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBillingResponseCodeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns the last response code. This is more descriptive on Android since there is native support\\nfor retrieving the billing response code.","text":"On Android, this will return `IAPResponseCode.ERROR` if you are not connected or one of the\\nbilling response codes found [here](https://developer.android.com/reference/com/android/billingclient/api/BillingClient.BillingResponseCode)\\nif you are.\\n\\nOn iOS, this will return `IAPResponseCode.OK` if you are connected or `IAPResponseCode.ERROR` if\\nyou are not. Therefore, it\'s a good way to test whether or not you are connected and it\'s safe to\\nuse the other methods.\\n","returns":"Returns a Promise that fulfils with an number representing the `IAPResponseCode`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst responseCode = await getBillingResponseCodeAsync();\\n if (responseCode !== IAPResponseCode.OK) {\\n  // Either we\'re not connected or the last response returned an error (Android)\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"IAPResponseCode"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getProductsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getProductsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Retrieves the product details (price, description, title, etc) for each item that you inputted in\\nthe Google Play Console and App Store Connect. These products are associated with your app\'s\\nspecific Application/Bundle ID and cannot be retrieved from other apps. This queries both in-app\\nproducts and subscriptions so there\'s no need to pass those in separately.","text":"You must retrieve an item\'s details before you attempt to purchase it via `purchaseItemAsync`.\\nThis is a prerequisite to buying a product even if you have the item details bundled in your app\\nor on your own servers.\\n\\nIf any of the product IDs passed in are invalid and don\'t exist, you will not receive an\\n`IAPItemDetails` object corresponding to that ID. For example, if you pass in four product IDs\\nin but one of them has a typo, you will only get three response objects back.\\n","returns":"Returns a Promise that resolves with an `IAPQueryResponse` containing `IAPItemDetails`\\nobjects in the `results` array.\\n","tags":[{"tag":"example","text":"\\n```ts\\n// These product IDs must match the item entries you created in the App Store Connect and Google Play Console.\\n// If you want to add more or edit their attributes you can do so there.\\n\\nconst items = Platform.select({\\n  ios: [\\n    \'dev.products.gas\',\\n    \'dev.products.premium\',\\n    \'dev.products.gold_monthly\',\\n    \'dev.products.gold_yearly\',\\n  ],\\n  android: [\'gas\', \'premium\', \'gold_monthly\', \'gold_yearly\'],\\n});\\n\\n // Retrieve product details\\nconst { responseCode, results } = await getProductsAsync(items);\\nif (responseCode === IAPResponseCode.OK) {\\n  this.setState({ items: results });\\n}\\n```\\n"}]},"parameters":[{"name":"itemList","kind":32768,"kindString":"Parameter","comment":{"shortText":"The list of product IDs whose details you want to query from the app store."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"IAPItemDetails"}],"name":"IAPQueryResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getPurchaseHistoryAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPurchaseHistoryAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Retrieves the user\'s purchase history.","text":"Please note that on iOS, StoreKit actually creates a new transaction object every time you\\nrestore completed transactions, therefore the `purchaseTime` and `orderId` may be inaccurate if\\nit\'s a restored purchase. If you need the original transaction\'s information you can use\\n`originalPurchaseTime` and `originalOrderId`, but those will be 0 and an empty string\\nrespectively if it is the original transaction.\\n\\nYou should not call this method on launch because restoring purchases on iOS prompts for the\\nuser\u2019s App Store credentials, which could interrupt the flow of your app.\\n","returns":"Returns a `Promise` that fulfills with an `IAPQueryResponse` that contains an array of\\n`InAppPurchase` objects.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An optional `PurchaseHistoryOptions` object."},"type":{"type":"reference","name":"IAPPurchaseHistoryOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"InAppPurchase"}],"name":"IAPQueryResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"purchaseItemAsync","kind":64,"kindString":"Function","signatures":[{"name":"purchaseItemAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Initiates the purchase flow to buy the item associated with this `productId`. This will display\\na prompt to the user that will allow them to either buy the item or cancel the purchase. When the\\npurchase completes, the result must be handled in the callback that you passed in to\\n[`setPurchaseListener`](#setpurchaselistener).","text":"Remember, you have to query an item\'s details via `getProductsAsync` and set the purchase\\nlistener before you attempt to buy an item.\\n\\n> [Apple](https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/StoreKitGuide/Chapters/Subscriptions.html)\\nand [Google](https://developer.android.com/google/play/billing/billing_subscriptions) both have\\ntheir own workflows for dealing with subscriptions. In general, you can deal with them in the\\nsame way you do one-time purchases but there are caveats including if a user decides to cancel\\nbefore the expiration date. To check the status of a subscription, you can use the [Google Play Developer](https://developers.google.com/android-publisher/api-ref/purchases/subscriptions/get)\\nAPI on Android and the [Status Update Notifications](https://developer.apple.com/documentation/storekit/in-app_purchase/enabling_status_update_notifications)\\nservice on iOS.\\n","returns":"Returns a `Promise` that resolves when the purchase is done processing. To get the actual\\nresult of the purchase, you must handle purchase events inside the `setPurchaseListener` callback.\\n"},"parameters":[{"name":"itemId","kind":32768,"kindString":"Parameter","comment":{"shortText":"The product ID of the item you want to buy."},"type":{"type":"intrinsic","name":"string"}},{"name":"details","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"__Android Only.__ details for billing flow is an object with the following properties:\\n - \'oldPurchaseToken\' : the `purchaseToken` of the purchase that the user is upgrading or downgrading from. This is mandatory\\n   for replacing an old subscription such as when a user upgrades from a monthly subscription to a yearly\\n   one that provides the same content. You can get the purchase token from [`getPurchaseHistoryAsync`](#inapppurchasesgetpurchasehistoryasyncrefresh-boolean).\\n - \'accountIdentifiers\' : account identifiers. Note: both ids must be provided for payments to work on Google Play.\\n     - \'obfuscatedAccountId\' : the obfuscated account ID of the user in the app\'s system.\\n     - \'obfuscatedProfileId\' : the obfuscated profile ID of the user in the app\'s system.\\n - \'isVrPurchaseFlow\' : whether the purchase is happening in a VR context."},"type":{"type":"reference","name":"IAPPurchaseItemOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setPurchaseListener","kind":64,"kindString":"Function","signatures":[{"name":"setPurchaseListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a callback that handles incoming purchases. This must be done before any calls to\\n`purchaseItemAsync` are made, otherwise those transactions will be lost. You should **set the\\npurchase listener globally**, and not inside a specific screen, to ensure that you receive\\nincomplete transactions, subscriptions, and deferred transactions.","text":"Purchases can either be instantiated by the user (via `purchaseItemAsync`) or they can come from\\nsubscription renewals or unfinished transactions on iOS (e.g. if your app exits before\\n`finishTransactionAsync` was called).\\n\\n> Note that on iOS, the results array will only contain one item: the one that was just purchased.\\nOn Android, it will return both finished and unfinished purchases, hence the array return type.\\nThis is because the Google Play Billing API detects purchase updates but doesn\'t differentiate\\nwhich item was just purchased, therefore there\'s no good way to tell but in general it will be\\nwhichever purchase has `acknowledged` set to `false`, so those are the ones that you have to\\nhandle in the response. Consumed items will not be returned however, so if you consume an item\\nthat record will be gone and no longer appear in the results array when a new purchase is made.\\n","tags":[{"tag":"example","text":"\\n```ts\\n// Set purchase listener\\n setPurchaseListener(({ responseCode, results, errorCode }) => {\\n  // Purchase was successful\\n  if (responseCode === IAPResponseCode.OK) {\\n    results.forEach(purchase => {\\n      if (!purchase.acknowledged) {\\n        console.log(`Successfully purchased ${purchase.productId}`);\\n        // Process transaction here and unlock content...\\n\\n        // Then when you\'re done\\n        finishTransactionAsync(purchase, true);\\n      }\\n    });\\n  } else if (responseCode === IAPResponseCode.USER_CANCELED) {\\n    console.log(\'User canceled the transaction\');\\n  } else if (responseCode === IAPResponseCode.DEFERRED) {\\n    console.log(\'User does not have permissions to buy but requested parental approval (iOS only)\');\\n  } else {\\n    console.warn(`Something went wrong with the purchase. Received errorCode ${errorCode}`);\\n  }\\n});\\n```"}]},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"shortText":"The callback function you want to run when there is an update to the purchases.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"result","kind":32768,"kindString":"Parameter","type":{"type":"reference","typeArguments":[{"type":"reference","name":"InAppPurchase"}],"name":"IAPQueryResponse"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}]}')},dnFg:function(e){e.exports=JSON.parse('{"name":"expo-haptics","kind":1,"kindString":"Project","originalName":"","children":[{"name":"ImpactFeedbackStyle","kind":8,"kindString":"Enumeration","comment":{"shortText":"The mass of the objects in the collision simulated by a UIImpactFeedbackGenerator object\\n[`UINotificationFeedbackStyle`](https://developer.apple.com/documentation/uikit/uiimpactfeedbackstyle)"},"children":[{"name":"Heavy","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A collision between large, heavy user interface elements."},"defaultValue":"\\"heavy\\""},{"name":"Light","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A collision between small, light user interface elements."},"defaultValue":"\\"light\\""},{"name":"Medium","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A collision between moderately sized user interface elements."},"defaultValue":"\\"medium\\""}]},{"name":"NotificationFeedbackType","kind":8,"kindString":"Enumeration","comment":{"shortText":"The type of notification feedback generated by a UINotificationFeedbackGenerator object.\\n[`UINotificationFeedbackType`](https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype)"},"children":[{"name":"Error","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A notification feedback type indicating that a task has failed."},"defaultValue":"\\"error\\""},{"name":"Success","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A notification feedback type indicating that a task has completed successfully."},"defaultValue":"\\"success\\""},{"name":"Warning","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A notification feedback type indicating that a task has produced a warning."},"defaultValue":"\\"warning\\""}]},{"name":"impactAsync","kind":64,"kindString":"Function","signatures":[{"name":"impactAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"A `Promise` which fulfils once native size haptics functionality is triggered.\\n"},"parameters":[{"name":"style","kind":32768,"kindString":"Parameter","comment":{"shortText":"A collision indicator that on iOS is directly mapped to [`UIImpactFeedbackStyle`](https://developer.apple.com/documentation/uikit/uiimpactfeedbackstyle),\\nwhile on Android these are simulated using [Vibrator](https://developer.android.com/reference/android/os/Vibrator).\\nYou can use one of `Haptics.ImpactFeedbackStyle.{Light, Medium, Heavy}`."},"type":{"type":"reference","name":"ImpactFeedbackStyle"},"defaultValue":"ImpactFeedbackStyle.Medium"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"notificationAsync","kind":64,"kindString":"Function","signatures":[{"name":"notificationAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"The kind of notification response used in the feedback.","returns":"A `Promise` which fulfils once native size haptics functionality is triggered.\\n"},"parameters":[{"name":"type","kind":32768,"kindString":"Parameter","comment":{"shortText":"A notification feedback type that on iOS is directly mapped to [UINotificationFeedbackType](https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype),\\nwhile on Android these are simulated using [Vibrator](https://developer.android.com/reference/android/os/Vibrator).\\nYou can use one of `Haptics.NotificationFeedbackType.{Success, Warning, Error}`."},"type":{"type":"reference","name":"NotificationFeedbackType"},"defaultValue":"NotificationFeedbackType.Success"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"selectionAsync","kind":64,"kindString":"Function","signatures":[{"name":"selectionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Used to let a user know when a selection change has been registered.","returns":"A `Promise` which fulfils once native size haptics functionality is triggered.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},e1Am:function(e,w,n){"use strict";e.exports=p;var c=n("2jS9");function p(d,a){return d(a,"strong",c(d,a))}},e4Dq:function(e){e.exports=JSON.parse('{"name":"expo-updates","kind":1,"kindString":"Project","originalName":"","children":[{"name":"UpdateEventType","kind":8,"kindString":"Enumeration","comment":{"shortText":"The types of update-related events."},"children":[{"name":"ERROR","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An error occurred trying to fetch the latest update."},"defaultValue":"\\"error\\""},{"name":"NO_UPDATE_AVAILABLE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"No updates are available, and the most up-to-date update is already running."},"defaultValue":"\\"noUpdateAvailable\\""},{"name":"UPDATE_AVAILABLE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A new update has finished downloading to local storage. If you would like to start using this\\nupdate at any point before the user closes and restarts the app on their own, you can call\\n[`Updates.reloadAsync()`](#reloadasync) to launch this new update."},"defaultValue":"\\"updateAvailable\\""}]},{"name":"UpdateCheckResult","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The result of checking for a new update."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isAvailable","kind":1024,"kindString":"Property","comment":{"shortText":"`true` if an update is available, `false` if the app is already running the latest available\\nupdate."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"manifest","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `isAvailable` is `true`, the manifest of the available update, and `undefined` otherwise."},"type":{"type":"reference","name":"Manifest"}}]}}},{"name":"UpdateEvent","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object that is passed into each event listener when an auto-update check occurs."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"manifest","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `type` is `Updates.UpdateEventType.UPDATE_AVAILABLE`, the manifest of the newly downloaded\\nupdate, and `undefined` otherwise."},"type":{"type":"reference","name":"Manifest"}},{"name":"message","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `type` is `Updates.UpdateEventType.ERROR`, the error message, and `undefined` otherwise."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the event."},"type":{"type":"reference","name":"UpdateEventType"}}]}}},{"name":"UpdateFetchResult","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The result of fetching a new update."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isNew","kind":1024,"kindString":"Property","comment":{"shortText":"`true` if the fetched bundle is new (that is, a different version than what\'s currently\\nrunning), `false` otherwise."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"manifest","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `isNew` is `true`, the manifest of the newly downloaded update, and `undefined` otherwise."},"type":{"type":"reference","name":"Manifest"}}]}}},{"name":"channel","kind":32,"kindString":"Variable","comment":{"shortText":"The channel name of the current build, if configured for use with EAS Update. Null otherwise."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"createdAt","kind":32,"kindString":"Variable","comment":{"shortText":"If `expo-updates` is enabled, this is a `Date` object representing the creation time of the update that\'s currently running (whether it was embedded or downloaded at runtime).","text":"In development mode, or any other environment in which `expo-updates` is disabled, this value is\\nnull.\\n"},"type":{"type":"union","types":[{"type":"reference","name":"Date"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"isEmergencyLaunch","kind":32,"kindString":"Variable","comment":{"shortText":"`expo-updates` does its very best to always launch monotonically newer versions of your app so\\nyou don\'t need to worry about backwards compatibility when you put out an update. In very rare\\ncases, it\'s possible that `expo-updates` may need to fall back to the update that\'s embedded in\\nthe app binary, even after newer updates have been downloaded and run (an \\"emergency launch\\").\\nThis boolean will be `true` if the app is launching under this fallback mechanism and `false`\\notherwise. If you are concerned about backwards compatibility of future updates to your app, you\\ncan use this constant to provide special behavior for this rare case."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"..."},{"name":"manifest","kind":32,"kindString":"Variable","comment":{"shortText":"If `expo-updates` is enabled, this is the\\n[manifest](/guides/how-expo-works#expo-development-server) object for the update that\'s currently\\nrunning.","text":"In development mode, or any other environment in which `expo-updates` is disabled, this object is\\nempty.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Manifest"}],"name":"Partial"},"defaultValue":"..."},{"name":"releaseChannel","kind":32,"kindString":"Variable","comment":{"shortText":"The name of the release channel currently configured in this standalone or bare app when using\\nclassic updates. When using Expo Updates, the value of this field is always `\\"default\\"`."},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"runtimeVersion","kind":32,"kindString":"Variable","comment":{"shortText":"The runtime version of the current build."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"updateId","kind":32,"kindString":"Variable","comment":{"shortText":"The UUID that uniquely identifies the currently running update if `expo-updates` is enabled. The\\nUUID is represented in its canonical string form (`xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx`) and\\nwill always use lowercase letters. In development mode, or any other environment in which\\n`expo-updates` is disabled, this value is `null`."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"addListener","kind":64,"kindString":"Function","signatures":[{"name":"addListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Adds a callback to be invoked when updates-related events occur (such as upon the initial app\\nload) due to auto-update settings chosen at build-time.","returns":"An `EventSubscription` object on which you can call `remove()` to unsubscribe the\\nlistener.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"A function that will be invoked with an [`UpdateEvent`](#updateevent) instance\\nand should not return any value."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"UpdateEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"EventSubscription"}}]},{"name":"checkForUpdateAsync","kind":64,"kindString":"Function","signatures":[{"name":"checkForUpdateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks the server to see if a newly deployed update to your project is available. Does not\\nactually download the update. This method cannot be used in development mode, and the returned\\npromise will be rejected if you try to do so.","text":"Checking for an update uses a device\'s bandwidth and battery life like any network call.\\nAdditionally, updates served by Expo may be rate limited. A good rule of thumb to check for\\nupdates judiciously is to check when the user launches or foregrounds the app. Avoid polling for\\nupdates in a frequent loop.\\n","returns":"A promise that fulfills with an [`UpdateCheckResult`](#updatecheckresult) object.\\n\\nThe promise rejects if the app is in development mode, or if there is an unexpected error or\\ntimeout communicating with the server.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"UpdateCheckResult"}],"name":"Promise"}}]},{"name":"fetchUpdateAsync","kind":64,"kindString":"Function","signatures":[{"name":"fetchUpdateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Downloads the most recently deployed update to your project from server to the device\'s local\\nstorage. This method cannot be used in development mode, and the returned promise will be\\nrejected if you try to do so.","returns":"A promise that fulfills with an [`UpdateFetchResult`](#updatefetchresult) object.\\n\\nThe promise rejects if the app is in development mode, or if there is an unexpected error or\\ntimeout communicating with the server.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"UpdateFetchResult"}],"name":"Promise"}}]},{"name":"reloadAsync","kind":64,"kindString":"Function","signatures":[{"name":"reloadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Instructs the app to reload using the most recently downloaded version. This is useful for\\ntriggering a newly downloaded update to launch without the user needing to manually restart the\\napp.","text":"It is not recommended to place any meaningful logic after a call to `await\\nUpdates.reloadAsync()`. This is because the promise is resolved after verifying that the app can\\nbe reloaded, and immediately before posting an asynchronous task to the main thread to actually\\nreload the app. It is unsafe to make any assumptions about whether any more JS code will be\\nexecuted after the `Updates.reloadAsync` method call resolves, since that depends on the OS and\\nthe state of the native module and main threads.\\n\\nThis method cannot be used in development mode, and the returned promise will be rejected if you\\ntry to do so.\\n","returns":"A promise that fulfills right before the reload instruction is sent to the JS runtime, or\\nrejects if it cannot find a reference to the JS runtime. If the promise is rejected in production\\nmode, it most likely means you have installed the module incorrectly. Double check you\'ve\\nfollowed the installation instructions. In particular, on iOS ensure that you set the `bridge`\\nproperty on `EXUpdatesAppController` with a pointer to the `RCTBridge` you want to reload, and on\\nAndroid ensure you either call `UpdatesController.initialize` with the instance of\\n`ReactApplication` you want to reload, or call `UpdatesController.setReactNativeHost` with the\\nproper instance of `ReactNativeHost`.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},e9iv:function(e){e.exports=JSON.parse('{"name":"expo-barcode-scanner","kind":1,"kindString":"Project","originalName":"","children":[{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"BarCodeScanner","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new BarCodeScanner","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"reference","name":"BarCodeScannerProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}]}}],"type":{"type":"reference","name":"BarCodeScanner"},"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}},{"name":"new BarCodeScanner","kind":16384,"kindString":"Constructor signature","comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BarCodeScannerProps"}},{"name":"context","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"BarCodeScanner"},"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"lastEvents","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"defaultValue":"{}"},{"name":"lastEventsTimes","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"defaultValue":"{}"},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"React.ReactNode","package":"@types/react","name":"ReactNode"}}]}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","qualifiedName":"React.ReactInstance","package":"@types/react","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"Constants","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"BarCodeType","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}},{"name":"Type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}}]}},"defaultValue":"..."},{"name":"ConversionTables","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"},"defaultValue":"Type"}]}},"defaultValue":"..."},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"React.Context","package":"@types/react","name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"defaultProps","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"barCodeTypes","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}},"defaultValue":"..."},{"name":"type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"},"defaultValue":"Type.back"}]}},"defaultValue":"..."},{"name":"usePermissions","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a new permission hook with the permission methods built-in.\\nThis can be used to quickly create specific permission hooks in every module.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = BarCodeScanner.usePermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}},"defaultValue":"..."},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"React.ErrorInfo","package":"@types/react","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"render","kind":2048,"kindString":"Method","signatures":[{"name":"render","kind":4096,"kindString":"Call signature","type":{"type":"reference","qualifiedName":"global.JSX.Element","package":"@types/react","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","qualifiedName":"K","package":"@types/react","name":"K"}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","qualifiedName":"K","package":"@types/react","name":"K"}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}},{"name":"getPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing the camera.","returns":"Return a promise that fulfills to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing the camera.","text":"On iOS this will require apps to specify the `NSCameraUsageDescription` entry in the `Info.plist`.","returns":"Return a promise that fulfills to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"scanFromURLAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"scanFromURLAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Scan bar codes from the image given by the URL.","returns":"A possibly empty array of objects of the `BarCodeScannerResult` shape, where the type\\nrefers to the bar code type that was scanned and the data is the information encoded in the bar\\ncode.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"URL to get the image from."},"type":{"type":"intrinsic","name":"string"}},{"name":"barCodeTypes","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of bar code types. Defaults to all supported bar code types on\\nthe platform.\\n> __Note:__ Only QR codes are supported on iOS."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"BarCodeScannerResult"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"qualifiedName":"React.Component","package":"@types/react","name":"Component"}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"BarCodeBounds","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"origin","kind":1024,"kindString":"Property","comment":{"shortText":"The origin point of the bounding box."},"type":{"type":"reference","name":"BarCodePoint"}},{"name":"size","kind":1024,"kindString":"Property","comment":{"shortText":"The size of the bounding box."},"type":{"type":"reference","name":"BarCodeSize"}}]}}},{"name":"BarCodeEvent","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"BarCodeScannerResult"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"target","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}]}}]}},{"name":"BarCodeEventCallbackArguments","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"BarCodeEvent"}}]}}},{"name":"BarCodePoint","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Those coordinates are represented in the coordinate space of the barcode source (e.g. when you\\nare using the barcode scanner view, these values are adjusted to the dimensions of the view)."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"x","kind":1024,"kindString":"Property","comment":{"shortText":"The `x` coordinate value."},"type":{"type":"intrinsic","name":"number"}},{"name":"y","kind":1024,"kindString":"Property","comment":{"shortText":"The `y` coordinate value."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"BarCodeScannedCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"params","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BarCodeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"BarCodeScannerProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"ViewProps","package":"@types/react-native","name":"ViewProps"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"barCodeTypes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of bar code types. Usage: `BarCodeScanner.Constants.BarCodeType.<codeType>` where\\n`codeType` is one of these [listed above](#supported-formats). Defaults to all supported bar\\ncode types. It is recommended to provide only the bar code formats you expect to scan to\\nminimize battery usage.","text":"For example: `barCodeTypes={[BarCodeScanner.Constants.BarCodeType.qr]}`.\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"onBarCodeScanned","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A callback that is invoked when a bar code has been successfully scanned. The callback is\\nprovided with an [BarCodeScannerResult](#barcodescannerresult).\\n> __Note:__ Passing `undefined` to the `onBarCodeScanned` prop will result in no scanning. This\\n> can be used to effectively \\"pause\\" the scanner so that it doesn\'t continually scan even after\\n> data has been retrieved."},"type":{"type":"reference","name":"BarCodeScannedCallback"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Camera facing. Use one of `BarCodeScanner.Constants.Type`. Use either `Type.front` or `Type.back`.\\nSame as `Camera.Constants.Type`.","tags":[{"tag":"default","text":"Type.back\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":"front"},{"type":"literal","value":"back"},{"type":"intrinsic","name":"number"}]}}]}}]}},{"name":"BarCodeScannerResult","kind":4194304,"kindString":"Type alias","comment":{"shortText":"> __Note:__ `bounds` and `cornerPoints` are not always available. On iOS, for `code39` and `pdf417`\\n> you don\'t get those values. Moreover, on iOS, those values don\'t have to bounds the whole barcode.\\n> For some types, they will represent the area used by the scanner."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"bounds","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The [BarCodeBounds](#barcodebounds) object."},"type":{"type":"reference","name":"BarCodeBounds"}},{"name":"cornerPoints","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Corner points of the bounding box."},"type":{"type":"array","elementType":{"type":"reference","name":"BarCodePoint"}}},{"name":"data","kind":1024,"kindString":"Property","comment":{"shortText":"The information encoded in the bar code."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"The barcode type."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"BarCodeSize","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"The height value."},"type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"The width value."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"Constants","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"BarCodeType","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}},{"name":"Type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}}]}}},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing the camera.","returns":"Return a promise that fulfills to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing the camera.","text":"On iOS this will require apps to specify the `NSCameraUsageDescription` entry in the `Info.plist`.","returns":"Return a promise that fulfills to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"scanFromURLAsync","kind":64,"kindString":"Function","signatures":[{"name":"scanFromURLAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Scan bar codes from the image given by the URL.","returns":"A possibly empty array of objects of the `BarCodeScannerResult` shape, where the type\\nrefers to the bar code type that was scanned and the data is the information encoded in the bar\\ncode.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"URL to get the image from."},"type":{"type":"intrinsic","name":"string"}},{"name":"barCodeTypes","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of bar code types. Defaults to all supported bar code types on\\nthe platform.\\n> __Note:__ Only QR codes are supported on iOS."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"BarCodeScannerResult"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"usePermissions","kind":64,"kindString":"Function","signatures":[{"name":"usePermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a new permission hook with the permission methods built-in.\\nThis can be used to quickly create specific permission hooks in every module."},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}]}')},eASu:function(e,w,n){var c=n("F2il"),p=n("ADT3"),d=n("BjXi"),a=n("uDje");w.transforms=[l],w.enter={literalAutolink:m,literalAutolinkEmail:r,literalAutolinkHttp:r,literalAutolinkWww:r},w.exit={literalAutolink:t,literalAutolinkEmail:o,literalAutolinkHttp:s,literalAutolinkWww:i};function m(b){this.enter({type:"link",title:null,url:"",children:[]},b)}function r(b){this.config.enter.autolinkProtocol.call(this,b)}function s(b){this.config.exit.autolinkProtocol.call(this,b)}function i(b){this.config.exit.data.call(this,b),this.stack[this.stack.length-1].url="http://"+this.sliceSerialize(b)}function o(b){this.config.exit.autolinkEmail.call(this,b)}function t(b){this.exit(b)}function l(b){p(b,[[/(https?:\/\/|www(?=\.))([-.\w]+)([^ \t\r\n]*)/i,k],[/([-.\w+]+)@([-\w]+(?:\.[-\w]+)+)/,g]],{ignore:["link","linkReference"]})}function k(b,P,y,v,u){var C="",R,F;return!S(u)||(/^w/i.test(P)&&(y=P+y,P="",C="http://"),!h(y))||(R=f(y+v),!R[0])?!1:(F={type:"link",title:null,url:C+P+R[0],children:[{type:"text",value:P+R[0]}]},R[1]&&(F=[F,{type:"text",value:R[1]}]),F)}function g(b,P,y,v){return!S(v,!0)||/[_-]$/.test(y)?!1:{type:"link",title:null,url:"mailto:"+P+"@"+y,children:[{type:"text",value:P+"@"+y}]}}function h(b){var P=b.split(".");return!(P.length<2||P[P.length-1]&&(/_/.test(P[P.length-1])||!/[a-zA-Z\d]/.test(P[P.length-1]))||P[P.length-2]&&(/_/.test(P[P.length-2])||!/[a-zA-Z\d]/.test(P[P.length-2])))}function f(b){var P=/[!"&'),.:;<>?\]}]+$/.exec(b),y,v,u;if(P)for(b=b.slice(0,P.index),P=P[0],y=P.indexOf(")"),v=c(b,"("),u=c(b,")");y!==-1&&v>u;)b+=P.slice(0,y+1),P=P.slice(y+1),y=P.indexOf(")"),u++;return[b,P]}function S(b,P){var y=b.input.charCodeAt(b.index-1);return(y!==y||a(y)||d(y))&&(!P||y!==47)}},eEfU:function(e){e.exports=JSON.parse('{"name":"expo-store-review","kind":1,"kindString":"Project","originalName":"","children":[{"name":"hasAction","kind":64,"kindString":"Function","signatures":[{"name":"hasAction","kind":4096,"kindString":"Call signature","comment":{"returns":"This returns a promise that fulfills to `true` if `StoreReview.requestReview()` is capable\\ndirecting the user to some kind of store review flow. If the app config (`app.json`) does not\\ncontain store URLs and native store review capabilities are not available then the promise\\nwill fulfill to `false`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nif (await StoreReview.hasAction()) {\\n  // you can call StoreReview.requestReview()\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determines if the platform has the capabilities to use `StoreReview.requestReview()`.","returns":"\\nThis returns a promise fulfills with `boolean`, depending on the platform:\\n- On iOS, it will resolve to `true` if the device is running iOS 10.3+.\\n- On Android, it will resolve to `true` if the device is running Android 5.0+.\\n- On Web, it will resolve to `false`.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"requestReview","kind":64,"kindString":"Function","signatures":[{"name":"requestReview","kind":4096,"kindString":"Call signature","comment":{"shortText":"In ideal circumstances this will open a native modal and allow the user to select a star rating\\nthat will then be applied to the App Store, without leaving the app. If the device is running\\na version of iOS lower than 10.3, or a version of Android lower than 5.0, this will attempt\\nto get the store URL and link the user to it."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"storeUrl","kind":64,"kindString":"Function","signatures":[{"name":"storeUrl","kind":4096,"kindString":"Call signature","comment":{"shortText":"This uses the `Constants` API to get the `Constants.manifest.ios.appStoreUrl` on iOS, or the\\n`Constants.manifest.android.playStoreUrl` on Android.","text":"On Web this will return `null`.\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}]}')},eHPn:function(e){e.exports=JSON.parse('{"name":"expo-linear-gradient","kind":1,"kindString":"Project","originalName":"","children":[{"name":"LinearGradient","kind":128,"kindString":"Class","comment":{"shortText":"Renders a native view that transitions between multiple colors in a linear direction."},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new LinearGradient","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"reference","name":"LinearGradientProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}]}}],"type":{"type":"reference","name":"LinearGradient"},"inheritedFrom":{"type":"reference","name":"React.Component<LinearGradientProps>.constructor"}},{"name":"new LinearGradient","kind":16384,"kindString":"Constructor signature","comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"LinearGradientProps"}},{"name":"context","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"LinearGradient"},"inheritedFrom":{"type":"reference","name":"React.Component<LinearGradientProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<LinearGradientProps>.constructor"}},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"ReactNode"}}]}}],"name":"Readonly"}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}}],"name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"render","kind":2048,"kindString":"Method","signatures":[{"name":"render","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"LinearGradientProps"}],"name":"Component"}]},{"name":"LinearGradientPoint","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object `{ x: number; y: number }` or array `[x, y]` that represents the point\\nat which the gradient starts or ends, as a fraction of the overall size of the gradient ranging\\nfrom `0` to `1`, inclusive."},"type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"x","kind":1024,"kindString":"Property","comment":{"shortText":"A number ranging from `0` to `1`, representing the position of gradient transformation."},"type":{"type":"intrinsic","name":"number"}},{"name":"y","kind":1024,"kindString":"Property","comment":{"shortText":"A number ranging from `0` to `1`, representing the position of gradient transformation."},"type":{"type":"intrinsic","name":"number"}}]}},{"type":"reference","name":"NativeLinearGradientPoint"}]}},{"name":"LinearGradientProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"colors","kind":1024,"kindString":"Property","comment":{"shortText":"An array of colors that represent stops in the gradient. At least two colors are required\\n(for a single-color background, use the `style.backgroundColor` prop on a `View` component)."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"end","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"For example, `{ x: 0.1, y: 0.2 }` means that the gradient will end `10%` from the left and `20%` from the bottom.","text":"**On web**, this only changes the angle of the gradient because CSS gradients don\'t support changing the end position.","tags":[{"tag":"default","text":"{ x: 0.5, y: 1.0 }\\n"}]},"type":{"type":"union","types":[{"type":"reference","name":"LinearGradientPoint"},{"type":"literal","value":null}]}},{"name":"locations","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array that contains `number`s ranging from `0` to `1`, inclusive, and is the same length as the `colors` property.\\nEach number indicates a color-stop location where each respective color should be located.","text":"For example, `[0.5, 0.8]` would render:\\n- the first color, solid, from the beginning of the gradient view to 50% through (the middle);\\n- a gradient from the first color to the second from the 50% point to the 80% point; and\\n- the second color, solid, from the 80% point to the end of the gradient view.\\n\\n> The color-stop locations must be ascending from least to greatest.","tags":[{"tag":"default","text":"[0.0, 1.0]\\n"}]},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"literal","value":null}]}},{"name":"start","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"For example, `{ x: 0.1, y: 0.2 }` means that the gradient will start `10%` from the left and `20%` from the top.","text":"**On web**, this only changes the angle of the gradient because CSS gradients don\'t support changing the starting position.","tags":[{"tag":"default","text":"{ x: 0.5, y: 0.0 }\\n"}]},"type":{"type":"union","types":[{"type":"reference","name":"LinearGradientPoint"},{"type":"literal","value":null}]}}]}}]}}]}')},ecSx:function(e,w,n){"use strict";var c=n("sQZE");e.exports=p;function p(m,r){return m&&!m.process&&(r=m,m=null),m?d(m,r):a(r)}function d(m,r){return s;function s(i,o,t){m.run(c(i,r),o,l);function l(k){t(k)}}}function a(m){return r;function r(s){return c(s,m)}}},escJ:function(e,w,n){"use strict";var c=n("yRGd"),p={name:"lineEnding",tokenize:d};function d(a,m){return r;function r(s){return a.enter("lineEnding"),a.consume(s),a.exit("lineEnding"),c(a,m,"linePrefix")}}e.exports=p},f8fV:function(e,w,n){e.exports=m;var c=n("fuKP"),p=n("Vx/6"),d=n("Ig3s"),a=n("T0BQ");function m(r){var s=r||{},i=s.singleTilde,o={tokenize:k,resolveAll:t};return i==null&&(i=!0),{text:{126:o},insideSpan:{null:o}};function t(g,h){for(var f=-1,S,b,P,y;++f<g.length;)if(g[f][0]==="enter"&&g[f][1].type==="strikethroughSequenceTemporary"&&g[f][1]._close){for(P=f;P--;)if(g[P][0]==="exit"&&g[P][1].type==="strikethroughSequenceTemporary"&&g[P][1]._open&&g[f][1].end.offset-g[f][1].start.offset===g[P][1].end.offset-g[P][1].start.offset){g[f][1].type="strikethroughSequence",g[P][1].type="strikethroughSequence",S={type:"strikethrough",start:a(g[P][1].start),end:a(g[f][1].end)},b={type:"strikethroughText",start:a(g[P][1].end),end:a(g[f][1].start)},y=[["enter",S,h],["enter",g[P][1],h],["exit",g[P][1],h],["enter",b,h]],p(y,y.length,0,d(h.parser.constructs.insideSpan.null,g.slice(P+1,f),h)),p(y,y.length,0,[["exit",b,h],["enter",g[f][1],h],["exit",g[f][1],h],["exit",S,h]]),p(g,P-1,f-P+3,y),f=P+y.length-2;break}}return l(g)}function l(g){for(var h=-1,f=g.length;++h<f;)g[h][1].type==="strikethroughSequenceTemporary"&&(g[h][1].type="data");return g}function k(g,h,f){var S=this.previous,b=this.events,P=0;return y;function y(u){return u!==126||S===126&&b[b.length-1][1].type!=="characterEscape"?f(u):(g.enter("strikethroughSequenceTemporary"),v(u))}function v(u){var C=c(S),R,F;return u===126?P>1?f(u):(g.consume(u),P++,v):P<2&&!i?f(u):(R=g.exit("strikethroughSequenceTemporary"),F=c(u),R._open=!F||F===2&&C,R._close=!C||C===2&&F,h(u))}}}},fFWI:function(e){e.exports=JSON.parse('{"name":"expo-background-fetch","kind":1,"kindString":"Project","originalName":"","children":[{"name":"BackgroundFetchResult","kind":8,"kindString":"Enumeration","comment":{"shortText":"This return value is to let iOS know what the result of your background fetch was, so the\\nplatform can better schedule future background fetches. Also, your app has up to 30 seconds\\nto perform the task, otherwise your app will be terminated and future background fetches\\nmay be delayed."},"children":[{"name":"Failed","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An attempt to download data was made but that attempt failed."},"defaultValue":"3"},{"name":"NewData","kind":16,"kindString":"Enumeration member","comment":{"shortText":"New data was successfully downloaded."},"defaultValue":"2"},{"name":"NoData","kind":16,"kindString":"Enumeration member","comment":{"shortText":"There was no new data to download."},"defaultValue":"1"}]},{"name":"BackgroundFetchStatus","kind":8,"kindString":"Enumeration","children":[{"name":"Available","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Background updates are available for the app."},"defaultValue":"3"},{"name":"Denied","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The user explicitly disabled background behavior for this app or for the whole system."},"defaultValue":"1"},{"name":"Restricted","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Background updates are unavailable and the user cannot enable them again. This status can occur\\nwhen, for example, parental controls are in effect for the current user."},"defaultValue":"2"}]},{"name":"BackgroundFetchOptions","kind":256,"kindString":"Interface","children":[{"name":"minimumInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Inexact interval in seconds between subsequent repeats of the background fetch alarm. The final\\ninterval may differ from the specified one to minimize wakeups and battery usage.\\n- On Android it defaults to __10 minutes__,\\n- On iOS it calls [`BackgroundFetch.setMinimumIntervalAsync`](#backgroundfetchsetminimumintervalasyncminimuminterval)\\nbehind the scenes and the default value is the smallest fetch interval supported by the system __(10-15 minutes)__.\\nBackground fetch task receives no data, but your task should return a value that best describes\\nthe results of your background fetch work.","tags":[{"tag":"returns","text":"Returns a promise that fulfils once the task is registered and rejects in case of any errors.\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"startOnBoot","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(Android only).__ Whether to restart background fetch events when the device has finished\\nbooting. Defaults to `false`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"stopOnTerminate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(Android only).__ Whether to stop receiving background fetch events after user terminates the\\napp. Defaults to `true`."},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"getStatusAsync","kind":64,"kindString":"Function","signatures":[{"name":"getStatusAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets a status of background fetch.","returns":"Returns a promise which fulfils with one of `BackgroundFetchStatus` enum values.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"BackgroundFetchStatus"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"registerTaskAsync","kind":64,"kindString":"Function","signatures":[{"name":"registerTaskAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Registers background fetch task with given name. Registered tasks are saved in persistent storage and restored once the app is initialized.","tags":[{"tag":"example","text":"\\n```ts\\nimport * as BackgroundFetch from \'expo-background-fetch\';\\nimport * as TaskManager from \'expo-task-manager\';\\n\\nTaskManager.defineTask(YOUR_TASK_NAME, () => {\\n  try {\\n    const receivedNewData = // do your background fetch here\\n    return receivedNewData ? BackgroundFetch.Result.NewData : BackgroundFetch.Result.NoData;\\n  } catch (error) {\\n    return BackgroundFetch.Result.Failed;\\n  }\\n});\\n```\\n"}]},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task to register. The task needs to be defined first - see [`TaskManager.defineTask`](taskmanager#defineTask)\\nfor more details."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An object containing the background fetch options.\\n"},"type":{"type":"reference","name":"BackgroundFetchOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setMinimumIntervalAsync","kind":64,"kindString":"Function","signatures":[{"name":"setMinimumIntervalAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the minimum number of seconds that must elapse before another background fetch can be\\ninitiated. This value is advisory only and does not indicate the exact amount of time expected\\nbetween fetch operations.","text":"> This method doesn\'t take any effect on Android. It is a global value which means that it can\\noverwrite settings from another application opened through Expo Go.\\n","returns":"A promise which fulfils once the minimum interval is set.\\n"},"parameters":[{"name":"minimumInterval","kind":32768,"kindString":"Parameter","comment":{"shortText":"Number of seconds that must elapse before another background fetch can be called."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"unregisterTaskAsync","kind":64,"kindString":"Function","signatures":[{"name":"unregisterTaskAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unregisters background fetch task, so the application will no longer be executing this task.","returns":"A promise which fulfils when the task is fully unregistered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task to unregister."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},fgf6:function(e){e.exports=JSON.parse('{"name":"expo-task-manager","kind":1,"kindString":"Project","originalName":"","children":[{"name":"TaskManagerError","kind":256,"kindString":"Interface","comment":{"shortText":"Error object that can be received through [`TaskManagerTaskBody`](#taskmanagertaskbody) when the\\ntask fails."},"children":[{"name":"code","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}},{"name":"message","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]},{"name":"TaskManagerTask","kind":256,"kindString":"Interface","comment":{"shortText":"Represents an already registered task."},"children":[{"name":"options","kind":1024,"kindString":"Property","comment":{"shortText":"Provides `options` that the task was registered with."},"type":{"type":"intrinsic","name":"any"}},{"name":"taskName","kind":1024,"kindString":"Property","comment":{"shortText":"Name that the task is registered with."},"type":{"type":"intrinsic","name":"string"}},{"name":"taskType","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the task which depends on how the task was registered."},"type":{"type":"intrinsic","name":"string"}}]},{"name":"TaskManagerTaskBody","kind":256,"kindString":"Interface","comment":{"shortText":"Represents the object that is passed to the task executor."},"children":[{"name":"data","kind":1024,"kindString":"Property","comment":{"shortText":"An object of data passed to the task executor. Its properties depends on the type of the task."},"type":{"type":"reference","name":"T"}},{"name":"error","kind":1024,"kindString":"Property","comment":{"shortText":"Error object if the task failed or `null` otherwise."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"TaskManagerError"}]}},{"name":"executionInfo","kind":1024,"kindString":"Property","comment":{"shortText":"Additional details containing unique ID of task event and name of the task."},"type":{"type":"reference","name":"TaskManagerTaskBodyExecutionInfo"}}],"typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter","default":{"type":"intrinsic","name":"object"}}]},{"name":"TaskManagerTaskBodyExecutionInfo","kind":256,"kindString":"Interface","comment":{"shortText":"Additional details about execution provided in `TaskManagerTaskBody`."},"children":[{"name":"appState","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"State of the application.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":"active"},{"type":"literal","value":"background"},{"type":"literal","value":"inactive"}]}},{"name":"eventId","kind":1024,"kindString":"Property","comment":{"shortText":"Unique ID of task event."},"type":{"type":"intrinsic","name":"string"}},{"name":"taskName","kind":1024,"kindString":"Property","comment":{"shortText":"Name of the task."},"type":{"type":"intrinsic","name":"string"}}]},{"name":"TaskManagerTaskExecutor","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Type of task executor \u2013 a function that handles the task."},"parameters":[{"name":"body","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"TaskManagerTaskBody"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"defineTask","kind":64,"kindString":"Function","signatures":[{"name":"defineTask","kind":4096,"kindString":"Call signature","comment":{"shortText":"Defines task function. It must be called in the global scope of your JavaScript bundle.\\nIn particular, it cannot be called in any of React lifecycle methods like `componentDidMount`.\\nThis limitation is due to the fact that when the application is launched in the background,\\nwe need to spin up your JavaScript app, run your task and then shut down \u2014 no views are mounted\\nin this scenario."},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task. It must be the same as the name you provided when registering the task."},"type":{"type":"intrinsic","name":"string"}},{"name":"taskExecutor","kind":32768,"kindString":"Parameter","comment":{"shortText":"A function that will be invoked when the task with given `taskName` is executed.\\n"},"type":{"type":"reference","name":"TaskManagerTaskExecutor"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"getRegisteredTasksAsync","kind":64,"kindString":"Function","signatures":[{"name":"getRegisteredTasksAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Provides information about tasks registered in the app.","returns":"A promise which fulfills with an array of tasks registered in the app. Example:\\n```json\\n[\\n  {\\n    taskName: \'location-updates-task-name\',\\n    taskType: \'location\',\\n    options: {\\n      accuracy: Location.Accuracy.High,\\n      showsBackgroundLocationIndicator: false,\\n    },\\n  },\\n  {\\n    taskName: \'geofencing-task-name\',\\n    taskType: \'geofencing\',\\n    options: {\\n      regions: [...],\\n    },\\n  },\\n]\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"TaskManagerTask"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getTaskOptionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getTaskOptionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Retrieves `options` associated with the task, that were passed to the function registering the task\\n(eg. `Location.startLocationUpdatesAsync`).","returns":"A promise which fulfills with the `options` object that was passed while registering task\\nwith given name or `null` if task couldn\'t be found.\\n"},"typeParameter":[{"name":"TaskOptions","kind":131072,"kindString":"Type parameter"}],"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TaskOptions"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine if the `TaskManager` API can be used in this app.","returns":"A promise fulfills with `true` if the API can be used, and `false` otherwise.\\nOn the web it always returns `false`.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isTaskDefined","kind":64,"kindString":"Function","signatures":[{"name":"isTaskDefined","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks whether the task is already defined."},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"isTaskRegisteredAsync","kind":64,"kindString":"Function","signatures":[{"name":"isTaskRegisteredAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine whether the task is registered. Registered tasks are stored in a persistent storage and\\npreserved between sessions.","returns":"A promise which fulfills with a `boolean` value whether or not the task with given name\\nis already registered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"unregisterAllTasksAsync","kind":64,"kindString":"Function","signatures":[{"name":"unregisterAllTasksAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unregisters all tasks registered for the running app. You may want to call this when the user is\\nsigning out and you no longer need to track his location or run any other background tasks.","returns":"A promise which fulfills as soon as all tasks are completely unregistered.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"unregisterTaskAsync","kind":64,"kindString":"Function","signatures":[{"name":"unregisterTaskAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unregisters task from the app, so the app will not be receiving updates for that task anymore.\\n_It is recommended to use methods specialized by modules that registered the task, eg.\\n[`Location.stopLocationUpdatesAsync`](./location/#expolocationstoplocationupdatesasynctaskname)._","returns":"A promise which fulfills as soon as the task is unregistered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task to unregister."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},fuKP:function(e,w,n){"use strict";var c=n("Q3zd"),p=n("BjXi"),d=n("uDje");function a(m){if(m===null||c(m)||d(m))return 1;if(p(m))return 2}e.exports=a},fuzM:function(e){e.exports=JSON.parse('{"name":"expo-crypto","kind":1,"kindString":"Project","originalName":"","children":[{"name":"CryptoDigestAlgorithm","kind":8,"kindString":"Enumeration","comment":{"shortText":"[`Cryptographic hash function`](https://developer.mozilla.org/en-US/docs/Glossary/Cryptographic_hash_function)"},"children":[{"name":"MD2","kind":16,"kindString":"Enumeration member","comment":{"shortText":"`128` bits.","tags":[{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"MD2\\""},{"name":"MD4","kind":16,"kindString":"Enumeration member","comment":{"shortText":"`128` bits.","tags":[{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"MD4\\""},{"name":"MD5","kind":16,"kindString":"Enumeration member","comment":{"shortText":"`128` bits.","tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"MD5\\""},{"name":"SHA1","kind":16,"kindString":"Enumeration member","comment":{"shortText":"`160` bits."},"defaultValue":"\\"SHA-1\\""},{"name":"SHA256","kind":16,"kindString":"Enumeration member","comment":{"shortText":"`256` bits. Collision Resistant."},"defaultValue":"\\"SHA-256\\""},{"name":"SHA384","kind":16,"kindString":"Enumeration member","comment":{"shortText":"`384` bits. Collision Resistant."},"defaultValue":"\\"SHA-384\\""},{"name":"SHA512","kind":16,"kindString":"Enumeration member","comment":{"shortText":"`512` bits. Collision Resistant."},"defaultValue":"\\"SHA-512\\""}]},{"name":"CryptoEncoding","kind":8,"kindString":"Enumeration","children":[{"name":"BASE64","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Has trailing padding. Does not wrap lines. Does not have a trailing newline."},"defaultValue":"\\"base64\\""},{"name":"HEX","kind":16,"kindString":"Enumeration member","defaultValue":"\\"hex\\""}]},{"name":"CryptoDigestOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"encoding","kind":1024,"kindString":"Property","comment":{"shortText":"Format the digest is returned in."},"type":{"type":"reference","name":"CryptoEncoding"}}]}}},{"name":"Digest","kind":4194304,"kindString":"Type alias","type":{"type":"intrinsic","name":"string"}},{"name":"digestStringAsync","kind":64,"kindString":"Function","signatures":[{"name":"digestStringAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"The `digestStringAsync()` method of `Crypto` generates a digest of the supplied `data` string with the provided digest `algorithm`.\\nA digest is a short fixed-length value derived from some variable-length input. **Cryptographic digests** should exhibit _collision-resistance_,\\nmeaning that it\'s very difficult to generate multiple inputs that have equal digest values.\\nYou can specify the returned string format as one of `CryptoEncoding`. By default, the resolved value will be formatted as a `HEX` string.\\nOn web, this method can only be called from a secure origin (https) otherwise an error will be thrown.","returns":"Return a Promise which fulfills with a value representing the hashed input.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst digest = await Crypto.digestStringAsync(\\n  Crypto.CryptoDigestAlgorithm.SHA512,\\n  \'\u{1F953} Easy to Digest! \u{1F499}\'\\n);\\n```\\n"}]},"parameters":[{"name":"algorithm","kind":32768,"kindString":"Parameter","comment":{"shortText":"The cryptographic hash function to use to transform a block of data into a fixed-size output."},"type":{"type":"reference","name":"CryptoDigestAlgorithm"}},{"name":"data","kind":32768,"kindString":"Parameter","comment":{"shortText":"The value that will be used to generate a digest."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"Format of the digest string. Defaults to: `CryptoDigestOptions.HEX`."},"type":{"type":"reference","name":"CryptoDigestOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Digest"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},"g+7D":function(e){e.exports=JSON.parse('{"name":"expo-asset","kind":1,"originalName":"","children":[{"name":"Asset","kind":128,"kindString":"Class","comment":{"shortText":"The `Asset` class represents an asset in your app. It gives metadata about the asset (such as its\\nname and type) and provides facilities to load the asset data."},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new Asset","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"__namedParameters","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AssetDescriptor"}}],"type":{"type":"reference","name":"Asset"}}]},{"name":"downloaded","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"name":"downloading","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"name":"hash","kind":1024,"kindString":"Property","comment":{"shortText":"The MD5 hash of the asset\'s data."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"null"},{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"If the asset is an image, the height of the image data divided by the scale factor. The scale factor is the number after `@` in the filename, or `1` if not present."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"number"}]},"defaultValue":"null"},{"name":"localUri","kind":1024,"kindString":"Property","comment":{"shortText":"If the asset has been downloaded (by calling [`downloadAsync()`](#downloadasync)), the\\n`file://` URI pointing to the local file on the device that contains the asset data."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"null"},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"The name of the asset file without the extension. Also without the part from `@` onward in the\\nfilename (used to specify scale factor for images)."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"The extension of the asset filename."},"type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"A URI that points to the asset\'s data on the remote server. When running the published version\\nof your app, this refers to the location on Expo\'s asset server where Expo has stored your\\nasset. When running the app from Expo CLI during development, this URI points to Expo CLI\'s\\nserver running on your computer and the asset is served directly from your computer."},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"If the asset is an image, the width of the image data divided by the scale factor. The scale\\nfactor is the number after `@` in the filename, or `1` if not present."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"number"}]},"defaultValue":"null"},{"name":"downloadAsync","kind":2048,"kindString":"Method","signatures":[{"name":"downloadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Downloads the asset data to a local file in the device\'s cache directory. Once the returned\\npromise is fulfilled without error, the [`localUri`](#assetlocaluri) field of this asset points\\nto a local file containing the asset data. The asset is only downloaded if an up-to-date local\\nfile for the asset isn\'t already present due to an earlier download. The downloaded `Asset`\\nwill be returned when the promise is resolved.","returns":"Returns a Promise which fulfills with an `Asset` instance.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Asset"}],"name":"Promise"}}]},{"name":"fromMetadata","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"fromMetadata","kind":4096,"kindString":"Call signature","parameters":[{"name":"meta","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AssetMetadata"}}],"type":{"type":"reference","name":"Asset"}}]},{"name":"fromModule","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"fromModule","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns the [`Asset`](#asset) instance representing an asset given its module or URL.","returns":"The [`Asset`](#asset) instance for the asset.\\n"},"parameters":[{"name":"virtualAssetModule","kind":32768,"kindString":"Parameter","comment":{"shortText":"The value of `require(\'path/to/file\')` for the asset or external\\nnetwork URL"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"reference","name":"Asset"}}]},{"name":"fromURI","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"fromURI","kind":4096,"kindString":"Call signature","parameters":[{"name":"uri","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Asset"}}]},{"name":"loadAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"loadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"A helper that wraps `Asset.fromModule(module).downloadAsync` for convenience.","returns":"Returns a Promise that fulfills with an array of `Asset`s when the asset(s) has been\\nsaved to disk.","tags":[{"tag":"example","text":"\\n```ts\\nconst [{ localUri }] = await Asset.loadAsync(require(\'./assets/snack-icon.png\'));\\n```\\n"}]},"parameters":[{"name":"moduleId","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of `require(\'path/to/file\')` or external network URLs. Can also be\\njust one module or URL without an Array."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Asset"}}],"name":"Promise"}}]}]},{"name":"AssetDescriptor","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"hash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"name","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}}]}}},{"name":"AssetMetadata","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"fileHashes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"fileUris","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"hash","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"httpServerLocation","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"name","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"scales","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"name":"type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"useAssets","kind":64,"kindString":"Function","signatures":[{"name":"useAssets","kind":4096,"kindString":"Call signature","comment":{"shortText":"Downloads and stores one or more assets locally.\\nAfter the assets are loaded, this hook returns a list of asset instances.\\nIf something went wrong when loading the assets, an error is returned.","text":"> Note, the assets are not \\"reloaded\\" when you dynamically change the asset list.\\n","returns":"Returns an array containing:\\n- on the first position, a list of all loaded assets. If they aren\'t loaded yet, this value is\\n  `undefined`.\\n- on the second position, an error which encountered when loading the assets. If there was no\\n  error, this value is `undefined`.\\n","tags":[{"tag":"example","text":"\\n```tsx\\nconst [assets, error] = useAssets([require(\'path/to/asset.jpg\'), require(\'path/to/other.png\')]);\\n\\nreturn assets ? <Image source={assets[0]} /> : null;\\n```\\n"}]},"parameters":[{"name":"moduleIds","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"Asset"}},{"type":"intrinsic","name":"undefined"}]},{"type":"union","types":[{"type":"reference","name":"Error"},{"type":"intrinsic","name":"undefined"}]}]}}]}]}')},gJph:function(e,w,n){"use strict";n.d(w,"e",function(){return p}),n.d(w,"a",function(){return d}),n.d(w,"c",function(){return a}),n.d(w,"d",function(){return m}),n.d(w,"b",function(){return s});function c(i){var o;return(i==null||(o=i.props)===null||o===void 0?void 0:o.children)!==void 0}var p=function i(o){return typeof o=="string"?o:Array.isArray(o)?o.map(i).join(""):c(o)?i(o.props.children):""},d=function(o,t){var l=arguments.length>2&&arguments[2]!==void 0?arguments[2]:7,k=p(t).split(" ").splice(0,l).join("-"),g=o.slug(k);return g},a=function(o){return/https?:\/\/(.*)(\/versions\/.*)/.test(o)},m=function(o,t){var l=o.split("/");return l[2]=t,l.join("/")},r=function(o){return o.split("/")[2]},s=function i(o,t,l){if(o==="latest")return t?"Latest (".concat(i(t),")"):"Latest";if(o==="unversioned")return"Unversioned";var k="SDK".concat(o==null?void 0:o.substring(1,3));return o===l?"Beta (".concat(k,")"):k}},gNlx:function(e,w,n){"use strict";e.exports=d;var c=n("vUGn"),p=n("2jS9");function d(r,s,i){var o=p(r,s),t=o[0],l=i?a(i):m(s),k={},g=[],h,f,S;for(typeof s.checked=="boolean"&&((!t||t.tagName!=="p")&&(t=r(null,"p",[]),o.unshift(t)),t.children.length>0&&t.children.unshift(c("text"," ")),t.children.unshift(r(null,"input",{type:"checkbox",checked:s.checked,disabled:!0})),k.className=["task-list-item"]),h=o.length,f=-1;++f<h;)S=o[f],(l||f!==0||S.tagName!=="p")&&g.push(c("text",`
`)),S.tagName==="p"&&!l?g=g.concat(S.children):g.push(S);return h&&(l||S.tagName!=="p")&&g.push(c("text",`
`)),r(s,"li",k,g)}function a(r){for(var s=r.spread,i=r.children,o=i.length,t=-1;!s&&++t<o;)s=m(i[t]);return s}function m(r){var s=r.spread;return s==null?r.children.length>1:s}},gseP:function(e,w,n){"use strict";e.exports=p;var c=n("vUGn");function p(d,a){return d.augment(a,c("text",String(a.value).replace(/[ \t]*(\r?\n|\r)[ \t]*/g,"$1")))}},gsvO:function(e,w,n){e.exports=p,p.peek=d;var c=n("7J+x");function p(a,m,r){for(var s=a.value||"",i="`",o=-1,t,l,k,g;new RegExp("(^|[^`])"+i+"([^`]|$)").test(s);)i+="`";for(/[^ \r\n]/.test(s)&&(/[ \r\n`]/.test(s.charAt(0))||/[ \r\n`]/.test(s.charAt(s.length-1)))&&(s=" "+s+" ");++o<r.unsafe.length;)if(t=r.unsafe[o],!!t.atBreak)for(l=c(t);k=l.exec(s);)g=k.index,s.charCodeAt(g)===10&&s.charCodeAt(g-1)===13&&g--,s=s.slice(0,g)+" "+s.slice(k.index+1);return i+s+i}function d(){return"`"}},gugV:function(e){e.exports=JSON.parse('{"name":"expo-sms","kind":1,"kindString":"Project","originalName":"","children":[{"name":"SMSAttachment","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object that is used to describe an attachment that is included with a SMS message."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"filename","kind":1024,"kindString":"Property","comment":{"shortText":"The filename of the attachment."},"type":{"type":"intrinsic","name":"string"}},{"name":"mimeType","kind":1024,"kindString":"Property","comment":{"shortText":"The mime type of the attachment such as `image/png`."},"type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"The content URI of the attachment. The URI needs be a content URI so that it can be accessed by\\nother applications outside of Expo. (See [FileSystem.getContentUriAsync](./filesystem/#filesystemgetcontenturiasyncfileuri))"},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"SMSOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"attachments","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SMSAttachment"},{"type":"array","elementType":{"type":"reference","name":"SMSAttachment"}}]}}]}}},{"name":"SMSResponse","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"result","kind":1024,"kindString":"Property","comment":{"shortText":"Status of SMS action invoked by the user."},"type":{"type":"union","types":[{"type":"literal","value":"unknown"},{"type":"literal","value":"sent"},{"type":"literal","value":"cancelled"}]}}]}}},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determines whether SMS is available. Always returns `false` in the iOS simulator, and in browser.","returns":"Returns a promise that fulfils with a `boolean`, indicating whether SMS is available on this device.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst isAvailable = await SMS.isAvailableAsync();\\nif (isAvailable) {\\n  // do your SMS stuff here\\n} else {\\n  // misfortune... there\'s no SMS available on this device\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"sendSMSAsync","kind":64,"kindString":"Function","signatures":[{"name":"sendSMSAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Opens the default UI/app for sending SMS messages with prefilled addresses and message.","returns":"Returns a Promise that fulfils with the SMS action is invoked by the user, with corresponding result:\\n- If the user cancelled the SMS sending process: `{ result: \'cancelled\' }`.\\n- If the user has sent/scheduled message for sending: `{ result: \'sent\' }`.\\n- If the status of the SMS message cannot be determined: `{ result: \'unknown\' }`.\\n\\nAndroid does not provide information about the status of the SMS message, so on Android devices\\nthe Promise will always resolve with { result: \'unknown\' }.\\n\\n> Note: The only feedback collected by this module is whether any message has been sent. That\\nmeans we do not check actual content of message nor recipients list.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst { result } = await SMS.sendSMSAsync(\\n  [\'0123456789\', \'9876543210\'],\\n  \'My sample HelloWorld message\',\\n  {\\n    attachments: {\\n      uri: \'path/myfile.png\',\\n      mimeType: \'image/png\',\\n      filename: \'myfile.png\',\\n    },\\n  }\\n);\\n```\\n"}]},"parameters":[{"name":"addresses","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of addresses (phone numbers) or single address passed as strings. Those\\nwould appear as recipients of the prepared message."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"name":"message","kind":32768,"kindString":"Parameter","comment":{"shortText":"Message to be sent."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"A `SMSOptions` object defining additional SMS configuration options.\\n"},"type":{"type":"reference","name":"SMSOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"SMSResponse"}],"name":"Promise"}}]}]}')},gyVW:function(e,w,n){"use strict";var c=n("E/Jm"),p={name:"hardBreakEscape",tokenize:d};function d(a,m,r){return s;function s(o){return a.enter("hardBreakEscape"),a.enter("escapeMarker"),a.consume(o),i}function i(o){return c(o)?(a.exit("escapeMarker"),a.exit("hardBreakEscape"),m(o)):r(o)}}e.exports=p},hDeP:function(e){e.exports=JSON.parse('{"name":"expo-image-manipulator","kind":1,"kindString":"Project","originalName":"","children":[{"name":"FlipType","kind":8,"kindString":"Enumeration","children":[{"name":"Horizontal","kind":16,"kindString":"Enumeration member","defaultValue":"\\"horizontal\\""},{"name":"Vertical","kind":16,"kindString":"Enumeration member","defaultValue":"\\"vertical\\""}]},{"name":"SaveFormat","kind":8,"kindString":"Enumeration","children":[{"name":"JPEG","kind":16,"kindString":"Enumeration member","defaultValue":"\\"jpeg\\""},{"name":"PNG","kind":16,"kindString":"Enumeration member","defaultValue":"\\"png\\""},{"name":"WEBP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"__Web Only__"},"defaultValue":"\\"webp\\""}]},{"name":"Action","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"ActionResize"},{"type":"reference","name":"ActionRotate"},{"type":"reference","name":"ActionFlip"},{"type":"reference","name":"ActionCrop"}]}},{"name":"ActionCrop","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"crop","kind":1024,"kindString":"Property","comment":{"shortText":"Fields specify top-left corner and dimensions of a crop rectangle."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"originX","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"originY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}}]}}},{"name":"ActionFlip","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"flip","kind":1024,"kindString":"Property","comment":{"shortText":"An axis on which image will be flipped. Only one flip per transformation is available. If you\\nwant to flip according to both axes then provide two separate transformations."},"type":{"type":"reference","name":"FlipType"}}]}}},{"name":"ActionResize","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"resize","kind":1024,"kindString":"Property","comment":{"shortText":"Values correspond to the result image dimensions. If you specify only one value, the other will\\nbe calculated automatically to preserve image ratio."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}]}}}]}}},{"name":"ActionRotate","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"rotate","kind":1024,"kindString":"Property","comment":{"shortText":"Degrees to rotate the image. Rotation is clockwise when the value is positive and\\ncounter-clockwise when negative."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"ImageResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"It is included if the `base64` save option was truthy, and is a string containing the\\nJPEG/PNG (depending on `format`) data of the image in Base64. Prepend that with `\'data:image/xxx;base64,\'`\\nto get a data URI, which you can use as the source for an `Image` element for example\\n(where `xxx` is `jpeg` or `png`)."},"type":{"type":"intrinsic","name":"string"}},{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"Height of the image or video."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"An URI to the modified image (usable as the source for an `Image` or `Video` element)."},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"Width of the image or video."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"SaveOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A map defining how modified image should be saved."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to also include the image data in Base64 format."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"compress","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A value in range `0.0` - `1.0` specifying compression level of the result image. `1` means\\nno compression (highest quality) and `0` the highest compression (lowest quality)."},"type":{"type":"intrinsic","name":"number"}},{"name":"format","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specifies what type of compression should be used and what is the result file extension.\\n`SaveFormat.PNG` compression is lossless but slower, `SaveFormat.JPEG` is faster but the image\\nhas visible artifacts. Defaults to `SaveFormat.JPEG`"},"type":{"type":"reference","name":"SaveFormat"}}]}}},{"name":"manipulateAsync","kind":64,"kindString":"Function","signatures":[{"name":"manipulateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Manipulate the image provided via `uri`. Available modifications are rotating, flipping (mirroring),\\nresizing and cropping. Each invocation results in a new file. With one invocation you can provide\\na set of actions to perform over the image. Overwriting the source file would not have an effect\\nin displaying the result as images are cached.","returns":"Promise which fulfils with [`ImageResult`](#imageresult) object.\\n"},"parameters":[{"name":"uri","kind":32768,"kindString":"Parameter","comment":{"text":"URI of the file to manipulate. Should be on the local file system or a base64 data URI."},"type":{"type":"intrinsic","name":"string"}},{"name":"actions","kind":32768,"kindString":"Parameter","comment":{"text":"An array of objects representing manipulation options. Each object should have\\n__only one__ of the keys that corresponds to specific transformation."},"type":{"type":"array","elementType":{"type":"reference","name":"Action"}},"defaultValue":"[]"},{"name":"saveOptions","kind":32768,"kindString":"Parameter","comment":{"text":"A map defining how modified image should be saved."},"type":{"type":"reference","name":"SaveOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImageResult"}],"name":"Promise"}}]}]}')},haLp:function(e,w,n){"use strict";var c=n("9SNS"),p=n("Q3zd"),d=n("E/Jm");function a(m,r,s,i,o,t,l,k,g){var h=g||1/0,f=0;return S;function S(C){return C===60?(m.enter(i),m.enter(o),m.enter(t),m.consume(C),m.exit(t),b):c(C)||C===41?s(C):(m.enter(i),m.enter(l),m.enter(k),m.enter("chunkString",{contentType:"string"}),v(C))}function b(C){return C===62?(m.enter(t),m.consume(C),m.exit(t),m.exit(o),m.exit(i),r):(m.enter(k),m.enter("chunkString",{contentType:"string"}),P(C))}function P(C){return C===62?(m.exit("chunkString"),m.exit(k),b(C)):C===null||C===60||d(C)?s(C):(m.consume(C),C===92?y:P)}function y(C){return C===60||C===62||C===92?(m.consume(C),P):P(C)}function v(C){return C===40?++f>h?s(C):(m.consume(C),v):C===41?f--?(m.consume(C),v):(m.exit("chunkString"),m.exit(k),m.exit(l),m.exit(i),r(C)):C===null||p(C)?f?s(C):(m.exit("chunkString"),m.exit(k),m.exit(l),m.exit(i),r(C)):c(C)?s(C):(m.consume(C),C===92?u:v)}function u(C){return C===40||C===41||C===92?(m.consume(C),v):v(C)}}e.exports=a},hage:function(e){e.exports=JSON.parse('{"name":"expo-local-authentication","kind":1,"kindString":"Project","originalName":"","children":[{"name":"AuthenticationType","kind":8,"kindString":"Enumeration","children":[{"name":"FACIAL_RECOGNITION","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates facial recognition support."},"defaultValue":"2"},{"name":"FINGERPRINT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates fingerprint support."},"defaultValue":"1"},{"name":"IRIS","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates iris recognition support.","tags":[{"tag":"platform","text":"android\\n"}]},"defaultValue":"3"}]},{"name":"SecurityLevel","kind":8,"kindString":"Enumeration","children":[{"name":"BIOMETRIC","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates biometric authentication."},"defaultValue":"2"},{"name":"NONE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates no enrolled authentication."},"defaultValue":"0"},{"name":"SECRET","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates non-biometric authentication (e.g. PIN, Pattern)."},"defaultValue":"1"}]},{"name":"LocalAuthenticationOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"cancelLabel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Allows to customize the default `Cancel` label shown."},"type":{"type":"intrinsic","name":"string"}},{"name":"disableDeviceFallback","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"After several failed attempts the system will fallback to the device passcode. This setting\\nallows you to disable this option and instead handle the fallback yourself. This can be\\npreferable in certain custom authentication workflows. This behaviour maps to using the iOS\\n[LAPolicyDeviceOwnerAuthenticationWithBiometrics](https://developer.apple.com/documentation/localauthentication/lapolicy/lapolicydeviceownerauthenticationwithbiometrics?language=objc)\\npolicy rather than the [LAPolicyDeviceOwnerAuthentication](https://developer.apple.com/documentation/localauthentication/lapolicy/lapolicydeviceownerauthentication?language=objc)\\npolicy. Defaults to `false`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"fallbackLabel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Allows to customize the default `Use Passcode` label shown after several failed\\nauthentication attempts. Setting this option to an empty string disables this button from\\nshowing in the prompt.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"promptMessage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A message that is shown alongside the TouchID or FaceID prompt."},"type":{"type":"intrinsic","name":"string"}},{"name":"requireConfirmation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets a hint to the system for whether to require user confirmation after authentication.\\nThis may be ignored by the system if the user has disabled implicit authentication in Settings\\nor if it does not apply to a particular biometric modality. Defaults to `true`.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"LocalAuthenticationResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"success","kind":1024,"kindString":"Property","type":{"type":"literal","value":true}}]}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"error","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"success","kind":1024,"kindString":"Property","type":{"type":"literal","value":false}},{"name":"warning","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"authenticateAsync","kind":64,"kindString":"Function","signatures":[{"name":"authenticateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Attempts to authenticate via Fingerprint/TouchID (or FaceID if available on the device).\\n> **Note:** Apple requires apps which use FaceID to provide a description of why they use this API.\\nIf you try to use FaceID on an iPhone with FaceID without providing `infoPlist.NSFaceIDUsageDescription`\\nin `app.json`, the module will authenticate using device passcode. For more information about\\nusage descriptions on iOS, see [Deploying to App Stores](/distribution/app-stores#system-permissions-dialogs-on-ios).","returns":"Returns a promise which fulfils with [`LocalAuthenticationResult`](#localauthenticationresult).\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"LocalAuthenticationOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocalAuthenticationResult"}],"name":"Promise"}}]},{"name":"cancelAuthenticate","kind":64,"kindString":"Function","signatures":[{"name":"cancelAuthenticate","kind":4096,"kindString":"Call signature","comment":{"shortText":"Cancels authentication flow.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"getEnrolledLevelAsync","kind":64,"kindString":"Function","signatures":[{"name":"getEnrolledLevelAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine what kind of authentication is enrolled on the device.","returns":"Returns a promise which fulfils with [`SecurityLevel`](#securitylevel).\\n> **Note:** On Android devices prior to M, `SECRET` can be returned if only the SIM lock has been\\nenrolled, which is not the method that [`authenticateAsync`](#localauthenticationauthenticateasyncoptions)\\nprompts.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"SecurityLevel"}],"name":"Promise"}}]},{"name":"hasHardwareAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasHardwareAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine whether a face or fingerprint scanner is available on the device.","returns":"Returns a promise which fulfils with a `boolean` value indicating whether a face or\\nfingerprint scanner is available on this device.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isEnrolledAsync","kind":64,"kindString":"Function","signatures":[{"name":"isEnrolledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine whether the device has saved fingerprints or facial data to use for authentication.","returns":"Returns a promise which fulfils to `boolean` value indicating whether the device has\\nsaved fingerprints or facial data for authentication.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"supportedAuthenticationTypesAsync","kind":64,"kindString":"Function","signatures":[{"name":"supportedAuthenticationTypesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine what kinds of authentications are available on the device.","returns":"Returns a promise which fulfils to an array containing [`AuthenticationType`s](#authenticationtype).\\n\\nDevices can support multiple authentication methods- i.e. `[1,2]` means the device supports both\\nfingerprint and facial recognition. If none are supported, this method returns an empty array.\\n"},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"AuthenticationType"}}],"name":"Promise"}}]}]}')},hq1P:function(e,w,n){"use strict";var c=n("rm/B"),p=c(/[A-Za-z]/);e.exports=p},htPg:function(e){e.exports=JSON.parse('{"name":"expo-analytics-segment","kind":1,"kindString":"Project","originalName":"","children":[{"name":"CommonOptions","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"},{"type":"literal","value":null}]}},{"name":"InitializeOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"androidWriteKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Write key for Android source."},"type":{"type":"intrinsic","name":"string"}},{"name":"iosWriteKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Write key for iOS source."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"alias","kind":64,"kindString":"Function","signatures":[{"name":"alias","kind":4096,"kindString":"Call signature","comment":{"shortText":"Associate current identity with a new identifier. See [Segment Alias docs](https://segment.com/docs/spec/alias/).","returns":"A `Promise` which fulfils witch a `boolean` indicating whether the method has been\\nexecuted on the underlying `Segment` instance or not.\\n"},"parameters":[{"name":"newId","kind":32768,"kindString":"Parameter","comment":{"shortText":"Identifier to associate with."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An extra dictionary with options for the call, [see here](https://segment.com/docs/connections/spec/common/)\\nfor possible configuration options. An example options object would be:\\n```json\\n{\\n  \\"integrations\\": {\\n    \\"Sentry\\": {\\n      \\"enabled\\": true\\n     }\\n  },\\n  \\"context\\": {\\n    \\"ip\\": \\"0.0.0.0\\"\\n  }\\n}\\n```\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"flush","kind":64,"kindString":"Function","signatures":[{"name":"flush","kind":4096,"kindString":"Call signature","comment":{"shortText":"Manually flush the event queue. You shouldn\'t need to call this in most cases."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"getEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"getEnabledAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"group","kind":64,"kindString":"Function","signatures":[{"name":"group","kind":4096,"kindString":"Call signature","comment":{"shortText":"Associate the user with a group. See [Segment Group docs](https://segment.com/docs/spec/group/)."},"parameters":[{"name":"groupId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the group.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"groupWithTraits","kind":64,"kindString":"Function","signatures":[{"name":"groupWithTraits","kind":4096,"kindString":"Call signature","comment":{"shortText":"Associate the user with a group with traits. See [Segment Group docs](https://segment.com/docs/spec/group/)."},"parameters":[{"name":"groupId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the group."},"type":{"type":"intrinsic","name":"string"}},{"name":"traits","kind":32768,"kindString":"Parameter","comment":{"shortText":"Free-form dictionary of traits of the group."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map that can include any of [these common fields](https://segment.com/docs/connections/spec/common/).\\nDefaults to `null`.\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"identify","kind":64,"kindString":"Function","signatures":[{"name":"identify","kind":4096,"kindString":"Call signature","comment":{"shortText":"Associates the current user with a user ID. Call this after calling [`Segment.initialize()`](#initialize)\\nbut before other segment calls. See [Segment Identify docs](https://segment.com/docs/spec/identify/)."},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","comment":{"shortText":"User ID for the current user.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"identifyWithTraits","kind":64,"kindString":"Function","signatures":[{"name":"identifyWithTraits","kind":4096,"kindString":"Call signature","comment":{},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","comment":{"shortText":"User ID for the current user."},"type":{"type":"intrinsic","name":"string"}},{"name":"traits","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of custom properties."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"Map that can include any of [these common fields](https://segment.com/docs/connections/spec/common/).\\nDefaults to `null`.\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"initialize","kind":64,"kindString":"Function","signatures":[{"name":"initialize","kind":4096,"kindString":"Call signature","comment":{"shortText":"Segment requires separate write keys for iOS and Android. You will need to log in to Segment\\nto receive these keys: [https://segment.com/docs/guides/setup/how-do-i-find-my-write-key/](https://segment.com/docs/guides/setup/how-do-i-find-my-write-key/)"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`InitializeOptions`](#initializeoptions) object.\\n"},"type":{"type":"reference","name":"InitializeOptions"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"reset","kind":64,"kindString":"Function","signatures":[{"name":"reset","kind":4096,"kindString":"Call signature","comment":{"shortText":"Clears the current user. See [https://segment.com/docs/sources/mobile/ios/#reset](https://segment.com/docs/sources/mobile/ios/#reset)."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"screen","kind":64,"kindString":"Function","signatures":[{"name":"screen","kind":4096,"kindString":"Call signature","comment":{"shortText":"Record that a user has seen a screen to Segment. See [Segment Screen docs](https://segment.com/docs/spec/screen/)."},"parameters":[{"name":"screenName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the screen.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"screenWithProperties","kind":64,"kindString":"Function","signatures":[{"name":"screenWithProperties","kind":4096,"kindString":"Call signature","comment":{"shortText":"Record that a user has seen a screen to Segment with custom properties. See [Segment Screen docs](https://segment.com/docs/spec/screen/)."},"parameters":[{"name":"screenName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the screen."},"type":{"type":"intrinsic","name":"string"}},{"name":"properties","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of custom properties."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map that can include any of [these common fields](https://segment.com/docs/connections/spec/common/).\\nDefaults to `null`.\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setEnabledAsync","kind":4096,"kindString":"Call signature","parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"track","kind":64,"kindString":"Function","signatures":[{"name":"track","kind":4096,"kindString":"Call signature","comment":{"shortText":"Log an event to Segment. See [Segment Track docs](https://segment.com/docs/spec/track/)."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","comment":{"shortText":"The event name.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"trackWithProperties","kind":64,"kindString":"Function","signatures":[{"name":"trackWithProperties","kind":4096,"kindString":"Call signature","comment":{"shortText":"Log an event to Segment with custom properties. See [Segment Track docs](https://segment.com/docs/spec/track/)."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","comment":{"shortText":"The event name."},"type":{"type":"intrinsic","name":"string"}},{"name":"properties","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of custom properties."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map that can include any of [these common fields](https://segment.com/docs/connections/spec/common/).\\nDefaults to `null`.\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"intrinsic","name":"void"}}]}]}')},i1Ns:function(e){e.exports=JSON.parse('{"name":"expo-error-recovery","kind":1,"kindString":"Project","originalName":"","children":[{"name":"ErrorRecoveryProps","kind":4194304,"kindString":"Type alias","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"name":"recoveredProps","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"ErrorRecoveryProps"}]},"defaultValue":"..."},{"name":"setRecoveryProps","kind":64,"kindString":"Function","signatures":[{"name":"setRecoveryProps","kind":4096,"kindString":"Call signature","comment":{"shortText":"Set arbitrary error recovery props. If your project crashes in production as a result of a fatal\\nJS error, Expo will reload your project. If you\'ve set these props, they\'ll be passed to your\\nreloaded project\'s initial props under `exp.errorRecovery`. Access to `localStorage` is required\\non web, or else this will simply be a no-op.","text":"[Read more about error handling with Expo](/guides/errors)."},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","comment":{"shortText":"An object which will be passed to your reloaded project\'s initial props if the\\nproject was reloaded as a result of a fatal JS error.\\n"},"type":{"type":"reference","name":"ErrorRecoveryProps"}}],"type":{"type":"intrinsic","name":"void"}}]}]}')},iN0G:function(e){e.exports=JSON.parse(`{"name":"expo-analytics-amplitude","kind":1,"kindString":"Project","originalName":"","children":[{"name":"AmplitudeTrackingOptions","kind":256,"kindString":"Interface","children":[{"name":"disableAdid","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableCarrier","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device's carrier."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableCity","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's city."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableCountry","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's country."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableDMA","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's DMA."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableDeviceBrand","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device brand."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableDeviceManufacturer","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device manufacturer."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableDeviceModel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device model."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableIDFV","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's IDFV."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableIPAddress","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's IP address."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableLanguage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device's language."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableLatLng","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's current latitude and longitude coordinates."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableOSName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device's OS name."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableOSVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device's OS version."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disablePlatform","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the device's platform."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableRegion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the user's region."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"disableVersionName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Disable tracking of the app version the user is on for your app."},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"clearUserPropertiesAsync","kind":64,"kindString":"Function","signatures":[{"name":"clearUserPropertiesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Clear properties set by [\`setUserPropertiesAsync()\`](#amplitudesetuserpropertiesasyncuserproperties)."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"initializeAsync","kind":64,"kindString":"Function","signatures":[{"name":"initializeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Initializes Amplitude with your Amplitude API key. If you're having trouble finding your API key,\\nsee [step 4 of these instructions](https://amplitude.zendesk.com/hc/en-us/articles/207108137-Introduction-Getting-Started#getting-started)."},"parameters":[{"name":"apiKey","kind":32768,"kindString":"Parameter","comment":{"shortText":"Your Amplitude application's API key.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"logEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Log an event to Amplitude. For more information about what kind of events to track,\\n[see here](https://amplitude.zendesk.com/hc/en-us/articles/206404698-Step-3-Track-Events-and-Understand-the-Actions-Users-Take)."},"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","comment":{"shortText":"The event name.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"logEventWithPropertiesAsync","kind":64,"kindString":"Function","signatures":[{"name":"logEventWithPropertiesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Log an event to Amplitude with custom properties. For more information about what kind of events\\nto track, [see here](https://amplitude.zendesk.com/hc/en-us/articles/206404698-Step-3-Track-Events-and-Understand-the-Actions-Users-Take)."},"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","comment":{"shortText":"The event name."},"type":{"type":"intrinsic","name":"string"}},{"name":"properties","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of custom properties.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setGroupAsync","kind":64,"kindString":"Function","signatures":[{"name":"setGroupAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Add the current user to a group. For more information, see here for [iOS](https://github.com/amplitude/Amplitude-iOS#setting-groups)\\nand see here for [Android](https://github.com/amplitude/Amplitude-Android#setting-groups)."},"parameters":[{"name":"groupType","kind":32768,"kindString":"Parameter","comment":{"shortText":"The group name, e.g. \\"sports\\"."},"type":{"type":"intrinsic","name":"string"}},{"name":"groupNames","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of group names, e.g. [\\"tennis\\", \\"soccer\\"].\\n> **Note:** The iOS and Android Amplitude SDKs allow you to use a string or an array of strings. We\\nonly support an array of strings. Just use an array with one element if you only want one group\\nname.\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setTrackingOptionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"setTrackingOptionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"By default, the Amplitude SDK will track several user properties such as carrier and city. You\\ncan use this method to customize and disable individual fields.\\n> **Note:** These configurations will prevent default properties from being tracked on newly\\ncreated projects, where data has not yet been sent. Please contact [platform@amplitude.com](mailto:platform@amplitude.com)\\nif you would like default properties blocked (moving forward) on projects with existing data."},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"Options object for what should not be tracked. The table below describes what\\nproperties the object may contain. All properties are expected to be booleans. For example,\\npassing \`disableCarrier: true\` disables tracking the device's carrier.\\n"},"type":{"type":"reference","name":"AmplitudeTrackingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserIdAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUserIdAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Assign a user ID to the current user. If you don't have a system for user IDs you don't need to\\ncall this. See [this page](https://amplitude.zendesk.com/hc/en-us/articles/206404628-Step-2-Assign-User-IDs-and-Identify-your-Users)\\nfor details."},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","comment":{"shortText":"User ID for the current user. Can be set to \`null\` (e.g. when the user is logging out).\\n"},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setUserPropertiesAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUserPropertiesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Set properties for the current user. See [here for details](https://amplitude.zendesk.com/hc/en-us/articles/207108327-Step-4-Set-User-Properties-and-Event-Properties)."},"parameters":[{"name":"userProperties","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of custom properties.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}`)},"ie/8":function(e){e.exports=JSON.parse('{"name":"expo-font","kind":1,"kindString":"Project","originalName":"","children":[{"name":"FontDisplay","kind":8,"kindString":"Enumeration","comment":{"shortText":"__Web Only__. Sets the [font-display](https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display)\\nfor a given typeface. The default font value on web is `FontDisplay.AUTO`.\\nEven though setting the `fontDisplay` does nothing on native platforms, the default behavior\\nemulates `FontDisplay.SWAP` on flagship devices like iOS, Samsung, Pixel, etc. Default\\nfunctionality varies on One Plus devices. In the browser this value is set in the generated\\n`@font-face` CSS block and not as a style property meaning you cannot dynamically change this\\nvalue based on the element it\'s used in."},"children":[{"name":"AUTO","kind":16,"kindString":"Enumeration member","comment":{"shortText":"__(Default)__ The font display strategy is defined by the user agent or platform.\\nThis generally defaults to the text being invisible until the font is loaded.\\nGood for buttons or banners that require a specific treatment."},"defaultValue":"\\"auto\\""},{"name":"BLOCK","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The text will be invisible until the font has loaded. If the font fails to load then nothing\\nwill appear - it\'s best to turn this off when debugging missing text."},"defaultValue":"\\"block\\""},{"name":"FALLBACK","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Splits the behavior between `SWAP` and `BLOCK`.\\nThere will be a [100ms timeout](https://developers.google.com/web/updates/2016/02/font-display?hl=en)\\nwhere the text with a custom font is invisible, after that the text will either swap to the\\nstyled text or it\'ll show the unstyled text and continue to load the custom font. This is good\\nfor buttons that need a custom font but should also be quickly available to screen-readers."},"defaultValue":"\\"fallback\\""},{"name":"OPTIONAL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"This works almost identically to `FALLBACK`, the only difference is that the browser will\\ndecide to load the font based on slow connection speed or critical resource demand."},"defaultValue":"\\"optional\\""},{"name":"SWAP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Fallback text is rendered immediately with a default font while the desired font is loaded.\\nThis is good for making the content appear to load instantly and is usually preferred."},"defaultValue":"\\"swap\\""}]},{"name":"FontResource","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object used to dictate the resource that is loaded into the provided font namespace when used\\nwith [`loadAsync`](#loadasync)."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"display","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"_Web Only._ Sets the [`font-display`](#fontdisplay) property for a given typeface in the\\nbrowser."},"type":{"type":"reference","name":"FontDisplay"}},{"name":"uri","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}},{"name":"FontSource","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The different types of assets you can provide to the [`loadAsync()`](#loadAsync) function.\\nA font source can be a URI, a module ID, or an Expo Asset."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"reference","name":"Asset"},{"type":"reference","name":"FontResource"}]}},{"name":"UnloadFontOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Object used to query fonts for unloading."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"FontResource"},{"type":"literal","value":"display"}],"name":"Pick"}},{"name":"isLoaded","kind":64,"kindString":"Function","signatures":[{"name":"isLoaded","kind":4096,"kindString":"Call signature","comment":{"shortText":"Synchronously detect if the font for `fontFamily` has finished loading.","returns":"Returns `true` if the font has fully loaded.\\n"},"parameters":[{"name":"fontFamily","kind":32768,"kindString":"Parameter","comment":{"shortText":"The name used to load the `FontResource`."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"isLoading","kind":64,"kindString":"Function","signatures":[{"name":"isLoading","kind":4096,"kindString":"Call signature","comment":{"shortText":"Synchronously detect if the font for `fontFamily` is still being loaded.","returns":"Returns `true` if the font is still loading.\\n"},"parameters":[{"name":"fontFamily","kind":32768,"kindString":"Parameter","comment":{"shortText":"The name used to load the `FontResource`."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"loadAsync","kind":64,"kindString":"Function","signatures":[{"name":"loadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Highly efficient method for loading fonts from static or remote resources which can then be used\\nwith the platform\'s native text elements. In the browser this generates a `@font-face` block in\\na shared style sheet for fonts. No CSS is needed to use this method.","returns":"Returns a promise that fulfils when the font has loaded. Often you may want to wrap the\\nmethod in a `try/catch/finally` to ensure the app continues if the font fails to load.\\n"},"parameters":[{"name":"fontFamilyOrFontMap","kind":32768,"kindString":"Parameter","comment":{"shortText":"string or map of values that can be used as the [`fontFamily`](https://reactnative.dev/docs/text#style)\\nstyle prop with React Native Text elements."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"FontSource"}],"name":"Record"}]}},{"name":"source","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"the font asset that should be loaded into the `fontFamily` namespace.\\n"},"type":{"type":"reference","name":"FontSource"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"processFontFamily","kind":64,"kindString":"Function","signatures":[{"name":"processFontFamily","kind":4096,"kindString":"Call signature","comment":{"shortText":"Used to transform font family names to the scoped name. This does not need to\\nbe called in standalone or bare apps but it will return unscoped font family\\nnames if it is called in those contexts.","returns":"Returns a name processed for use with the [current workflow](https://docs.expo.io/introduction/managed-vs-bare/).\\n"},"parameters":[{"name":"fontFamily","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of font to process."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]},{"name":"unloadAllAsync","kind":64,"kindString":"Function","signatures":[{"name":"unloadAllAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unloads all the custom fonts. This is used for testing."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"unloadAsync","kind":64,"kindString":"Function","signatures":[{"name":"unloadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unload custom fonts matching the `fontFamily`s and display values provided.\\nBecause fonts are automatically unloaded on every platform this is mostly used for testing."},"parameters":[{"name":"fontFamilyOrFontMap","kind":32768,"kindString":"Parameter","comment":{"shortText":"The name or names of the custom fonts that will be unloaded."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"UnloadFontOptions"}],"name":"Record"}]}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"When `fontFamilyOrFontMap` is a string, this should be the font source used to load\\nthe custom font originally.\\n"},"type":{"type":"reference","name":"UnloadFontOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"useFonts","kind":64,"kindString":"Function","signatures":[{"name":"useFonts","kind":4096,"kindString":"Call signature","comment":{"shortText":"```ts\\nconst [loaded, error] = useFonts({ ... });\\n```\\nLoad a map of fonts with [`loadAsync`](#loadasync). This returns a `boolean` if the fonts are\\nloaded and ready to use. It also returns an error if something went wrong, to use in development.","text":"> Note, the fonts are not \\"reloaded\\" when you dynamically change the font map.\\n","returns":"\\n- __loaded__ (`boolean`) - A boolean to detect if the font for `fontFamily` has finished\\nloading.\\n- __error__ (`Error | null`) - An error encountered when loading the fonts.\\n"},"parameters":[{"name":"map","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of `fontFamily`s to [`FontSource`](#fontsource)s. After loading the font you can\\nuse the key in the `fontFamily` style prop of a `Text` element.\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"FontSource"}],"name":"Record"}]}}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"boolean"},{"type":"union","types":[{"type":"reference","name":"Error"},{"type":"literal","value":null}]}]}}]}]}')},iqAl:function(e){e.exports=JSON.parse('{"name":"expo-intent-launcher","kind":1,"kindString":"Project","originalName":"","children":[{"name":"ActivityAction","kind":8,"kindString":"Enumeration","comment":{"shortText":"Constants are from the source code of [Settings provider](https://developer.android.com/reference/android/provider/Settings)."},"children":[{"name":"ACCESSIBILITY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ACCESSIBILITY_SETTINGS\\""},{"name":"ADD_ACCOUNT_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ADD_ACCOUNT_SETTINGS\\""},{"name":"AIRPLANE_MODE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.AIRPLANE_MODE_SETTINGS\\""},{"name":"APN_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APN_SETTINGS\\""},{"name":"APPLICATION_DETAILS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APPLICATION_DETAILS_SETTINGS\\""},{"name":"APPLICATION_DEVELOPMENT_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APPLICATION_DEVELOPMENT_SETTINGS\\""},{"name":"APPLICATION_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APPLICATION_SETTINGS\\""},{"name":"APP_NOTIFICATION_REDACTION","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ACTION_APP_NOTIFICATION_REDACTION\\""},{"name":"APP_NOTIFICATION_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APP_NOTIFICATION_SETTINGS\\""},{"name":"APP_OPS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APP_OPS_SETTINGS\\""},{"name":"BATTERY_SAVER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.BATTERY_SAVER_SETTINGS\\""},{"name":"BLUETOOTH_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.BLUETOOTH_SETTINGS\\""},{"name":"CAPTIONING_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.CAPTIONING_SETTINGS\\""},{"name":"CAST_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.CAST_SETTINGS\\""},{"name":"CONDITION_PROVIDER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ACTION_CONDITION_PROVIDER_SETTINGS\\""},{"name":"DATA_ROAMING_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DATA_ROAMING_SETTINGS\\""},{"name":"DATE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DATE_SETTINGS\\""},{"name":"DEVICE_INFO_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DEVICE_INFO_SETTINGS\\""},{"name":"DEVICE_NAME","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DEVICE_NAME\\""},{"name":"DISPLAY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DISPLAY_SETTINGS\\""},{"name":"DREAM_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DREAM_SETTINGS\\""},{"name":"HARD_KEYBOARD_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.HARD_KEYBOARD_SETTINGS\\""},{"name":"HOME_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.HOME_SETTINGS\\""},{"name":"IGNORE_BACKGROUND_DATA_RESTRICTIONS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.IGNORE_BACKGROUND_DATA_RESTRICTIONS_SETTINGS\\""},{"name":"IGNORE_BATTERY_OPTIMIZATION_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.IGNORE_BATTERY_OPTIMIZATION_SETTINGS\\""},{"name":"INPUT_METHOD_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.INPUT_METHOD_SETTINGS\\""},{"name":"INPUT_METHOD_SUBTYPE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.INPUT_METHOD_SUBTYPE_SETTINGS\\""},{"name":"INTERNAL_STORAGE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.INTERNAL_STORAGE_SETTINGS\\""},{"name":"LOCALE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.LOCALE_SETTINGS\\""},{"name":"LOCATION_SOURCE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.LOCATION_SOURCE_SETTINGS\\""},{"name":"MANAGE_ALL_APPLICATIONS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.MANAGE_ALL_APPLICATIONS_SETTINGS\\""},{"name":"MANAGE_APPLICATIONS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.MANAGE_APPLICATIONS_SETTINGS\\""},{"name":"MANAGE_DEFAULT_APPS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.MANAGE_DEFAULT_APPS_SETTINGS\\""},{"name":"MEMORY_CARD_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.MEMORY_CARD_SETTINGS\\""},{"name":"MONITORING_CERT_INFO","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.MONITORING_CERT_INFO\\""},{"name":"NETWORK_OPERATOR_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NETWORK_OPERATOR_SETTINGS\\""},{"name":"NFCSHARING_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NFCSHARING_SETTINGS\\""},{"name":"NFC_PAYMENT_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NFC_PAYMENT_SETTINGS\\""},{"name":"NFC_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NFC_SETTINGS\\""},{"name":"NIGHT_DISPLAY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NIGHT_DISPLAY_SETTINGS\\""},{"name":"NOTIFICATION_LISTENER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ACTION_NOTIFICATION_LISTENER_SETTINGS\\""},{"name":"NOTIFICATION_POLICY_ACCESS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NOTIFICATION_POLICY_ACCESS_SETTINGS\\""},{"name":"NOTIFICATION_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NOTIFICATION_SETTINGS\\""},{"name":"PAIRING_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.PAIRING_SETTINGS\\""},{"name":"PRINT_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ACTION_PRINT_SETTINGS\\""},{"name":"PRIVACY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.PRIVACY_SETTINGS\\""},{"name":"QUICK_LAUNCH_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.QUICK_LAUNCH_SETTINGS\\""},{"name":"REQUEST_IGNORE_BATTERY_OPTIMIZATIONS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS\\""},{"name":"SECURITY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SECURITY_SETTINGS\\""},{"name":"SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SETTINGS\\""},{"name":"SHOW_ADMIN_SUPPORT_DETAILS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SHOW_ADMIN_SUPPORT_DETAILS\\""},{"name":"SHOW_INPUT_METHOD_PICKER","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SHOW_INPUT_METHOD_PICKER\\""},{"name":"SHOW_REGULATORY_INFO","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SHOW_REGULATORY_INFO\\""},{"name":"SHOW_REMOTE_BUGREPORT_DIALOG","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SHOW_REMOTE_BUGREPORT_DIALOG\\""},{"name":"SOUND_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SOUND_SETTINGS\\""},{"name":"STORAGE_MANAGER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.STORAGE_MANAGER_SETTINGS\\""},{"name":"SYNC_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SYNC_SETTINGS\\""},{"name":"SYSTEM_UPDATE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SYSTEM_UPDATE_SETTINGS\\""},{"name":"TETHER_PROVISIONING_UI","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.TETHER_PROVISIONING_UI\\""},{"name":"TRUSTED_CREDENTIALS_USER","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.TRUSTED_CREDENTIALS_USER\\""},{"name":"USAGE_ACCESS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.USAGE_ACCESS_SETTINGS\\""},{"name":"USER_DICTIONARY_INSERT","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.USER_DICTIONARY_INSERT\\""},{"name":"USER_DICTIONARY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.USER_DICTIONARY_SETTINGS\\""},{"name":"USER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.USER_SETTINGS\\""},{"name":"VOICE_CONTROL_AIRPLANE_MODE","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VOICE_CONTROL_AIRPLANE_MODE\\""},{"name":"VOICE_CONTROL_BATTERY_SAVER_MODE","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VOICE_CONTROL_BATTERY_SAVER_MODE\\""},{"name":"VOICE_CONTROL_DO_NOT_DISTURB_MODE","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VOICE_CONTROL_DO_NOT_DISTURB_MODE\\""},{"name":"VOICE_INPUT_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VOICE_INPUT_SETTINGS\\""},{"name":"VPN_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VPN_SETTINGS\\""},{"name":"VR_LISTENER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VR_LISTENER_SETTINGS\\""},{"name":"WEBVIEW_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.WEBVIEW_SETTINGS\\""},{"name":"WIFI_IP_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.WIFI_IP_SETTINGS\\""},{"name":"WIFI_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.WIFI_SETTINGS\\""},{"name":"WIRELESS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.WIRELESS_SETTINGS\\""},{"name":"ZEN_MODE_AUTOMATION_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_AUTOMATION_SETTINGS\\""},{"name":"ZEN_MODE_EVENT_RULE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_EVENT_RULE_SETTINGS\\""},{"name":"ZEN_MODE_EXTERNAL_RULE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_EXTERNAL_RULE_SETTINGS\\""},{"name":"ZEN_MODE_PRIORITY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_PRIORITY_SETTINGS\\""},{"name":"ZEN_MODE_SCHEDULE_RULE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_SCHEDULE_RULE_SETTINGS\\""},{"name":"ZEN_MODE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_SETTINGS\\""}]},{"name":"ResultCode","kind":8,"kindString":"Enumeration","children":[{"name":"Canceled","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Means that the activity was canceled, e.g. by tapping on the back button."},"defaultValue":"0"},{"name":"FirstUser","kind":16,"kindString":"Enumeration member","comment":{"shortText":"First custom, user-defined value that can be returned by the activity."},"defaultValue":"1"},{"name":"Success","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates that the activity operation succeeded."},"defaultValue":"-1"}]},{"name":"IntentLauncherParams","kind":256,"kindString":"Interface","children":[{"name":"category","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Category provides more details about the action the intent performs. See [Intent.addCategory](https://developer.android.com/reference/android/content/Intent.html#addCategory(java.lang.String))."},"type":{"type":"intrinsic","name":"string"}},{"name":"className","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Class name of the ComponentName."},"type":{"type":"intrinsic","name":"string"}},{"name":"data","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A URI specifying the data that the intent should operate upon. (_Note:_ Android requires the URI\\nscheme to be lowercase, unlike the formal RFC.)"},"type":{"type":"intrinsic","name":"string"}},{"name":"extra","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A map specifying additional key-value pairs which are passed with the intent as `extras`.\\nThe keys must include a package prefix, for example the app `com.android.contacts` would use\\nnames like `com.android.contacts.ShowAll`."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"flags","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Bitmask of flags to be used. See [Intent.setFlags](<https://developer.android.com/reference/android/content/Intent.html#setFlags(int)>) for more details."},"type":{"type":"intrinsic","name":"number"}},{"name":"packageName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Package name used as an identifier of ComponentName. Set this only if you want to explicitly\\nset the component to handle the intent."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A string specifying the MIME type of the data represented by the data parameter. Ignore this\\nargument to allow Android to infer the correct MIME type."},"type":{"type":"intrinsic","name":"string"}}]},{"name":"IntentLauncherResult","kind":256,"kindString":"Interface","children":[{"name":"data","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Optional data URI that can be returned by the activity."},"type":{"type":"intrinsic","name":"string"}},{"name":"extra","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Optional extras object that can be returned by the activity."},"type":{"type":"intrinsic","name":"object"}},{"name":"resultCode","kind":1024,"kindString":"Property","comment":{"shortText":"Result code returned by the activity."},"type":{"type":"reference","name":"ResultCode"}}]},{"name":"startActivityAsync","kind":64,"kindString":"Function","signatures":[{"name":"startActivityAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Starts the specified activity. The method will return a promise which resolves when the user\\nreturns to the app.","returns":"A promise which fulfils with `IntentLauncherResult` object.\\n"},"parameters":[{"name":"activityAction","kind":32768,"kindString":"Parameter","comment":{"text":"The action to be performed, e.g. `IntentLauncher.ActivityAction.WIRELESS_SETTINGS`.\\nThere are a few pre-defined constants you can use for this parameter.\\nYou can find them at [expo-intent-launcher/src/IntentLauncher.ts](https://github.com/expo/expo/tree/main/packages/expo-intent-launcher/src/IntentLauncher.ts)."},"type":{"type":"reference","name":"ActivityAction"}},{"name":"params","kind":32768,"kindString":"Parameter","comment":{"text":"An object of intent parameters."},"type":{"type":"reference","name":"IntentLauncherParams"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"IntentLauncherResult"}],"name":"Promise"}}]}]}')},j56j:function(e){e.exports=JSON.parse('{"name":"expo-mail-composer","kind":1,"kindString":"Project","originalName":"","children":[{"name":"MailComposerStatus","kind":8,"kindString":"Enumeration","children":[{"name":"CANCELLED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"cancelled\\""},{"name":"SAVED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"saved\\""},{"name":"SENT","kind":16,"kindString":"Enumeration member","defaultValue":"\\"sent\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"MailComposerOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A map defining the data to fill the mail."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"attachments","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of app\'s internal file URIs to attach."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"bccRecipients","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of e-mail addresses of the BCC recipients."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"body","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Body of the e-mail."},"type":{"type":"intrinsic","name":"string"}},{"name":"ccRecipients","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of e-mail addresses of the CC recipients."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"isHtml","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the body contains HTML tags so it could be formatted properly.\\nNot working perfectly on Android."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"recipients","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of e-mail addresses of the recipients."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"subject","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Subject of the e-mail."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"MailComposerResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"MailComposerStatus"}}]}}},{"name":"composeAsync","kind":64,"kindString":"Function","signatures":[{"name":"composeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Opens a mail modal for iOS and a mail app intent for Android and fills the fields with provided\\ndata. On iOS you will need to be signed into the Mail app.","returns":"A promise fulfilled with an object containing a `status` field that specifies whether an\\nemail was sent, saved, or cancelled. Android does not provide this info, so the status is always\\nset as if the email were sent.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"MailComposerOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"MailComposerResult"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine if the `MailComposer` API can be used in this app.","returns":"A promise resolves to `true` if the API can be used, and `false` otherwise.\\n- Returns `true` on iOS when the device has a default email setup for sending mail.\\n- Can return `false` on iOS if an MDM profile is setup to block outgoing mail. If this is the\\ncase, you may want to use the Linking API instead.\\n- Always returns `true` in the browser and on Android.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}')},j65y:function(e,w,n){"use strict";e.exports=p;var c=n("2jS9");function p(d,a){return d(a,"em",c(d,a))}},jeK3:function(e,w,n){"use strict";function c(p){for(var d=-1,a=0;++d<p.length;)a+=typeof p[d]=="string"?p[d].length:1;return a}e.exports=c},jkj1:function(e){e.exports=JSON.parse('{"name":"expo-screen-capture","kind":1,"kindString":"Project","originalName":"","children":[{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"addScreenshotListener","kind":64,"kindString":"Function","signatures":[{"name":"addScreenshotListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Adds a listener that will fire whenever the user takes a screenshot while the app is foregrounded.\\nOn Android, this method requires the `READ_EXTERNAL_STORAGE` permission. You can request this\\nwith [`MediaLibrary.requestPermissionsAsync()`](./media-library/#medialibraryrequestpermissionsasync).","returns":"A `Subscription` object that you can use to unregister the listener, either by calling\\n`remove()` or passing it to `removeScreenshotListener`.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"The function that will be executed when the user takes a screenshot.\\nThis function accepts no arguments.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"allowScreenCaptureAsync","kind":64,"kindString":"Function","signatures":[{"name":"allowScreenCaptureAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Re-allows the user to screen record or screenshot your app. If you haven\'t called\\n`preventScreenCapture()` yet, this method does nothing."},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"shortText":"This will prevent multiple instances of the `preventScreenCaptureAsync` and\\n`allowScreenCaptureAsync` methods from conflicting with each other. If provided, the value must\\nbe the same as the key passed to `preventScreenCaptureAsync` in order to re-enable screen\\ncapturing. Defaults to \'default\'.\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'default\'"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the Screen Capture API is available on the current device.","returns":"A promise that resolves to a `boolean` indicating whether the Screen Capture API is available on the current\\ndevice. Currently, this resolves to `true` on Android and iOS only.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"preventScreenCaptureAsync","kind":64,"kindString":"Function","signatures":[{"name":"preventScreenCaptureAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prevents screenshots and screen recordings until `allowScreenCaptureAsync` is called or the app is restarted. If you are\\nalready preventing screen capture, this method does nothing (unless you pass a new and unique `key`).","text":"> Please note that on iOS, this will only prevent screen recordings, and is only available on\\niOS 11 and newer. On older iOS versions, this method does nothing.\\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"shortText":"Optional. If provided, this will help prevent multiple instances of the `preventScreenCaptureAsync`\\nand `allowScreenCaptureAsync` methods (and `usePreventScreenCapture` hook) from conflicting with each other.\\nWhen using multiple keys, you\'ll have to re-allow each one in order to re-enable screen capturing.\\nDefaults to `\'default\'`.\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'default\'"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"removeScreenshotListener","kind":64,"kindString":"Function","signatures":[{"name":"removeScreenshotListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes the subscription you provide, so that you are no longer listening for screenshots.","text":"If you prefer, you can also call `remove()` on that `Subscription` object, for example:\\n\\n```ts\\nlet mySubscription = addScreenshotListener(() => {\\n  console.log(\\"You took a screenshot!\\");\\n});\\n...\\nmySubscription.remove();\\n// OR\\nremoveScreenshotListener(mySubscription);\\n```\\n"},"parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","comment":{"shortText":"Subscription returned by `addScreenshotListener`.\\n"},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"usePreventScreenCapture","kind":64,"kindString":"Function","signatures":[{"name":"usePreventScreenCapture","kind":4096,"kindString":"Call signature","comment":{"shortText":"A React hook to prevent screen capturing for as long as the owner component is mounted."},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'default\'"}],"type":{"type":"intrinsic","name":"void"}}]}]}')},jmlN:function(e){e.exports=JSON.parse('{"name":"expo-image-manipulator","kind":1,"kindString":"Project","originalName":"","children":[{"name":"FlipType","kind":8,"kindString":"Enumeration","children":[{"name":"Horizontal","kind":16,"kindString":"Enumeration member","defaultValue":"\\"horizontal\\""},{"name":"Vertical","kind":16,"kindString":"Enumeration member","defaultValue":"\\"vertical\\""}]},{"name":"SaveFormat","kind":8,"kindString":"Enumeration","children":[{"name":"JPEG","kind":16,"kindString":"Enumeration member","defaultValue":"\\"jpeg\\""},{"name":"PNG","kind":16,"kindString":"Enumeration member","defaultValue":"\\"png\\""},{"name":"WEBP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"__Web Only__"},"defaultValue":"\\"webp\\""}]},{"name":"Action","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"ActionResize"},{"type":"reference","name":"ActionRotate"},{"type":"reference","name":"ActionFlip"},{"type":"reference","name":"ActionCrop"}]}},{"name":"ActionCrop","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"crop","kind":1024,"kindString":"Property","comment":{"shortText":"Fields specify top-left corner and dimensions of a crop rectangle."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"originX","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"originY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}}]}}},{"name":"ActionFlip","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"flip","kind":1024,"kindString":"Property","comment":{"shortText":"An axis on which image will be flipped. Only one flip per transformation is available. If you\\nwant to flip according to both axes then provide two separate transformations."},"type":{"type":"reference","name":"FlipType"}}]}}},{"name":"ActionResize","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"resize","kind":1024,"kindString":"Property","comment":{"shortText":"Values correspond to the result image dimensions. If you specify only one value, the other will\\nbe calculated automatically to preserve image ratio."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}]}}}]}}},{"name":"ActionRotate","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"rotate","kind":1024,"kindString":"Property","comment":{"shortText":"Degrees to rotate the image. Rotation is clockwise when the value is positive and\\ncounter-clockwise when negative."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"ImageResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"It is included if the `base64` save option was truthy, and is a string containing the\\nJPEG/PNG (depending on `format`) data of the image in Base64. Prepend that with `\'data:image/xxx;base64,\'`\\nto get a data URI, which you can use as the source for an `Image` element for example\\n(where `xxx` is `jpeg` or `png`)."},"type":{"type":"intrinsic","name":"string"}},{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"Height of the image or video."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"An URI to the modified image (usable as the source for an `Image` or `Video` element)."},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"Width of the image or video."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"SaveOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A map defining how modified image should be saved."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to also include the image data in Base64 format."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"compress","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A value in range `0.0` - `1.0` specifying compression level of the result image. `1` means\\nno compression (highest quality) and `0` the highest compression (lowest quality)."},"type":{"type":"intrinsic","name":"number"}},{"name":"format","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specifies what type of compression should be used and what is the result file extension.\\n`SaveFormat.PNG` compression is lossless but slower, `SaveFormat.JPEG` is faster but the image\\nhas visible artifacts. Defaults to `SaveFormat.JPEG`"},"type":{"type":"reference","name":"SaveFormat"}}]}}},{"name":"manipulateAsync","kind":64,"kindString":"Function","signatures":[{"name":"manipulateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Manipulate the image provided via `uri`. Available modifications are rotating, flipping (mirroring),\\nresizing and cropping. Each invocation results in a new file. With one invocation you can provide\\na set of actions to perform over the image. Overwriting the source file would not have an effect\\nin displaying the result as images are cached.","returns":"Promise which fulfils with [`ImageResult`](#imageresult) object.\\n"},"parameters":[{"name":"uri","kind":32768,"kindString":"Parameter","comment":{"shortText":"URI of the file to manipulate. Should be on the local file system or a base64 data URI."},"type":{"type":"intrinsic","name":"string"}},{"name":"actions","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of objects representing manipulation options. Each object should have\\n__only one__ of the keys that corresponds to specific transformation."},"type":{"type":"array","elementType":{"type":"reference","name":"Action"}},"defaultValue":"[]"},{"name":"saveOptions","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map defining how modified image should be saved."},"type":{"type":"reference","name":"SaveOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImageResult"}],"name":"Promise"}}]}]}')},jv5L:function(e,w,n){var c=n("eASu"),p=n("ki31"),d=n("DHYa"),a=n("qD0n"),m={}.hasOwnProperty;e.exports=r([c,p,d,a]);function r(i){for(var o={transforms:[],canContainEols:[]},t=i.length,l=-1;++l<t;)s(o,i[l]);return o}function s(i,o){var t,l,k;for(t in o)l=m.call(i,t)?i[t]:i[t]={},k=o[t],t==="canContainEols"||t==="transforms"?i[t]=[].concat(l,k):Object.assign(l,k)}},jvvS:function(e){e.exports=JSON.parse('{"name":"expo-haptics","kind":1,"kindString":"Project","originalName":"","children":[{"name":"ImpactFeedbackStyle","kind":8,"kindString":"Enumeration","comment":{"shortText":"The mass of the objects in the collision simulated by a UIImpactFeedbackGenerator object\\n[`UINotificationFeedbackStyle`](https://developer.apple.com/documentation/uikit/uiimpactfeedbackstyle)"},"children":[{"name":"Heavy","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A collision between large, heavy user interface elements."},"defaultValue":"\\"heavy\\""},{"name":"Light","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A collision between small, light user interface elements."},"defaultValue":"\\"light\\""},{"name":"Medium","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A collision between moderately sized user interface elements."},"defaultValue":"\\"medium\\""}]},{"name":"NotificationFeedbackType","kind":8,"kindString":"Enumeration","comment":{"shortText":"The type of notification feedback generated by a UINotificationFeedbackGenerator object.\\n[`UINotificationFeedbackType`](https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype)"},"children":[{"name":"Error","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A notification feedback type indicating that a task has failed."},"defaultValue":"\\"error\\""},{"name":"Success","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A notification feedback type indicating that a task has completed successfully."},"defaultValue":"\\"success\\""},{"name":"Warning","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A notification feedback type indicating that a task has produced a warning."},"defaultValue":"\\"warning\\""}]},{"name":"impactAsync","kind":64,"kindString":"Function","signatures":[{"name":"impactAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"A `Promise` which fulfils once native size haptics functionality is triggered.\\n"},"parameters":[{"name":"style","kind":32768,"kindString":"Parameter","comment":{"shortText":"A collision indicator that on iOS is directly mapped to [`UIImpactFeedbackStyle`](https://developer.apple.com/documentation/uikit/uiimpactfeedbackstyle),\\nwhile on Android these are simulated using [Vibrator](https://developer.android.com/reference/android/os/Vibrator).\\nYou can use one of `Haptics.ImpactFeedbackStyle.{Light, Medium, Heavy}`."},"type":{"type":"reference","name":"ImpactFeedbackStyle"},"defaultValue":"ImpactFeedbackStyle.Medium"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"notificationAsync","kind":64,"kindString":"Function","signatures":[{"name":"notificationAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"The kind of notification response used in the feedback.","returns":"A `Promise` which fulfils once native size haptics functionality is triggered.\\n"},"parameters":[{"name":"type","kind":32768,"kindString":"Parameter","comment":{"shortText":"A notification feedback type that on iOS is directly mapped to [UINotificationFeedbackType](https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype),\\nwhile on Android these are simulated using [Vibrator](https://developer.android.com/reference/android/os/Vibrator).\\nYou can use one of `Haptics.NotificationFeedbackType.{Success, Warning, Error}`."},"type":{"type":"reference","name":"NotificationFeedbackType"},"defaultValue":"NotificationFeedbackType.Success"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"selectionAsync","kind":64,"kindString":"Function","signatures":[{"name":"selectionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Used to let a user know when a selection change has been registered.","returns":"A `Promise` which fulfils once native size haptics functionality is triggered.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},kMNA:function(e){e.exports=JSON.parse('{"name":"expo-clipboard","kind":1,"originalName":"","children":[{"name":"addClipboardListener","kind":64,"kindString":"Function","signatures":[{"name":"addClipboardListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Adds a listener that will fire whenever the content of the user\'s clipboard changes. This method\\nis a no-op on Web.","tags":[{"tag":"example","text":"\\n```typescript\\nClipboard.addClipboardListener(({ contentTypes }: ClipboardEvent) => {\\n  if (contentTypes.includes(Clipboard.ContentType.PLAIN_TEXT)) {\\n    Clipboard.getStringAsync().then(content => {\\n      alert(\'Copy pasta! Here\\\\\'s the string that was copied: \' + content)\\n    });\\n  } else if (contentTypes.includes(Clipboard.ContentType.IMAGE)) {\\n    alert(\'Yay! Clipboard contains an image\');\\n  }\\n});\\n```\\n"}]},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"Callback to execute when listener is triggered. The callback is provided a\\nsingle argument that is an object containing information about clipboard contents.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"ClipboardEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"ClipboardEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"content","kind":1024,"kindString":"Property","comment":{"tags":[{"tag":"deprecated","text":"Returns empty string. Use [`getStringAsync()`](#getstringasyncoptions) instead to retrieve clipboard content.\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"contentTypes","kind":1024,"kindString":"Property","comment":{"shortText":"An array of content types that are available on the clipboard."},"type":{"type":"array","elementType":{"type":"reference","name":"ContentType"}}}]}}},{"name":"ClipboardImage","kind":16777216,"kindString":"Reference"},{"name":"ClipboardImage","kind":256,"kindString":"Interface","children":[{"name":"data","kind":1024,"kindString":"Property","comment":{"shortText":"A Base64-encoded string of the image data.\\nIts format is dependent on the `format` option.","text":"> **NOTE:** The string is already prepended with `data:image/png;base64,` or `data:image/jpeg;base64,` prefix.\\n\\nYou can use it directly as the source of an `Image` element.","tags":[{"tag":"example","text":"\\n```ts\\n<Image\\n  source={{ uri: clipboardImage.data }}\\n  style={{ width: 200, height: 200 }}\\n/>\\n```\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"size","kind":1024,"kindString":"Property","comment":{"shortText":"Dimensions (`width` and `height`) of the image pasted from clipboard."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}}]},{"name":"ContentType","kind":16777216,"kindString":"Reference"},{"name":"ContentType","kind":8,"kindString":"Enumeration","comment":{"shortText":"Type used to define what type of data is stored in the clipboard."},"children":[{"name":"HTML","kind":16,"kindString":"Enumeration member","defaultValue":"\\"html\\""},{"name":"IMAGE","kind":16,"kindString":"Enumeration member","defaultValue":"\\"image\\""},{"name":"PLAIN_TEXT","kind":16,"kindString":"Enumeration member","defaultValue":"\\"plain-text\\""},{"name":"URL","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"iOS\\n"}]},"defaultValue":"\\"url\\""}]},{"name":"getImageAsync","kind":64,"kindString":"Function","signatures":[{"name":"getImageAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the image from the user\'s clipboard and returns it in the specified format. Please note that calling\\nthis method on web will prompt the user to grant your app permission to \\"see text and images copied to the clipboard.\\"","returns":"If there was an image in the clipboard, the promise resolves to\\na [`ClipboardImage`](#clipboardimage) object containing the base64 string and metadata of the image.\\nOtherwise, it resolves to `null`.\\n","tags":[{"tag":"example","text":"\\n```tsx\\nconst img = await Clipboard.getImageAsync({ format: \'png\' });\\n// ...\\n<Image source={{ uri: img?.data }} style={{ width: 200, height: 200 }} />\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A `GetImageOptions` object to specify the desired format of the image."},"type":{"type":"reference","name":"GetImageOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"ClipboardImage"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"GetImageOptions","kind":16777216,"kindString":"Reference"},{"name":"GetImageOptions","kind":256,"kindString":"Interface","children":[{"name":"format","kind":1024,"kindString":"Property","comment":{"shortText":"The format of the clipboard image to be converted to."},"type":{"type":"union","types":[{"type":"literal","value":"png"},{"type":"literal","value":"jpeg"}]}},{"name":"jpegQuality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specify the quality of the returned image, between `0` and `1`. Defaults to `1` (highest quality).\\nApplicable only when `format` is set to `jpeg`, ignored otherwise.","tags":[{"tag":"default","text":"1\\n"}]},"type":{"type":"intrinsic","name":"number"}}]},{"name":"getStringAsync","kind":64,"kindString":"Function","signatures":[{"name":"getStringAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the content of the user\'s clipboard. Please note that calling this method on web will prompt\\nthe user to grant your app permission to \\"see text and images copied to the clipboard.\\"","returns":"A promise that resolves to the content of the clipboard.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"Options for the clipboard content to be retrieved."},"type":{"type":"reference","name":"GetStringOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"GetStringOptions","kind":16777216,"kindString":"Reference"},{"name":"GetStringOptions","kind":256,"kindString":"Interface","children":[{"name":"preferredFormat","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The target format of the clipboard string to be converted to, if possible.","tags":[{"tag":"default","text":"StringFormat.PLAIN_TEXT\\n"}]},"type":{"type":"reference","name":"StringFormat"}}]},{"name":"getUrlAsync","kind":64,"kindString":"Function","signatures":[{"name":"getUrlAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the URL from the user\'s clipboard.","returns":"A promise that fulfills to the URL in the clipboard.","tags":[{"tag":"platform","text":"iOS\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"hasImageAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasImageAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the clipboard has a image content.","text":"On web, this requires the user to grant your app permission to _\\"see text and images copied to the clipboard\\"_.\\n","returns":"A promise that fulfills to `true` if clipboard has image content, resolves to `false` otherwise.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"hasStringAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasStringAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the clipboard has text content. Returns true for both plain text and rich text (e.g. HTML).","text":"On web, this requires the user to grant your app permission to _\\"see text and images copied to the clipboard\\"_.\\n","returns":"A promise that fulfills to `true` if clipboard has text content, resolves to `false` otherwise.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"hasUrlAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasUrlAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the clipboard has a URL content.","returns":"A promise that fulfills to `true` if clipboard has URL content, resolves to `false` otherwise.","tags":[{"tag":"platform","text":"iOS\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"removeClipboardListener","kind":64,"kindString":"Function","signatures":[{"name":"removeClipboardListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes the listener added by addClipboardListener. This method is a no-op on Web.","tags":[{"tag":"example","text":"\\n```typescript\\nconst subscription = addClipboardListener(() => {\\n  alert(\'Copy pasta!\');\\n});\\nremoveClipboardListener(subscription);\\n```\\n"}]},"parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","comment":{"shortText":"The subscription to remove (created by addClipboardListener).\\n"},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setImageAsync","kind":64,"kindString":"Function","signatures":[{"name":"setImageAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets an image in the user\'s clipboard.","tags":[{"tag":"example","text":"\\n```tsx\\nconst result = await ImagePicker.launchImageLibraryAsync({\\n  mediaTypes: ImagePicker.MediaTypeOptions.Images,\\n  base64: true,\\n});\\nawait Clipboard.setImageAsync(result.base64);\\n```\\n"}]},"parameters":[{"name":"base64Image","kind":32768,"kindString":"Parameter","comment":{"shortText":"Image encoded as a base64 string, without MIME type.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setString","kind":64,"kindString":"Function","signatures":[{"name":"setString","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the content of the user\'s clipboard.","returns":"On web, this returns a boolean value indicating whether or not the string was saved to\\nthe user\'s clipboard. On iOS and Android, nothing is returned.\\n","tags":[{"tag":"deprecated","text":"Use [`setStringAsync()`](#setstringasynctext-options) instead.\\n"}]},"parameters":[{"name":"text","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setStringAsync","kind":64,"kindString":"Function","signatures":[{"name":"setStringAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the content of the user\'s clipboard.","returns":"On web, this returns a promise that fulfills to a boolean value indicating whether or not\\nthe string was saved to the user\'s clipboard. On iOS and Android, the promise always resolves to `true`.\\n"},"parameters":[{"name":"text","kind":32768,"kindString":"Parameter","comment":{"shortText":"The string to save to the clipboard."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"Options for the clipboard content to be set."},"type":{"type":"reference","name":"SetStringOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"SetStringOptions","kind":16777216,"kindString":"Reference"},{"name":"SetStringOptions","kind":256,"kindString":"Interface","children":[{"name":"inputFormat","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The input format of the provided string.\\nAdjusting this option can help other applications interpret copied string properly.","tags":[{"tag":"default","text":"StringFormat.PLAIN_TEXT\\n"}]},"type":{"type":"reference","name":"StringFormat"}}]},{"name":"setUrlAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUrlAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a URL in the user\'s clipboard.","tags":[{"tag":"platform","text":"iOS\\n"}]},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"The URL to save to the clipboard."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"StringFormat","kind":16777216,"kindString":"Reference"},{"name":"StringFormat","kind":8,"kindString":"Enumeration","comment":{"shortText":"Type used to determine string format stored in the clipboard."},"children":[{"name":"HTML","kind":16,"kindString":"Enumeration member","defaultValue":"\\"html\\""},{"name":"PLAIN_TEXT","kind":16,"kindString":"Enumeration member","defaultValue":"\\"plainText\\""}]},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}}]}')},kMOC:function(e){e.exports=JSON.parse('{"name":"expo-auth-session","kind":1,"kindString":"Project","originalName":"","children":[{"name":"CodeChallengeMethod","kind":8,"kindString":"Enumeration","children":[{"name":"Plain","kind":16,"kindString":"Enumeration member","comment":{"shortText":"This should not be used. When used, the code verifier will be sent to the server as-is."},"defaultValue":"\\"plain\\""},{"name":"S256","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The default and recommended method for transforming the code verifier.\\n- Convert the code verifier to ASCII.\\n- Create a digest of the string using crypto method SHA256.\\n- Convert the digest to Base64 and URL encode it."},"defaultValue":"\\"S256\\""}]},{"name":"GrantType","kind":8,"kindString":"Enumeration","comment":{"shortText":"Grant type values used in dynamic client registration and auth requests.","tags":[{"tag":"see","text":"[Appendix A.10](https://tools.ietf.org/html/rfc6749#appendix-A.10)\\n"}]},"children":[{"name":"AuthorizationCode","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Used for exchanging an authorization code for one or more tokens.","text":"[Section 4.1.3](https://tools.ietf.org/html/rfc6749#section-4.1.3)\\n"},"defaultValue":"\\"authorization_code\\""},{"name":"ClientCredentials","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Used for client credentials flow.","text":"[Section 4.4.2](https://tools.ietf.org/html/rfc6749#section-4.4.2)\\n"},"defaultValue":"\\"client_credentials\\""},{"name":"Implicit","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Used when obtaining an access token.","text":"[Section 4.2](https://tools.ietf.org/html/rfc6749#section-4.2)\\n"},"defaultValue":"\\"implicit\\""},{"name":"RefreshToken","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Used when exchanging a refresh token for a new token.","text":"[Section 6](https://tools.ietf.org/html/rfc6749#section-6)\\n"},"defaultValue":"\\"refresh_token\\""}]},{"name":"Prompt","kind":8,"kindString":"Enumeration","comment":{"shortText":"Informs the server if the user should be prompted to login or consent again.\\nThis can be used to present a dialog for switching accounts after the user has already been logged in.\\nYou should use this in favor of clearing cookies (which is mostly not possible on iOS).","tags":[{"tag":"see","text":"[Section 3.1.2.1](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationRequest).\\n"}]},"children":[{"name":"Consent","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Server should prompt the user for consent before returning information to the client.\\nIf it cannot obtain consent, it must return an error, typically `consent_required`."},"defaultValue":"\\"consent\\""},{"name":"Login","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The server should prompt the user to reauthenticate.\\nIf it cannot reauthenticate the End-User, it must return an error, typically `login_required`."},"defaultValue":"\\"login\\""},{"name":"None","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Server must not display any auth or consent UI. Can be used to check for existing auth or consent.\\nAn error is returned if a user isn\'t already authenticated or the client doesn\'t have pre-configured consent for the requested claims, or does not fulfill other conditions for processing the request.\\nThe error code will typically be `login_required`, `interaction_required`, or another code defined in [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError)."},"defaultValue":"\\"none\\""},{"name":"SelectAccount","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Server should prompt the user to select an account. Can be used to switch accounts.\\nIf it can\'t obtain an account selection choice made by the user, it must return an error, typically `account_selection_required`."},"defaultValue":"\\"select_account\\""}]},{"name":"ResponseType","kind":8,"kindString":"Enumeration","comment":{"shortText":"The client informs the authorization server of the desired grant type by using the response type.","tags":[{"tag":"see","text":"[Section 3.1.1](https://tools.ietf.org/html/rfc6749#section-3.1.1).\\n"}]},"children":[{"name":"Code","kind":16,"kindString":"Enumeration member","comment":{"shortText":"For requesting an authorization code as described by [Section 4.1.1](https://tools.ietf.org/html/rfc6749#section-4.1.1)."},"defaultValue":"\\"code\\""},{"name":"IdToken","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A custom registered type for getting an `id_token` from Google OAuth."},"defaultValue":"\\"id_token\\""},{"name":"Token","kind":16,"kindString":"Enumeration member","comment":{"shortText":"For requesting an access token (implicit grant) as described by [Section 4.2.1](https://tools.ietf.org/html/rfc6749#section-4.2.1)."},"defaultValue":"\\"token\\""}]},{"name":"TokenTypeHint","kind":8,"kindString":"Enumeration","comment":{"shortText":"A hint about the type of the token submitted for revocation. If not included then the server should attempt to deduce the token type.","tags":[{"tag":"see","text":"[Section 2.1](https://tools.ietf.org/html/rfc7009#section-2.1)\\n"}]},"children":[{"name":"AccessToken","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Access token.","text":"[Section 1.4](https://tools.ietf.org/html/rfc6749#section-1.4)\\n"},"defaultValue":"\\"access_token\\""},{"name":"RefreshToken","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Refresh token.","text":"[Section 1.5](https://tools.ietf.org/html/rfc6749#section-1.5)\\n"},"defaultValue":"\\"refresh_token\\""}]},{"name":"AccessTokenRequest","kind":128,"kindString":"Class","comment":{"shortText":"Access token request. Exchange an authorization code for a user access token.","text":"[Section 4.1.3](https://tools.ietf.org/html/rfc6749#section-4.1.3)\\n"},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new AccessTokenRequest","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AccessTokenRequestConfig"}}],"type":{"type":"reference","name":"AccessTokenRequest"},"overwrites":{"type":"reference","name":"TokenRequest<AccessTokenRequestConfig>.constructor"}}],"overwrites":{"type":"reference","name":"TokenRequest<AccessTokenRequestConfig>.constructor"}},{"name":"clientId","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"shortText":"A unique string representing the registration information provided by the client.\\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn\'t be used\\nalone for client authentication.","text":"The client identifier is unique to the authorization server.\\n\\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TokenRequest.clientId"},"implementationOf":{"type":"reference","name":"AccessTokenRequestConfig.clientId"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"comment":{"shortText":"Client secret supplied by an auth provider.\\nThere is no secure way to store this on the client.","text":"[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TokenRequest.clientSecret"},"implementationOf":{"type":"reference","name":"AccessTokenRequestConfig.clientSecret"}},{"name":"code","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"shortText":"The authorization code received from the authorization server."},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"AccessTokenRequestConfig.code"}},{"name":"extraParams","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"comment":{"shortText":"Extra query params that\'ll be added to the query string."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"inheritedFrom":{"type":"reference","name":"TokenRequest.extraParams"},"implementationOf":{"type":"reference","name":"AccessTokenRequestConfig.extraParams"}},{"name":"grantType","kind":1024,"kindString":"Property","flags":{"isPublic":true},"type":{"type":"reference","name":"GrantType"},"inheritedFrom":{"type":"reference","name":"TokenRequest.grantType"}},{"name":"redirectUri","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"shortText":"If the `redirectUri` parameter was included in the `AuthRequest`, then it must be supplied here as well.","text":"[Section 3.1.2](https://tools.ietf.org/html/rfc6749#section-3.1.2)\\n"},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"AccessTokenRequestConfig.redirectUri"}},{"name":"scopes","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"comment":{"shortText":"List of strings to request access to.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"TokenRequest.scopes"},"implementationOf":{"type":"reference","name":"AccessTokenRequestConfig.scopes"}},{"name":"getHeaders","kind":2048,"kindString":"Method","signatures":[{"name":"getHeaders","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Headers"},"inheritedFrom":{"type":"reference","name":"TokenRequest.getHeaders"}}],"inheritedFrom":{"type":"reference","name":"TokenRequest.getHeaders"}},{"name":"getQueryBody","kind":2048,"kindString":"Method","signatures":[{"name":"getQueryBody","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"overwrites":{"type":"reference","name":"TokenRequest.getQueryBody"}}],"overwrites":{"type":"reference","name":"TokenRequest.getQueryBody"}},{"name":"getRequestConfig","kind":2048,"kindString":"Method","signatures":[{"name":"getRequestConfig","kind":4096,"kindString":"Call signature","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"clientId","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"clientSecret","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"code","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"extraParams","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"}]},"defaultValue":"..."},{"name":"grantType","kind":1024,"kindString":"Property","type":{"type":"reference","name":"GrantType"},"defaultValue":"..."},{"name":"redirectUri","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"scopes","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]},"defaultValue":"..."}]}},"overwrites":{"type":"reference","name":"TokenRequest.getRequestConfig"}}],"overwrites":{"type":"reference","name":"TokenRequest.getRequestConfig"}},{"name":"performAsync","kind":2048,"kindString":"Method","signatures":[{"name":"performAsync","kind":4096,"kindString":"Call signature","parameters":[{"name":"discovery","kind":32768,"kindString":"Parameter","type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument"},{"type":"literal","value":"tokenEndpoint"}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","name":"TokenRequest.performAsync"}}],"inheritedFrom":{"type":"reference","name":"TokenRequest.performAsync"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"AccessTokenRequestConfig"}],"name":"TokenRequest"}],"implementedTypes":[{"type":"reference","name":"AccessTokenRequestConfig"}]},{"name":"AuthError","kind":128,"kindString":"Class","comment":{"shortText":"Represents an authorization response error: [Section 5.2](https://tools.ietf.org/html/rfc6749#section-5.2).\\nOften times providers will fail to return the proper error message for a given error code.\\nThis error method will add the missing description for more context on what went wrong."},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new AuthError","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"response","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AuthErrorConfig"}}],"type":{"type":"reference","name":"AuthError"},"overwrites":{"type":"reference","name":"ResponseError.constructor"}}],"overwrites":{"type":"reference","name":"ResponseError.constructor"}},{"name":"cause","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"},"inheritedFrom":{"type":"reference","name":"ResponseError.cause"}},{"name":"code","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.code"}},{"name":"description","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Used to assist the client developer in\\nunderstanding the error that occurred."},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.description"}},{"name":"info","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"ResponseError.info"}},{"name":"message","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.message"}},{"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.name"}},{"name":"params","kind":1024,"kindString":"Property","comment":{"shortText":"Raw results of the error."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"inheritedFrom":{"type":"reference","name":"ResponseError.params"}},{"name":"stack","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.stack"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Required only if state is used in the initial request"},"type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A URI identifying a human-readable web page with\\ninformation about the error, used to provide the client\\ndeveloper with additional information about the error."},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.uri"}},{"name":"prepareStackTrace","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Optional override for formatting stack traces","tags":[{"tag":"see","text":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces\\n"}]},"parameters":[{"name":"err","kind":32768,"kindString":"Parameter","type":{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"}},{"name":"stackTraces","kind":32768,"kindString":"Parameter","type":{"type":"array","elementType":{"type":"reference","qualifiedName":"NodeJS.CallSite","package":"@types/node","name":"CallSite"}}}],"type":{"type":"intrinsic","name":"any"}}]}},"inheritedFrom":{"type":"reference","name":"ResponseError.prepareStackTrace"}},{"name":"stackTraceLimit","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true},"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"ResponseError.stackTraceLimit"}},{"name":"captureStackTrace","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"signatures":[{"name":"captureStackTrace","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Create .stack property on a target object"},"parameters":[{"name":"targetObject","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}},{"name":"constructorOpt","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"Function","package":"typescript","name":"Function"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"ResponseError.captureStackTrace"}}],"inheritedFrom":{"type":"reference","name":"ResponseError.captureStackTrace"}}],"extendedTypes":[{"type":"reference","name":"ResponseError"}]},{"name":"AuthRequest","kind":128,"kindString":"Class","comment":{"shortText":"Used to manage an authorization request according to the OAuth spec: [Section 4.1.1][https://tools.ietf.org/html/rfc6749#section-4.1.1].\\nYou can use this class directly for more info around the authorization.","text":"**Common use-cases:**\\n\\n- Parse a URL returned from the authorization server with `parseReturnUrlAsync()`.\\n- Get the built authorization URL with `makeAuthUrlAsync()`.\\n- Get a loaded JSON representation of the auth request with crypto state loaded with `getAuthRequestConfigAsync()`.\\n","tags":[{"tag":"example","text":"\\n```ts\\n// Create a request.\\nconst request = new AuthRequest({ ... });\\n\\n// Prompt for an auth code\\nconst result = await request.promptAsync(discovery, { useProxy: true });\\n\\n// Get the URL to invoke\\nconst url = await request.makeAuthUrlAsync(discovery);\\n\\n// Get the URL to invoke\\nconst parsed = await request.parseReturnUrlAsync(\\"<URL From Server>\\");\\n```\\n"}]},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new AuthRequest","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"request","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AuthRequestConfig"}}],"type":{"type":"reference","name":"AuthRequest"}}]},{"name":"clientId","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"Omit.clientId"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"Omit.clientSecret"}},{"name":"codeChallenge","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"Omit.codeChallenge"}},{"name":"codeChallengeMethod","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"type":{"type":"reference","name":"CodeChallengeMethod"},"implementationOf":{"type":"reference","name":"Omit.codeChallengeMethod"}},{"name":"codeVerifier","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"extraParams","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"implementationOf":{"type":"reference","name":"Omit.extraParams"}},{"name":"prompt","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"type":{"type":"reference","name":"Prompt"},"implementationOf":{"type":"reference","name":"Omit.prompt"}},{"name":"redirectUri","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"Omit.redirectUri"}},{"name":"responseType","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"Omit.responseType"}},{"name":"scopes","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"implementationOf":{"type":"reference","name":"Omit.scopes"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isPublic":true},"comment":{"shortText":"Used for protection against [Cross-Site Request Forgery](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"}},{"name":"url","kind":1024,"kindString":"Property","flags":{"isPublic":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"null"},{"name":"usePKCE","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"type":{"type":"intrinsic","name":"boolean"},"implementationOf":{"type":"reference","name":"Omit.usePKCE"}},{"name":"getAuthRequestConfigAsync","kind":2048,"kindString":"Method","signatures":[{"name":"getAuthRequestConfigAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Load and return a valid auth request based on the input config."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AuthRequestConfig"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"makeAuthUrlAsync","kind":2048,"kindString":"Method","signatures":[{"name":"makeAuthUrlAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create the URL for authorization."},"parameters":[{"name":"discovery","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"AuthDiscoveryDocument"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"parseReturnUrl","kind":2048,"kindString":"Method","signatures":[{"name":"parseReturnUrl","kind":4096,"kindString":"Call signature","parameters":[{"name":"url","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"AuthSessionResult"}}]},{"name":"promptAsync","kind":2048,"kindString":"Method","signatures":[{"name":"promptAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prompt a user to authorize for a code."},"parameters":[{"name":"discovery","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"AuthDiscoveryDocument"}},{"name":"promptOptions","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"originalName":"__namedParameters","type":{"type":"reference","name":"AuthRequestPromptOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AuthSessionResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"implementedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"AuthRequestConfig"},{"type":"literal","value":"state"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"}]},{"name":"RefreshTokenRequest","kind":128,"kindString":"Class","comment":{"shortText":"Refresh request.","text":"[Section 6](https://tools.ietf.org/html/rfc6749#section-6)\\n"},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new RefreshTokenRequest","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"RefreshTokenRequestConfig"}}],"type":{"type":"reference","name":"RefreshTokenRequest"},"overwrites":{"type":"reference","name":"TokenRequest<RefreshTokenRequestConfig>.constructor"}}],"overwrites":{"type":"reference","name":"TokenRequest<RefreshTokenRequestConfig>.constructor"}},{"name":"clientId","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"shortText":"A unique string representing the registration information provided by the client.\\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn\'t be used\\nalone for client authentication.","text":"The client identifier is unique to the authorization server.\\n\\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TokenRequest.clientId"},"implementationOf":{"type":"reference","name":"RefreshTokenRequestConfig.clientId"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"comment":{"shortText":"Client secret supplied by an auth provider.\\nThere is no secure way to store this on the client.","text":"[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TokenRequest.clientSecret"},"implementationOf":{"type":"reference","name":"RefreshTokenRequestConfig.clientSecret"}},{"name":"extraParams","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"comment":{"shortText":"Extra query params that\'ll be added to the query string."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"inheritedFrom":{"type":"reference","name":"TokenRequest.extraParams"},"implementationOf":{"type":"reference","name":"RefreshTokenRequestConfig.extraParams"}},{"name":"grantType","kind":1024,"kindString":"Property","flags":{"isPublic":true},"type":{"type":"reference","name":"GrantType"},"inheritedFrom":{"type":"reference","name":"TokenRequest.grantType"}},{"name":"refreshToken","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"comment":{"shortText":"The refresh token issued to the client."},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"RefreshTokenRequestConfig.refreshToken"}},{"name":"scopes","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"comment":{"shortText":"List of strings to request access to.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"TokenRequest.scopes"},"implementationOf":{"type":"reference","name":"RefreshTokenRequestConfig.scopes"}},{"name":"getHeaders","kind":2048,"kindString":"Method","signatures":[{"name":"getHeaders","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Headers"},"inheritedFrom":{"type":"reference","name":"TokenRequest.getHeaders"}}],"inheritedFrom":{"type":"reference","name":"TokenRequest.getHeaders"}},{"name":"getQueryBody","kind":2048,"kindString":"Method","signatures":[{"name":"getQueryBody","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"overwrites":{"type":"reference","name":"TokenRequest.getQueryBody"}}],"overwrites":{"type":"reference","name":"TokenRequest.getQueryBody"}},{"name":"getRequestConfig","kind":2048,"kindString":"Method","signatures":[{"name":"getRequestConfig","kind":4096,"kindString":"Call signature","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"clientId","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"clientSecret","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"extraParams","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"}]},"defaultValue":"..."},{"name":"grantType","kind":1024,"kindString":"Property","type":{"type":"reference","name":"GrantType"},"defaultValue":"..."},{"name":"refreshToken","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"scopes","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]},"defaultValue":"..."}]}},"overwrites":{"type":"reference","name":"TokenRequest.getRequestConfig"}}],"overwrites":{"type":"reference","name":"TokenRequest.getRequestConfig"}},{"name":"performAsync","kind":2048,"kindString":"Method","signatures":[{"name":"performAsync","kind":4096,"kindString":"Call signature","parameters":[{"name":"discovery","kind":32768,"kindString":"Parameter","type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument"},{"type":"literal","value":"tokenEndpoint"}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","name":"TokenRequest.performAsync"}}],"inheritedFrom":{"type":"reference","name":"TokenRequest.performAsync"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"RefreshTokenRequestConfig"}],"name":"TokenRequest"}],"implementedTypes":[{"type":"reference","name":"RefreshTokenRequestConfig"}]},{"name":"RevokeTokenRequest","kind":128,"kindString":"Class","comment":{"shortText":"Revocation request for a given token.","text":"[Section 2.1](https://tools.ietf.org/html/rfc7009#section-2.1)\\n"},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new RevokeTokenRequest","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"request","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"RevokeTokenRequestConfig"}}],"type":{"type":"reference","name":"RevokeTokenRequest"},"overwrites":{"type":"reference","name":"Request<RevokeTokenRequestConfig, boolean>.constructor"}}],"overwrites":{"type":"reference","name":"Request<RevokeTokenRequestConfig, boolean>.constructor"}},{"name":"clientId","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"comment":{"shortText":"A unique string representing the registration information provided by the client.\\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn\'t be used\\nalone for client authentication.","text":"The client identifier is unique to the authorization server.\\n\\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)\\n"},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"RevokeTokenRequestConfig.clientId"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"comment":{"shortText":"Client secret supplied by an auth provider.\\nThere is no secure way to store this on the client.","text":"[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)\\n"},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"RevokeTokenRequestConfig.clientSecret"}},{"name":"token","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"shortText":"The token that the client wants to get revoked.","text":"[Section 3.1](https://tools.ietf.org/html/rfc6749#section-3.1)\\n"},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"RevokeTokenRequestConfig.token"}},{"name":"tokenTypeHint","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"comment":{"shortText":"A hint about the type of the token submitted for revocation.","text":"[Section 3.2](https://tools.ietf.org/html/rfc6749#section-3.2)\\n"},"type":{"type":"reference","name":"TokenTypeHint"},"implementationOf":{"type":"reference","name":"RevokeTokenRequestConfig.tokenTypeHint"}},{"name":"getHeaders","kind":2048,"kindString":"Method","signatures":[{"name":"getHeaders","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Headers"}}]},{"name":"getQueryBody","kind":2048,"kindString":"Method","signatures":[{"name":"getQueryBody","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"overwrites":{"type":"reference","name":"Request.getQueryBody"}}],"overwrites":{"type":"reference","name":"Request.getQueryBody"}},{"name":"getRequestConfig","kind":2048,"kindString":"Method","signatures":[{"name":"getRequestConfig","kind":4096,"kindString":"Call signature","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"clientId","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"clientSecret","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"token","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"tokenTypeHint","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"TokenTypeHint"}]},"defaultValue":"..."}]}},"overwrites":{"type":"reference","name":"Request.getRequestConfig"}}],"overwrites":{"type":"reference","name":"Request.getRequestConfig"}},{"name":"performAsync","kind":2048,"kindString":"Method","signatures":[{"name":"performAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Perform a token revocation request."},"parameters":[{"name":"discovery","kind":32768,"kindString":"Parameter","comment":{"shortText":"The `revocationEndpoint` for a provider.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument"},{"type":"literal","value":"revocationEndpoint"}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"overwrites":{"type":"reference","name":"Request.performAsync"}}],"overwrites":{"type":"reference","name":"Request.performAsync"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"RevokeTokenRequestConfig"},{"type":"intrinsic","name":"boolean"}],"name":"Request"}],"implementedTypes":[{"type":"reference","name":"RevokeTokenRequestConfig"}]},{"name":"TokenError","kind":128,"kindString":"Class","comment":{"shortText":"[Section 4.1.2.1](https://tools.ietf.org/html/rfc6749#section-4.1.2.1)"},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new TokenError","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"response","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"ResponseErrorConfig"}}],"type":{"type":"reference","name":"TokenError"},"overwrites":{"type":"reference","name":"ResponseError.constructor"}}],"overwrites":{"type":"reference","name":"ResponseError.constructor"}},{"name":"cause","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"},"inheritedFrom":{"type":"reference","name":"ResponseError.cause"}},{"name":"code","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.code"}},{"name":"description","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Used to assist the client developer in\\nunderstanding the error that occurred."},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.description"}},{"name":"info","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"ResponseError.info"}},{"name":"message","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.message"}},{"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.name"}},{"name":"params","kind":1024,"kindString":"Property","comment":{"shortText":"Raw results of the error."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"inheritedFrom":{"type":"reference","name":"ResponseError.params"}},{"name":"stack","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.stack"}},{"name":"uri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A URI identifying a human-readable web page with\\ninformation about the error, used to provide the client\\ndeveloper with additional information about the error."},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.uri"}},{"name":"prepareStackTrace","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Optional override for formatting stack traces","tags":[{"tag":"see","text":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces\\n"}]},"parameters":[{"name":"err","kind":32768,"kindString":"Parameter","type":{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"}},{"name":"stackTraces","kind":32768,"kindString":"Parameter","type":{"type":"array","elementType":{"type":"reference","qualifiedName":"NodeJS.CallSite","package":"@types/node","name":"CallSite"}}}],"type":{"type":"intrinsic","name":"any"}}]}},"inheritedFrom":{"type":"reference","name":"ResponseError.prepareStackTrace"}},{"name":"stackTraceLimit","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true},"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"ResponseError.stackTraceLimit"}},{"name":"captureStackTrace","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"signatures":[{"name":"captureStackTrace","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Create .stack property on a target object"},"parameters":[{"name":"targetObject","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}},{"name":"constructorOpt","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"Function","package":"typescript","name":"Function"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"ResponseError.captureStackTrace"}}],"inheritedFrom":{"type":"reference","name":"ResponseError.captureStackTrace"}}],"extendedTypes":[{"type":"reference","name":"ResponseError"}]},{"name":"TokenResponse","kind":128,"kindString":"Class","comment":{"shortText":"Token Response.","text":"[Section 5.1](https://tools.ietf.org/html/rfc6749#section-5.1)\\n"},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new TokenResponse","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"response","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"TokenResponseConfig"}}],"type":{"type":"reference","name":"TokenResponse"}}]},{"name":"accessToken","kind":1024,"kindString":"Property","comment":{"shortText":"The access token issued by the authorization server.","text":"[Section 4.2.2](https://tools.ietf.org/html/rfc6749#section-4.2.2)\\n"},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.accessToken"}},{"name":"expiresIn","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The lifetime in seconds of the access token.","text":"For example, the value `3600` denotes that the access token will\\nexpire in one hour from the time the response was generated.\\n\\nIf omitted, the authorization server should provide the\\nexpiration time via other means or document the default value.\\n\\n[Section 4.2.2](https://tools.ietf.org/html/rfc6749#section-4.2.2)\\n"},"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.expiresIn"}},{"name":"idToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"ID Token value associated with the authenticated session.","text":"[TokenResponse](https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse)\\n"},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.idToken"}},{"name":"issuedAt","kind":1024,"kindString":"Property","comment":{"shortText":"Time in seconds when the token was received by the client."},"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.issuedAt"}},{"name":"refreshToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The refresh token, which can be used to obtain new access tokens using the same authorization grant.","text":"[Section 5.1](https://tools.ietf.org/html/rfc6749#section-5.1)\\n"},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.refreshToken"}},{"name":"scope","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The scope of the access token. Only required if it\'s different to the scope that was requested by the client.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.scope"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Required if the \\"state\\" parameter was present in the client\\nauthorization request.  The exact value received from the client.","text":"[Section 4.2.2](https://tools.ietf.org/html/rfc6749#section-4.2.2)\\n"},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.state"}},{"name":"tokenType","kind":1024,"kindString":"Property","comment":{"shortText":"The type of the token issued. Value is case insensitive.","text":"[Section 7.1](https://tools.ietf.org/html/rfc6749#section-7.1)\\n"},"type":{"type":"reference","name":"TokenType"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.tokenType"}},{"name":"getRequestConfig","kind":2048,"kindString":"Method","signatures":[{"name":"getRequestConfig","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"TokenResponseConfig"}}]},{"name":"refreshAsync","kind":2048,"kindString":"Method","signatures":[{"name":"refreshAsync","kind":4096,"kindString":"Call signature","parameters":[{"name":"config","kind":32768,"kindString":"Parameter","type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenRequestConfig"},{"type":"union","types":[{"type":"literal","value":"grantType"},{"type":"literal","value":"refreshToken"}]}],"qualifiedName":"Omit","package":"typescript","name":"Omit"}},{"name":"discovery","kind":32768,"kindString":"Parameter","type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument"},{"type":"literal","value":"tokenEndpoint"}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"shouldRefresh","kind":2048,"kindString":"Method","signatures":[{"name":"shouldRefresh","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"boolean"}}]},{"name":"fromQueryParams","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"fromQueryParams","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates a `TokenResponse` from query parameters returned from an `AuthRequest`."},"parameters":[{"name":"params","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}}],"type":{"type":"reference","name":"TokenResponse"}}]},{"name":"isTokenFresh","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"isTokenFresh","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determines whether a token refresh request must be made to refresh the tokens"},"parameters":[{"name":"token","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse"},{"type":"union","types":[{"type":"literal","value":"expiresIn"},{"type":"literal","value":"issuedAt"}]}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}},{"name":"secondsMargin","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"intrinsic","name":"number"},"defaultValue":"..."}],"type":{"type":"intrinsic","name":"boolean"}}]}],"implementedTypes":[{"type":"reference","name":"TokenResponseConfig"}]},{"name":"AccessTokenRequestConfig","kind":256,"kindString":"Interface","comment":{"shortText":"Config used to exchange an authorization code for an access token.","tags":[{"tag":"see","text":"[Section 4.1.3](https://tools.ietf.org/html/rfc6749#section-4.1.3)\\n"}]},"children":[{"name":"clientId","kind":1024,"kindString":"Property","comment":{"shortText":"A unique string representing the registration information provided by the client.\\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn\'t be used\\nalone for client authentication.","text":"The client identifier is unique to the authorization server.\\n\\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TokenRequestConfig.clientId"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Client secret supplied by an auth provider.\\nThere is no secure way to store this on the client.","text":"[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TokenRequestConfig.clientSecret"}},{"name":"code","kind":1024,"kindString":"Property","comment":{"shortText":"The authorization code received from the authorization server."},"type":{"type":"intrinsic","name":"string"}},{"name":"extraParams","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Extra query params that\'ll be added to the query string."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"inheritedFrom":{"type":"reference","name":"TokenRequestConfig.extraParams"}},{"name":"redirectUri","kind":1024,"kindString":"Property","comment":{"shortText":"If the `redirectUri` parameter was included in the `AuthRequest`, then it must be supplied here as well.","text":"[Section 3.1.2](https://tools.ietf.org/html/rfc6749#section-3.1.2)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"scopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of strings to request access to.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"TokenRequestConfig.scopes"}}],"extendedTypes":[{"type":"reference","name":"TokenRequestConfig"}],"implementedBy":[{"type":"reference","name":"AccessTokenRequest"}]},{"name":"AuthRequestConfig","kind":256,"kindString":"Interface","comment":{"shortText":"Represents an OAuth authorization request as JSON."},"children":[{"name":"clientId","kind":1024,"kindString":"Property","comment":{"shortText":"A unique string representing the registration information provided by the client.\\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn\'t be used\\nalone for client authentication.","text":"The client identifier is unique to the authorization server.\\n\\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Client secret supplied by an auth provider.\\nThere is no secure way to store this on the client.","text":"[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"codeChallenge","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Derived from the code verifier by using the `CodeChallengeMethod`.","text":"[Section 4.2](https://tools.ietf.org/html/rfc7636#section-4.2)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"codeChallengeMethod","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Method used to generate the code challenge. You should never use `Plain` as it\'s not good enough for secure verification.","tags":[{"tag":"default","text":"CodeChallengeMethod.S256\\n"}]},"type":{"type":"reference","name":"CodeChallengeMethod"}},{"name":"extraParams","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Extra query params that\'ll be added to the query string."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"name":"prompt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Informs the server if the user should be prompted to login or consent again.\\nThis can be used to present a dialog for switching accounts after the user has already been logged in.","text":"[Section 3.1.2.1](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationRequest)\\n"},"type":{"type":"reference","name":"Prompt"}},{"name":"redirectUri","kind":1024,"kindString":"Property","comment":{"shortText":"After completing an interaction with a resource owner the\\nserver will redirect to this URI. Learn more about [linking in Expo](https://docs.expo.dev/versions/latest/workflow/linking/).","text":"[Section 3.1.2](https://tools.ietf.org/html/rfc6749#section-3.1.2)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"responseType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specifies what is returned from the authorization server.","text":"[Section 3.1.1](https://tools.ietf.org/html/rfc6749#section-3.1.1)\\n","tags":[{"tag":"default","text":"ResponseType.Code\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"scopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of strings to request access to.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Used for protection against [Cross-Site Request Forgery](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"}},{"name":"usePKCE","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Should use [Proof Key for Code Exchange](https://oauth.net/2/pkce/).","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"DiscoveryDocument","kind":256,"kindString":"Interface","children":[{"name":"authorizationEndpoint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Used to interact with the resource owner and obtain an authorization grant.","text":"[Section 3.1](https://tools.ietf.org/html/rfc6749#section-3.1)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"discoveryDocument","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"All metadata about the provider."},"type":{"type":"reference","name":"ProviderMetadata"}},{"name":"endSessionEndpoint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL at the OP to which an RP can perform a redirect to request that the End-User be logged out at the OP.","text":"[OPMetadata](https://openid.net/specs/openid-connect-session-1_0-17.html#OPMetadata)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"registrationEndpoint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL of the OP\'s [Dynamic Client Registration](https://openid.net/specs/openid-connect-discovery-1_0.html#OpenID.Registration) Endpoint."},"type":{"type":"intrinsic","name":"string"}},{"name":"revocationEndpoint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Used to revoke a token (generally for signing out). The spec requires a revocation endpoint,\\nbut some providers (like Spotify) do not support one.","text":"[Section 2.1](https://tools.ietf.org/html/rfc7009#section-2.1)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"tokenEndpoint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Used by the client to obtain an access token by presenting its authorization grant or refresh token.\\nThe token endpoint is used with every authorization grant except for the\\nimplicit grant type (since an access token is issued directly).","text":"[Section 3.2](https://tools.ietf.org/html/rfc6749#section-3.2)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"userInfoEndpoint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL of the OP\'s UserInfo Endpoint used to return info about the authenticated user.","text":"[UserInfo](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo)\\n"},"type":{"type":"intrinsic","name":"string"}}]},{"name":"FacebookAuthRequestConfig","kind":256,"kindString":"Interface","children":[{"name":"androidClientId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"clientId","kind":1024,"kindString":"Property","comment":{"shortText":"A unique string representing the registration information provided by the client.\\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn\'t be used\\nalone for client authentication.","text":"The client identifier is unique to the authorization server.\\n\\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.clientId"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Client secret supplied by an auth provider.\\nThere is no secure way to store this on the client.","text":"[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.clientSecret"}},{"name":"codeChallenge","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Derived from the code verifier by using the `CodeChallengeMethod`.","text":"[Section 4.2](https://tools.ietf.org/html/rfc7636#section-4.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.codeChallenge"}},{"name":"codeChallengeMethod","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Method used to generate the code challenge. You should never use `Plain` as it\'s not good enough for secure verification.","tags":[{"tag":"default","text":"CodeChallengeMethod.S256\\n"}]},"type":{"type":"reference","name":"CodeChallengeMethod"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.codeChallengeMethod"}},{"name":"expoClientId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"extraParams","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Extra query params that\'ll be added to the query string."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.extraParams"}},{"name":"iosClientId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"language","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Language for the sign in UI, in the form of ISO 639-1 language code optionally followed by a dash\\nand ISO 3166-1 alpha-2 region code, such as \'it\' or \'pt-PT\'.\\nOnly set this value if it\'s different from the system default (which you can access via expo-localization)."},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.language"}},{"name":"prompt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Informs the server if the user should be prompted to login or consent again.\\nThis can be used to present a dialog for switching accounts after the user has already been logged in.","text":"[Section 3.1.2.1](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationRequest)\\n"},"type":{"type":"reference","name":"Prompt"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.prompt"}},{"name":"redirectUri","kind":1024,"kindString":"Property","comment":{"shortText":"After completing an interaction with a resource owner the\\nserver will redirect to this URI. Learn more about [linking in Expo](https://docs.expo.dev/versions/latest/workflow/linking/).","text":"[Section 3.1.2](https://tools.ietf.org/html/rfc6749#section-3.1.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.redirectUri"}},{"name":"responseType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specifies what is returned from the authorization server.","text":"[Section 3.1.1](https://tools.ietf.org/html/rfc6749#section-3.1.1)\\n","tags":[{"tag":"default","text":"ResponseType.Code\\n"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.responseType"}},{"name":"scopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of strings to request access to.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.scopes"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Used for protection against [Cross-Site Request Forgery](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.state"}},{"name":"usePKCE","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Should use [Proof Key for Code Exchange](https://oauth.net/2/pkce/).","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.usePKCE"}},{"name":"webClientId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"extendedTypes":[{"type":"reference","name":"ProviderAuthRequestConfig"}]},{"name":"GoogleAuthRequestConfig","kind":256,"kindString":"Interface","children":[{"name":"androidClientId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Android native client ID for use in standalone, and bare workflow.","text":"This Google Client ID must be setup as follows:\\n\\n- **Application Type**: Android Application\\n- Give it a name (e.g. \\"Android App\\").\\n- **Package name**: Must match the value of `android.package` in your `app.json`.\\n- Your app needs to conform to the URI scheme matching your `android.package` (ex. `com.myname.mycoolapp:/`).\\n  - _Standalone_: Automatically added, do nothing.\\n  - _Bare workflow_: Run `npx uri-scheme add <your android.package> --android`\\n- **Signing-certificate fingerprint**:\\n  - Run `expo credentials:manager -p android` then select \\"Update upload Keystore\\" -> \\"Generate new keystore\\" -> \\"Go back to experience overview\\"\\n  - Copy your \\"Google Certificate Fingerprint\\", it will output a string that looks like `A1:B2:C3` but longer.\\n- To test this you can:\\n  1. Eject to bare: `expo eject` and run `yarn ios`\\n  2. Build a production IPA: `expo build:android`\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"clientId","kind":1024,"kindString":"Property","comment":{"shortText":"A unique string representing the registration information provided by the client.\\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn\'t be used\\nalone for client authentication.","text":"The client identifier is unique to the authorization server.\\n\\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.clientId"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Client secret supplied by an auth provider.\\nThere is no secure way to store this on the client.","text":"[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.clientSecret"}},{"name":"codeChallenge","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Derived from the code verifier by using the `CodeChallengeMethod`.","text":"[Section 4.2](https://tools.ietf.org/html/rfc7636#section-4.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.codeChallenge"}},{"name":"codeChallengeMethod","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Method used to generate the code challenge. You should never use `Plain` as it\'s not good enough for secure verification.","tags":[{"tag":"default","text":"CodeChallengeMethod.S256\\n"}]},"type":{"type":"reference","name":"CodeChallengeMethod"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.codeChallengeMethod"}},{"name":"expoClientId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Proxy client ID for use in the Expo client on iOS and Android.","text":"This Google Client ID must be setup as follows:\\n\\n- **Application Type**: Web Application\\n- **URIs**: https://auth.expo.io\\n- **Authorized redirect URIs**: https://auth.expo.io/@your-username/your-project-slug\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"extraParams","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Extra query params that\'ll be added to the query string."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.extraParams"}},{"name":"iosClientId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"iOS native client ID for use in standalone, bare workflow, and custom clients.","text":"This Google Client ID must be setup as follows:\\n\\n- **Application Type**: iOS Application\\n- Give it a name (e.g. \\"iOS App\\").\\n- **Bundle ID**: Must match the value of `ios.bundleIdentifier` in your `app.json`.\\n- Your app needs to conform to the URI scheme matching your bundle identifier.\\n  - _Standalone_: Automatically added, do nothing.\\n  - _Bare workflow_: Run `npx uri-scheme add <your bundle id> --ios`\\n- To test this you can:\\n  1. Eject to bare: `expo eject` and run `yarn ios`\\n  2. Create a custom client: `expo client:ios`\\n  3. Build a production IPA: `expo build:ios`\\n- Whenever you change the values in `app.json` you\'ll need to rebuild the native app.\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"language","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Language code ISO 3166-1 alpha-2 region code, such as \'it\' or \'pt-PT\'."},"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"ProviderAuthRequestConfig.language"}},{"name":"loginHint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the user\'s email address is known ahead of time, it can be supplied to be the default option.\\nIf the user has approved access for this app in the past then auth may return without any further interaction."},"type":{"type":"intrinsic","name":"string"}},{"name":"prompt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Informs the server if the user should be prompted to login or consent again.\\nThis can be used to present a dialog for switching accounts after the user has already been logged in.","text":"[Section 3.1.2.1](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationRequest)\\n"},"type":{"type":"reference","name":"Prompt"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.prompt"}},{"name":"redirectUri","kind":1024,"kindString":"Property","comment":{"shortText":"After completing an interaction with a resource owner the\\nserver will redirect to this URI. Learn more about [linking in Expo](https://docs.expo.dev/versions/latest/workflow/linking/).","text":"[Section 3.1.2](https://tools.ietf.org/html/rfc6749#section-3.1.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.redirectUri"}},{"name":"responseType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specifies what is returned from the authorization server.","text":"[Section 3.1.1](https://tools.ietf.org/html/rfc6749#section-3.1.1)\\n","tags":[{"tag":"default","text":"ResponseType.Code\\n"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.responseType"}},{"name":"scopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of strings to request access to.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.scopes"}},{"name":"selectAccount","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"When `true`, the service will allow the user to switch between accounts (if possible).","tags":[{"tag":"default","text":"false.\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"shouldAutoExchangeCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Should the hook automatically exchange the response code for an authentication token.","text":"Defaults to `true` on installed apps (iOS, Android) when `ResponseType.Code` is used (default).\\n"},"type":{"type":"intrinsic","name":"boolean"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Used for protection against [Cross-Site Request Forgery](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.state"}},{"name":"usePKCE","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Should use [Proof Key for Code Exchange](https://oauth.net/2/pkce/).","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProviderAuthRequestConfig.usePKCE"}},{"name":"webClientId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Expo web client ID for use in the browser.","text":"This Google Client ID must be setup as follows:\\n\\n- **Application Type**: Web Application\\n- Give it a name (e.g. \\"Web App\\").\\n- **URIs** (Authorized JavaScript origins): https://localhost:19006 & https://yourwebsite.com\\n- **Authorized redirect URIs**: https://localhost:19006 & https://yourwebsite.com\\n- To test this be sure to start your app with `expo start:web --https`.\\n"},"type":{"type":"intrinsic","name":"string"}}],"extendedTypes":[{"type":"reference","name":"ProviderAuthRequestConfig"}]},{"name":"RefreshTokenRequestConfig","kind":256,"kindString":"Interface","comment":{"shortText":"Config used to request a token refresh, or code exchange.","tags":[{"tag":"see","text":"[Section 6](https://tools.ietf.org/html/rfc6749#section-6)\\n"}]},"children":[{"name":"clientId","kind":1024,"kindString":"Property","comment":{"shortText":"A unique string representing the registration information provided by the client.\\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn\'t be used\\nalone for client authentication.","text":"The client identifier is unique to the authorization server.\\n\\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TokenRequestConfig.clientId"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Client secret supplied by an auth provider.\\nThere is no secure way to store this on the client.","text":"[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TokenRequestConfig.clientSecret"}},{"name":"extraParams","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Extra query params that\'ll be added to the query string."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"inheritedFrom":{"type":"reference","name":"TokenRequestConfig.extraParams"}},{"name":"refreshToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The refresh token issued to the client."},"type":{"type":"intrinsic","name":"string"}},{"name":"scopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of strings to request access to.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"TokenRequestConfig.scopes"}}],"extendedTypes":[{"type":"reference","name":"TokenRequestConfig"}],"implementedBy":[{"type":"reference","name":"RefreshTokenRequest"}]},{"name":"RevokeTokenRequestConfig","kind":256,"kindString":"Interface","comment":{"shortText":"Config used to revoke a token.","tags":[{"tag":"see","text":"[Section 2.1](https://tools.ietf.org/html/rfc7009#section-2.1)\\n"}]},"children":[{"name":"clientId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A unique string representing the registration information provided by the client.\\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn\'t be used\\nalone for client authentication.","text":"The client identifier is unique to the authorization server.\\n\\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Partial.clientId"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Client secret supplied by an auth provider.\\nThere is no secure way to store this on the client.","text":"[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)\\n"},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Partial.clientSecret"}},{"name":"extraParams","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Extra query params that\'ll be added to the query string."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"},"inheritedFrom":{"type":"reference","name":"Partial.extraParams"}},{"name":"scopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of strings to request access to.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"Partial.scopes"}},{"name":"token","kind":1024,"kindString":"Property","comment":{"shortText":"The token that the client wants to get revoked.","text":"[Section 3.1](https://tools.ietf.org/html/rfc6749#section-3.1)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"tokenTypeHint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A hint about the type of the token submitted for revocation.","text":"[Section 3.2](https://tools.ietf.org/html/rfc6749#section-3.2)\\n"},"type":{"type":"reference","name":"TokenTypeHint"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"TokenRequestConfig"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"}],"implementedBy":[{"type":"reference","name":"RevokeTokenRequest"}]},{"name":"ServerTokenResponseConfig","kind":256,"kindString":"Interface","comment":{"shortText":"Object returned from the server after a token response."},"children":[{"name":"access_token","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"expires_in","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"id_token","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"issued_at","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"refresh_token","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"scope","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"token_type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"TokenType"}}]},{"name":"TokenRequestConfig","kind":256,"kindString":"Interface","comment":{"shortText":"Config used to request a token refresh, revocation, or code exchange."},"children":[{"name":"clientId","kind":1024,"kindString":"Property","comment":{"shortText":"A unique string representing the registration information provided by the client.\\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn\'t be used\\nalone for client authentication.","text":"The client identifier is unique to the authorization server.\\n\\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"clientSecret","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Client secret supplied by an auth provider.\\nThere is no secure way to store this on the client.","text":"[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"extraParams","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Extra query params that\'ll be added to the query string."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"name":"scopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"List of strings to request access to.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"extendedBy":[{"type":"reference","name":"AccessTokenRequestConfig"},{"type":"reference","name":"RefreshTokenRequestConfig"}]},{"name":"TokenResponseConfig","kind":256,"kindString":"Interface","children":[{"name":"accessToken","kind":1024,"kindString":"Property","comment":{"shortText":"The access token issued by the authorization server.","text":"[Section 4.2.2](https://tools.ietf.org/html/rfc6749#section-4.2.2)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"expiresIn","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The lifetime in seconds of the access token.","text":"For example, the value `3600` denotes that the access token will\\nexpire in one hour from the time the response was generated.\\n\\nIf omitted, the authorization server should provide the\\nexpiration time via other means or document the default value.\\n\\n[Section 4.2.2](https://tools.ietf.org/html/rfc6749#section-4.2.2)\\n"},"type":{"type":"intrinsic","name":"number"}},{"name":"idToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"ID Token value associated with the authenticated session.","text":"[TokenResponse](https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"issuedAt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Time in seconds when the token was received by the client."},"type":{"type":"intrinsic","name":"number"}},{"name":"refreshToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The refresh token, which can be used to obtain new access tokens using the same authorization grant.","text":"[Section 5.1](https://tools.ietf.org/html/rfc6749#section-5.1)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"scope","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The scope of the access token. Only required if it\'s different to the scope that was requested by the client.","text":"[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Required if the \\"state\\" parameter was present in the client\\nauthorization request.  The exact value received from the client.","text":"[Section 4.2.2](https://tools.ietf.org/html/rfc6749#section-4.2.2)\\n"},"type":{"type":"intrinsic","name":"string"}},{"name":"tokenType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The type of the token issued. Value is case insensitive.","text":"[Section 7.1](https://tools.ietf.org/html/rfc6749#section-7.1)\\n"},"type":{"type":"reference","name":"TokenType"}}],"implementedBy":[{"type":"reference","name":"TokenResponse"}]},{"name":"AuthRequestPromptOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Options passed to the `promptAsync()` method of `AuthRequest`s.\\nThis can be used to configure how the web browser should look and behave."},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserOpenOptions"},{"type":"literal","value":"windowFeatures"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"projectNameForProxy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Project name to use for the \\\\`auth.expo.io\\\\` proxy when `useProxy` is true."},"type":{"type":"intrinsic","name":"string"}},{"name":"proxyOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL options to be used when creating the redirect URL for the auth proxy."},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"CreateURLOptions"},{"type":"literal","value":"queryParams"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"path","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"url","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL to open when prompting the user. This usually should be defined internally and left `undefined` in most cases."},"type":{"type":"intrinsic","name":"string"}},{"name":"useProxy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Should the authentication request use the Expo proxy service `auth.expo.io`.","tags":[{"tag":"default","text":"false\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"windowFeatures","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Features to use with `window.open()`.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"reference","name":"WebBrowserWindowFeatures"}}]}}]}},{"name":"AuthSessionOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"authUrl","kind":1024,"kindString":"Property","comment":{"shortText":"The URL that points to the sign in page that you would like to open the user to."},"type":{"type":"intrinsic","name":"string"}},{"name":"projectNameForProxy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Project name to use for the \\\\`auth.expo.io\\\\` proxy."},"type":{"type":"intrinsic","name":"string"}},{"name":"returnUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The URL to return to the application. In managed apps, it\'s optional and defaults to output of [`Linking.createURL(\'expo-auth-session\', params)`](./linking/#linkingcreateurlpath-namedparameters)\\ncall with `scheme` and `queryParams` params. However, in the bare app, it\'s required - `AuthSession` needs to know where to wait for the response.\\nHence, this method will throw an exception, if you don\'t provide `returnUrl`."},"type":{"type":"intrinsic","name":"string"}},{"name":"showInRecents","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether browsed website should be shown as separate entry in Android recents/multitasking view.","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"AuthSessionRedirectUriOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Options passed to `makeRedirectUriAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isTripleSlashed","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Should the URI be triple slashed `scheme:///path` or double slashed `scheme://path`.\\nDefaults to `false`.\\nPassed to `Linking.createURL()` when `useProxy` is `false`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"native","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Manual scheme to use in Bare and Standalone native app contexts. Takes precedence over all other properties.\\nYou must define the URI scheme that will be used in a custom built native application or standalone Expo application.\\nThe value should conform to your native app\'s URI schemes.\\nYou can see conformance with `npx uri-scheme list`."},"type":{"type":"intrinsic","name":"string"}},{"name":"path","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Optional path to append to a URI. This will not be added to `native`."},"type":{"type":"intrinsic","name":"string"}},{"name":"preferLocalhost","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Attempt to convert the Expo server IP address to localhost.\\nThis is useful for testing when your IP changes often, this will only work for iOS simulator.","tags":[{"tag":"default","text":"false\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"projectNameForProxy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Project name to use for the \\\\`auth.expo.io\\\\` proxy when `useProxy` is true."},"type":{"type":"intrinsic","name":"string"}},{"name":"queryParams","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Optional native scheme to use when proxy is disabled.\\nURI protocol `<scheme>://` that must be built into your native app.\\nPassed to `Linking.createURL()` when `useProxy` is `false`."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"undefined"}]}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"name":"scheme","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URI protocol `<scheme>://` that must be built into your native app.\\nPassed to `Linking.createURL()` when `useProxy` is `false`."},"type":{"type":"intrinsic","name":"string"}},{"name":"useProxy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Should use the \\\\`auth.expo.io\\\\` proxy.\\nThis is useful for testing managed native apps that require a custom URI scheme.","tags":[{"tag":"default","text":"false\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"AuthSessionResult","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Object returned after an auth request has completed.\\n- If the user cancelled the authentication session by closing the browser, the result is `{ type: \'cancel\' }`.\\n- If the authentication is dismissed manually with `AuthSession.dismiss()`, the result is `{ type: \'dismiss\' }`.\\n- If the authentication flow is successful, the result is `{ type: \'success\', params: Object, event: Object }`.\\n- If the authentication flow is returns an error, the result is `{ type: \'error\', params: Object, error: string, event: Object }`.\\n- If you call `AuthSession.startAsync()` more than once before the first call has returned, the result is `{ type: \'locked\' }`,\\n  because only one `AuthSession` can be in progress at any time."},"type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"How the auth completed."},"type":{"type":"union","types":[{"type":"literal","value":"cancel"},{"type":"literal","value":"dismiss"},{"type":"literal","value":"opened"},{"type":"literal","value":"locked"}]}}]}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"authentication","kind":1024,"kindString":"Property","comment":{"shortText":"Returned when the auth finishes with an `access_token` property."},"type":{"type":"union","types":[{"type":"reference","name":"TokenResponse"},{"type":"literal","value":null}]}},{"name":"error","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Possible error if the auth failed with type `error`."},"type":{"type":"union","types":[{"type":"reference","name":"AuthError"},{"type":"literal","value":null}]}},{"name":"errorCode","kind":1024,"kindString":"Property","comment":{"tags":[{"tag":"deprecated","text":"Legacy error code query param, use `error` instead.\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"params","kind":1024,"kindString":"Property","comment":{"shortText":"Query params from the `url` as an object."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"How the auth completed."},"type":{"type":"union","types":[{"type":"literal","value":"error"},{"type":"literal","value":"success"}]}},{"name":"url","kind":1024,"kindString":"Property","comment":{"shortText":"Auth URL that was opened"},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"Issuer","kind":4194304,"kindString":"Type alias","comment":{"shortText":"URL using the `https` scheme with no query or fragment component that the OP asserts as its Issuer Identifier."},"type":{"type":"intrinsic","name":"string"}},{"name":"IssuerOrDiscovery","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"Issuer"},{"type":"reference","name":"DiscoveryDocument"}]}},{"name":"ProviderMetadata","kind":4194304,"kindString":"Type alias","comment":{"shortText":"OpenID Providers have metadata describing their configuration.\\n[ProviderMetadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata)"},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"boolean"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}],"qualifiedName":"Record","package":"typescript","name":"Record"},{"type":"reference","name":"ProviderMetadataEndpoints"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"backchannel_logout_session_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"backchannel_logout_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"check_session_iframe","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"claim_types_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"a list of the Claim Types that the OpenID Provider supports."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"claims_locales_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Languages and scripts supported for values in Claims being returned."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"claims_parameter_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value specifying whether the OP supports use of the claims parameter, with `true` indicating support.","tags":[{"tag":"default","text":"false\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"claims_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"a list of the Claim Names of the Claims that the OpenID Provider may be able to supply values for.\\nNote that for privacy or other reasons, this might not be an exhaustive list."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"code_challenge_methods_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"reference","name":"CodeChallengeMethod"}}},{"name":"display_values_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":" a list of the `display` parameter values that the OpenID Provider supports."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"frontchannel_logout_session_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"frontchannel_logout_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"grant_types_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"JSON array containing a list of the OAuth 2.0 Grant Type values that this OP supports.\\nDynamic OpenID Providers MUST support the authorization_code and implicit Grant Type values and MAY support other Grant Types.\\nIf omitted, the default value is [\\"authorization_code\\", \\"implicit\\"]."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"id_token_signing_alg_values_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"JSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for the ID Token to encode the Claims in a JWT.\\nThe algorithm RS256 MUST be included."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"jwks_uri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL of the OP\'s JSON Web Key Set [JWK](https://openid.net/specs/openid-connect-discovery-1_0.html#JWK) document."},"type":{"type":"intrinsic","name":"string"}},{"name":"op_policy_uri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL that the OpenID Provider provides to the person registering the Client to read about the OP\'s requirements on how\\nthe Relying Party can use the data provided by the OP. The registration process SHOULD display this URL to the person\\nregistering the Client if it is given."},"type":{"type":"intrinsic","name":"string"}},{"name":"op_tos_uri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL that the OpenID Provider provides to the person registering the Client to read about OpenID Provider\'s terms of service.\\nThe registration process should display this URL to the person registering the Client if it is given."},"type":{"type":"intrinsic","name":"string"}},{"name":"request_parameter_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value specifying whether the OP supports use of the request parameter, with `true` indicating support.","tags":[{"tag":"default","text":"false\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"request_uri_parameter_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the OP supports use of the `request_uri` parameter, with `true` indicating support.","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"require_request_uri_registration","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the OP requires any `request_uri` values used to be pre-registered using the `request_uris` registration parameter.\\nPre-registration is required when the value is `true`.","tags":[{"tag":"default","text":"false\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"response_modes_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"JSON array containing a list of the OAuth 2.0 `response_mode` values that this OP supports,\\nas specified in [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-discovery-1_0.html#OAuth.Responses).\\nIf omitted, the default for Dynamic OpenID Providers is `[\\"query\\", \\"fragment\\"]`."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"response_types_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"JSON array containing a list of the OAuth 2.0 `response_type` values that this OP supports.\\nDynamic OpenID Providers must support the `code`, `id_token`, and the `token` `id_token` Response Type values"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"scopes_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"JSON array containing a list of the OAuth 2.0 [RFC6749](https://openid.net/specs/openid-connect-discovery-1_0.html#RFC6749)\\nscope values that this server supports."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"service_documentation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL of a page containing human-readable information that developers might want or need to know when using the OpenID Provider.\\nIn particular, if the OpenID Provider does not support Dynamic Client Registration, then information on how to register Clients\\nneeds to be provided in this documentation."},"type":{"type":"intrinsic","name":"string"}},{"name":"subject_types_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"JSON array containing a list of the Subject Identifier types that this OP supports.\\nValid types include `pairwise` and `public`."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"token_endpoint_auth_methods_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A list of Client authentication methods supported by this Token Endpoint.\\nIf omitted, the default is `[\'client_secret_basic\']`"},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"literal","value":"client_secret_post"},{"type":"literal","value":"client_secret_basic"},{"type":"literal","value":"client_secret_jwt"},{"type":"literal","value":"private_key_jwt"},{"type":"intrinsic","name":"string"}]}}},{"name":"ui_locales_supported","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Languages and scripts supported for the user interface,\\nrepresented as a JSON array of [BCP47](https://openid.net/specs/openid-connect-discovery-1_0.html#RFC5646) language tag values."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}}]}},{"name":"TokenType","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Access token type.","tags":[{"tag":"see","text":"[Section 7.1](https://tools.ietf.org/html/rfc6749#section-7.1)\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":"bearer"},{"type":"literal","value":"mac"}]}},{"name":"dismiss","kind":64,"kindString":"Function","signatures":[{"name":"dismiss","kind":4096,"kindString":"Call signature","comment":{"shortText":"Cancels an active `AuthSession` if there is one. No return value, but if there is an active `AuthSession`\\nthen the Promise returned by the `AuthSession.startAsync()` that initiated it resolves to `{ type: \'dismiss\' }`."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"exchangeCodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"exchangeCodeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Exchange an authorization code for an access token that can be used to get data from the provider.","returns":"Returns a discovery document with a valid `tokenEndpoint` URL.\\n"},"parameters":[{"name":"config","kind":32768,"kindString":"Parameter","comment":{"shortText":"Configuration used to exchange the code for a token."},"type":{"type":"reference","name":"AccessTokenRequestConfig"}},{"name":"discovery","kind":32768,"kindString":"Parameter","comment":{"shortText":"The `tokenEndpoint` for a provider."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument"},{"type":"literal","value":"tokenEndpoint"}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"fetchDiscoveryAsync","kind":64,"kindString":"Function","signatures":[{"name":"fetchDiscoveryAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Fetch a `DiscoveryDocument` from a well-known resource provider that supports auto discovery.","returns":"Returns a discovery document that can be used for authentication.\\n"},"parameters":[{"name":"issuer","kind":32768,"kindString":"Parameter","comment":{"shortText":"An `Issuer` URL to fetch from."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"fetchUserInfoAsync","kind":64,"kindString":"Function","signatures":[{"name":"fetchUserInfoAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Fetch generic user info from the provider\'s OpenID Connect `userInfoEndpoint` (if supported).","tags":[{"tag":"see","text":"[UserInfo](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo).\\n"}]},"parameters":[{"name":"config","kind":32768,"kindString":"Parameter","comment":{"shortText":"The `accessToken` for a user, returned from a code exchange or auth request."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse"},{"type":"literal","value":"accessToken"}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}},{"name":"discovery","kind":32768,"kindString":"Parameter","comment":{"shortText":"The `userInfoEndpoint` for a provider.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument"},{"type":"literal","value":"userInfoEndpoint"}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"generateHexStringAsync","kind":64,"kindString":"Function","signatures":[{"name":"generateHexStringAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Digest a random string with hex encoding, useful for creating `nonce`s."},"parameters":[{"name":"size","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getDefaultReturnUrl","kind":64,"kindString":"Function","signatures":[{"name":"getDefaultReturnUrl","kind":4096,"kindString":"Call signature","parameters":[{"name":"urlPath","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CreateURLOptions"},{"type":"literal","value":"queryParams"}],"qualifiedName":"Omit","package":"typescript","name":"Omit"}}],"type":{"type":"intrinsic","name":"string"}}]},{"name":"getRedirectUrl","kind":64,"kindString":"Function","signatures":[{"name":"getRedirectUrl","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the URL that your authentication provider needs to redirect to. For example: `https://auth.expo.io/@your-username/your-app-slug`. You can pass an additional path component to be appended to the default redirect URL.\\n> **Note** This method will throw an exception if you\'re using the bare workflow on native.","returns":"\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst url = AuthSession.getRedirectUrl(\'redirect\');\\n\\n// Managed: https://auth.expo.io/@your-username/your-app-slug/redirect\\n// Web: https://localhost:19006/redirect\\n```\\n"},{"tag":"deprecated","text":"Use `makeRedirectUri({ path, useProxy })` instead.\\n"}]},"parameters":[{"name":"path","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]},{"name":"loadAsync","kind":64,"kindString":"Function","signatures":[{"name":"loadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Build an `AuthRequest` and load it before returning.","returns":"Returns an instance of `AuthRequest` that can be used to prompt the user for authorization.\\n"},"parameters":[{"name":"config","kind":32768,"kindString":"Parameter","comment":{"shortText":"A valid [`AuthRequestConfig`](#authrequestconfig) that specifies what provider to use."},"type":{"type":"reference","name":"AuthRequestConfig"}},{"name":"issuerOrDiscovery","kind":32768,"kindString":"Parameter","comment":{"shortText":"A loaded [`DiscoveryDocument`](#discoverydocument) or issuer URL.\\n(Only `authorizationEndpoint` is required for requesting an authorization code)."},"type":{"type":"reference","name":"IssuerOrDiscovery"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AuthRequest"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"makeRedirectUri","kind":64,"kindString":"Function","signatures":[{"name":"makeRedirectUri","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a redirect url for the current platform and environment. You need to manually define the redirect that will be used in\\na bare workflow React Native app, or an Expo standalone app, this is because it cannot be inferred automatically.\\n- **Web:** Generates a path based on the current `window.location`. For production web apps, you should hard code the URL as well.\\n- **Managed workflow:** Uses the `scheme` property of your `app.config.js` or `app.json`.\\n  - **Proxy:** Uses `auth.expo.io` as the base URL for the path. This only works in Expo Go and standalone environments.\\n- **Bare workflow:** Will fallback to using the `native` option for bare workflow React Native apps.","returns":"The `redirectUri` to use in an authentication request.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst redirectUri = makeRedirectUri({\\n  scheme: \'my-scheme\',\\n  path: \'redirect\'\\n});\\n// Custom app: my-scheme://redirect\\n// Expo Go: exp://127.0.0.1:19000/--/redirect\\n// Web dev: https://localhost:19006/redirect\\n// Web prod: https://yourwebsite.com/redirect\\n\\nconst redirectUri2 = makeRedirectUri({\\n  scheme: \'scheme2\',\\n  preferLocalhost: true,\\n  isTripleSlashed: true,\\n});\\n// Custom app: scheme2:///\\n// Expo Go: exp://localhost:19000\\n// Web dev: https://localhost:19006\\n// Web prod: https://yourwebsite.com\\n\\nconst redirectUri3 = makeRedirectUri({\\n  useProxy: true,\\n});\\n// Custom app: https://auth.expo.io/@username/slug\\n// Expo Go: https://auth.expo.io/@username/slug\\n// Web dev: https://localhost:19006\\n// Web prod: https://yourwebsite.com\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"Additional options for configuring the path."},"originalName":"__namedParameters","type":{"type":"reference","name":"AuthSessionRedirectUriOptions"},"defaultValue":"{}"}],"type":{"type":"intrinsic","name":"string"}}]},{"name":"refreshAsync","kind":64,"kindString":"Function","signatures":[{"name":"refreshAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Refresh an access token.\\n- If the provider didn\'t return a `refresh_token` then the access token may not be refreshed.\\n- If the provider didn\'t return a `expires_in` then it\'s assumed that the token does not expire.\\n- Determine if a token needs to be refreshed via `TokenResponse.isTokenFresh()` or `shouldRefresh()` on an instance of `TokenResponse`.","returns":"Returns a discovery document with a valid `tokenEndpoint` URL.\\n","tags":[{"tag":"see","text":"[Section 6](https://tools.ietf.org/html/rfc6749#section-6).\\n"}]},"parameters":[{"name":"config","kind":32768,"kindString":"Parameter","comment":{"shortText":"Configuration used to refresh the given access token."},"type":{"type":"reference","name":"RefreshTokenRequestConfig"}},{"name":"discovery","kind":32768,"kindString":"Parameter","comment":{"shortText":"The `tokenEndpoint` for a provider."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument"},{"type":"literal","value":"tokenEndpoint"}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"resolveDiscoveryAsync","kind":64,"kindString":"Function","signatures":[{"name":"resolveDiscoveryAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Utility method for resolving the discovery document from an issuer or object."},"parameters":[{"name":"issuerOrDiscovery","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"IssuerOrDiscovery"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"revokeAsync","kind":64,"kindString":"Function","signatures":[{"name":"revokeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Revoke a token with a provider. This makes the token unusable, effectively requiring the user to login again.","returns":"Returns a discovery document with a valid `revocationEndpoint` URL. Many providers do not support this feature.\\n"},"parameters":[{"name":"config","kind":32768,"kindString":"Parameter","comment":{"shortText":"Configuration used to revoke a refresh or access token."},"type":{"type":"reference","name":"RevokeTokenRequestConfig"}},{"name":"discovery","kind":32768,"kindString":"Parameter","comment":{"shortText":"The `revocationEndpoint` for a provider."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument"},{"type":"literal","value":"revocationEndpoint"}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"startAsync","kind":64,"kindString":"Function","signatures":[{"name":"startAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Initiate a proxied authentication session with the given options. Only one `AuthSession` can be active at any given time in your application.\\nIf you attempt to open a second session while one is still in progress, the second session will return a value to indicate that `AuthSession` is locked.","returns":"Returns a Promise that resolves to an `AuthSessionResult` object.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An object of type `AuthSessionOptions`."},"type":{"type":"reference","name":"AuthSessionOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AuthSessionResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"useAuthRequest","kind":64,"kindString":"Function","signatures":[{"name":"useAuthRequest","kind":4096,"kindString":"Call signature","comment":{"shortText":"Load an authorization request for a code. When the prompt method completes then the response will be fulfilled.","text":"> In order to close the popup window on web, you need to invoke `WebBrowser.maybeCompleteAuthSession()`.\\n> See the [Identity example](/guides/authentication.md#identityserver-4) for more info.\\n\\nIf an Implicit grant flow was used, you can pass the `response.params` to `TokenResponse.fromQueryParams()`\\nto get a `TokenResponse` instance which you can use to easily refresh the token.\\n","returns":"Returns a loaded request, a response, and a prompt method in a single array in the following order:\\n- `request` - An instance of [`AuthRequest`](#authrequest) that can be used to prompt the user for authorization.\\n  This will be `null` until the auth request has finished loading.\\n- `response` - This is `null` until `promptAsync` has been invoked. Once fulfilled it will return information about the authorization.\\n- `promptAsync` - When invoked, a web browser will open up and prompt the user for authentication.\\n  Accepts an [`AuthRequestPromptOptions`](#authrequestpromptoptions) object with options about how the prompt will execute.\\n  You can use this to enable the Expo proxy service `auth.expo.io`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst [request, response, promptAsync] = useAuthRequest({ ... }, { ... });\\n```\\n"}]},"parameters":[{"name":"config","kind":32768,"kindString":"Parameter","comment":{"shortText":"A valid [`AuthRequestConfig`](#authrequestconfig) that specifies what provider to use."},"type":{"type":"reference","name":"AuthRequestConfig"}},{"name":"discovery","kind":32768,"kindString":"Parameter","comment":{"shortText":"A loaded [`DiscoveryDocument`](#discoverydocument) with endpoints used for authenticating.\\nOnly `authorizationEndpoint` is required for requesting an authorization code.\\n"},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"DiscoveryDocument"}]}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"reference","name":"AuthRequest"},{"type":"literal","value":null}]},{"type":"union","types":[{"type":"reference","name":"AuthSessionResult"},{"type":"literal","value":null}]},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"AuthRequestPromptOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AuthSessionResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}}]}}]},{"name":"useAutoDiscovery","kind":64,"kindString":"Function","signatures":[{"name":"useAutoDiscovery","kind":4096,"kindString":"Call signature","comment":{"shortText":"Given an OpenID Connect issuer URL, this will fetch and return the [`DiscoveryDocument`](#discoverydocument)\\n(a collection of URLs) from the resource provider.","returns":"Returns `null` until the [`DiscoveryDocument`](#discoverydocument) has been fetched from the provided issuer URL.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst discovery = useAutoDiscovery(\'https://example.com/auth\');\\n```\\n"}]},"parameters":[{"name":"issuerOrDiscovery","kind":32768,"kindString":"Parameter","comment":{"shortText":"URL using the `https` scheme with no query or fragment component that the OP asserts as its Issuer Identifier."},"type":{"type":"reference","name":"IssuerOrDiscovery"}}],"type":{"type":"union","types":[{"type":"reference","name":"DiscoveryDocument"},{"type":"literal","value":null}]}}]}]}')},kQY0:function(e,w,n){"use strict";var c=n("2N74"),p=n("yRGd"),d={name:"blockQuote",tokenize:a,continuation:{tokenize:m},exit:r};function a(s,i,o){var t=this;return l;function l(g){return g===62?(t.containerState.open||(s.enter("blockQuote",{_container:!0}),t.containerState.open=!0),s.enter("blockQuotePrefix"),s.enter("blockQuoteMarker"),s.consume(g),s.exit("blockQuoteMarker"),k):o(g)}function k(g){return c(g)?(s.enter("blockQuotePrefixWhitespace"),s.consume(g),s.exit("blockQuotePrefixWhitespace"),s.exit("blockQuotePrefix"),i):(s.exit("blockQuotePrefix"),i(g))}}function m(s,i,o){return p(s,s.attempt(d,i,o),"linePrefix",this.parser.constructs.disable.null.indexOf("codeIndented")>-1?void 0:4)}function r(s){s.exit("blockQuote")}e.exports=d},kViG:function(e,w,n){"use strict";var c=n("E/Jm"),p=n("2N74");function d(a,m,r,s,i,o){var t=this,l=0,k;return g;function g(b){return a.enter(s),a.enter(i),a.consume(b),a.exit(i),a.enter(o),h}function h(b){return b===null||b===91||b===93&&!k||b===94&&!l&&"_hiddenFootnoteSupport"in t.parser.constructs||l>999?r(b):b===93?(a.exit(o),a.enter(i),a.consume(b),a.exit(i),a.exit(s),m):c(b)?(a.enter("lineEnding"),a.consume(b),a.exit("lineEnding"),h):(a.enter("chunkString",{contentType:"string"}),f(b))}function f(b){return b===null||b===91||b===93||c(b)||l++>999?(a.exit("chunkString"),h(b)):(a.consume(b),k=k||!p(b),b===92?S:f)}function S(b){return b===91||b===92||b===93?(a.consume(b),l++,f):f(b)}}e.exports=d},kb4Z:function(e){e.exports=JSON.parse('{"name":"expo-haptics","kind":1,"kindString":"Project","originalName":"","children":[{"name":"ImpactFeedbackStyle","kind":8,"kindString":"Enumeration","comment":{"shortText":"The mass of the objects in the collision simulated by a UIImpactFeedbackGenerator object\\n[`UINotificationFeedbackStyle`](https://developer.apple.com/documentation/uikit/uiimpactfeedbackstyle)"},"children":[{"name":"Heavy","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A collision between large, heavy user interface elements."},"defaultValue":"\\"heavy\\""},{"name":"Light","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A collision between small, light user interface elements."},"defaultValue":"\\"light\\""},{"name":"Medium","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A collision between moderately sized user interface elements."},"defaultValue":"\\"medium\\""}]},{"name":"NotificationFeedbackType","kind":8,"kindString":"Enumeration","comment":{"shortText":"The type of notification feedback generated by a UINotificationFeedbackGenerator object.\\n[`UINotificationFeedbackType`](https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype)"},"children":[{"name":"Error","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A notification feedback type indicating that a task has failed."},"defaultValue":"\\"error\\""},{"name":"Success","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A notification feedback type indicating that a task has completed successfully."},"defaultValue":"\\"success\\""},{"name":"Warning","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A notification feedback type indicating that a task has produced a warning."},"defaultValue":"\\"warning\\""}]},{"name":"impactAsync","kind":64,"kindString":"Function","signatures":[{"name":"impactAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"A `Promise` which fulfils once native size haptics functionality is triggered.\\n"},"parameters":[{"name":"style","kind":32768,"kindString":"Parameter","comment":{"text":"A collision indicator that on iOS is directly mapped to [`UIImpactFeedbackStyle`](https://developer.apple.com/documentation/uikit/uiimpactfeedbackstyle),\\nwhile on Android these are simulated using [Vibrator](https://developer.android.com/reference/android/os/Vibrator).\\nYou can use one of `Haptics.ImpactFeedbackStyle.{Light, Medium, Heavy}`."},"type":{"type":"reference","name":"ImpactFeedbackStyle"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"notificationAsync","kind":64,"kindString":"Function","signatures":[{"name":"notificationAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"The kind of notification response used in the feedback.","returns":"A `Promise` which fulfils once native size haptics functionality is triggered.\\n"},"parameters":[{"name":"type","kind":32768,"kindString":"Parameter","comment":{"text":"A notification feedback type that on iOS is directly mapped to [UINotificationFeedbackType](https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype),\\nwhile on Android these are simulated using [Vibrator](https://developer.android.com/reference/android/os/Vibrator).\\nYou can use one of `Haptics.NotificationFeedbackType.{Success, Warning, Error}`."},"type":{"type":"reference","name":"NotificationFeedbackType"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"selectionAsync","kind":64,"kindString":"Function","signatures":[{"name":"selectionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Used to let a user know when a selection change has been registered.","returns":"A `Promise` which fulfils once native size haptics functionality is triggered.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},ki31:function(e,w){w.canContainEols=["delete"],w.enter={strikethrough:n},w.exit={strikethrough:c};function n(p){this.enter({type:"delete",children:[]},p)}function c(p){this.exit(p)}},kiQV:function(e){e.exports=JSON.parse(`{"name":"expo-docs","version":"45.0.0","private":true,"scripts":{"dev":"rimraf .next/preval && next dev -p 3002","build":"cross-env NODE_OPTIONS=--max-old-space-size=6144 next build","export":"yarn run build && next export && yarn run export-issue-404","export-issue-404":"echo \\"\u{1F6E0}  Patching https://github.com/vercel/next.js/issues/16528\\"; cp out/404/index.html out/404.html","export-server":"http-server out -p 8000","import-react-native-docs":"node ./scripts/import-react-native-docs.js","test-links":"node --async-stack-traces --unhandled-rejections=strict ./scripts/test-links.js","prettier":"prettier --write '**/*.{js,ts,tsx,md}'","lint":"tsc --noEmit && eslint .","lint-case":"case-police 'pages/**/*.md' -p brands,general,products,softwares -d expo-dict.json","lint-links":"remark -u validate-links ./pages","watch":"tsc --noEmit -w","test":"jest","schema-sync":"node --async-stack-traces --unhandled-rejections=strict ./scripts/schema-sync.js","remove-version":"node --unhandled-rejections=strict ./scripts/remove-version.js"},"resolutions":{"webpack":"^5.28.0"},"dependencies":{"@emotion/react":"^11.4.0","@expo/spawn-async":"^1.5.0","@expo/styleguide":"^4.0.4","@mdx-js/loader":"^1.6.22","@mdx-js/mdx":"^1.6.22","@mdx-js/react":"^1.6.22","@mdx-js/runtime":"^1.6.22","@reach/tabs":"^0.15.0","@sentry/browser":"^5.6.1","date-fns":"^2.28.0","docsearch.js":"^2.5.2","emoji-regex":"^9.2.2","front-matter":"^2.3.0","fs-extra":"^6.0.1","github-slugger":"^1.3.0","hotshot":"^1.0.5","lodash":"^4.17.20","next":"^11.1.4","nprogress":"0.2.0","path-browserify":"^1.0.1","prism-react-renderer":"1.0.2","prop-types":"15.7.2","react":"^17.0.2","react-diff-view":"^2.4.7","react-dom":"^17.0.2","react-feather":"^2.0.9","react-grid-system":"^8.1.3","react-markdown":"^6.0.3","react-player":"^1.11.1","react-visibility-sensor":"^5.1.1","remark-gfm":"^1.0.0","tippy.js":"^6.3.1"},"devDependencies":{"@apidevtools/json-schema-ref-parser":"^9.0.9","@babel/core":"^7.13.14","@emotion/babel-preset-css-prop":"^11.2.0","@emotion/jest":"^11.7.1","@testing-library/jest-dom":"^5.16.4","@testing-library/react":"^12.1.5","@testing-library/react-hooks":"^7.0.2","@testing-library/user-event":"^14.1.1","@types/cacache":"^15.0.1","@types/fs-extra":"^9.0.11","@types/github-slugger":"^1.3.0","@types/google.analytics":"^0.0.41","@types/gtag.js":"^0.0.6","@types/lodash":"^4.14.161","@types/long":"^4.0.1","@types/mdx-js__react":"^1.5.3","@types/node":"^14.11.2","@types/nprogress":"^0.2.0","@types/react":"^17.0.11","axios":"^0.21.2","babel-plugin-module-resolver":"3.1.1","babel-plugin-preval":"^3.0.1","case-police":"^0.5.3","cross-env":"^5.2.0","danger":"^9.2.10","esbuild-loader":"^2.13.1","eslint":"^8.6.0","eslint-config-next":"^10.2.3","eslint-config-universe":"^10.0.0","eslint-plugin-lodash":"^7.3.0","eslint-plugin-testing-library":"^5.5.0","http-server":"^0.12.3","jest":"^27.4.7","js-yaml":"^4.1.0","prettier":"^2.3.1","puppeteer":"^10.2.0","react-test-renderer":"^17.0.2","rehype-slug":"^4.0.1","remark-cli":"^9.0.0","remark-frontmatter":"^2.0.0","remark-validate-links":"^10.0.4","rimraf":"^3.0.2","semver":"^7.3.5","sitemap":"^6.3.0","typescript":"^4.5.4","unist-builder":"^2.0.0","unist-util-visit":"^2.0.3"}}`)},"l/4a":function(e){e.exports=JSON.parse('{"name":"expo-font","kind":1,"kindString":"Project","originalName":"","children":[{"name":"FontDisplay","kind":8,"kindString":"Enumeration","comment":{"shortText":"__Web Only__. Sets the [font-display](https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display)\\nfor a given typeface. The default font value on web is `FontDisplay.AUTO`.\\nEven though setting the `fontDisplay` does nothing on native platforms, the default behavior\\nemulates `FontDisplay.SWAP` on flagship devices like iOS, Samsung, Pixel, etc. Default\\nfunctionality varies on One Plus devices. In the browser this value is set in the generated\\n`@font-face` CSS block and not as a style property meaning you cannot dynamically change this\\nvalue based on the element it\'s used in."},"children":[{"name":"AUTO","kind":16,"kindString":"Enumeration member","comment":{"shortText":"__(Default)__ The font display strategy is defined by the user agent or platform.\\nThis generally defaults to the text being invisible until the font is loaded.\\nGood for buttons or banners that require a specific treatment."},"defaultValue":"\\"auto\\""},{"name":"BLOCK","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The text will be invisible until the font has loaded. If the font fails to load then nothing\\nwill appear - it\'s best to turn this off when debugging missing text."},"defaultValue":"\\"block\\""},{"name":"FALLBACK","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Splits the behavior between `SWAP` and `BLOCK`.\\nThere will be a [100ms timeout](https://developers.google.com/web/updates/2016/02/font-display?hl=en)\\nwhere the text with a custom font is invisible, after that the text will either swap to the\\nstyled text or it\'ll show the unstyled text and continue to load the custom font. This is good\\nfor buttons that need a custom font but should also be quickly available to screen-readers."},"defaultValue":"\\"fallback\\""},{"name":"OPTIONAL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"This works almost identically to `FALLBACK`, the only difference is that the browser will\\ndecide to load the font based on slow connection speed or critical resource demand."},"defaultValue":"\\"optional\\""},{"name":"SWAP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Fallback text is rendered immediately with a default font while the desired font is loaded.\\nThis is good for making the content appear to load instantly and is usually preferred."},"defaultValue":"\\"swap\\""}]},{"name":"FontResource","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object used to dictate the resource that is loaded into the provided font namespace when used\\nwith [`loadAsync`](#loadasync)."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"display","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"_Web Only._ Sets the [`font-display`](#fontdisplay) property for a given typeface in the\\nbrowser."},"type":{"type":"reference","name":"FontDisplay"}},{"name":"uri","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}},{"name":"FontSource","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The different types of assets you can provide to the [`loadAsync()`](#loadAsync) function.\\nA font source can be a URI, a module ID, or an Expo Asset."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"reference","name":"Asset"},{"type":"reference","name":"FontResource"}]}},{"name":"UnloadFontOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Object used to query fonts for unloading."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"FontResource"},{"type":"literal","value":"display"}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}},{"name":"isLoaded","kind":64,"kindString":"Function","signatures":[{"name":"isLoaded","kind":4096,"kindString":"Call signature","comment":{"shortText":"Synchronously detect if the font for `fontFamily` has finished loading.","returns":"Returns `true` if the font has fully loaded.\\n"},"parameters":[{"name":"fontFamily","kind":32768,"kindString":"Parameter","comment":{"shortText":"The name used to load the `FontResource`."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"isLoading","kind":64,"kindString":"Function","signatures":[{"name":"isLoading","kind":4096,"kindString":"Call signature","comment":{"shortText":"Synchronously detect if the font for `fontFamily` is still being loaded.","returns":"Returns `true` if the font is still loading.\\n"},"parameters":[{"name":"fontFamily","kind":32768,"kindString":"Parameter","comment":{"shortText":"The name used to load the `FontResource`."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"loadAsync","kind":64,"kindString":"Function","signatures":[{"name":"loadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Highly efficient method for loading fonts from static or remote resources which can then be used\\nwith the platform\'s native text elements. In the browser this generates a `@font-face` block in\\na shared style sheet for fonts. No CSS is needed to use this method.","returns":"Returns a promise that fulfils when the font has loaded. Often you may want to wrap the\\nmethod in a `try/catch/finally` to ensure the app continues if the font fails to load.\\n"},"parameters":[{"name":"fontFamilyOrFontMap","kind":32768,"kindString":"Parameter","comment":{"shortText":"string or map of values that can be used as the [`fontFamily`](https://reactnative.dev/docs/text#style)\\nstyle prop with React Native Text elements."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"FontSource"}],"qualifiedName":"Record","package":"typescript","name":"Record"}]}},{"name":"source","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"the font asset that should be loaded into the `fontFamily` namespace.\\n"},"type":{"type":"reference","name":"FontSource"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"processFontFamily","kind":64,"kindString":"Function","signatures":[{"name":"processFontFamily","kind":4096,"kindString":"Call signature","comment":{"shortText":"Used to transform font family names to the scoped name. This does not need to\\nbe called in standalone or bare apps but it will return unscoped font family\\nnames if it is called in those contexts.","returns":"Returns a name processed for use with the [current workflow](https://docs.expo.dev/introduction/managed-vs-bare/).\\n"},"parameters":[{"name":"fontFamily","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of font to process."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]},{"name":"unloadAllAsync","kind":64,"kindString":"Function","signatures":[{"name":"unloadAllAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unloads all the custom fonts. This is used for testing."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"unloadAsync","kind":64,"kindString":"Function","signatures":[{"name":"unloadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unload custom fonts matching the `fontFamily`s and display values provided.\\nBecause fonts are automatically unloaded on every platform this is mostly used for testing."},"parameters":[{"name":"fontFamilyOrFontMap","kind":32768,"kindString":"Parameter","comment":{"shortText":"The name or names of the custom fonts that will be unloaded."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"UnloadFontOptions"}],"qualifiedName":"Record","package":"typescript","name":"Record"}]}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"When `fontFamilyOrFontMap` is a string, this should be the font source used to load\\nthe custom font originally.\\n"},"type":{"type":"reference","name":"UnloadFontOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"useFonts","kind":64,"kindString":"Function","signatures":[{"name":"useFonts","kind":4096,"kindString":"Call signature","comment":{"shortText":"```ts\\nconst [loaded, error] = useFonts({ ... });\\n```\\nLoad a map of fonts with [`loadAsync`](#loadasync). This returns a `boolean` if the fonts are\\nloaded and ready to use. It also returns an error if something went wrong, to use in development.","text":"> Note, the fonts are not \\"reloaded\\" when you dynamically change the font map.\\n","returns":"\\n- __loaded__ (`boolean`) - A boolean to detect if the font for `fontFamily` has finished\\nloading.\\n- __error__ (`Error | null`) - An error encountered when loading the fonts.\\n"},"parameters":[{"name":"map","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of `fontFamily`s to [`FontSource`](#fontsource)s. After loading the font you can\\nuse the key in the `fontFamily` style prop of a `Text` element.\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"FontSource"}],"qualifiedName":"Record","package":"typescript","name":"Record"}]}}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"boolean"},{"type":"union","types":[{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"},{"type":"literal","value":null}]}]}}]}]}')},lQ1o:function(e){e.exports=JSON.parse('{"name":"expo-constants","kind":1,"originalName":"","children":[{"name":"AndroidManifest","kind":16777216,"kindString":"Reference"},{"name":"AndroidManifest","kind":256,"kindString":"Interface","children":[{"name":"versionCode","kind":1024,"kindString":"Property","comment":{"shortText":"The version code set by `android.versionCode` in app.json.\\nThe value is set to `null` in case you run your app in Expo Go.","tags":[{"tag":"deprecated","text":"Use `expo-application`\'s [`Application.nativeBuildVersion`](./application/#applicationnativebuildversion).\\n"}]},"type":{"type":"intrinsic","name":"number"}}],"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}},{"name":"AppOwnership","kind":16777216,"kindString":"Reference"},{"name":"AppOwnership","kind":8,"kindString":"Enumeration","children":[{"name":"Expo","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The experience is running inside of the Expo Go app."},"defaultValue":"\\"expo\\""},{"name":"Guest","kind":16,"kindString":"Enumeration member","comment":{"shortText":"It has been opened through a link from a standalone app."},"defaultValue":"\\"guest\\""},{"name":"Standalone","kind":16,"kindString":"Enumeration member","comment":{"shortText":"It is a [standalone app](/classic/building-standalone-apps#building-standalone-apps)."},"defaultValue":"\\"standalone\\""}]},{"name":"ClientScopingConfig","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"scopeKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An opaque unique string for scoping client-side data to this project. This value\\nwill not change when a project is transferred between accounts or renamed."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Constants","kind":16777216,"kindString":"Reference"},{"name":"Constants","kind":256,"kindString":"Interface","children":[{"name":"appOwnership","kind":1024,"kindString":"Property","comment":{"shortText":"Returns `expo`, `standalone`, or `guest`. This property only applies to the managed workflow\\nand classic builds; for apps built with EAS Build and in bare workflow, the result is\\nalways `null`."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"AppOwnership"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.appOwnership"}},{"name":"debugMode","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"NativeConstants.debugMode"}},{"name":"deviceName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A human-readable name for the device type."},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"NativeConstants.deviceName"}},{"name":"deviceYearClass","kind":1024,"kindString":"Property","comment":{"shortText":"The [device year class](https://github.com/facebook/device-year-class) of this device.","tags":[{"tag":"deprecated","text":"Moved to `expo-device` as [`Device.deviceYearClass`](./device/#deviceyearclass).\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"number"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.deviceYearClass"}},{"name":"executionEnvironment","kind":1024,"kindString":"Property","type":{"type":"reference","name":"ExecutionEnvironment"},"inheritedFrom":{"type":"reference","name":"NativeConstants.executionEnvironment"}},{"name":"experienceUrl","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"NativeConstants.experienceUrl"}},{"name":"expoRuntimeVersion","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.expoRuntimeVersion"}},{"name":"expoVersion","kind":1024,"kindString":"Property","comment":{"shortText":"The version string of the Expo Go app currently running.\\nReturns `null` in bare workflow and web."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.expoVersion"}},{"name":"installationId","kind":1024,"kindString":"Property","comment":{"shortText":"An identifier that is unique to this particular device and whose lifetime is at least as long\\nas the installation of the app.","tags":[{"tag":"deprecated","text":"`Constants.installationId` is deprecated in favor of generating your own ID and\\nstoring it.\\n"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"NativeConstants.installationId"}},{"name":"intentUri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"NativeConstants.intentUri"}},{"name":"isDetached","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"NativeConstants.isDetached"}},{"name":"isDevice","kind":1024,"kindString":"Property","comment":{"shortText":"`true` if the app is running on a device, `false` if running in a simulator or emulator.","tags":[{"tag":"deprecated","text":"Use `expo-device`\'s [`Device.isDevice`](./device/#deviceisdevice).\\n"}]},"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"NativeConstants.isDevice"}},{"name":"isHeadless","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"NativeConstants.isHeadless"}},{"name":"linkingUri","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"NativeConstants.linkingUri"}},{"name":"manifest","kind":1024,"kindString":"Property","comment":{"shortText":"Classic manifest for Expo apps using classic updates.\\nReturns `null` in bare workflow and when `manifest2` is non-null."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"AppManifest"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.manifest"}},{"name":"manifest2","kind":1024,"kindString":"Property","comment":{"shortText":"New manifest for Expo apps using modern Expo Updates.\\nReturns `null` in bare workflow and when `manifest` is non-null."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"Manifest"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.manifest2"}},{"name":"name","kind":1024,"kindString":"Property","type":{"type":"literal","value":"ExponentConstants"},"inheritedFrom":{"type":"reference","name":"NativeConstants.name"}},{"name":"nativeAppVersion","kind":1024,"kindString":"Property","comment":{"shortText":"The **Info.plist** value for `CFBundleShortVersionString` on iOS and the version name set\\nby `version` in app.json on Android at the time the native app was built.","tags":[{"tag":"deprecated","text":"Use `expo-application`\'s [`Application.nativeApplicationVersion`](./application/#applicationnativeapplicationversion).\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.nativeAppVersion"}},{"name":"nativeBuildVersion","kind":1024,"kindString":"Property","comment":{"shortText":"The **Info.plist** value for `CFBundleVersion` on iOS (set with `ios.buildNumber` value in\\n**app.json** in a standalone app) and the version code set by `android.versionCode` in\\n**app.json** on Android at the time the native app was built.","tags":[{"tag":"deprecated","text":"Use `expo-application`\'s [`Application.nativeBuildVersion`](./application/#applicationnativebuildversion).\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"NativeConstants.nativeBuildVersion"}},{"name":"platform","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"PlatformManifest"},"inheritedFrom":{"type":"reference","name":"NativeConstants.platform"}},{"name":"sessionId","kind":1024,"kindString":"Property","comment":{"shortText":"A string that is unique to the current session of your app. It is different across apps and\\nacross multiple launches of the same app."},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"NativeConstants.sessionId"}},{"name":"statusBarHeight","kind":1024,"kindString":"Property","comment":{"shortText":"The default status bar height for the device. Does not factor in changes when location tracking\\nis in use or a phone call is active."},"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"NativeConstants.statusBarHeight"}},{"name":"systemFonts","kind":1024,"kindString":"Property","comment":{"shortText":"A list of the system font names available on the current device."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"NativeConstants.systemFonts"}},{"name":"systemVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"NativeConstants.systemVersion"}},{"name":"getWebViewUserAgentAsync","kind":2048,"kindString":"Method","signatures":[{"name":"getWebViewUserAgentAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the user agent string which would be included in requests sent by a web view running on\\nthis device. This is probably not the same user agent you might be providing in your JS `fetch`\\nrequests."},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","name":"NativeConstants.getWebViewUserAgentAsync"}}],"inheritedFrom":{"type":"reference","name":"NativeConstants.getWebViewUserAgentAsync"}}],"extendedTypes":[{"type":"reference","name":"NativeConstants"}]},{"name":"default","kind":32,"kindString":"Variable","type":{"type":"reference","name":"Constants"}},{"name":"EASConfig","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"projectId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The ID for this project if it\'s using EAS. UUID. This value will not change when a project is\\ntransferred between accounts or renamed."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"ExecutionEnvironment","kind":16777216,"kindString":"Reference"},{"name":"ExecutionEnvironment","kind":8,"kindString":"Enumeration","children":[{"name":"Bare","kind":16,"kindString":"Enumeration member","defaultValue":"\\"bare\\""},{"name":"Standalone","kind":16,"kindString":"Enumeration member","defaultValue":"\\"standalone\\""},{"name":"StoreClient","kind":16,"kindString":"Enumeration member","defaultValue":"\\"storeClient\\""}]},{"name":"ExpoClientConfig","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"ExpoConfig","package":"@expo/config-types","name":"ExpoConfig"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"bundleUrl","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"currentFullName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The Expo account name and slug used for display purposes. Formatted like `@username/slug`.\\nWhen unauthenticated, the username is `@anonymous`. For published projects, this value\\nmay change when a project is transferred between accounts or renamed."},"type":{"type":"intrinsic","name":"string"}},{"name":"hostUri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"id","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The Expo account name and slug for this project.","tags":[{"tag":"deprecated","text":"Prefer `projectId` or `originalFullName` instead for identification and\\n`scopeKey` for scoping due to immutability.\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"originalFullName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The original Expo account name and slug for this project. Formatted like `@username/slug`.\\nWhen unauthenticated, the username is `@anonymous`. For published projects, this value\\nwill not change when a project is transferred between accounts or renamed."},"type":{"type":"intrinsic","name":"string"}},{"name":"publishedTime","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"releaseChannel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"releaseId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Published apps only."},"type":{"type":"intrinsic","name":"string"}},{"name":"revisionId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"ExpoGoConfig","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"debuggerHost","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"developer","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"tool","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}},{"name":"logUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"mainModuleName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"packagerOpts","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"ExpoGoPackagerOpts"}}]}}},{"name":"ExpoGoPackagerOpts","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"dev","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"hostType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"lanType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"minify","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"strict","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"urlRandomness","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"urlType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}},{"name":"IOSManifest","kind":16777216,"kindString":"Reference"},{"name":"IOSManifest","kind":256,"kindString":"Interface","children":[{"name":"buildNumber","kind":1024,"kindString":"Property","comment":{"shortText":"The build number specified in the embedded **Info.plist** value for `CFBundleVersion` in this app.\\nIn a standalone app, you can set this with the `ios.buildNumber` value in **app.json**. This\\nmay differ from the value in `Constants.manifest.ios.buildNumber` because the manifest\\ncan be updated, whereas this value will never change for a given native binary.\\nThe value is set to `null` in case you run your app in Expo Go."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"name":"model","kind":1024,"kindString":"Property","comment":{"shortText":"The human-readable model name of this device, e.g. `\\"iPhone 7 Plus\\"` if it can be determined,\\notherwise will be `null`.","tags":[{"tag":"deprecated","text":"Moved to `expo-device` as [`Device.modelName`](./device/#devicemodelname).\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"name":"platform","kind":1024,"kindString":"Property","comment":{"shortText":"The Apple internal model identifier for this device, e.g. `iPhone1,1`.","tags":[{"tag":"deprecated","text":"Use `expo-device`\'s [`Device.modelId`](./device/#devicemodelid).\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"systemVersion","kind":1024,"kindString":"Property","comment":{"shortText":"The version of iOS running on this device, e.g. `10.3`.","tags":[{"tag":"deprecated","text":"Use `expo-device`\'s [`Device.osVersion`](./device/#deviceosversion).\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"userInterfaceIdiom","kind":1024,"kindString":"Property","comment":{"shortText":"The user interface idiom of this device, i.e. whether the app is running on an iPhone or an iPad.","tags":[{"tag":"deprecated","text":"Use `expo-device`\'s [`Device.getDeviceTypeAsync()`](./device/#devicegetdevicetypeasync).\\n"}]},"type":{"type":"reference","name":"UserInterfaceIdiom"}}],"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}},{"name":"Manifest","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A modern manifest."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"assets","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"reference","name":"ManifestAsset"}}},{"name":"createdAt","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"extra","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"ManifestExtra"}},{"name":"id","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"launchAsset","kind":1024,"kindString":"Property","type":{"type":"reference","name":"ManifestAsset"}},{"name":"metadata","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"object"}},{"name":"runtimeVersion","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"ManifestAsset","kind":256,"kindString":"Interface","children":[{"name":"url","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]},{"name":"ManifestExtra","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ClientScopingConfig"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"eas","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"EASConfig"}},{"name":"expoClient","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"ExpoClientConfig"}},{"name":"expoGo","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"ExpoGoConfig"}}]}}]}},{"name":"PlatformManifest","kind":16777216,"kindString":"Reference"},{"name":"PlatformManifest","kind":256,"kindString":"Interface","children":[{"name":"android","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"AndroidManifest"}},{"name":"detach","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"scheme","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}},{"name":"developer","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"hostUri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"ios","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"IOSManifest"}},{"name":"logUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"scheme","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"web","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"WebManifest"}}],"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}},{"name":"UserInterfaceIdiom","kind":16777216,"kindString":"Reference"},{"name":"UserInterfaceIdiom","kind":8,"kindString":"Enumeration","comment":{"shortText":"Current supported values are `handset` and `tablet`. Apple TV and CarPlay will show up\\nas `unsupported`."},"children":[{"name":"Handset","kind":16,"kindString":"Enumeration member","defaultValue":"\\"handset\\""},{"name":"Tablet","kind":16,"kindString":"Enumeration member","defaultValue":"\\"tablet\\""},{"name":"Unsupported","kind":16,"kindString":"Enumeration member","defaultValue":"\\"unsupported\\""}]},{"name":"WebManifest","kind":16777216,"kindString":"Reference"},{"name":"WebManifest","kind":256,"kindString":"Interface","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}]}')},lgSD:function(e){e.exports=JSON.parse('{"name":"expo-navigation-bar","kind":1,"kindString":"Project","originalName":"","children":[{"name":"NavigationBarBehavior","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Interaction behavior for the system navigation bar."},"type":{"type":"union","types":[{"type":"literal","value":"overlay-swipe"},{"type":"literal","value":"inset-swipe"},{"type":"literal","value":"inset-touch"}]}},{"name":"NavigationBarButtonStyle","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Appearance of the foreground elements in the navigation bar, i.e. the color of the menu, back, home button icons.","text":"- `dark` makes buttons **darker** to adjust for a mostly light nav bar.\\n- `light` makes buttons **lighter** to adjust for a mostly dark nav bar.\\n"},"type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"}]}},{"name":"NavigationBarPosition","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Navigation bar positional mode."},"type":{"type":"union","types":[{"type":"literal","value":"relative"},{"type":"literal","value":"absolute"}]}},{"name":"NavigationBarVisibility","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Visibility of the navigation bar."},"type":{"type":"union","types":[{"type":"literal","value":"visible"},{"type":"literal","value":"hidden"}]}},{"name":"NavigationBarVisibilityEvent","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Current system UI visibility state. Due to platform constraints, this will return when the status bar visibility changes as well as the navigation bar."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"rawVisibility","kind":1024,"kindString":"Property","comment":{"shortText":"Native Android system UI visibility state, returned from the native Android `setOnSystemUiVisibilityChangeListener` API."},"type":{"type":"intrinsic","name":"number"}},{"name":"visibility","kind":1024,"kindString":"Property","comment":{"shortText":"Current navigation bar visibility."},"type":{"type":"reference","name":"NavigationBarVisibility"}}]}}},{"name":"addVisibilityListener","kind":64,"kindString":"Function","signatures":[{"name":"addVisibilityListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Observe changes to the system navigation bar.\\nDue to platform constraints, this callback will also be triggered when the status bar visibility changes.","tags":[{"tag":"example","text":"\\n```ts\\nNavigationBar.addVisibilityListener(({ visibility }) => {\\n  // ...\\n});\\n```\\n"}]},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"NavigationBarVisibilityEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getBackgroundColorAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBackgroundColorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the navigation bar\'s background color.","returns":"Current navigation bar color in hex format. Returns `#00000000` (transparent) on unsupported platforms (iOS, web).\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst color = await NavigationBar.getBackgroundColorAsync();\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ColorValue"}],"name":"Promise"}}]},{"name":"getBehaviorAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBehaviorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the behavior of the status and navigation bars when the user swipes or touches the screen.","returns":"Navigation bar interaction behavior. Returns `inset-touch` on unsupported platforms (iOS, web).\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait NavigationBar.getBehaviorAsync()\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"NavigationBarBehavior"}],"name":"Promise"}}]},{"name":"getBorderColorAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBorderColorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the navigation bar\'s top border color, also known as the \\"divider color\\".","returns":"Navigation bar top border color in hex format. Returns `#00000000` (transparent) on unsupported platforms (iOS, web).\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst color = await NavigationBar.getBorderColorAsync();\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ColorValue"}],"name":"Promise"}}]},{"name":"getButtonStyleAsync","kind":64,"kindString":"Function","signatures":[{"name":"getButtonStyleAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the navigation bar\'s button color styles.","returns":"Navigation bar foreground element color settings. Returns `light` on unsupported platforms (iOS, web).\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst style = await NavigationBar.getButtonStyleAsync();\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"NavigationBarButtonStyle"}],"name":"Promise"}}]},{"name":"getVisibilityAsync","kind":64,"kindString":"Function","signatures":[{"name":"getVisibilityAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the navigation bar\'s visibility.","returns":"Navigation bar\'s current visibility status. Returns `hidden` on unsupported platforms (iOS, web).\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst visibility = await NavigationBar.getVisibilityAsync(\\"hidden\\");\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"NavigationBarVisibility"}],"name":"Promise"}}]},{"name":"setBackgroundColorAsync","kind":64,"kindString":"Function","signatures":[{"name":"setBackgroundColorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Changes the navigation bar\'s background color.","tags":[{"tag":"example","text":"\\n```ts\\nNavigationBar.setBackgroundColorAsync(\\"white\\");\\n```"}]},"parameters":[{"name":"color","kind":32768,"kindString":"Parameter","comment":{"shortText":"Any valid [CSS 3 (SVG) color](http://www.w3.org/TR/css3-color/#svg-color).\\n"},"type":{"type":"reference","name":"ColorValue"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setBehaviorAsync","kind":64,"kindString":"Function","signatures":[{"name":"setBehaviorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the behavior of the status bar and navigation bar when they are hidden and the user wants to reveal them.","text":"For example, if the navigation bar is hidden (`setVisibilityAsync(false)`) and the behavior\\nis `\'overlay-swipe\'`, the user can swipe from the bottom of the screen to temporarily reveal the navigation bar.\\n\\n- `\'overlay-swipe\'`: Temporarily reveals the System UI after a swipe gesture (bottom or top) without insetting your App\'s content.\\n- `\'inset-swipe\'`: Reveals the System UI after a swipe gesture (bottom or top) and insets your App\'s content (Safe Area). The System UI is visible until you explicitly hide it again.\\n- `\'inset-touch\'`: Reveals the System UI after a touch anywhere on the screen and insets your App\'s content (Safe Area). The System UI is visible until you explicitly hide it again.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait NavigationBar.setBehaviorAsync(\'overlay-swipe\')\\n```"}]},"parameters":[{"name":"behavior","kind":32768,"kindString":"Parameter","comment":{"shortText":"Dictates the interaction behavior of the navigation bar.\\n"},"type":{"type":"reference","name":"NavigationBarBehavior"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setBorderColorAsync","kind":64,"kindString":"Function","signatures":[{"name":"setBorderColorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Changes the navigation bar\'s border color.","tags":[{"tag":"example","text":"\\n```ts\\nNavigationBar.setBorderColorAsync(\\"red\\");\\n```"}]},"parameters":[{"name":"color","kind":32768,"kindString":"Parameter","comment":{"shortText":"Any valid [CSS 3 (SVG) color](http://www.w3.org/TR/css3-color/#svg-color).\\n"},"type":{"type":"reference","name":"ColorValue"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setButtonStyleAsync","kind":64,"kindString":"Function","signatures":[{"name":"setButtonStyleAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Changes the navigation bar\'s button colors between white (`light`) and a dark gray color (`dark`).","tags":[{"tag":"example","text":"\\n```ts\\nNavigationBar.setButtonStyleAsync(\\"light\\");\\n```"}]},"parameters":[{"name":"style","kind":32768,"kindString":"Parameter","comment":{"shortText":"Dictates the color of the foreground element color.\\n"},"type":{"type":"reference","name":"NavigationBarButtonStyle"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setPositionAsync","kind":64,"kindString":"Function","signatures":[{"name":"setPositionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets positioning method used for the navigation bar (and status bar).\\nSetting position `absolute` will float the navigation bar above the content,\\nwhereas position `relative` will shrink the screen to inline the navigation bar.","text":"When drawing behind the status and navigation bars, ensure the safe area insets are adjusted accordingly.\\n","tags":[{"tag":"example","text":"\\n```ts\\n// enables edge-to-edge mode\\nawait NavigationBar.setPositionAsync(\'absolute\')\\n// transparent backgrounds to see through\\nawait NavigationBar.setBackgroundColorAsync(\'#ffffff00\')\\n```"}]},"parameters":[{"name":"position","kind":32768,"kindString":"Parameter","comment":{"shortText":"Based on CSS position property.\\n"},"type":{"type":"reference","name":"NavigationBarPosition"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setVisibilityAsync","kind":64,"kindString":"Function","signatures":[{"name":"setVisibilityAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Set the navigation bar\'s visibility.","tags":[{"tag":"example","text":"\\n```ts\\nNavigationBar.setVisibilityAsync(\\"hidden\\");\\n```"}]},"parameters":[{"name":"visibility","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"NavigationBarVisibility"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"unstable_getPositionAsync","kind":64,"kindString":"Function","signatures":[{"name":"unstable_getPositionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Whether the navigation and status bars float above the app (absolute) or sit inline with it (relative).\\nThis value can be incorrect if `androidNavigationBar.visible` is used instead of the config plugin `position` property.","text":"This method is unstable because the position can be set via another native module and get out of sync.\\nAlternatively, you can get the position by measuring the insets returned by `react-native-safe-area-context`.\\n","returns":"Navigation bar positional rendering mode. Returns `relative` on unsupported platforms (iOS, web).\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait NavigationBar.unstable_getPositionAsync()\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"NavigationBarPosition"}],"name":"Promise"}}]},{"name":"useVisibility","kind":64,"kindString":"Function","signatures":[{"name":"useVisibility","kind":4096,"kindString":"Call signature","comment":{"shortText":"React hook that statefully updates with the visibility of the system navigation bar.","returns":"Visibility of the navigation bar, `null` during async initialization.\\n","tags":[{"tag":"example","text":"\\n```ts\\nfunction App() {\\n  const visibility = NavigationBar.useVisibility()\\n  // React Component...\\n}\\n```"}]},"type":{"type":"union","types":[{"type":"reference","name":"NavigationBarVisibility"},{"type":"literal","value":null}]}}]}]}')},ljYj:function(e,w,n){"use strict";var c=n("rm/B"),p=c(/\d/);e.exports=p},loKZ:function(e){e.exports=JSON.parse('{"name":"expo-camera","kind":1,"kindString":"Project","originalName":"","children":[{"name":"AutoFocus","kind":8,"kindString":"Enumeration","children":[{"name":"auto","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"web\\n"}]},"defaultValue":"\\"auto\\""},{"name":"off","kind":16,"kindString":"Enumeration member","defaultValue":"\\"off\\""},{"name":"on","kind":16,"kindString":"Enumeration member","defaultValue":"\\"on\\""},{"name":"singleShot","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"web\\n"}]},"defaultValue":"\\"singleShot\\""}]},{"name":"CameraType","kind":8,"kindString":"Enumeration","children":[{"name":"back","kind":16,"kindString":"Enumeration member","defaultValue":"\\"back\\""},{"name":"front","kind":16,"kindString":"Enumeration member","defaultValue":"\\"front\\""}]},{"name":"FlashMode","kind":8,"kindString":"Enumeration","children":[{"name":"auto","kind":16,"kindString":"Enumeration member","defaultValue":"\\"auto\\""},{"name":"off","kind":16,"kindString":"Enumeration member","defaultValue":"\\"off\\""},{"name":"on","kind":16,"kindString":"Enumeration member","defaultValue":"\\"on\\""},{"name":"torch","kind":16,"kindString":"Enumeration member","defaultValue":"\\"torch\\""}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"VideoCodec","kind":8,"kindString":"Enumeration","comment":{"shortText":"This option specifies what codec to use when recording a video.","tags":[{"tag":"platform","text":"ios\\n"}]},"children":[{"name":"AppleProRes422","kind":16,"kindString":"Enumeration member","defaultValue":"\\"apcn\\""},{"name":"AppleProRes4444","kind":16,"kindString":"Enumeration member","defaultValue":"\\"ap4h\\""},{"name":"H264","kind":16,"kindString":"Enumeration member","defaultValue":"\\"avc1\\""},{"name":"HEVC","kind":16,"kindString":"Enumeration member","defaultValue":"\\"hvc1\\""},{"name":"JPEG","kind":16,"kindString":"Enumeration member","defaultValue":"\\"jpeg\\""}]},{"name":"VideoQuality","kind":8,"kindString":"Enumeration","children":[{"name":"1080p","kind":16,"kindString":"Enumeration member","defaultValue":"\\"1080p\\""},{"name":"2160p","kind":16,"kindString":"Enumeration member","defaultValue":"\\"2160p\\""},{"name":"480p","kind":16,"kindString":"Enumeration member","defaultValue":"\\"480p\\""},{"name":"4:3","kind":16,"kindString":"Enumeration member","defaultValue":"\\"4:3\\""},{"name":"720p","kind":16,"kindString":"Enumeration member","defaultValue":"\\"720p\\""}]},{"name":"VideoStabilization","kind":8,"kindString":"Enumeration","children":[{"name":"auto","kind":16,"kindString":"Enumeration member","defaultValue":"\\"auto\\""},{"name":"cinematic","kind":16,"kindString":"Enumeration member","defaultValue":"\\"cinematic\\""},{"name":"off","kind":16,"kindString":"Enumeration member","defaultValue":"\\"off\\""},{"name":"standard","kind":16,"kindString":"Enumeration member","defaultValue":"\\"standard\\""}]},{"name":"WhiteBalance","kind":8,"kindString":"Enumeration","children":[{"name":"auto","kind":16,"kindString":"Enumeration member","defaultValue":"\\"auto\\""},{"name":"cloudy","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"cloudy\\""},{"name":"continuous","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"web\\n"}]},"defaultValue":"\\"continuous\\""},{"name":"fluorescent","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"fluorescent\\""},{"name":"incandescent","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"incandescent\\""},{"name":"manual","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"web\\n"}]},"defaultValue":"\\"manual\\""},{"name":"shadow","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"shadow\\""},{"name":"sunny","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"sunny\\""}]},{"name":"Camera","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new Camera","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"reference","name":"CameraProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}]}}],"type":{"type":"reference","name":"default"},"inheritedFrom":{"type":"reference","name":"React.Component<CameraProps>.constructor"}},{"name":"new Camera","kind":16384,"kindString":"Constructor signature","comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"CameraProps"}},{"name":"context","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"default"},"inheritedFrom":{"type":"reference","name":"React.Component<CameraProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<CameraProps>.constructor"}},{"name":"_cameraHandle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"number"}]}},{"name":"_cameraRef","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}},{"type":"intrinsic","name":"any"}],"qualifiedName":"React.Component","package":"@types/react","name":"Component"}]}},{"name":"_lastEvents","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"eventName","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}},"defaultValue":"{}"},{"name":"_lastEventsTimes","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"eventName","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}}}},"defaultValue":"{}"},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","qualifiedName":"React.ReactNode","package":"@types/react","name":"ReactNode"}}]}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","qualifiedName":"React.ReactInstance","package":"@types/react","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"Constants","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reference","name":"ConstantsType"},"defaultValue":"..."},{"name":"ConversionTables","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoFocus","kind":1024,"kindString":"Property","type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":"on"},{"type":"literal","value":"off"},{"type":"literal","value":"auto"},{"type":"literal","value":"singleShot"}]},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"}]}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"name":"flashMode","kind":1024,"kindString":"Property","type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":"on"},{"type":"literal","value":"off"},{"type":"literal","value":"auto"},{"type":"literal","value":"torch"}]},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"name":"type","kind":1024,"kindString":"Property","type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":"front"},{"type":"literal","value":"back"}]},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"name":"whiteBalance","kind":1024,"kindString":"Property","type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":"auto"},{"type":"literal","value":"sunny"},{"type":"literal","value":"cloudy"},{"type":"literal","value":"shadow"},{"type":"literal","value":"incandescent"},{"type":"literal","value":"fluorescent"},{"type":"literal","value":"continuous"},{"type":"literal","value":"manual"}]},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"qualifiedName":"Record","package":"typescript","name":"Record"}}]}},"defaultValue":"ConversionTables"},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"React.Context","package":"@types/react","name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"defaultProps","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reference","name":"CameraProps"},"defaultValue":"..."},{"name":"useCameraPermissions","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a new permission hook with the permission methods built-in.\\nThis can be used to quickly create specific permission hooks in every module.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Camera.useCameraPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}},"defaultValue":"..."},{"name":"useMicrophonePermissions","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a new permission hook with the permission methods built-in.\\nThis can be used to quickly create specific permission hooks in every module.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Camera.useMicrophonePermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}},"defaultValue":"..."},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"_onCameraReady","kind":2048,"kindString":"Method","signatures":[{"name":"_onCameraReady","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]},{"name":"_onMountError","kind":2048,"kindString":"Method","signatures":[{"name":"_onMountError","kind":4096,"kindString":"Call signature","parameters":[{"name":"__namedParameters","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"message","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"_onObjectDetected","kind":2048,"kindString":"Method","signatures":[{"name":"_onObjectDetected","kind":4096,"kindString":"Call signature","parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","qualifiedName":"Function","package":"typescript","name":"Function"}}],"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"__namedParameters","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}]},{"name":"_setReference","kind":2048,"kindString":"Method","signatures":[{"name":"_setReference","kind":4096,"kindString":"Call signature","parameters":[{"name":"ref","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}},{"type":"intrinsic","name":"any"}],"qualifiedName":"React.Component","package":"@types/react","name":"Component"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","qualifiedName":"React.ErrorInfo","package":"@types/react","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getAvailablePictureSizesAsync","kind":2048,"kindString":"Method","signatures":[{"name":"getAvailablePictureSizesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get picture sizes that are supported by the device for given `ratio`.","returns":"Returns a Promise that resolves to an array of strings representing picture sizes that can be passed to `pictureSize` prop.\\nThe list varies across Android devices but is the same for every iOS.\\n"},"parameters":[{"name":"ratio","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"A string representing aspect ratio of sizes to be returned."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"getSupportedRatiosAsync","kind":2048,"kindString":"Method","signatures":[{"name":"getSupportedRatiosAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get aspect ratios that are supported by the device and can be passed via `ratio` prop.","returns":"Returns a Promise that resolves to an array of strings representing ratios, eg. `[\'4:3\', \'1:1\']`.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"pausePreview","kind":2048,"kindString":"Method","signatures":[{"name":"pausePreview","kind":4096,"kindString":"Call signature","comment":{"shortText":"Pauses the camera preview. It is not recommended to use `takePictureAsync` when preview is paused."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"recordAsync","kind":2048,"kindString":"Method","signatures":[{"name":"recordAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Starts recording a video that will be saved to cache directory. Videos are rotated to match device\'s orientation.\\nFlipping camera during a recording results in stopping it.","returns":"Returns a Promise that resolves to an object containing video file `uri` property and a `codec` property on iOS.\\nThe Promise is returned if `stopRecording` was invoked, one of `maxDuration` and `maxFileSize` is reached or camera preview is stopped.","tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"A map of `CameraRecordingOptions` type."},"type":{"type":"reference","name":"CameraRecordingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"uri","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"render","kind":2048,"kindString":"Method","signatures":[{"name":"render","kind":4096,"kindString":"Call signature","type":{"type":"reference","qualifiedName":"global.JSX.Element","package":"@types/react","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"resumePreview","kind":2048,"kindString":"Method","signatures":[{"name":"resumePreview","kind":4096,"kindString":"Call signature","comment":{"shortText":"Resumes the camera preview."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","qualifiedName":"K","package":"@types/react","name":"K"}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","qualifiedName":"K","package":"@types/react","name":"K"}],"qualifiedName":"Pick","package":"typescript","name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"qualifiedName":"Readonly","package":"typescript","name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}},{"name":"stopRecording","kind":2048,"kindString":"Method","signatures":[{"name":"stopRecording","kind":4096,"kindString":"Call signature","comment":{"shortText":"Stops recording if any is in progress."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"takePictureAsync","kind":2048,"kindString":"Method","signatures":[{"name":"takePictureAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Takes a picture and saves it to app\'s cache directory. Photos are rotated to match device\'s orientation\\n(if `options.skipProcessing` flag is not enabled) and scaled to match the preview. Anyway on Android it is essential\\nto set ratio prop to get a picture with correct dimensions.\\n> **Note**: Make sure to wait for the [`onCameraReady`](#oncameraready) callback before calling this method.","returns":"Returns a Promise that resolves to `CameraCapturedPicture` object, where `uri` is a URI to the local image file on iOS,\\nAndroid, and a base64 string on web (usable as the source for an `Image` element). The `width` and `height` properties specify\\nthe dimensions of the image. `base64` is included if the `base64` option was truthy, and is a string containing the JPEG data\\nof the image in Base64--prepend that with `\'data:image/jpg;base64,\'` to get a data URI, which you can use as the source\\nfor an `Image` element for example. `exif` is included if the `exif` option was truthy, and is an object containing EXIF\\ndata for the image--the names of its properties are EXIF tags and their values are the values for those tags.\\n\\n> On native platforms, the local image URI is temporary. Use [`FileSystem.copyAsync`](filesystem.md#filesystemcopyasyncoptions)\\n> to make a permanent copy of the image.\\n\\n> On web, the `uri` is a base64 representation of the image because file system URLs are not supported in the browser.\\n> The `exif` data returned on web is a partial representation of the [`MediaTrackSettings`](https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings),\\n> if available.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"An object in form of `CameraPictureOptions` type."},"type":{"type":"reference","name":"CameraPictureOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraCapturedPicture"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getAvailableCameraTypesAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"getAvailableCameraTypesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a list of camera types `[\'front\', \'back\']`. This is useful for desktop browsers which only have front-facing cameras.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"CameraType"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getAvailableVideoCodecsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"getAvailableVideoCodecsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Queries the device for the available video codecs that can be used in video recording.","returns":"A promise that resolves to a list of strings that represents available codecs.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"VideoCodec"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getCameraPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"getCameraPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing camera.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getMicrophonePermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"getMicrophonePermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing microphone.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"Deprecated. Use `getCameraPermissionsAsync` or `getMicrophonePermissionsAsync` instead.\\nChecks user\'s permissions for accessing camera.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isAvailableAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check whether the current device has a camera. This is useful for web and simulators cases.\\nThis isn\'t influenced by the Permissions API (all platforms), or HTTP usage (in the browser).\\nYou will still need to check if the native permission has been accepted.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestCameraPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"requestCameraPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing camera.\\nOn iOS this will require apps to specify an `NSCameraUsageDescription` entry in the **Info.plist**.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestMicrophonePermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"requestMicrophonePermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing the microphone.\\nOn iOS this will require apps to specify an `NSMicrophoneUsageDescription` entry in the **Info.plist**.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing camera.\\nOn iOS this will require apps to specify both `NSCameraUsageDescription` and `NSMicrophoneUsageDescription` entries in the **Info.plist**.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).","tags":[{"tag":"deprecated","text":"Use `requestCameraPermissionsAsync` or `requestMicrophonePermissionsAsync` instead.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"qualifiedName":"React.Component","package":"@types/react","name":"Component"}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"BarCodePoint","kind":4194304,"kindString":"Type alias","type":{"type":"reference","name":"Point"}},{"name":"BarCodeScanningResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"cornerPoints","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Corner points of the bounding box."},"type":{"type":"array","elementType":{"type":"reference","name":"BarCodePoint"}}},{"name":"data","kind":1024,"kindString":"Property","comment":{"shortText":"The information encoded in the bar code."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"The barcode type."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"CameraCapturedPicture","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"exif","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"MediaTrackSettings","package":"typescript","name":"MediaTrackSettings"}],"qualifiedName":"Partial","package":"typescript","name":"Partial"},{"type":"intrinsic","name":"any"}]}},{"name":"height","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}},{"name":"CameraMountError","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"message","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"CameraNativeProps","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoFocus","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"number"}]}},{"name":"barCodeScannerEnabled","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"barCodeScannerSettings","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"BarCodeSettings"}},{"name":"faceDetectorEnabled","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"faceDetectorSettings","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"object"}},{"name":"flashMode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]}},{"name":"focusDepth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"onCameraReady","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"CameraReadyListener"}},{"name":"onMountError","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"MountErrorListener"}},{"name":"onPictureSaved","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"PictureSavedListener"}},{"name":"pictureSize","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"pointerEvents","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}},{"name":"poster","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"ratio","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"ref","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","qualifiedName":"Function","package":"typescript","name":"Function"}},{"name":"style","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]}},{"name":"useCamera2Api","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"whiteBalance","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]}},{"name":"zoom","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"onBarCodeScanned","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onBarCodeScanned","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"BarCodeScanningResult"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onFaceDetectionError","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onFaceDetectionError","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onFacesDetected","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onFacesDetected","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"FaceDetectionResult"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"CameraPictureOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to also include the image data in Base64 format."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"exif","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to also include the EXIF data for the image."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"imageType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"reference","name":"ImageType"}},{"name":"isImageMirror","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"quality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specify the quality of compression, from 0 to 1. 0 means compress for small size, 1 means compress for maximum quality."},"type":{"type":"intrinsic","name":"number"}},{"name":"scale","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"skipProcessing","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to `true`, camera skips orientation adjustment and returns an image straight from the device\'s camera.\\nIf enabled, `quality` option is discarded (processing pipeline is skipped as a whole).\\nAlthough enabling this option reduces image delivery time significantly, it may cause the image to appear in a wrong orientation\\nin the `Image` component (at the time of writing, it does not respect EXIF orientation of the images).\\n> **Note**: Enabling `skipProcessing` would cause orientation uncertainty. `Image` component does not respect EXIF\\n> stored orientation information, that means obtained image would be displayed wrongly (rotated by 90\xB0, 180\xB0 or 270\xB0).\\n> Different devices provide different orientations. For example some Sony Xperia or Samsung devices don\'t provide\\n> correctly oriented images by default. To always obtain correctly oriented image disable `skipProcessing` option."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"onPictureSaved","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onPictureSaved","kind":4096,"kindString":"Call signature","comment":{"shortText":"A callback invoked when picture is saved. If set, the promise of this method will resolve immediately with no data after picture is captured.\\nThe data that it should contain will be passed to this callback. If displaying or processing a captured photo right after taking it\\nis not your case, this callback lets you skip waiting for it to be saved."},"parameters":[{"name":"picture","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"CameraCapturedPicture"}}],"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"CameraProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"ViewProps","package":"@types/react-native","name":"ViewProps"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoFocus","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"State of camera auto focus. Use one of [`Camera.Constants.AutoFocus`](#autofocus). When `on`,\\nauto focus will be enabled, when `off`, it won\'t and focus will lock as it was in the moment of change,\\nbut it can be adjusted on some devices via `focusDepth` prop."},"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"number"},{"type":"reference","name":"AutoFocus"}]}},{"name":"barCodeScannerSettings","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Settings exposed by [`BarCodeScanner`](bar-code-scanner) module. Supported settings: **barCodeTypes**.","tags":[{"tag":"example","text":"\\n```tsx\\n<Camera\\n  barCodeScannerSettings={{\\n    barCodeTypes: [BarCodeScanner.Constants.BarCodeType.qr],\\n  }}\\n/>\\n```\\n"}]},"type":{"type":"intrinsic","name":"object"}},{"name":"faceDetectorSettings","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A settings object passed directly to an underlying module providing face detection features.\\nSee [`DetectionOptions`](facedetector/#detectionoptions) in FaceDetector documentation for details."},"type":{"type":"intrinsic","name":"object"}},{"name":"flashMode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Camera flash mode. Use one of `Camera.Constants.FlashMode`. When `on`, the flash on your device will\\nturn on when taking a picture, when `off`, it won\'t. Setting to `auto` will fire flash if required,\\n`torch` turns on flash during the preview.","tags":[{"tag":"default","text":"FlashMode.off\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","name":"FlashMode"}]}},{"name":"focusDepth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Distance to plane of the sharpest focus. A value between `0` and `1` where: `0` - infinity focus, `1` - focus as close as possible.\\nFor Android this is available only for some devices and when `useCamera2Api` is set to `true`.","tags":[{"tag":"default","text":"0\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"pictureSize","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A string representing the size of pictures [`takePictureAsync`](#takepictureasync) will take.\\nAvailable sizes can be fetched with [`getAvailablePictureSizesAsync`](#getavailablepicturesizesasync)."},"type":{"type":"intrinsic","name":"string"}},{"name":"poster","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A URL for an image to be shown while the camera is loading.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"ratio","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A string representing aspect ratio of the preview, eg. `4:3`, `16:9`, `1:1`. To check if a ratio is supported\\nby the device use [`getSupportedRatiosAsync`](#getsupportedratiosasync).","tags":[{"tag":"default","text":"4:3."},{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Camera facing. Use one of `Camera.Constants.Type`. When `Type.front`, use the front-facing camera.\\nWhen `Type.back`, use the back-facing camera.","tags":[{"tag":"default","text":"Type.back\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","name":"CameraType"}]}},{"name":"useCamera2Api","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to use Android\'s Camera2 API. See `Note` at the top of this page.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"videoStabilizationMode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The video stabilization mode used for a video recording. Use one of [`Camera.Constants.VideoStabilization`](#videostabilization).\\nYou can read more about each stabilization type in [Apple Documentation](https://developer.apple.com/documentation/avfoundation/avcapturevideostabilizationmode).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"whiteBalance","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Camera white balance. Use one of [`Camera.Constants.WhiteBalance`](#whitebalance). If a device does not support any of these values previous one is used."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","name":"WhiteBalance"}]}},{"name":"zoom","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A value between `0` and `1` being a percentage of device\'s max zoom. `0` - not zoomed, `1` - maximum zoom.","tags":[{"tag":"default","text":"0\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"onBarCodeScanned","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onBarCodeScanned","kind":4096,"kindString":"Call signature","comment":{"shortText":"Callback that is invoked when a bar code has been successfully scanned. The callback is provided with\\nan object of the [`BarCodeScanningResult`](#barcodescanningresult) shape, where the `type`\\nrefers to the bar code type that was scanned and the `data` is the information encoded in the bar code\\n(in this case of QR codes, this is often a URL). See [`BarCodeScanner.Constants.BarCodeType`](bar-code-scanner#supported-formats)\\nfor supported values."},"parameters":[{"name":"scanningResult","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"BarCodeScanningResult"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onCameraReady","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onCameraReady","kind":4096,"kindString":"Call signature","comment":{"shortText":"Callback invoked when camera preview has been set."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"onFacesDetected","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onFacesDetected","kind":4096,"kindString":"Call signature","comment":{"shortText":"Callback invoked with results of face detection on the preview. See [FaceDetector documentation](facedetector/#detectionresult) for details."},"parameters":[{"name":"faces","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"FaceDetectionResult"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onMountError","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onMountError","kind":4096,"kindString":"Call signature","comment":{"shortText":"Callback invoked when camera preview could not been started."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","comment":{"shortText":"Error object that contains a `message`.\\n"},"type":{"type":"reference","name":"CameraMountError"}}],"type":{"type":"intrinsic","name":"void"}}]}]}}]}},{"name":"CameraRecordingOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"codec","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"This option specifies what codec to use when recording the video. See [`Camera.Constants.VideoCodec`](#video-codec) for the possible values.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"VideoCodec"}},{"name":"maxDuration","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum video duration in seconds."},"type":{"type":"intrinsic","name":"number"}},{"name":"maxFileSize","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum video file size in bytes."},"type":{"type":"intrinsic","name":"number"}},{"name":"mirror","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true`, the recorded video will be flipped along the vertical axis. iOS flips videos recorded with the front camera by default,\\nbut you can reverse that back by setting this to `true`. On Android, this is handled in the user\'s device settings.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"mute","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If present, video will be recorded with no sound."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"quality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specify the quality of recorded video. Usage: `Camera.Constants.VideoQuality.<value>`,\\npossible values: for 16:9 resolution `2160p`, `1080p`, `720p`, `480p` : `Android only` and for 4:3 `4:3` (the size is 640x480).\\nIf the chosen quality is not available for a device, the highest available is chosen."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]}},{"name":"videoBitrate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Only works if `useCamera2Api` is set to `true`. This option specifies a desired video bitrate. For example, `5*1000*1000` would be 5Mbps.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"ConstantsType","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"AutoFocus","kind":1024,"kindString":"Property","type":{"type":"reference","name":"AutoFocus"}},{"name":"FlashMode","kind":1024,"kindString":"Property","type":{"type":"reference","name":"FlashMode"}},{"name":"Type","kind":1024,"kindString":"Property","type":{"type":"reference","name":"CameraType"}},{"name":"VideoCodec","kind":1024,"kindString":"Property","type":{"type":"reference","name":"VideoCodec"}},{"name":"VideoQuality","kind":1024,"kindString":"Property","type":{"type":"reference","name":"VideoQuality"}},{"name":"VideoStabilization","kind":1024,"kindString":"Property","type":{"type":"reference","name":"VideoStabilization"}},{"name":"WhiteBalance","kind":1024,"kindString":"Property","type":{"type":"reference","name":"WhiteBalance"}}]}}},{"name":"FaceDetectionResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"faces","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"reference","name":"Face"}}}]}}},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"Point","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"x","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"y","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}},{"name":"Constants","kind":32,"kindString":"Variable","type":{"type":"reference","name":"ConstantsType"}},{"name":"getCameraPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCameraPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing camera.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getMicrophonePermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMicrophonePermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing microphone.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"Deprecated. Use `getCameraPermissionsAsync` or `getMicrophonePermissionsAsync` instead.\\nChecks user\'s permissions for accessing camera.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestCameraPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestCameraPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing camera.\\nOn iOS this will require apps to specify an `NSCameraUsageDescription` entry in the **Info.plist**.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestMicrophonePermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestMicrophonePermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing the microphone.\\nOn iOS this will require apps to specify an `NSMicrophoneUsageDescription` entry in the **Info.plist**.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing camera.\\nOn iOS this will require apps to specify both `NSCameraUsageDescription` and `NSMicrophoneUsageDescription` entries in the **Info.plist**.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).","tags":[{"tag":"deprecated","text":"Use `requestCameraPermissionsAsync` or `requestMicrophonePermissionsAsync` instead.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},mIr8:function(e,w,n){"use strict";e.exports=m;var c=n("vUGn"),p=n("2jS9"),d={}.hasOwnProperty;function a(i,o){return r(o)?i.augment(o,c("text",o.value)):i(o,"div",p(i,o))}function m(i,o,t){var l=o&&o.type,k;if(!l)throw new Error("Expected node, got `"+o+"`");return d.call(i.handlers,l)?k=i.handlers[l]:i.passThrough&&i.passThrough.indexOf(l)>-1?k=s:k=i.unknownHandler,(typeof k=="function"?k:a)(i,o,t)}function r(i){var o=i.data||{};return d.call(o,"hName")||d.call(o,"hProperties")||d.call(o,"hChildren")?!1:"value"in i}function s(i,o){var t;return o.children?(t=Object.assign({},o),t.children=p(i,o),t):o}},"mT/O":function(e){e.exports=JSON.parse('{"name":"expo-asset","kind":1,"originalName":"","children":[{"name":"Asset","kind":128,"kindString":"Class","comment":{"shortText":"The `Asset` class represents an asset in your app. It gives metadata about the asset (such as its\\nname and type) and provides facilities to load the asset data."},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new Asset","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"__namedParameters","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AssetDescriptor"}}],"type":{"type":"reference","name":"Asset"}}]},{"name":"downloaded","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"name":"downloading","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"name":"hash","kind":1024,"kindString":"Property","comment":{"shortText":"The MD5 hash of the asset\'s data."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"null"},{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"If the asset is an image, the height of the image data divided by the scale factor. The scale factor is the number after `@` in the filename, or `1` if not present."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"number"}]},"defaultValue":"null"},{"name":"localUri","kind":1024,"kindString":"Property","comment":{"shortText":"If the asset has been downloaded (by calling [`downloadAsync()`](#downloadasync)), the\\n`file://` URI pointing to the local file on the device that contains the asset data."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"null"},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"The name of the asset file without the extension. Also without the part from `@` onward in the\\nfilename (used to specify scale factor for images)."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"The extension of the asset filename."},"type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"A URI that points to the asset\'s data on the remote server. When running the published version\\nof your app, this refers to the location on Expo\'s asset server where Expo has stored your\\nasset. When running the app from Expo CLI during development, this URI points to Expo CLI\'s\\nserver running on your computer and the asset is served directly from your computer."},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"If the asset is an image, the width of the image data divided by the scale factor. The scale\\nfactor is the number after `@` in the filename, or `1` if not present."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"number"}]},"defaultValue":"null"},{"name":"downloadAsync","kind":2048,"kindString":"Method","signatures":[{"name":"downloadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Downloads the asset data to a local file in the device\'s cache directory. Once the returned\\npromise is fulfilled without error, the [`localUri`](#assetlocaluri) field of this asset points\\nto a local file containing the asset data. The asset is only downloaded if an up-to-date local\\nfile for the asset isn\'t already present due to an earlier download. The downloaded `Asset`\\nwill be returned when the promise is resolved.","returns":"Returns a Promise which fulfills with an `Asset` instance.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Asset"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"fromMetadata","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"fromMetadata","kind":4096,"kindString":"Call signature","parameters":[{"name":"meta","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AssetMetadata"}}],"type":{"type":"reference","name":"Asset"}}]},{"name":"fromModule","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"fromModule","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns the [`Asset`](#asset) instance representing an asset given its module or URL.","returns":"The [`Asset`](#asset) instance for the asset.\\n"},"parameters":[{"name":"virtualAssetModule","kind":32768,"kindString":"Parameter","comment":{"shortText":"The value of `require(\'path/to/file\')` for the asset or external\\nnetwork URL"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"reference","name":"Asset"}}]},{"name":"fromURI","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"fromURI","kind":4096,"kindString":"Call signature","parameters":[{"name":"uri","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Asset"}}]},{"name":"loadAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"loadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"A helper that wraps `Asset.fromModule(module).downloadAsync` for convenience.","returns":"Returns a Promise that fulfills with an array of `Asset`s when the asset(s) has been\\nsaved to disk.","tags":[{"tag":"example","text":"\\n```ts\\nconst [{ localUri }] = await Asset.loadAsync(require(\'./assets/snack-icon.png\'));\\n```\\n"}]},"parameters":[{"name":"moduleId","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of `require(\'path/to/file\')` or external network URLs. Can also be\\njust one module or URL without an Array."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Asset"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]},{"name":"AssetDescriptor","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"hash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"name","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}}]}}},{"name":"AssetMetadata","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"fileHashes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"fileUris","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"hash","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"httpServerLocation","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"name","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"scales","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"name":"type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"useAssets","kind":64,"kindString":"Function","signatures":[{"name":"useAssets","kind":4096,"kindString":"Call signature","comment":{"shortText":"Downloads and stores one or more assets locally.\\nAfter the assets are loaded, this hook returns a list of asset instances.\\nIf something went wrong when loading the assets, an error is returned.","text":"> Note, the assets are not \\"reloaded\\" when you dynamically change the asset list.\\n","returns":"Returns an array containing:\\n- on the first position, a list of all loaded assets. If they aren\'t loaded yet, this value is\\n  `undefined`.\\n- on the second position, an error which encountered when loading the assets. If there was no\\n  error, this value is `undefined`.\\n","tags":[{"tag":"example","text":"\\n```tsx\\nconst [assets, error] = useAssets([require(\'path/to/asset.jpg\'), require(\'path/to/other.png\')]);\\n\\nreturn assets ? <Image source={assets[0]} /> : null;\\n```\\n"}]},"parameters":[{"name":"moduleIds","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"Asset"}},{"type":"intrinsic","name":"undefined"}]},{"type":"union","types":[{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"},{"type":"intrinsic","name":"undefined"}]}]}}]}]}')},mXiA:function(e){e.exports=JSON.parse('{"name":"expo-face-detector","kind":1,"kindString":"Project","originalName":"","children":[{"name":"FaceDetectorClassifications","kind":8,"kindString":"Enumeration","children":[{"name":"all","kind":16,"kindString":"Enumeration member","defaultValue":"\\"all\\""},{"name":"none","kind":16,"kindString":"Enumeration member","defaultValue":"\\"none\\""}]},{"name":"FaceDetectorLandmarks","kind":8,"kindString":"Enumeration","children":[{"name":"all","kind":16,"kindString":"Enumeration member","defaultValue":"\\"all\\""},{"name":"none","kind":16,"kindString":"Enumeration member","defaultValue":"\\"none\\""}]},{"name":"FaceDetectorMode","kind":8,"kindString":"Enumeration","children":[{"name":"accurate","kind":16,"kindString":"Enumeration member","defaultValue":"\\"accurate\\""},{"name":"fast","kind":16,"kindString":"Enumeration member","defaultValue":"\\"fast\\""}]},{"name":"DetectionOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"In order to configure detector\'s behavior modules pass a settings object which is then\\ninterpreted by this module."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"detectLandmarks","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to detect and return landmarks positions on the face (ears, eyes, mouth, cheeks, nose).\\nUse `FaceDetector.FaceDetectorLandmarks.{all, none}`."},"type":{"type":"reference","name":"FaceDetectorLandmarks"}},{"name":"minDetectionInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Minimal interval in milliseconds between two face detection events being submitted to JS.\\nUse, when you expect lots of faces for long time and are afraid of JS Bridge being overloaded.","tags":[{"tag":"default","text":"`0`\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"mode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to detect faces in fast or accurate mode. Use `FaceDetector.FaceDetectorMode.{fast, accurate}`."},"type":{"type":"reference","name":"FaceDetectorMode"}},{"name":"runClassifications","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to run additional classifications on detected faces (smiling probability, open eye\\nprobabilities). Use `FaceDetector.FaceDetectorClassifications.{all, none}`."},"type":{"type":"reference","name":"FaceDetectorClassifications"}},{"name":"tracking","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Flag to enable tracking of faces between frames. If true, each face will be returned with\\n`faceID` attribute which should be consistent across frames.","tags":[{"tag":"default","text":"`false`\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"DetectionResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"faces","kind":1024,"kindString":"Property","comment":{"shortText":"Array of faces objects."},"type":{"type":"array","elementType":{"type":"reference","name":"FaceFeature"}}},{"name":"image","kind":1024,"kindString":"Property","type":{"type":"reference","name":"Image"}}]}}},{"name":"FaceFeature","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"bottomMouthPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the bottom edge of the mouth in image coordinates. Returned only if detection\\nclassifications property is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"bounds","kind":1024,"kindString":"Property","comment":{"shortText":"An object containing face bounds."},"type":{"type":"reference","name":"FaceFeatureBounds"}},{"name":"faceID","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A face identifier (used for tracking, if the same face appears on consecutive frames it will\\nhave the same `faceID`)."},"type":{"type":"intrinsic","name":"number"}},{"name":"leftCheekPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the left cheek in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"leftEarPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the left ear in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"leftEyeOpenProbability","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Probability that the left eye is open. Returned only if detection classifications property is\\nset to `FaceDetectorClassifications.all`."},"type":{"type":"intrinsic","name":"number"}},{"name":"leftEyePosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the left eye in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"leftMouthPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the left edge of the mouth in image coordinates. Returned only if detection\\nclassifications property is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"mouthPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the center of the mouth in image coordinates. Returned only if detection\\nclassifications property is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"noseBasePosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the nose base in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"rightCheekPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the right cheek in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"rightEarPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the right ear in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"rightEyeOpenProbability","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Probability that the right eye is open. Returned only if detection classifications property is\\nset to `FaceDetectorClassifications.all`."},"type":{"type":"intrinsic","name":"number"}},{"name":"rightEyePosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the right eye in image coordinates. Returned only if detection classifications\\nproperty is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"rightMouthPosition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Position of the right edge of the mouth in image coordinates. Returned only if detection\\nclassifications property is set to `FaceDetectorLandmarks.all`."},"type":{"type":"reference","name":"Point"}},{"name":"rollAngle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Roll angle of the face (bank)."},"type":{"type":"intrinsic","name":"number"}},{"name":"smilingProbability","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Probability that the face is smiling. Returned only if detection classifications property is\\nset to `FaceDetectorClassifications.all`."},"type":{"type":"intrinsic","name":"number"}},{"name":"yawAngle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Yaw angle of the face (heading, turning head left or right)."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"FaceFeatureBounds","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"origin","kind":1024,"kindString":"Property","comment":{"shortText":"Position of the top left corner of a square containing the face in image coordinates,"},"type":{"type":"reference","name":"Point"}},{"name":"size","kind":1024,"kindString":"Property","comment":{"shortText":"Size of the square containing the face in image coordinates,"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}}]}}},{"name":"Image","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"Height of the image in pixels."},"type":{"type":"intrinsic","name":"number"}},{"name":"orientation","kind":1024,"kindString":"Property","comment":{"shortText":"Orientation of the image (value conforms to the EXIF orientation tag standard)."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"URI of the image."},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"Width of the image in pixels."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"Point","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"x","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"y","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}},{"name":"detectFacesAsync","kind":64,"kindString":"Function","signatures":[{"name":"detectFacesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Detect faces on a picture.","returns":"Returns a Promise which fulfils with [`DetectionResult`](#detectionresult) object.\\n"},"parameters":[{"name":"uri","kind":32768,"kindString":"Parameter","comment":{"text":"`file://` URI to the image."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"A map of detection options."},"type":{"type":"reference","name":"DetectionOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DetectionResult"}],"name":"Promise"}}]}]}')},ma6P:function(e){e.exports=JSON.parse('{"name":"expo-intent-launcher","kind":1,"kindString":"Project","originalName":"","children":[{"name":"ActivityAction","kind":8,"kindString":"Enumeration","comment":{"shortText":"Constants are from the source code of [Settings provider](https://developer.android.com/reference/android/provider/Settings)."},"children":[{"name":"ACCESSIBILITY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ACCESSIBILITY_SETTINGS\\""},{"name":"ADD_ACCOUNT_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ADD_ACCOUNT_SETTINGS\\""},{"name":"AIRPLANE_MODE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.AIRPLANE_MODE_SETTINGS\\""},{"name":"APN_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APN_SETTINGS\\""},{"name":"APPLICATION_DETAILS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APPLICATION_DETAILS_SETTINGS\\""},{"name":"APPLICATION_DEVELOPMENT_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APPLICATION_DEVELOPMENT_SETTINGS\\""},{"name":"APPLICATION_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APPLICATION_SETTINGS\\""},{"name":"APP_NOTIFICATION_REDACTION","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ACTION_APP_NOTIFICATION_REDACTION\\""},{"name":"APP_NOTIFICATION_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APP_NOTIFICATION_SETTINGS\\""},{"name":"APP_OPS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APP_OPS_SETTINGS\\""},{"name":"BATTERY_SAVER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.BATTERY_SAVER_SETTINGS\\""},{"name":"BLUETOOTH_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.BLUETOOTH_SETTINGS\\""},{"name":"CAPTIONING_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.CAPTIONING_SETTINGS\\""},{"name":"CAST_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.CAST_SETTINGS\\""},{"name":"CONDITION_PROVIDER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ACTION_CONDITION_PROVIDER_SETTINGS\\""},{"name":"DATA_ROAMING_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DATA_ROAMING_SETTINGS\\""},{"name":"DATE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DATE_SETTINGS\\""},{"name":"DEVICE_INFO_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DEVICE_INFO_SETTINGS\\""},{"name":"DEVICE_NAME","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DEVICE_NAME\\""},{"name":"DISPLAY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DISPLAY_SETTINGS\\""},{"name":"DREAM_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DREAM_SETTINGS\\""},{"name":"HARD_KEYBOARD_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.HARD_KEYBOARD_SETTINGS\\""},{"name":"HOME_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.HOME_SETTINGS\\""},{"name":"IGNORE_BACKGROUND_DATA_RESTRICTIONS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.IGNORE_BACKGROUND_DATA_RESTRICTIONS_SETTINGS\\""},{"name":"IGNORE_BATTERY_OPTIMIZATION_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.IGNORE_BATTERY_OPTIMIZATION_SETTINGS\\""},{"name":"INPUT_METHOD_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.INPUT_METHOD_SETTINGS\\""},{"name":"INPUT_METHOD_SUBTYPE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.INPUT_METHOD_SUBTYPE_SETTINGS\\""},{"name":"INTERNAL_STORAGE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.INTERNAL_STORAGE_SETTINGS\\""},{"name":"LOCALE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.LOCALE_SETTINGS\\""},{"name":"LOCATION_SOURCE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.LOCATION_SOURCE_SETTINGS\\""},{"name":"MANAGE_ALL_APPLICATIONS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.MANAGE_ALL_APPLICATIONS_SETTINGS\\""},{"name":"MANAGE_APPLICATIONS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.MANAGE_APPLICATIONS_SETTINGS\\""},{"name":"MANAGE_DEFAULT_APPS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.MANAGE_DEFAULT_APPS_SETTINGS\\""},{"name":"MEMORY_CARD_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.MEMORY_CARD_SETTINGS\\""},{"name":"MONITORING_CERT_INFO","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.MONITORING_CERT_INFO\\""},{"name":"NETWORK_OPERATOR_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NETWORK_OPERATOR_SETTINGS\\""},{"name":"NFCSHARING_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NFCSHARING_SETTINGS\\""},{"name":"NFC_PAYMENT_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NFC_PAYMENT_SETTINGS\\""},{"name":"NFC_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NFC_SETTINGS\\""},{"name":"NIGHT_DISPLAY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NIGHT_DISPLAY_SETTINGS\\""},{"name":"NOTIFICATION_LISTENER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ACTION_NOTIFICATION_LISTENER_SETTINGS\\""},{"name":"NOTIFICATION_POLICY_ACCESS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NOTIFICATION_POLICY_ACCESS_SETTINGS\\""},{"name":"NOTIFICATION_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NOTIFICATION_SETTINGS\\""},{"name":"PAIRING_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.PAIRING_SETTINGS\\""},{"name":"PRINT_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ACTION_PRINT_SETTINGS\\""},{"name":"PRIVACY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.PRIVACY_SETTINGS\\""},{"name":"QUICK_LAUNCH_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.QUICK_LAUNCH_SETTINGS\\""},{"name":"REQUEST_IGNORE_BATTERY_OPTIMIZATIONS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS\\""},{"name":"SECURITY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SECURITY_SETTINGS\\""},{"name":"SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SETTINGS\\""},{"name":"SHOW_ADMIN_SUPPORT_DETAILS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SHOW_ADMIN_SUPPORT_DETAILS\\""},{"name":"SHOW_INPUT_METHOD_PICKER","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SHOW_INPUT_METHOD_PICKER\\""},{"name":"SHOW_REGULATORY_INFO","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SHOW_REGULATORY_INFO\\""},{"name":"SHOW_REMOTE_BUGREPORT_DIALOG","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SHOW_REMOTE_BUGREPORT_DIALOG\\""},{"name":"SOUND_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SOUND_SETTINGS\\""},{"name":"STORAGE_MANAGER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.STORAGE_MANAGER_SETTINGS\\""},{"name":"SYNC_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SYNC_SETTINGS\\""},{"name":"SYSTEM_UPDATE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SYSTEM_UPDATE_SETTINGS\\""},{"name":"TETHER_PROVISIONING_UI","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.TETHER_PROVISIONING_UI\\""},{"name":"TRUSTED_CREDENTIALS_USER","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.TRUSTED_CREDENTIALS_USER\\""},{"name":"USAGE_ACCESS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.USAGE_ACCESS_SETTINGS\\""},{"name":"USER_DICTIONARY_INSERT","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.USER_DICTIONARY_INSERT\\""},{"name":"USER_DICTIONARY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.USER_DICTIONARY_SETTINGS\\""},{"name":"USER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.USER_SETTINGS\\""},{"name":"VOICE_CONTROL_AIRPLANE_MODE","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VOICE_CONTROL_AIRPLANE_MODE\\""},{"name":"VOICE_CONTROL_BATTERY_SAVER_MODE","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VOICE_CONTROL_BATTERY_SAVER_MODE\\""},{"name":"VOICE_CONTROL_DO_NOT_DISTURB_MODE","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VOICE_CONTROL_DO_NOT_DISTURB_MODE\\""},{"name":"VOICE_INPUT_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VOICE_INPUT_SETTINGS\\""},{"name":"VPN_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VPN_SETTINGS\\""},{"name":"VR_LISTENER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VR_LISTENER_SETTINGS\\""},{"name":"WEBVIEW_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.WEBVIEW_SETTINGS\\""},{"name":"WIFI_IP_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.WIFI_IP_SETTINGS\\""},{"name":"WIFI_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.WIFI_SETTINGS\\""},{"name":"WIRELESS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.WIRELESS_SETTINGS\\""},{"name":"ZEN_MODE_AUTOMATION_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_AUTOMATION_SETTINGS\\""},{"name":"ZEN_MODE_EVENT_RULE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_EVENT_RULE_SETTINGS\\""},{"name":"ZEN_MODE_EXTERNAL_RULE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_EXTERNAL_RULE_SETTINGS\\""},{"name":"ZEN_MODE_PRIORITY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_PRIORITY_SETTINGS\\""},{"name":"ZEN_MODE_SCHEDULE_RULE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_SCHEDULE_RULE_SETTINGS\\""},{"name":"ZEN_MODE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_SETTINGS\\""}]},{"name":"ResultCode","kind":8,"kindString":"Enumeration","children":[{"name":"Canceled","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Means that the activity was canceled, e.g. by tapping on the back button."},"defaultValue":"0"},{"name":"FirstUser","kind":16,"kindString":"Enumeration member","comment":{"shortText":"First custom, user-defined value that can be returned by the activity."},"defaultValue":"1"},{"name":"Success","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates that the activity operation succeeded."},"defaultValue":"-1"}]},{"name":"IntentLauncherParams","kind":256,"kindString":"Interface","children":[{"name":"category","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Category provides more details about the action the intent performs. See [Intent.addCategory](https://developer.android.com/reference/android/content/Intent.html#addCategory(java.lang.String))."},"type":{"type":"intrinsic","name":"string"}},{"name":"className","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Class name of the ComponentName."},"type":{"type":"intrinsic","name":"string"}},{"name":"data","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A URI specifying the data that the intent should operate upon. (_Note:_ Android requires the URI\\nscheme to be lowercase, unlike the formal RFC.)"},"type":{"type":"intrinsic","name":"string"}},{"name":"extra","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A map specifying additional key-value pairs which are passed with the intent as `extras`.\\nThe keys must include a package prefix, for example the app `com.android.contacts` would use\\nnames like `com.android.contacts.ShowAll`."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"flags","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Bitmask of flags to be used. See [Intent.setFlags](<https://developer.android.com/reference/android/content/Intent.html#setFlags(int)>) for more details."},"type":{"type":"intrinsic","name":"number"}},{"name":"packageName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Package name used as an identifier of ComponentName. Set this only if you want to explicitly\\nset the component to handle the intent."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A string specifying the MIME type of the data represented by the data parameter. Ignore this\\nargument to allow Android to infer the correct MIME type."},"type":{"type":"intrinsic","name":"string"}}]},{"name":"IntentLauncherResult","kind":256,"kindString":"Interface","children":[{"name":"data","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Optional data URI that can be returned by the activity."},"type":{"type":"intrinsic","name":"string"}},{"name":"extra","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Optional extras object that can be returned by the activity."},"type":{"type":"intrinsic","name":"object"}},{"name":"resultCode","kind":1024,"kindString":"Property","comment":{"shortText":"Result code returned by the activity."},"type":{"type":"reference","name":"ResultCode"}}]},{"name":"startActivityAsync","kind":64,"kindString":"Function","signatures":[{"name":"startActivityAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Starts the specified activity. The method will return a promise which resolves when the user\\nreturns to the app.","returns":"A promise which fulfils with `IntentLauncherResult` object.\\n"},"parameters":[{"name":"activityAction","kind":32768,"kindString":"Parameter","comment":{"shortText":"The action to be performed, e.g. `IntentLauncher.ActivityAction.WIRELESS_SETTINGS`.\\nThere are a few pre-defined constants you can use for this parameter.\\nYou can find them at [expo-intent-launcher/src/IntentLauncher.ts](https://github.com/expo/expo/blob/main/packages/expo-intent-launcher/src/IntentLauncher.ts)."},"type":{"type":"intrinsic","name":"string"}},{"name":"params","kind":32768,"kindString":"Parameter","comment":{"shortText":"An object of intent parameters."},"type":{"type":"reference","name":"IntentLauncherParams"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"IntentLauncherResult"}],"name":"Promise"}}]}]}')},mfAU:function(e){e.exports=JSON.parse('{"name":"expo-screen-capture","kind":1,"kindString":"Project","originalName":"","children":[{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"addScreenshotListener","kind":64,"kindString":"Function","signatures":[{"name":"addScreenshotListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Adds a listener that will fire whenever the user takes a screenshot while the app is foregrounded.\\nOn Android, this method requires the `READ_EXTERNAL_STORAGE` permission. You can request this\\nwith [`MediaLibrary.requestPermissionsAsync()`](../media-library/#medialibraryrequestpermissionsasync).","returns":"A `Subscription` object that you can use to unregister the listener, either by calling\\n`remove()` or passing it to `removeScreenshotListener`.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"text":"The function that will be executed when the user takes a screenshot.\\nThis function accepts no arguments.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"allowScreenCaptureAsync","kind":64,"kindString":"Function","signatures":[{"name":"allowScreenCaptureAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Re-allows the user to screen record or screenshot your app. If you haven\'t called\\n`preventScreenCapture()` yet, this method does nothing."},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"text":"This will prevent multiple instances of the `preventScreenCaptureAsync` and\\n`allowScreenCaptureAsync` methods from conflicting with each other. If provided, the value must\\nbe the same as the key passed to `preventScreenCaptureAsync` in order to re-enable screen\\ncapturing. Defaults to \'default\'.\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'default\'"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the Screen Capture API is available on the current device.","returns":"A promise that resolves to a `boolean` indicating whether the Screen Capture API is available on the current\\ndevice. Currently, this resolves to `true` on Android and iOS only.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"preventScreenCaptureAsync","kind":64,"kindString":"Function","signatures":[{"name":"preventScreenCaptureAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prevents screenshots and screen recordings until `allowScreenCaptureAsync` is called or the app is restarted. If you are\\nalready preventing screen capture, this method does nothing (unless you pass a new and unique `key`).","text":"> Please note that on iOS, this will only prevent screen recordings, and is only available on\\niOS 11 and newer. On older iOS versions, this method does nothing.\\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"text":"Optional. If provided, this will help prevent multiple instances of the `preventScreenCaptureAsync`\\nand `allowScreenCaptureAsync` methods (and `usePreventScreenCapture` hook) from conflicting with each other.\\nWhen using multiple keys, you\'ll have to re-allow each one in order to re-enable screen capturing.\\nDefaults to `\'default\'`.\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'default\'"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"removeScreenshotListener","kind":64,"kindString":"Function","signatures":[{"name":"removeScreenshotListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes the subscription you provide, so that you are no longer listening for screenshots.","text":"If you prefer, you can also call `remove()` on that `Subscription` object, for example:\\n\\n```ts\\nlet mySubscription = addScreenshotListener(() => {\\n  console.log(\\"You took a screenshot!\\");\\n});\\n...\\nmySubscription.remove();\\n// OR\\nremoveScreenshotListener(mySubscription);\\n```\\n"},"parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","comment":{"text":"Subscription returned by `addScreenshotListener`.\\n"},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"usePreventScreenCapture","kind":64,"kindString":"Function","signatures":[{"name":"usePreventScreenCapture","kind":4096,"kindString":"Call signature","comment":{"shortText":"A React hook to prevent screen capturing for as long as the owner component is mounted."},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'default\'"}],"type":{"type":"intrinsic","name":"void"}}]}]}')},mtsx:function(e){e.exports=JSON.parse('{"name":"expo-tracking-transparency","kind":1,"kindString":"Project","originalName":"","children":[{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"getTrackingPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getTrackingPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks whether or not the user has authorized the app to access app-related data that can be used\\nfor tracking the user or the device. See `requestTrackingPermissionsAsync` for more details.","text":"On Android, web, and iOS 13 and below, this method always returns that the permission was\\ngranted.\\n","tags":[{"tag":"example","text":"\\n```typescript\\nconst { granted } = await getTrackingPermissionsAsync();\\n\\nif (granted) {\\n  // Your app is authorized to track the user or their device\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"isAvailable","kind":64,"kindString":"Function","signatures":[{"name":"isAvailable","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the TrackingTransparency API is available on the current device.","returns":"Currently this is `true` on iOS 14 and above only. On devices where the\\nTracking Transparency API is unavailable, the get and request permissions methods will always\\nresolve to `granted`.\\n"},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"requestTrackingPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestTrackingPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Requests the user to authorize or deny access to app-related data that can be used for tracking\\nthe user or the device. Examples of data used for tracking include email address, device ID,\\nadvertising ID, etc. On iOS 14.5 and above, if the user denies this permission, any attempt to\\ncollect the IDFA will return a string of 0s.","text":"The system remembers the user\u2019s choice and doesn\u2019t prompt again unless a user uninstalls and then\\nreinstalls the app on the device.\\n\\nOn Android, web, and iOS 13 and below, this method always returns that the permission was\\ngranted.","tags":[{"tag":"example","text":"\\n```typescript\\nconst { granted } = await requestTrackingPermissionsAsync();\\n\\nif (granted) {\\n  // Your app is authorized to track the user or their device\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"useTrackingPermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"useTrackingPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request the user to authorize or deny access to app-related data that can be used for tracking\\nthe user or the device. Examples of data used for tracking include email address, device ID,\\nadvertising ID, etc. On iOS 14.5 and above, if the user denies this permission, any attempt to\\ncollect the IDFA will return a string of 0s.","text":"The system remembers the user\u2019s choice and doesn\u2019t prompt again unless a user uninstalls and then\\nreinstalls the app on the device.\\n\\nOn Android, web, and iOS 13 and below, this method always returns that the permission was\\ngranted.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = useTrackingPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}]}')},n06p:function(e){e.exports=JSON.parse('{"name":"expo-store-review","kind":1,"kindString":"Project","originalName":"","children":[{"name":"hasAction","kind":64,"kindString":"Function","signatures":[{"name":"hasAction","kind":4096,"kindString":"Call signature","comment":{"returns":"This returns a promise that fulfills to `true` if `StoreReview.requestReview()` is capable\\ndirecting the user to some kind of store review flow. If the app config (`app.json`) does not\\ncontain store URLs and native store review capabilities are not available then the promise\\nwill fulfill to `false`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nif (await StoreReview.hasAction()) {\\n  // you can call StoreReview.requestReview()\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determines if the platform has the capabilities to use `StoreReview.requestReview()`.","returns":"\\nThis returns a promise fulfills with `boolean`, depending on the platform:\\n- On iOS, it will resolve to `true` if the device is running iOS 10.3+.\\n- On Android, it will resolve to `true` if the device is running Android 5.0+.\\n- On Web, it will resolve to `false`.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"requestReview","kind":64,"kindString":"Function","signatures":[{"name":"requestReview","kind":4096,"kindString":"Call signature","comment":{"shortText":"In ideal circumstances this will open a native modal and allow the user to select a star rating\\nthat will then be applied to the App Store, without leaving the app. If the device is running\\na version of iOS lower than 10.3, or a version of Android lower than 5.0, this will attempt\\nto get the store URL and link the user to it."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"storeUrl","kind":64,"kindString":"Function","signatures":[{"name":"storeUrl","kind":4096,"kindString":"Call signature","comment":{"shortText":"This uses the `Constants` API to get the `Constants.manifest.ios.appStoreUrl` on iOS, or the\\n`Constants.manifest.android.playStoreUrl` on Android.","text":"On Web this will return `null`.\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}]}')},n3ED:function(e){e.exports=JSON.parse('{"name":"expo-intent-launcher","kind":1,"kindString":"Project","originalName":"","children":[{"name":"ActivityAction","kind":8,"kindString":"Enumeration","comment":{"shortText":"Constants are from the source code of [Settings provider](https://developer.android.com/reference/android/provider/Settings)."},"children":[{"name":"ACCESSIBILITY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ACCESSIBILITY_SETTINGS\\""},{"name":"ADD_ACCOUNT_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ADD_ACCOUNT_SETTINGS\\""},{"name":"AIRPLANE_MODE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.AIRPLANE_MODE_SETTINGS\\""},{"name":"APN_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APN_SETTINGS\\""},{"name":"APPLICATION_DETAILS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APPLICATION_DETAILS_SETTINGS\\""},{"name":"APPLICATION_DEVELOPMENT_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APPLICATION_DEVELOPMENT_SETTINGS\\""},{"name":"APPLICATION_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APPLICATION_SETTINGS\\""},{"name":"APP_NOTIFICATION_REDACTION","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ACTION_APP_NOTIFICATION_REDACTION\\""},{"name":"APP_NOTIFICATION_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APP_NOTIFICATION_SETTINGS\\""},{"name":"APP_OPS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.APP_OPS_SETTINGS\\""},{"name":"BATTERY_SAVER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.BATTERY_SAVER_SETTINGS\\""},{"name":"BLUETOOTH_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.BLUETOOTH_SETTINGS\\""},{"name":"CAPTIONING_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.CAPTIONING_SETTINGS\\""},{"name":"CAST_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.CAST_SETTINGS\\""},{"name":"CONDITION_PROVIDER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ACTION_CONDITION_PROVIDER_SETTINGS\\""},{"name":"DATA_ROAMING_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DATA_ROAMING_SETTINGS\\""},{"name":"DATE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DATE_SETTINGS\\""},{"name":"DEVICE_INFO_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DEVICE_INFO_SETTINGS\\""},{"name":"DEVICE_NAME","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DEVICE_NAME\\""},{"name":"DISPLAY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DISPLAY_SETTINGS\\""},{"name":"DREAM_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.DREAM_SETTINGS\\""},{"name":"HARD_KEYBOARD_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.HARD_KEYBOARD_SETTINGS\\""},{"name":"HOME_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.HOME_SETTINGS\\""},{"name":"IGNORE_BACKGROUND_DATA_RESTRICTIONS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.IGNORE_BACKGROUND_DATA_RESTRICTIONS_SETTINGS\\""},{"name":"IGNORE_BATTERY_OPTIMIZATION_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.IGNORE_BATTERY_OPTIMIZATION_SETTINGS\\""},{"name":"INPUT_METHOD_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.INPUT_METHOD_SETTINGS\\""},{"name":"INPUT_METHOD_SUBTYPE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.INPUT_METHOD_SUBTYPE_SETTINGS\\""},{"name":"INTERNAL_STORAGE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.INTERNAL_STORAGE_SETTINGS\\""},{"name":"LOCALE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.LOCALE_SETTINGS\\""},{"name":"LOCATION_SOURCE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.LOCATION_SOURCE_SETTINGS\\""},{"name":"MANAGE_ALL_APPLICATIONS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.MANAGE_ALL_APPLICATIONS_SETTINGS\\""},{"name":"MANAGE_APPLICATIONS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.MANAGE_APPLICATIONS_SETTINGS\\""},{"name":"MANAGE_DEFAULT_APPS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.MANAGE_DEFAULT_APPS_SETTINGS\\""},{"name":"MEMORY_CARD_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.MEMORY_CARD_SETTINGS\\""},{"name":"MONITORING_CERT_INFO","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.MONITORING_CERT_INFO\\""},{"name":"NETWORK_OPERATOR_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NETWORK_OPERATOR_SETTINGS\\""},{"name":"NFCSHARING_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NFCSHARING_SETTINGS\\""},{"name":"NFC_PAYMENT_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NFC_PAYMENT_SETTINGS\\""},{"name":"NFC_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NFC_SETTINGS\\""},{"name":"NIGHT_DISPLAY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NIGHT_DISPLAY_SETTINGS\\""},{"name":"NOTIFICATION_LISTENER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ACTION_NOTIFICATION_LISTENER_SETTINGS\\""},{"name":"NOTIFICATION_POLICY_ACCESS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NOTIFICATION_POLICY_ACCESS_SETTINGS\\""},{"name":"NOTIFICATION_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.NOTIFICATION_SETTINGS\\""},{"name":"PAIRING_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.PAIRING_SETTINGS\\""},{"name":"PRINT_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ACTION_PRINT_SETTINGS\\""},{"name":"PRIVACY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.PRIVACY_SETTINGS\\""},{"name":"QUICK_LAUNCH_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.QUICK_LAUNCH_SETTINGS\\""},{"name":"REQUEST_IGNORE_BATTERY_OPTIMIZATIONS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS\\""},{"name":"SECURITY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SECURITY_SETTINGS\\""},{"name":"SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SETTINGS\\""},{"name":"SHOW_ADMIN_SUPPORT_DETAILS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SHOW_ADMIN_SUPPORT_DETAILS\\""},{"name":"SHOW_INPUT_METHOD_PICKER","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SHOW_INPUT_METHOD_PICKER\\""},{"name":"SHOW_REGULATORY_INFO","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SHOW_REGULATORY_INFO\\""},{"name":"SHOW_REMOTE_BUGREPORT_DIALOG","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SHOW_REMOTE_BUGREPORT_DIALOG\\""},{"name":"SOUND_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SOUND_SETTINGS\\""},{"name":"STORAGE_MANAGER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.STORAGE_MANAGER_SETTINGS\\""},{"name":"SYNC_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SYNC_SETTINGS\\""},{"name":"SYSTEM_UPDATE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.SYSTEM_UPDATE_SETTINGS\\""},{"name":"TETHER_PROVISIONING_UI","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.TETHER_PROVISIONING_UI\\""},{"name":"TRUSTED_CREDENTIALS_USER","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.TRUSTED_CREDENTIALS_USER\\""},{"name":"USAGE_ACCESS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.USAGE_ACCESS_SETTINGS\\""},{"name":"USER_DICTIONARY_INSERT","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.USER_DICTIONARY_INSERT\\""},{"name":"USER_DICTIONARY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.USER_DICTIONARY_SETTINGS\\""},{"name":"USER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.USER_SETTINGS\\""},{"name":"VOICE_CONTROL_AIRPLANE_MODE","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VOICE_CONTROL_AIRPLANE_MODE\\""},{"name":"VOICE_CONTROL_BATTERY_SAVER_MODE","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VOICE_CONTROL_BATTERY_SAVER_MODE\\""},{"name":"VOICE_CONTROL_DO_NOT_DISTURB_MODE","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VOICE_CONTROL_DO_NOT_DISTURB_MODE\\""},{"name":"VOICE_INPUT_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VOICE_INPUT_SETTINGS\\""},{"name":"VPN_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VPN_SETTINGS\\""},{"name":"VR_LISTENER_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.VR_LISTENER_SETTINGS\\""},{"name":"WEBVIEW_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.WEBVIEW_SETTINGS\\""},{"name":"WIFI_IP_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.WIFI_IP_SETTINGS\\""},{"name":"WIFI_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.WIFI_SETTINGS\\""},{"name":"WIRELESS_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.WIRELESS_SETTINGS\\""},{"name":"ZEN_MODE_AUTOMATION_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_AUTOMATION_SETTINGS\\""},{"name":"ZEN_MODE_EVENT_RULE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_EVENT_RULE_SETTINGS\\""},{"name":"ZEN_MODE_EXTERNAL_RULE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_EXTERNAL_RULE_SETTINGS\\""},{"name":"ZEN_MODE_PRIORITY_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_PRIORITY_SETTINGS\\""},{"name":"ZEN_MODE_SCHEDULE_RULE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_SCHEDULE_RULE_SETTINGS\\""},{"name":"ZEN_MODE_SETTINGS","kind":16,"kindString":"Enumeration member","defaultValue":"\\"android.settings.ZEN_MODE_SETTINGS\\""}]},{"name":"ResultCode","kind":8,"kindString":"Enumeration","children":[{"name":"Canceled","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Means that the activity was canceled, e.g. by tapping on the back button."},"defaultValue":"0"},{"name":"FirstUser","kind":16,"kindString":"Enumeration member","comment":{"shortText":"First custom, user-defined value that can be returned by the activity."},"defaultValue":"1"},{"name":"Success","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates that the activity operation succeeded."},"defaultValue":"-1"}]},{"name":"IntentLauncherParams","kind":256,"kindString":"Interface","children":[{"name":"category","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Category provides more details about the action the intent performs. See [Intent.addCategory](https://developer.android.com/reference/android/content/Intent.html#addCategory(java.lang.String))."},"type":{"type":"intrinsic","name":"string"}},{"name":"className","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Class name of the ComponentName."},"type":{"type":"intrinsic","name":"string"}},{"name":"data","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A URI specifying the data that the intent should operate upon. (_Note:_ Android requires the URI\\nscheme to be lowercase, unlike the formal RFC.)"},"type":{"type":"intrinsic","name":"string"}},{"name":"extra","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A map specifying additional key-value pairs which are passed with the intent as `extras`.\\nThe keys must include a package prefix, for example the app `com.android.contacts` would use\\nnames like `com.android.contacts.ShowAll`."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"name":"flags","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Bitmask of flags to be used. See [Intent.setFlags](<https://developer.android.com/reference/android/content/Intent.html#setFlags(int)>) for more details."},"type":{"type":"intrinsic","name":"number"}},{"name":"packageName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Package name used as an identifier of ComponentName. Set this only if you want to explicitly\\nset the component to handle the intent."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A string specifying the MIME type of the data represented by the data parameter. Ignore this\\nargument to allow Android to infer the correct MIME type."},"type":{"type":"intrinsic","name":"string"}}]},{"name":"IntentLauncherResult","kind":256,"kindString":"Interface","children":[{"name":"data","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Optional data URI that can be returned by the activity."},"type":{"type":"intrinsic","name":"string"}},{"name":"extra","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Optional extras object that can be returned by the activity."},"type":{"type":"intrinsic","name":"object"}},{"name":"resultCode","kind":1024,"kindString":"Property","comment":{"shortText":"Result code returned by the activity."},"type":{"type":"reference","name":"ResultCode"}}]},{"name":"startActivityAsync","kind":64,"kindString":"Function","signatures":[{"name":"startActivityAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Starts the specified activity. The method will return a promise which resolves when the user\\nreturns to the app.","returns":"A promise which fulfils with `IntentLauncherResult` object.\\n"},"parameters":[{"name":"activityAction","kind":32768,"kindString":"Parameter","comment":{"shortText":"The action to be performed, e.g. `IntentLauncher.ActivityAction.WIRELESS_SETTINGS`.\\nThere are a few pre-defined constants you can use for this parameter.\\nYou can find them at [expo-intent-launcher/src/IntentLauncher.ts](https://github.com/expo/expo/blob/main/packages/expo-intent-launcher/src/IntentLauncher.ts)."},"type":{"type":"intrinsic","name":"string"}},{"name":"params","kind":32768,"kindString":"Parameter","comment":{"shortText":"An object of intent parameters."},"type":{"type":"reference","name":"IntentLauncherParams"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"IntentLauncherResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},nB7t:function(e){e.exports=JSON.parse('{"name":"expo-video-thumbnails","kind":1,"kindString":"Project","originalName":"","children":[{"name":"VideoThumbnailsOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"headers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"In case `sourceFilename` is a remote URI, `headers` object is passed in a network request."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record"}},{"name":"quality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A value in range `0.0` - `1.0` specifying quality level of the result image. `1` means no\\ncompression (highest quality) and `0` the highest compression (lowest quality)."},"type":{"type":"intrinsic","name":"number"}},{"name":"time","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The time position where the image will be retrieved in ms."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"VideoThumbnailsResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"Height of the created image."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"URI to the created image (usable as the source for an Image/Video element)."},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"Width of the created image."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"getThumbnailAsync","kind":64,"kindString":"Function","signatures":[{"name":"getThumbnailAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create an image thumbnail from video provided via `sourceFilename`.","returns":"Returns a promise which fulfils with [`VideoThumbnailsResult`](#videothumbnailsresult).\\n"},"parameters":[{"name":"sourceFilename","kind":32768,"kindString":"Parameter","comment":{"shortText":"An URI of the video, local or remote."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map defining how modified thumbnail should be created.\\n"},"type":{"type":"reference","name":"VideoThumbnailsOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoThumbnailsResult"}],"name":"Promise"}}]}]}')},nOHu:function(e){e.exports=JSON.parse('{"name":"expo-localization","kind":1,"kindString":"Project","originalName":"","children":[{"name":"Localization","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"currency","kind":1024,"kindString":"Property","comment":{"shortText":"Three-character ISO 4217 currency code. Returns `null` on web.","tags":[{"tag":"example","text":"`USD`, `EUR`, `CNY`, null\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"decimalSeparator","kind":1024,"kindString":"Property","comment":{"shortText":"Decimal separator used for formatting numbers.","tags":[{"tag":"example","text":"`,`, \'.\'\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"digitGroupingSeparator","kind":1024,"kindString":"Property","comment":{"shortText":"Digit grouping separator used when formatting numbers larger than 1000.","tags":[{"tag":"example","text":"`.`, \'\', \',\'\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"isMetric","kind":1024,"kindString":"Property","comment":{"shortText":"Boolean value that indicates whether the system uses the metric system.\\nOn Android and web, this is inferred from the current region."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isRTL","kind":1024,"kindString":"Property","comment":{"shortText":"Returns if the system\'s language is written from Right-to-Left.\\nThis can be used to build features like [bidirectional icons](https://material.io/design/usability/bidirectionality.html).","text":"Returns `false` in SSR environments.\\n"},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isoCurrencyCodes","kind":1024,"kindString":"Property","comment":{"shortText":"List of all the supported language ISO codes."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"locale","kind":1024,"kindString":"Property","comment":{"shortText":"An [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag),\\nconsisting of a two-character language code and optional script, region and variant codes.","tags":[{"tag":"example","text":"`en`, `en-US`, `zh-Hans`, `zh-Hans-CN`, `en-emodeng`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"locales","kind":1024,"kindString":"Property","comment":{"shortText":"List of all the languages provided by the user settings.\\nThese are returned in the order the user defines in their device settings.","tags":[{"tag":"example","text":"[`en`, `en-US`, `zh-Hans`, `zh-Hans-CN`, `en-emodeng`]\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"region","kind":1024,"kindString":"Property","comment":{"shortText":"The region code for your device that comes from the Region setting under Language & Region on iOS.\\nThis value is always available on iOS, but might return `null` on Android or web.","tags":[{"tag":"example","text":"`US`, `NZ`, null\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"timezone","kind":1024,"kindString":"Property","comment":{"shortText":"The current timezone in display format.\\nOn Web timezone is calculated with Intl.DateTimeFormat().resolvedOptions().timeZone. For a better estimation you could use the moment-timezone package but it will add significant bloat to your website\'s bundle size.","tags":[{"tag":"example","text":"`America/Los_Angeles`\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"currency","kind":32,"kindString":"Variable","comment":{"shortText":"Three-character ISO 4217 currency code. Returns `null` on web.","tags":[{"tag":"example","text":"`\'USD\'`, `\'EUR\'`, `\'CNY\'`, `null`\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"decimalSeparator","kind":32,"kindString":"Variable","comment":{"shortText":"Decimal separator used for formatting numbers.","tags":[{"tag":"example","text":"`\',\'`, `\'.\'`\\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"digitGroupingSeparator","kind":32,"kindString":"Variable","comment":{"shortText":"Digit grouping separator used when formatting numbers larger than 1000.","tags":[{"tag":"example","text":"`\'.\'`, `\'\'`, `\',\'`\\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"isMetric","kind":32,"kindString":"Variable","comment":{"shortText":"Boolean value that indicates whether the system uses the metric system.\\nOn Android and web, this is inferred from the current region."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"..."},{"name":"isRTL","kind":32,"kindString":"Variable","comment":{"shortText":"Returns if the system\'s language is written from Right-to-Left.\\nThis can be used to build features like [bidirectional icons](https://material.io/design/usability/bidirectionality.html).","text":"Returns `false` in Server Side Rendering (SSR) environments.\\n"},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"..."},{"name":"isoCurrencyCodes","kind":32,"kindString":"Variable","comment":{"shortText":"A list of all the supported language ISO codes."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."},{"name":"locale","kind":32,"kindString":"Variable","comment":{"shortText":"An [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag),\\nconsisting of a two-character language code and optional script, region and variant codes.","tags":[{"tag":"example","text":"`\'en\'`, `\'en-US\'`, `\'zh-Hans\'`, `\'zh-Hans-CN\'`, `\'en-emodeng\'`\\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"locales","kind":32,"kindString":"Variable","comment":{"shortText":"List of all the native languages provided by the user settings.\\nThese are returned in the order the user defines in their device settings."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."},{"name":"region","kind":32,"kindString":"Variable","comment":{"shortText":"The region code for your device that comes from the Region setting under Language & Region on iOS.\\nThis value is always available on iOS, but might return `null` on Android or web.","tags":[{"tag":"example","text":"`\'US\'`, `\'NZ\'`, `null`\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"timezone","kind":32,"kindString":"Variable","comment":{"shortText":"The current time zone in display format.\\nOn Web time zone is calculated with Intl.DateTimeFormat().resolvedOptions().timeZone. For a\\nbetter estimation you could use the moment-timezone package but it will add significant bloat to\\nyour website\'s bundle size.","tags":[{"tag":"example","text":"`\'America/Los_Angeles\'`\\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"getLocalizationAsync","kind":64,"kindString":"Function","signatures":[{"name":"getLocalizationAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the latest native values from the device. Locale can be changed on some Android devices\\nwithout resetting the app.\\n> On iOS, changing the locale will cause the device to reset meaning the constants will always be\\ncorrect.","tags":[{"tag":"example","text":"\\n```ts\\n// When the app returns from the background on Android...\\n\\nconst { locale } = await Localization.getLocalizationAsync();\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Localization"}],"name":"Promise"}}]}]}')},nVXh:function(e){e.exports=JSON.parse('{"name":"expo-analytics-segment","kind":1,"kindString":"Project","originalName":"","children":[{"name":"CommonOptions","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"},{"type":"literal","value":null}]}},{"name":"InitializeOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"androidWriteKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Write key for Android source."},"type":{"type":"intrinsic","name":"string"}},{"name":"iosWriteKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Write key for iOS source."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"alias","kind":64,"kindString":"Function","signatures":[{"name":"alias","kind":4096,"kindString":"Call signature","comment":{"shortText":"Associate current identity with a new identifier. See [Segment Alias docs](https://segment.com/docs/spec/alias/).","returns":"A `Promise` which fulfils witch a `boolean` indicating whether the method has been\\nexecuted on the underlying `Segment` instance or not.\\n"},"parameters":[{"name":"newId","kind":32768,"kindString":"Parameter","comment":{"shortText":"Identifier to associate with."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An extra dictionary with options for the call, [see here](https://segment.com/docs/connections/spec/common/)\\nfor possible configuration options. An example options object would be:\\n```json\\n{\\n  \\"integrations\\": {\\n    \\"Sentry\\": {\\n      \\"enabled\\": true\\n     }\\n  },\\n  \\"context\\": {\\n    \\"ip\\": \\"0.0.0.0\\"\\n  }\\n}\\n```\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"flush","kind":64,"kindString":"Function","signatures":[{"name":"flush","kind":4096,"kindString":"Call signature","comment":{"shortText":"Manually flush the event queue. You shouldn\'t need to call this in most cases."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"getEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"getEnabledAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"group","kind":64,"kindString":"Function","signatures":[{"name":"group","kind":4096,"kindString":"Call signature","comment":{"shortText":"Associate the user with a group. See [Segment Group docs](https://segment.com/docs/spec/group/)."},"parameters":[{"name":"groupId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the group.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"groupWithTraits","kind":64,"kindString":"Function","signatures":[{"name":"groupWithTraits","kind":4096,"kindString":"Call signature","comment":{"shortText":"Associate the user with a group with traits. See [Segment Group docs](https://segment.com/docs/spec/group/)."},"parameters":[{"name":"groupId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the group."},"type":{"type":"intrinsic","name":"string"}},{"name":"traits","kind":32768,"kindString":"Parameter","comment":{"shortText":"Free-form dictionary of traits of the group."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map that can include any of [these common fields](https://segment.com/docs/connections/spec/common/).\\nDefaults to `null`.\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"identify","kind":64,"kindString":"Function","signatures":[{"name":"identify","kind":4096,"kindString":"Call signature","comment":{"shortText":"Associates the current user with a user ID. Call this after calling [`Segment.initialize()`](#initialize)\\nbut before other segment calls. See [Segment Identify docs](https://segment.com/docs/spec/identify/)."},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","comment":{"shortText":"User ID for the current user.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"identifyWithTraits","kind":64,"kindString":"Function","signatures":[{"name":"identifyWithTraits","kind":4096,"kindString":"Call signature","comment":{},"parameters":[{"name":"userId","kind":32768,"kindString":"Parameter","comment":{"shortText":"User ID for the current user."},"type":{"type":"intrinsic","name":"string"}},{"name":"traits","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of custom properties."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"Map that can include any of [these common fields](https://segment.com/docs/connections/spec/common/).\\nDefaults to `null`.\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"initialize","kind":64,"kindString":"Function","signatures":[{"name":"initialize","kind":4096,"kindString":"Call signature","comment":{"shortText":"Segment requires separate write keys for iOS and Android. You will need to log in to Segment\\nto receive these keys: [https://segment.com/docs/guides/setup/how-do-i-find-my-write-key/](https://segment.com/docs/guides/setup/how-do-i-find-my-write-key/)"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`InitializeOptions`](#initializeoptions) object.\\n"},"type":{"type":"reference","name":"InitializeOptions"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"reset","kind":64,"kindString":"Function","signatures":[{"name":"reset","kind":4096,"kindString":"Call signature","comment":{"shortText":"Clears the current user. See [https://segment.com/docs/sources/mobile/ios/#reset](https://segment.com/docs/sources/mobile/ios/#reset)."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"screen","kind":64,"kindString":"Function","signatures":[{"name":"screen","kind":4096,"kindString":"Call signature","comment":{"shortText":"Record that a user has seen a screen to Segment. See [Segment Screen docs](https://segment.com/docs/spec/screen/)."},"parameters":[{"name":"screenName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the screen.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"screenWithProperties","kind":64,"kindString":"Function","signatures":[{"name":"screenWithProperties","kind":4096,"kindString":"Call signature","comment":{"shortText":"Record that a user has seen a screen to Segment with custom properties. See [Segment Screen docs](https://segment.com/docs/spec/screen/)."},"parameters":[{"name":"screenName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the screen."},"type":{"type":"intrinsic","name":"string"}},{"name":"properties","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of custom properties."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map that can include any of [these common fields](https://segment.com/docs/connections/spec/common/).\\nDefaults to `null`.\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"setEnabledAsync","kind":4096,"kindString":"Call signature","parameters":[{"name":"enabled","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"track","kind":64,"kindString":"Function","signatures":[{"name":"track","kind":4096,"kindString":"Call signature","comment":{"shortText":"Log an event to Segment. See [Segment Track docs](https://segment.com/docs/spec/track/)."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","comment":{"shortText":"The event name.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"trackWithProperties","kind":64,"kindString":"Function","signatures":[{"name":"trackWithProperties","kind":4096,"kindString":"Call signature","comment":{"shortText":"Log an event to Segment with custom properties. See [Segment Track docs](https://segment.com/docs/spec/track/)."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","comment":{"shortText":"The event name."},"type":{"type":"intrinsic","name":"string"}},{"name":"properties","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of custom properties."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map that can include any of [these common fields](https://segment.com/docs/connections/spec/common/).\\nDefaults to `null`.\\n"},"type":{"type":"reference","name":"CommonOptions"},"defaultValue":"null"}],"type":{"type":"intrinsic","name":"void"}}]}]}')},nZNs:function(e){e.exports=JSON.parse('{"name":"expo-image-manipulator","kind":1,"kindString":"Project","originalName":"","children":[{"name":"FlipType","kind":8,"kindString":"Enumeration","children":[{"name":"Horizontal","kind":16,"kindString":"Enumeration member","defaultValue":"\\"horizontal\\""},{"name":"Vertical","kind":16,"kindString":"Enumeration member","defaultValue":"\\"vertical\\""}]},{"name":"SaveFormat","kind":8,"kindString":"Enumeration","children":[{"name":"JPEG","kind":16,"kindString":"Enumeration member","defaultValue":"\\"jpeg\\""},{"name":"PNG","kind":16,"kindString":"Enumeration member","defaultValue":"\\"png\\""},{"name":"WEBP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"__Web Only__"},"defaultValue":"\\"webp\\""}]},{"name":"Action","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"ActionResize"},{"type":"reference","name":"ActionRotate"},{"type":"reference","name":"ActionFlip"},{"type":"reference","name":"ActionCrop"}]}},{"name":"ActionCrop","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"crop","kind":1024,"kindString":"Property","comment":{"shortText":"Fields specify top-left corner and dimensions of a crop rectangle."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"originX","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"originY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}}]}}},{"name":"ActionFlip","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"flip","kind":1024,"kindString":"Property","comment":{"shortText":"An axis on which image will be flipped. Only one flip per transformation is available. If you\\nwant to flip according to both axes then provide two separate transformations."},"type":{"type":"reference","name":"FlipType"}}]}}},{"name":"ActionResize","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"resize","kind":1024,"kindString":"Property","comment":{"shortText":"Values correspond to the result image dimensions. If you specify only one value, the other will\\nbe calculated automatically to preserve image ratio."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}]}}}]}}},{"name":"ActionRotate","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"rotate","kind":1024,"kindString":"Property","comment":{"shortText":"Degrees to rotate the image. Rotation is clockwise when the value is positive and\\ncounter-clockwise when negative."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"ImageResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"It is included if the `base64` save option was truthy, and is a string containing the\\nJPEG/PNG (depending on `format`) data of the image in Base64. Prepend that with `\'data:image/xxx;base64,\'`\\nto get a data URI, which you can use as the source for an `Image` element for example\\n(where `xxx` is `jpeg` or `png`)."},"type":{"type":"intrinsic","name":"string"}},{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"Height of the image or video."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"An URI to the modified image (usable as the source for an `Image` or `Video` element)."},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"Width of the image or video."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"SaveOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A map defining how modified image should be saved."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to also include the image data in Base64 format."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"compress","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A value in range `0.0` - `1.0` specifying compression level of the result image. `1` means\\nno compression (highest quality) and `0` the highest compression (lowest quality)."},"type":{"type":"intrinsic","name":"number"}},{"name":"format","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specifies what type of compression should be used and what is the result file extension.\\n`SaveFormat.PNG` compression is lossless but slower, `SaveFormat.JPEG` is faster but the image\\nhas visible artifacts. Defaults to `SaveFormat.JPEG`"},"type":{"type":"reference","name":"SaveFormat"}}]}}},{"name":"manipulateAsync","kind":64,"kindString":"Function","signatures":[{"name":"manipulateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Manipulate the image provided via `uri`. Available modifications are rotating, flipping (mirroring),\\nresizing and cropping. Each invocation results in a new file. With one invocation you can provide\\na set of actions to perform over the image. Overwriting the source file would not have an effect\\nin displaying the result as images are cached.","returns":"Promise which fulfils with [`ImageResult`](#imageresult) object.\\n"},"parameters":[{"name":"uri","kind":32768,"kindString":"Parameter","comment":{"shortText":"URI of the file to manipulate. Should be on the local file system or a base64 data URI."},"type":{"type":"intrinsic","name":"string"}},{"name":"actions","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of objects representing manipulation options. Each object should have\\n__only one__ of the keys that corresponds to specific transformation."},"type":{"type":"array","elementType":{"type":"reference","name":"Action"}},"defaultValue":"[]"},{"name":"saveOptions","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map defining how modified image should be saved."},"type":{"type":"reference","name":"SaveOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImageResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},ncJ5:function(e){e.exports=JSON.parse('{"name":"expo-calendar","kind":1,"kindString":"Project","originalName":"","children":[{"name":"DayOfTheWeek","kind":8,"kindString":"Enumeration","children":[{"name":"Friday","kind":16,"kindString":"Enumeration member","defaultValue":"6"},{"name":"Monday","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"Saturday","kind":16,"kindString":"Enumeration member","defaultValue":"7"},{"name":"Sunday","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"Thursday","kind":16,"kindString":"Enumeration member","defaultValue":"5"},{"name":"Tuesday","kind":16,"kindString":"Enumeration member","defaultValue":"3"},{"name":"Wednesday","kind":16,"kindString":"Enumeration member","defaultValue":"4"}]},{"name":"MonthOfTheYear","kind":8,"kindString":"Enumeration","children":[{"name":"April","kind":16,"kindString":"Enumeration member","defaultValue":"4"},{"name":"August","kind":16,"kindString":"Enumeration member","defaultValue":"8"},{"name":"December","kind":16,"kindString":"Enumeration member","defaultValue":"12"},{"name":"February","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"January","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"July","kind":16,"kindString":"Enumeration member","defaultValue":"7"},{"name":"June","kind":16,"kindString":"Enumeration member","defaultValue":"6"},{"name":"March","kind":16,"kindString":"Enumeration member","defaultValue":"3"},{"name":"May","kind":16,"kindString":"Enumeration member","defaultValue":"5"},{"name":"November","kind":16,"kindString":"Enumeration member","defaultValue":"11"},{"name":"October","kind":16,"kindString":"Enumeration member","defaultValue":"10"},{"name":"September","kind":16,"kindString":"Enumeration member","defaultValue":"9"}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"Alarm","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A method for having the OS automatically remind the user about an calendar item."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"absoluteDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date object or string representing an absolute time the alarm should occur.\\nOverrides `relativeOffset` and `structuredLocation` if specified alongside either.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"method","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Method of alerting the user that this alarm should use; on iOS this is always a notification.\\nPossible values: [`AlarmMethod`](#calendaralarmmethod).","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"relativeOffset","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Number of minutes from the `startDate` of the calendar item that the alarm should occur.\\nUse negative values to have the alarm occur before the `startDate`."},"type":{"type":"intrinsic","name":"number"}},{"name":"structuredLocation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"AlarmLocation"}}]}}},{"name":"AlarmLocation","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"coords","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"latitude","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"proximity","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"radius","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"title","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Attendee","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A person or entity that is associated with an event by being invited or fulfilling some other role."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"email","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Email address of the attendee.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"id","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Internal ID that represents this attendee on the device.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"isCurrentUser","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates whether or not this attendee is the current OS user.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"Displayed name of the attendee."},"type":{"type":"intrinsic","name":"string"}},{"name":"role","kind":1024,"kindString":"Property","comment":{"shortText":"Role of the attendee at the event.\\nPossible values: [`AttendeeRole`](#calendarattendeerole)."},"type":{"type":"intrinsic","name":"string"}},{"name":"status","kind":1024,"kindString":"Property","comment":{"shortText":"Status of the attendee in relation to the event.\\nPossible values: [`AttendeeStatus`](#calendarattendeestatus)."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the attendee.\\nPossible values: [`AttendeeType`](#calendarattendeetype)."},"type":{"type":"intrinsic","name":"string"}},{"name":"url","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL for the attendee.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Calendar","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A calendar record upon which events (or, on iOS, reminders) can be stored. Settings here apply to\\nthe calendar as a whole and how its events are displayed in the OS calendar app."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accessLevel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Level of access that the user has for the calendar.\\nPossible values: [`CalendarAccessLevel`](#calendarcalendaraccesslevel).","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"allowedAttendeeTypes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Attendee types that this calendar supports.\\nPossible values: Array of [`AttendeeType`](#calendarattendeetype).","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"allowedAvailabilities","kind":1024,"kindString":"Property","comment":{"shortText":"Availability types that this calendar supports.\\nPossible values: Array of [`Availability`](#calendaravailability)."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"allowedReminders","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Alarm methods that this calendar supports.\\nPossible values: Array of [`AlarmMethod`](#calendaralarmmethod).","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"allowsModifications","kind":1024,"kindString":"Property","comment":{"shortText":"Boolean value that determines whether this calendar can be modified."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"color","kind":1024,"kindString":"Property","comment":{"shortText":"Color used to display this calendar\'s events."},"type":{"type":"intrinsic","name":"string"}},{"name":"entityType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the calendar is used in the Calendar or Reminders OS app.\\nPossible values: [`EntityTypes`](#calendarentitytypes).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Internal ID that represents this calendar on the device."},"type":{"type":"intrinsic","name":"string"}},{"name":"isPrimary","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value indicating whether this is the device\'s primary calendar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isSynced","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates whether this calendar is synced and its events stored on the device.\\nUnexpected behavior may occur if this is not set to `true`.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isVisible","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates whether the OS displays events on this calendar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"name","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Internal system name of the calendar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"ownerAccount","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Name for the account that owns this calendar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"source","kind":1024,"kindString":"Property","comment":{"shortText":"Object representing the source to be used for the calendar."},"type":{"type":"reference","name":"Source"}},{"name":"sourceId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"ID of the source to be used for the calendar. Likely the same as the source for any other\\nlocally stored calendars.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"timeZone","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Time zone for the calendar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"title","kind":1024,"kindString":"Property","comment":{"shortText":"Visible name of the calendar."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Type of calendar this object represents.\\nPossible values: [`CalendarType`](#calendarcalendartype).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"DaysOfTheWeek","kind":4194304,"kindString":"Type alias","comment":{"tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"dayOfTheWeek","kind":1024,"kindString":"Property","comment":{"shortText":"Sunday to Saturday - `DayOfTheWeek` enum."},"type":{"type":"reference","name":"DayOfTheWeek"}},{"name":"weekNumber","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"`-53` to `53` (`0` ignores this field, and a negative indicates a value from the end of the range)."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"Event","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An event record, or a single instance of a recurring event. On iOS, used in the Calendar app."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accessLevel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"User\'s access level for the event.\\nPossible values: [`EventAccessLevel`](#calendareventaccesslevel).","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"alarms","kind":1024,"kindString":"Property","comment":{"shortText":"Array of Alarm objects which control automated reminders to the user."},"type":{"type":"array","elementType":{"type":"reference","name":"Alarm"}}},{"name":"allDay","kind":1024,"kindString":"Property","comment":{"shortText":"Whether the event is displayed as an all-day event on the calendar"},"type":{"type":"intrinsic","name":"boolean"}},{"name":"availability","kind":1024,"kindString":"Property","comment":{"shortText":"The availability setting for the event.\\nPossible values: [`Availability`](#calendaravailability)."},"type":{"type":"intrinsic","name":"string"}},{"name":"calendarId","kind":1024,"kindString":"Property","comment":{"shortText":"ID of the calendar that contains this event."},"type":{"type":"intrinsic","name":"string"}},{"name":"creationDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date when the event record was created.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"endDate","kind":1024,"kindString":"Property","comment":{"shortText":"Date object or string representing the time when the event ends."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"endTimeZone","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Time zone for the event end time.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"guestsCanInviteOthers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether invited guests can invite other guests.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"guestsCanModify","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether invited guests can modify the details of the event.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"guestsCanSeeGuests","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether invited guests can see other guests.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Internal ID that represents this event on the device."},"type":{"type":"intrinsic","name":"string"}},{"name":"instanceId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"For instances of recurring events, volatile ID representing this instance. Not guaranteed to\\nalways refer to the same instance.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"isDetached","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value indicating whether or not the event is a detached (modified) instance of a recurring event.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"lastModifiedDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date when the event record was last modified.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"location","kind":1024,"kindString":"Property","comment":{"shortText":"Location field of the event."},"type":{"type":"intrinsic","name":"string"}},{"name":"notes","kind":1024,"kindString":"Property","comment":{"shortText":"Description or notes saved with the event."},"type":{"type":"intrinsic","name":"string"}},{"name":"organizer","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Organizer of the event.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"organizerEmail","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Email address of the organizer of the event.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"originalId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"For detached (modified) instances of recurring events, the ID of the original recurring event.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"originalStartDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"For recurring events, the start date for the first (original) instance of the event.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"recurrenceRule","kind":1024,"kindString":"Property","comment":{"shortText":"Object representing rules for recurring or repeating events. Set to `null` for one-time events."},"type":{"type":"reference","name":"RecurrenceRule"}},{"name":"startDate","kind":1024,"kindString":"Property","comment":{"shortText":"Date object or string representing the time when the event starts."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"status","kind":1024,"kindString":"Property","comment":{"shortText":"Status of the event.\\nPossible values: [`EventStatus`](#calendareventstatus)."},"type":{"type":"intrinsic","name":"string"}},{"name":"timeZone","kind":1024,"kindString":"Property","comment":{"shortText":"Time zone the event is scheduled in."},"type":{"type":"intrinsic","name":"string"}},{"name":"title","kind":1024,"kindString":"Property","comment":{"shortText":"Visible name of the event."},"type":{"type":"intrinsic","name":"string"}},{"name":"url","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL for the event.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"RecurrenceRule","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A recurrence rule for events or reminders, allowing the same calendar item to recur multiple times.\\nThis type is based on [the iOS interface](https://developer.apple.com/documentation/eventkit/ekrecurrencerule/1507320-initrecurrencewithfrequency)\\nwhich is in turn based on [the iCal RFC](https://tools.ietf.org/html/rfc5545#section-3.8.5.3)\\nso you can refer to those to learn more about this potentially complex interface.","text":"Not all of the combinations make sense. For example, when frequency is `DAILY`, setting `daysOfTheMonth` makes no sense.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"daysOfTheMonth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The days of the month this event occurs on.\\n`-31` to `31` (not including `0`). Negative indicates a value from the end of the range.\\nThis field is only valid for `Calendar.Frequency.Monthly`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"name":"daysOfTheWeek","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The days of the week the event should recur on. An array of [`DaysOfTheWeek`](#daysoftheweek) object.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"reference","name":"DaysOfTheWeek"}}},{"name":"daysOfTheYear","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The days of the year this event occurs on.\\n`-366` to `366` (not including `0`). Negative indicates a value from the end of the range.\\nThis field is only valid for `Calendar.Frequency.Yearly`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"name":"endDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date on which the calendar item should stop recurring; overrides `occurrence` if both are specified."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"frequency","kind":1024,"kindString":"Property","comment":{"shortText":"How often the calendar item should recur.\\nPossible values: [`Frequency`](#calendarfrequency)."},"type":{"type":"intrinsic","name":"string"}},{"name":"interval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Interval at which the calendar item should recur. For example, an `interval: 2` with `frequency: DAILY`\\nwould yield an event that recurs every other day.","tags":[{"tag":"default","text":"1\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"monthsOfTheYear","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The months this event occurs on.\\nThis field is only valid for `Calendar.Frequency.Yearly`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"reference","name":"MonthOfTheYear"}}},{"name":"occurrence","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Number of times the calendar item should recur before stopping."},"type":{"type":"intrinsic","name":"number"}},{"name":"setPositions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"TAn array of numbers that filters which recurrences to include. For example, for an event that\\nrecurs every Monday, passing 2 here will make it recur every other Monday.\\n`-366` to `366` (not including `0`). Negative indicates a value from the end of the range.\\nThis field is only valid for `Calendar.Frequency.Yearly`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"name":"weeksOfTheYear","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The weeks of the year this event occurs on.\\n`-53` to `53` (not including `0`). Negative indicates a value from the end of the range.\\nThis field is only valid for `Calendar.Frequency.Yearly`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}]}}},{"name":"RecurringEventOptions","kind":4194304,"kindString":"Type alias","comment":{"tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"futureEvents","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether or not future events in the recurring series should also be updated. If `true`, will\\napply the given changes to the recurring instance specified by `instanceStartDate` and all\\nfuture events in the series. If `false`, will only apply the given changes to the instance\\nspecified by `instanceStartDate`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"instanceStartDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date object representing the start time of the desired instance, if looking for a single instance\\nof a recurring event. If this is not provided and **id** represents a recurring event, the first\\ninstance of that event will be returned by default."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}}]}}},{"name":"Reminder","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A reminder record, used in the iOS Reminders app. No direct analog on Android.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"alarms","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Array of Alarm objects which control automated alarms to the user about the task."},"type":{"type":"array","elementType":{"type":"reference","name":"Alarm"}}},{"name":"calendarId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"ID of the calendar that contains this reminder."},"type":{"type":"intrinsic","name":"string"}},{"name":"completed","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Indicates whether or not the task has been completed."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"completionDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date object or string representing the date of completion, if `completed` is `true`.\\nSetting this property of a nonnull `Date` will automatically set the reminder\'s `completed` value to `true`."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"creationDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date when the reminder record was created."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"dueDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date object or string representing the time when the reminder task is due."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"id","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Internal ID that represents this reminder on the device."},"type":{"type":"intrinsic","name":"string"}},{"name":"lastModifiedDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date when the reminder record was last modified."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"location","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Location field of the reminder"},"type":{"type":"intrinsic","name":"string"}},{"name":"notes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Description or notes saved with the reminder."},"type":{"type":"intrinsic","name":"string"}},{"name":"recurrenceRule","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Object representing rules for recurring or repeated reminders. Null for one-time tasks."},"type":{"type":"reference","name":"RecurrenceRule"}},{"name":"startDate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Date object or string representing the start date of the reminder task."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Date"}]}},{"name":"timeZone","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Time zone the reminder is scheduled in."},"type":{"type":"intrinsic","name":"string"}},{"name":"title","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Visible name of the reminder."},"type":{"type":"intrinsic","name":"string"}},{"name":"url","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL for the reminder."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Source","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A source account that owns a particular calendar. Expo apps will typically not need to interact with `Source` objects."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"id","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Internal ID that represents this source on the device.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"isLocalAccount","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether this source is the local phone account. Must be `true` if `type` is `undefined`.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"Name for the account that owns this calendar and was used to sync the calendar to the device."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the account that owns this calendar and was used to sync it to the device.\\nIf `isLocalAccount` is falsy then this must be defined, and must match an account on the device\\nalong with `name`, or the OS will delete the calendar.\\nOn iOS, one of [`SourceType`](#calendarsourcetype)s."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AlarmMethod","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"ALARM","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'alarm\'"},{"name":"ALERT","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'alert\'"},{"name":"DEFAULT","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'default\'"},{"name":"EMAIL","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'email\'"},{"name":"SMS","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'sms\'"}]}},"defaultValue":"..."},{"name":"AttendeeRole","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"ATTENDEE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'attendee\'"},{"name":"CHAIR","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'chair\'"},{"name":"NONE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'none\'"},{"name":"NON_PARTICIPANT","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'nonParticipant\'"},{"name":"OPTIONAL","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'optional\'"},{"name":"ORGANIZER","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'organizer\'"},{"name":"PERFORMER","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'performer\'"},{"name":"REQUIRED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'required\'"},{"name":"SPEAKER","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'speaker\'"},{"name":"UNKNOWN","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'unknown\'"}]}},"defaultValue":"..."},{"name":"AttendeeStatus","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"ACCEPTED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'accepted\'"},{"name":"COMPLETED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'completed\'"},{"name":"DECLINED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'declined\'"},{"name":"DELEGATED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'delegated\'"},{"name":"INVITED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'invited\'"},{"name":"IN_PROCESS","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'inProcess\'"},{"name":"NONE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'none\'"},{"name":"PENDING","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'pending\'"},{"name":"TENTATIVE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'tentative\'"},{"name":"UNKNOWN","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'unknown\'"}]}},"defaultValue":"..."},{"name":"AttendeeType","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"GROUP","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'group\'"},{"name":"NONE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'none\'"},{"name":"OPTIONAL","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'optional\'"},{"name":"PERSON","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'person\'"},{"name":"REQUIRED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'required\'"},{"name":"RESOURCE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'resource\'"},{"name":"ROOM","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'room\'"},{"name":"UNKNOWN","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'unknown\'"}]}},"defaultValue":"..."},{"name":"Availability","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"BUSY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'busy\'"},{"name":"FREE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'free\'"},{"name":"NOT_SUPPORTED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'notSupported\'"},{"name":"TENTATIVE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'tentative\'"},{"name":"UNAVAILABLE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'unavailable\'"}]}},"defaultValue":"..."},{"name":"CalendarAccessLevel","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"CONTRIBUTOR","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'contributor\'"},{"name":"EDITOR","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'editor\'"},{"name":"FREEBUSY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'freebusy\'"},{"name":"NONE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'none\'"},{"name":"OVERRIDE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'override\'"},{"name":"OWNER","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'owner\'"},{"name":"READ","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'read\'"},{"name":"RESPOND","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'respond\'"},{"name":"ROOT","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'root\'"}]}},"defaultValue":"..."},{"name":"CalendarType","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"BIRTHDAYS","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'birthdays\'"},{"name":"CALDAV","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'caldav\'"},{"name":"EXCHANGE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'exchange\'"},{"name":"LOCAL","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'local\'"},{"name":"SUBSCRIBED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'subscribed\'"},{"name":"UNKNOWN","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'unknown\'"}]}},"defaultValue":"..."},{"name":"EntityTypes","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"EVENT","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'event\'"},{"name":"REMINDER","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'reminder\'"}]}},"defaultValue":"..."},{"name":"EventAccessLevel","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"CONFIDENTIAL","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'confidential\'"},{"name":"DEFAULT","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'default\'"},{"name":"PRIVATE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'private\'"},{"name":"PUBLIC","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'public\'"}]}},"defaultValue":"..."},{"name":"EventStatus","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"CANCELED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'canceled\'"},{"name":"CONFIRMED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'confirmed\'"},{"name":"NONE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'none\'"},{"name":"TENTATIVE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'tentative\'"}]}},"defaultValue":"..."},{"name":"Frequency","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"DAILY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'daily\'"},{"name":"MONTHLY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'monthly\'"},{"name":"WEEKLY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'weekly\'"},{"name":"YEARLY","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'yearly\'"}]}},"defaultValue":"..."},{"name":"ReminderStatus","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"COMPLETED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'completed\'"},{"name":"INCOMPLETE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'incomplete\'"}]}},"defaultValue":"..."},{"name":"SourceType","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"BIRTHDAYS","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'birthdays\'"},{"name":"CALDAV","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'caldav\'"},{"name":"EXCHANGE","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'exchange\'"},{"name":"LOCAL","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'local\'"},{"name":"MOBILEME","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'mobileme\'"},{"name":"SUBSCRIBED","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"defaultValue":"\'subscribed\'"}]}},"defaultValue":"..."},{"name":"createAttendeeAsync","kind":64,"kindString":"Function","signatures":[{"name":"createAttendeeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates a new attendee record and adds it to the specified event. Note that if `eventId` specifies\\na recurring event, this will add the attendee to every instance of the event.","returns":"A string representing the ID of the newly created attendee record.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"eventId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the event to add this attendee to."},"type":{"type":"intrinsic","name":"string"}},{"name":"details","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of details for the attendee to be created."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Attendee"}],"name":"Partial"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"createCalendarAsync","kind":64,"kindString":"Function","signatures":[{"name":"createCalendarAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates a new calendar on the device, allowing events to be added later and displayed in the OS Calendar app.","returns":"A string representing the ID of the newly created calendar.\\n"},"parameters":[{"name":"details","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of details for the calendar to be created."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Calendar"}],"name":"Partial"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"createEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"createEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates a new event on the specified calendar.","returns":"A promise which fulfils with a string representing the ID of the newly created event.\\n"},"parameters":[{"name":"calendarId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the calendar to create this event in."},"type":{"type":"intrinsic","name":"string"}},{"name":"eventData","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of details for the event to be created."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Event"}],"name":"Partial"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"createReminderAsync","kind":64,"kindString":"Function","signatures":[{"name":"createReminderAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates a new reminder on the specified calendar.","returns":"A promise which fulfils with a string representing the ID of the newly created reminder.","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"calendarId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the calendar to create this reminder in (or `null` to add the calendar to\\nthe OS-specified default calendar for reminders)."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"name":"reminder","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of details for the reminder to be created"},"type":{"type":"reference","name":"Reminder"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"deleteAttendeeAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteAttendeeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Deletes an existing attendee record from the device. __Use with caution.__","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the attendee to delete."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"deleteCalendarAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteCalendarAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Deletes an existing calendar and all associated events/reminders/attendees from the device. __Use with caution.__"},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the calendar to delete.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"deleteEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Deletes an existing event from the device. Use with caution."},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the event to be deleted."},"type":{"type":"intrinsic","name":"string"}},{"name":"recurringEventOptions","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of options for recurring events.\\n"},"type":{"type":"reference","name":"RecurringEventOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"deleteReminderAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteReminderAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Deletes an existing reminder from the device. __Use with caution.__","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the reminder to be deleted."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"getAttendeesForEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAttendeesForEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets all attendees for a given event (or instance of a recurring event).","returns":"A promise which fulfils with an array of [`Attendee`](#attendee) associated with the\\nspecified event.\\n"},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the event to return attendees for."},"type":{"type":"intrinsic","name":"string"}},{"name":"recurringEventOptions","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of options for recurring events."},"type":{"type":"reference","name":"RecurringEventOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Attendee"}}],"name":"Promise"}}]},{"name":"getCalendarPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCalendarPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing user\'s calendars.","returns":"A promise that resolves to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getCalendarsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCalendarsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets an array of calendar objects with details about the different calendars stored on the device.","returns":"An array of [calendar objects](#calendar \'Calendar\') matching the provided entity type (if provided).\\n"},"parameters":[{"name":"entityType","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"__iOS Only.__ Not required, but if defined, filters the returned calendars to\\na specific entity type. Possible values are `Calendar.EntityTypes.EVENT` (for calendars shown in\\nthe Calendar app) and `Calendar.EntityTypes.REMINDER` (for the Reminders app). **Note:** if not\\ndefined, you will need both permissions: **CALENDAR** and **REMINDERS**."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Calendar"}}],"name":"Promise"}}]},{"name":"getDefaultCalendarAsync","kind":64,"kindString":"Function","signatures":[{"name":"getDefaultCalendarAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets an instance of the default calendar object.","returns":"A promise resolving to the [Calendar](#calendar) object that is the user\'s default calendar.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Calendar"}],"name":"Promise"}}]},{"name":"getEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"getEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a specific event selected by ID. If a specific instance of a recurring event is desired,\\nthe start date of this instance must also be provided, as instances of recurring events do not\\nhave their own unique and stable IDs on either iOS or Android.","returns":"A promise which fulfils with an [`Event`](#event) object matching the provided criteria, if one exists.\\n"},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the event to return."},"type":{"type":"intrinsic","name":"string"}},{"name":"recurringEventOptions","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of options for recurring events."},"type":{"type":"reference","name":"RecurringEventOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Event"}],"name":"Promise"}}]},{"name":"getEventsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getEventsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns all events in a given set of calendars over a specified time period. The filtering has\\nslightly different behavior per-platform - on iOS, all events that overlap at all with the\\n`[startDate, endDate]` interval are returned, whereas on Android, only events that begin on or\\nafter the `startDate` and end on or before the `endDate` will be returned.","returns":"A promise which fulfils with an array of [`Event`](#event) objects matching the search criteria.\\n"},"parameters":[{"name":"calendarIds","kind":32768,"kindString":"Parameter","comment":{"shortText":"Array of IDs of calendars to search for events in."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"startDate","kind":32768,"kindString":"Parameter","comment":{"shortText":"Beginning of time period to search for events in."},"type":{"type":"reference","name":"Date"}},{"name":"endDate","kind":32768,"kindString":"Parameter","comment":{"shortText":"End of time period to search for events in."},"type":{"type":"reference","name":"Date"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Event"}}],"name":"Promise"}}]},{"name":"getReminderAsync","kind":64,"kindString":"Function","signatures":[{"name":"getReminderAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a specific reminder selected by ID.","returns":"A promise which fulfils with a [`Reminder`](#reminder) matching the provided ID, if one exists.","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the reminder to return."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Reminder"}],"name":"Promise"}}]},{"name":"getRemindersAsync","kind":64,"kindString":"Function","signatures":[{"name":"getRemindersAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a list of reminders matching the provided criteria. If `startDate` and `endDate` are defined,\\nreturns all reminders that overlap at all with the [startDate, endDate] interval - i.e. all reminders\\nthat end after the `startDate` or begin before the `endDate`.","returns":"A promise which fulfils with an array of [`Reminder`](#reminder) objects matching the search criteria.","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"calendarIds","kind":32768,"kindString":"Parameter","comment":{"shortText":"Array of IDs of calendars to search for reminders in."},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}},{"name":"status","kind":32768,"kindString":"Parameter","comment":{"shortText":"One of `Calendar.ReminderStatus.COMPLETED` or `Calendar.ReminderStatus.INCOMPLETE`."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"name":"startDate","kind":32768,"kindString":"Parameter","comment":{"shortText":"Beginning of time period to search for reminders in. Required if `status` is defined."},"type":{"type":"reference","name":"Date"}},{"name":"endDate","kind":32768,"kindString":"Parameter","comment":{"shortText":"End of time period to search for reminders in. Required if `status` is defined."},"type":{"type":"reference","name":"Date"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Reminder"}}],"name":"Promise"}}]},{"name":"getRemindersPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getRemindersPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing user\'s reminders.","returns":"A promise that resolves to an object of type [`PermissionResponse`](#permissionresponse).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getSourceAsync","kind":64,"kindString":"Function","signatures":[{"name":"getSourceAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a specific source selected by ID.","returns":"A promise which fulfils with an array of [`Source`](#source) object matching the provided\\nID, if one exists.","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the source to return."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Source"}],"name":"Promise"}}]},{"name":"getSourcesAsync","kind":64,"kindString":"Function","signatures":[{"name":"getSourcesAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"A promise which fulfils with an array of [`Source`](#source) objects all sources for\\ncalendars stored on the device.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Source"}}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the Calendar API is enabled on the current device. This does not check the app permissions.","returns":"Async `boolean`, indicating whether the Calendar API is available on the current device.\\nCurrently, this resolves `true` on iOS and Android only.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"openEventInCalendar","kind":64,"kindString":"Function","signatures":[{"name":"openEventInCalendar","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sends an intent to open the specified event in the OS Calendar app.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the event to open."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"requestCalendarPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestCalendarPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing user\'s calendars.","returns":"A promise that resolves to an object of type [`PermissionResponse`](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"Use [`requestCalendarPermissionsAsync()`](#calendarrequestcalendarpermissionsasync) instead.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestRemindersPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestRemindersPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing user\'s reminders.","returns":"A promise that resolves to an object of type [`PermissionResponse`](#permissionresponse).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"updateAttendeeAsync","kind":64,"kindString":"Function","signatures":[{"name":"updateAttendeeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Updates an existing attendee record. To remove a property, explicitly set it to `null` in `details`.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the attendee record to be updated."},"type":{"type":"intrinsic","name":"string"}},{"name":"details","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of properties to be updated."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Attendee"}],"name":"Partial"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"updateCalendarAsync","kind":64,"kindString":"Function","signatures":[{"name":"updateCalendarAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Updates the provided details of an existing calendar stored on the device. To remove a property,\\nexplicitly set it to `null` in `details`."},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the calendar to update."},"type":{"type":"intrinsic","name":"string"}},{"name":"details","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of properties to be updated.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Calendar"}],"name":"Partial"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"updateEventAsync","kind":64,"kindString":"Function","signatures":[{"name":"updateEventAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Updates the provided details of an existing calendar stored on the device. To remove a property,\\nexplicitly set it to `null` in `details`."},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the event to be updated."},"type":{"type":"intrinsic","name":"string"}},{"name":"details","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of properties to be updated."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Event"}],"name":"Partial"},"defaultValue":"{}"},{"name":"recurringEventOptions","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of options for recurring events.\\n"},"type":{"type":"reference","name":"RecurringEventOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"updateReminderAsync","kind":64,"kindString":"Function","signatures":[{"name":"updateReminderAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Updates the provided details of an existing reminder stored on the device. To remove a property,\\nexplicitly set it to `null` in `details`.","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the reminder to be updated."},"type":{"type":"intrinsic","name":"string"}},{"name":"details","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of properties to be updated."},"type":{"type":"reference","name":"Reminder"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"useCalendarPermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"useCalendarPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to access the calendar.\\nThis uses both `getCalendarPermissionsAsync` and `requestCalendarPermissionsAsync` to interact\\nwith the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Calendar.useCalendarPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"useRemindersPermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"useRemindersPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to access reminders.\\nThis uses both `getRemindersPermissionsAsync` and `requestRemindersPermissionsAsync` to interact\\nwith the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Calendar.useRemindersPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}]}')},ngZM:function(e){e.exports=JSON.parse('{"name":"expo-web-browser","kind":1,"kindString":"Project","originalName":"","children":[{"name":"WebBrowserPresentationStyle","kind":8,"kindString":"Enumeration","comment":{"shortText":"A browser presentation style. Its values are directly mapped to the [`UIModalPresentationStyle`](https://developer.apple.com/documentation/uikit/uiviewcontroller/1621355-modalpresentationstyle).","tags":[{"tag":"platform","text":"ios\\n"}]},"children":[{"name":"AUTOMATIC","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The default presentation style chosen by the system.\\nOn older iOS versions, falls back to `WebBrowserPresentationStyle.FullScreen`.","tags":[{"tag":"platform","text":"ios 13+\\n"}]},"defaultValue":"\\"automatic\\""},{"name":"CURRENT_CONTEXT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style where the browser is displayed over the app\'s content."},"defaultValue":"\\"currentContext\\""},{"name":"FORM_SHEET","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style that displays the browser centered in the screen."},"defaultValue":"\\"formSheet\\""},{"name":"FULL_SCREEN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style in which the presented browser covers the screen."},"defaultValue":"\\"fullScreen\\""},{"name":"OVER_CURRENT_CONTEXT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style where the browser is displayed over the app\'s content."},"defaultValue":"\\"overCurrentContext\\""},{"name":"OVER_FULL_SCREEN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style in which the browser view covers the screen."},"defaultValue":"\\"overFullScreen\\""},{"name":"PAGE_SHEET","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style that partially covers the underlying content."},"defaultValue":"\\"pageSheet\\""},{"name":"POPOVER","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style where the browser is displayed in a popover view."},"defaultValue":"\\"popover\\""}]},{"name":"WebBrowserResultType","kind":8,"kindString":"Enumeration","children":[{"name":"CANCEL","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"cancel\\""},{"name":"DISMISS","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"dismiss\\""},{"name":"LOCKED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"locked\\""},{"name":"OPENED","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"android\\n"}]},"defaultValue":"\\"opened\\""}]},{"name":"AuthSessionOpenOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"If there is no native AuthSession implementation available (which is the case on Android) the params inherited from\\n[`WebBrowserOpenOptions`](#webbrowseropenoptions) will be used in the browser polyfill. Otherwise, the browser parameters will be ignored."},"type":{"type":"intersection","types":[{"type":"reference","name":"WebBrowserOpenOptions"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"preferEphemeralSession","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Determines whether the session should ask the browser for a private authentication session.\\nSet this to `true` to request that the browser doesn\u2019t share cookies or other browsing data between the authentication session and the user\u2019s normal browser session.\\nWhether the request is honored depends on the user\u2019s default web browser.","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"ios 13+\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}]}},{"name":"WebBrowserAuthSessionResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"WebBrowserRedirectResult"},{"type":"reference","name":"WebBrowserResult"}]}},{"name":"WebBrowserCompleteAuthSessionOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"skipRedirectCheck","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Attempt to close the window without checking to see if the auth redirect matches the cached redirect URL."},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"WebBrowserCompleteAuthSessionResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"message","kind":1024,"kindString":"Property","comment":{"shortText":"Additional description or reasoning of the result."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the result."},"type":{"type":"union","types":[{"type":"literal","value":"success"},{"type":"literal","value":"failed"}]}}]}}},{"name":"WebBrowserCoolDownResult","kind":4194304,"kindString":"Type alias","type":{"type":"reference","name":"ServiceActionResult"}},{"name":"WebBrowserCustomTabsResults","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"browserPackages","kind":1024,"kindString":"Property","comment":{"shortText":"All packages recognized by `PackageManager` as capable of handling Custom Tabs. Empty array\\nmeans there is no supporting browsers on device."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"defaultBrowserPackage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Default package chosen by user, `null` if there is no such packages. Also `null` usually means,\\nthat user will be prompted to choose from available packages."},"type":{"type":"intrinsic","name":"string"}},{"name":"preferredBrowserPackage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Package preferred by `CustomTabsClient` to be used to handle Custom Tabs. It favors browser\\nchosen by user as default, as long as it is present on both `browserPackages` and\\n`servicePackages` lists. Only such browsers are considered as fully supporting Custom Tabs.\\nIt might be `null` when there is no such browser installed or when default browser is not in\\n`servicePackages` list."},"type":{"type":"intrinsic","name":"string"}},{"name":"servicePackages","kind":1024,"kindString":"Property","comment":{"shortText":"All packages recognized by `PackageManager` as capable of handling Custom Tabs Service.\\nThis service is used by [`warmUpAsync`](#webbrowserwarmupasyncbrowserpackage), [`mayInitWithUrlAsync`](#webbrowsermayinitwithurlasyncurl-browserpackage)\\nand [`coolDownAsync`](#webbrowsercooldownasyncbrowserpackage)."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}}},{"name":"WebBrowserMayInitWithUrlResult","kind":4194304,"kindString":"Type alias","type":{"type":"reference","name":"ServiceActionResult"}},{"name":"WebBrowserOpenOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"browserPackage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Package name of a browser to be used to handle Custom Tabs. List of\\navailable packages is to be queried by [`getCustomTabsSupportingBrowsers`](#webbrowsergetcustomtabssupportingbrowsersasync) method.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"controlsColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Tint color for controls in SKSafariViewController in `#AARRGGBB` or `#RRGGBB` format.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"createTask","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether the browser should open in a new task or in\\nthe same task as your app.","tags":[{"tag":"default","text":"true"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"dismissButtonStyle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The style of the dismiss button. Should be one of: `done`, `close`, or `cancel`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":"done"},{"type":"literal","value":"close"},{"type":"literal","value":"cancel"}]}},{"name":"enableBarCollapsing","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether the toolbar should be hiding when a user scrolls the website."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"enableDefaultShareMenuItem","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether a default share item should be added to the menu.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"presentationStyle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The [presentation style](https://developer.apple.com/documentation/uikit/uiviewcontroller/1621355-modalpresentationstyle)\\nof the browser window.","tags":[{"tag":"default","text":"WebBrowser.WebBrowserPresentationStyle.OverFullScreen"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"WebBrowserPresentationStyle"}},{"name":"readerMode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether Safari should enter Reader mode, if it is available.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"secondaryToolbarColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Color of the secondary toolbar in either `#AARRGGBB` or `#RRGGBB` format.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"showInRecents","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether browsed website should be shown as separate\\nentry in Android recents/multitasking view. Requires `createTask` to be `true` (default).","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"showTitle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether the browser should show the title of website on the toolbar.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"toolbarColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Color of the toolbar in either `#AARRGGBB` or `#RRGGBB` format."},"type":{"type":"intrinsic","name":"string"}},{"name":"windowFeatures","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Features to use with `window.open()`.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"WebBrowserWindowFeatures"}]}},{"name":"windowName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Name to assign to the popup window.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"WebBrowserRedirectResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the result."},"type":{"type":"literal","value":"success"}},{"name":"url","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"WebBrowserResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the result."},"type":{"type":"reference","name":"WebBrowserResultType"}}]}}},{"name":"WebBrowserWarmUpResult","kind":4194304,"kindString":"Type alias","type":{"type":"reference","name":"ServiceActionResult"}},{"name":"WebBrowserWindowFeatures","kind":4194304,"kindString":"Type alias","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"string"}]}],"name":"Record"}},{"name":"coolDownAsync","kind":64,"kindString":"Function","signatures":[{"name":"coolDownAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"This methods removes all bindings to services created by [`warmUpAsync`](#webbrowserwarmupasyncbrowserpackage)\\nor [`mayInitWithUrlAsync`](#webbrowsermayinitwithurlasyncurl-browserpackage). You should call\\nthis method once you don\'t need them to avoid potential memory leaks. However, those binding\\nwould be cleared once your application is destroyed, which might be sufficient in most cases.","returns":"The promise which fulfils with ` WebBrowserCoolDownResult` when cooling is performed, or\\nan empty object when there was no connection to be dismissed.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"browserPackage","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Package of browser to be cooled. If not set, preferred browser will be used.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserCoolDownResult"}],"name":"Promise"}}]},{"name":"dismissAuthSession","kind":64,"kindString":"Function","signatures":[{"name":"dismissAuthSession","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]},{"name":"dismissBrowser","kind":64,"kindString":"Function","signatures":[{"name":"dismissBrowser","kind":4096,"kindString":"Call signature","comment":{"shortText":"Dismisses the presented web browser.","returns":"The `void` on successful attempt, or throws error, if dismiss functionality is not avaiable.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"name":"getCustomTabsSupportingBrowsersAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCustomTabsSupportingBrowsersAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a list of applications package names supporting Custom Tabs, Custom Tabs\\nservice, user chosen and preferred one. This may not be fully reliable, since it uses\\n`PackageManager.getResolvingActivities` under the hood. (For example, some browsers might not be\\npresent in browserPackages list once another browser is set to default.)","returns":"The promise which fulfils with [`WebBrowserCustomTabsResults`](#webbrowsercustomtabsresults) object.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserCustomTabsResults"}],"name":"Promise"}}]},{"name":"mayInitWithUrlAsync","kind":64,"kindString":"Function","signatures":[{"name":"mayInitWithUrlAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"This method initiates (if needed) [CustomTabsSession](https://developer.android.com/reference/android/support/customtabs/CustomTabsSession.html#maylaunchurl)\\nand calls its `mayLaunchUrl` method for browser specified by the package.","returns":"A promise which fulfils with `WebBrowserMayInitWithUrlResult` object.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"The url of page that is likely to be loaded first when opening browser."},"type":{"type":"intrinsic","name":"string"}},{"name":"browserPackage","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Package of browser to be informed. If not set, preferred\\nbrowser will be used.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserMayInitWithUrlResult"}],"name":"Promise"}}]},{"name":"maybeCompleteAuthSession","kind":64,"kindString":"Function","signatures":[{"name":"maybeCompleteAuthSession","kind":4096,"kindString":"Call signature","comment":{"shortText":"Possibly completes an authentication session on web in a window popup. The method\\nshould be invoked on the page that the window redirects to.","returns":"Returns an object with message about why the redirect failed or succeeded:\\n\\nIf `type` is set to `failed`, the reason depends on the message:\\n- `Not supported on this platform`: If the platform doesn\'t support this method (iOS, Android).\\n- `Cannot use expo-web-browser in a non-browser environment`: If the code was executed in an SSR\\n  or node environment.\\n- `No auth session is currently in progress`: (the cached state wasn\'t found in local storage).\\n  This can happen if the window redirects to an origin (website) that is different to the initial\\n  website origin. If this happens in development, it may be because the auth started on localhost\\n  and finished on your computer port (Ex: `128.0.0.*`). This is controlled by the `redirectUrl`\\n  and `returnUrl`.\\n- `Current URL \\"<URL>\\" and original redirect URL \\"<URL>\\" do not match`: This can occur when the\\n  redirect URL doesn\'t match what was initial defined as the `returnUrl`. You can skip this test\\n  in development by passing `{ skipRedirectCheck: true }` to the function.\\n\\nIf `type` is set to `success`, the parent window will attempt to close the child window immediately.\\n\\nIf the error `ERR_WEB_BROWSER_REDIRECT` was thrown, it may mean that the parent window was\\nreloaded before the auth was completed. In this case you\'ll need to close the child window manually.\\n","tags":[{"tag":"platform","text":"web\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"\\n"},"type":{"type":"reference","name":"WebBrowserCompleteAuthSessionOptions"},"defaultValue":"{}"}],"type":{"type":"reference","name":"WebBrowserCompleteAuthSessionResult"}}]},{"name":"openAuthSessionAsync","kind":64,"kindString":"Function","signatures":[{"name":"openAuthSessionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"# On iOS:\\nOpens the url with Safari in a modal using `SFAuthenticationSession` on iOS 11 and greater,\\nand falling back on a `SFSafariViewController`. The user will be asked whether to allow the app\\nto authenticate using the given url.","text":"# On Android:\\nThis will be done using a \\"custom Chrome tabs\\" browser, [AppState](../react-native/appstate/),\\nand [Linking](./linking/) APIs.\\n\\n# On web:\\n> This API can only be used in a secure environment (`https`). You can use expo `start:web --https`\\nto test this. Otherwise, an error with code [`ERR_WEB_BROWSER_CRYPTO`](#errwebbrowsercrypto) will be thrown.\\nThis will use the browser\'s [`window.open()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/open) API.\\n- _Desktop_: This will create a new web popup window in the browser that can be closed later using `WebBrowser.maybeCompleteAuthSession()`.\\n- _Mobile_: This will open a new tab in the browser which can be closed using `WebBrowser.maybeCompleteAuthSession()`.\\n\\nHow this works on web:\\n- A crypto state will be created for verifying the redirect.\\n  - This means you need to run with `expo start:web --https`\\n- The state will be added to the window\'s `localstorage`. This ensures that auth cannot complete\\n  unless it\'s done from a page running with the same origin as it was started.\\n  Ex: if `openAuthSessionAsync` is invoked on `https://localhost:19006`, then `maybeCompleteAuthSession`\\n  must be invoked on a page hosted from the origin `https://localhost:19006`. Using a different\\n  website, or even a different host like `https://128.0.0.*:19006` for example will not work.\\n- A timer will be started to check for every 1000 milliseconds (1 second) to detect if the window\\n  has been closed by the user. If this happens then a promise will resolve with `{ type: \'dismiss\' }`.\\n\\n> On mobile web, Chrome and Safari will block any call to [`window.open()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/open)\\nwhich takes too long to fire after a user interaction. This method must be invoked immediately\\nafter a user interaction. If the event is blocked, an error with code [`ERR_WEB_BROWSER_BLOCKED`](#errwebbrowserblocked) will be thrown.\\n","returns":"\\n- If the user does not permit the application to authenticate with the given url, the Promise fulfills with `{ type: \'cancel\' }` object.\\n- If the user closed the web browser, the Promise fulfills with `{ type: \'cancel\' }` object.\\n- If the browser is closed using [`dismissBrowser`](#webbrowserdismissbrowser),\\nthe Promise fulfills with `{ type: \'dismiss\' }` object.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"The url to open in the web browser. This should be a login page."},"type":{"type":"intrinsic","name":"string"}},{"name":"redirectUrl","kind":32768,"kindString":"Parameter","comment":{"shortText":"_Optional_ - The url to deep link back into your app.\\nBy default, this will be set to output of [`Linking.createURL(\\"\\")`](./linking/#linkingcreateurlpath-namedparameters)."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"_Optional_ - An object extending the [`WebBrowserOpenOptions`](#webbrowseropenoptions).\\nIf there is no native AuthSession implementation available (which is the case on Android)\\nthese params will be used in the browser polyfill. If there is a native AuthSession implementation,\\nthese params will be ignored.\\n"},"type":{"type":"reference","name":"AuthSessionOpenOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserAuthSessionResult"}],"name":"Promise"}}]},{"name":"openBrowserAsync","kind":64,"kindString":"Function","signatures":[{"name":"openBrowserAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Opens the url with Safari in a modal on iOS using [`SFSafariViewController`](https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller),\\nand Chrome in a new [custom tab](https://developer.chrome.com/multidevice/android/customtabs)\\non Android. On iOS, the modal Safari will not share cookies with the system Safari. If you need\\nthis, use [`openAuthSessionAsync`](#webbrowseropenauthsessionasyncurl-redirecturl-browserparams).","returns":"The promise behaves differently based on the platform.\\nOn Android promise resolves with `{type: \'opened\'}` if we were able to open browser.\\nOn iOS:\\n- If the user closed the web browser, the Promise resolves with `{ type: \'cancel\' }`.\\n- If the browser is closed using [`dismissBrowser`](#webbrowserdismissbrowser), the Promise resolves with `{ type: \'dismiss\' }`.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"The url to open in the web browser."},"type":{"type":"intrinsic","name":"string"}},{"name":"browserParams","kind":32768,"kindString":"Parameter","comment":{"shortText":"A dictionary of key-value pairs.\\n"},"type":{"type":"reference","name":"WebBrowserOpenOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserResult"}],"name":"Promise"}}]},{"name":"warmUpAsync","kind":64,"kindString":"Function","signatures":[{"name":"warmUpAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"This method calls `warmUp` method on [CustomTabsClient](https://developer.android.com/reference/android/support/customtabs/CustomTabsClient.html#warmup(long))\\nfor specified package.","returns":"A promise which fulfils with `WebBrowserWarmUpResult` object.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"browserPackage","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Package of browser to be warmed up. If not set, preferred browser will be warmed.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserWarmUpResult"}],"name":"Promise"}}]}]}')},npd2:function(e){e.exports=JSON.parse('{"name":"expo-application","kind":1,"kindString":"Project","originalName":"","children":[{"name":"ApplicationReleaseType","kind":8,"kindString":"Enumeration","children":[{"name":"AD_HOC","kind":16,"kindString":"Enumeration member","defaultValue":"4"},{"name":"APP_STORE","kind":16,"kindString":"Enumeration member","defaultValue":"5"},{"name":"DEVELOPMENT","kind":16,"kindString":"Enumeration member","defaultValue":"3"},{"name":"ENTERPRISE","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"SIMULATOR","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","defaultValue":"0"}]},{"name":"androidId","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The value of [`Settings.Secure.ANDROID_ID`](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID).\\nThis is a hexadecimal `string` unique to each combination of app-signing key, user, and device.\\nThe value may change if a factory reset is performed on the device or if an APK signing key changes.\\nFor more information about how the platform handles `ANDROID_ID` in Android 8.0 (API level 26)\\nand higher, see [Android 8.0 Behavior Changes](https://developer.android.com/about/versions/oreo/android-8.0-changes.html#privacy-all).\\nOn iOS and web, this value is `null`.\\n> In versions of the platform lower than Android 8.0 (API level 26), this value remains constant\\n> for the lifetime of the user\'s device. See the [ANDROID_ID](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID)\\n> official docs for more information.","tags":[{"tag":"example","text":"`\\"dd96dec43fb81c97\\"`"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"applicationId","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The ID of the application. On Android, this is the application ID. On iOS, this is the bundle ID.\\nOn web, this is `null`.","tags":[{"tag":"example","text":"`\\"com.cocoacasts.scribbles\\"`, `\\"com.apple.Pages\\"`\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"applicationName","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The human-readable name of the application that is displayed with the app\'s icon on the device\'s\\nhome screen or desktop. On Android and iOS, this value is a `string` unless the name could not be\\nretrieved, in which case this value will be `null`. On web this value is `null`.","tags":[{"tag":"example","text":"`\\"Expo\\"`, `\\"Yelp\\"`, `\\"Instagram\\"`\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"nativeApplicationVersion","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The human-readable version of the native application that may be displayed in the app store.\\nThis is the `Info.plist` value for `CFBundleShortVersionString` on iOS and the version name set\\nby `version` in `app.json` on Android at the time the native app was built.\\nOn web, this value is `null`.","tags":[{"tag":"example","text":"`\\"2.11.0\\"`\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"nativeBuildVersion","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The internal build version of the native application that the app store may use to distinguish\\nbetween different binaries. This is the `Info.plist` value for `CFBundleVersion` on iOS (set with\\n`ios.buildNumber` value in `app.json` in a standalone app) and the version code set by\\n`android.versionCode` in `app.json` on Android at the time the native app was built. On web, this\\nvalue is `null`. The return type on Android and iOS is `string`.","tags":[{"tag":"example","text":"iOS: `\\"2.11.0\\"`, Android: `\\"114\\"`\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"getInstallReferrerAsync","kind":64,"kindString":"Function","signatures":[{"name":"getInstallReferrerAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the referrer URL of the installed app with the [`Install Referrer API`](https://developer.android.com/google/play/installreferrer)\\nfrom the Google Play Store. In practice, the referrer URL may not be a complete, absolute URL.","returns":"A `Promise` that fulfills with a `string` of the referrer URL of the installed app.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Application.getInstallReferrerAsync();\\n// \\"utm_source=google-play&utm_medium=organic\\"\\n```"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getInstallationTimeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getInstallationTimeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the time the app was installed onto the device, not counting subsequent updates. If the app\\nis uninstalled and reinstalled, this method returns the time the app was reinstalled.\\n- On iOS, this method uses the [`NSFileCreationDate`](https://developer.apple.com/documentation/foundation/nsfilecreationdate?language=objc)\\nof the app\'s document root directory.\\n- On Android, this method uses [`PackageInfo.firstInstallTime`](https://developer.android.com/reference/android/content/pm/PackageInfo.html#firstInstallTime).\\n- On web, this method returns `null`.","returns":"Returns a `Promise` that fulfills with a `Date` object that specifies the time the app\\nwas installed on the device.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Application.getInstallationTimeAsync();\\n// 2019-07-18T18:08:26.121Z\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getIosApplicationReleaseTypeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIosApplicationReleaseTypeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the iOS application release type.","returns":"Returns a promise which fulfills with an [`ApplicationReleaseType`](#applicationreleasetype).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ApplicationReleaseType"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getIosIdForVendorAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIosIdForVendorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the iOS \\"identifier for vendor\\" ([IDFV](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor))\\nvalue, a string ID that uniquely identifies a device to the app\u2019s vendor. This method may\\nsometimes return `nil`, in which case wait and call the method again later. This might happen\\nwhen the device has been restarted before the user has unlocked the device.","text":"The OS will change the vendor identifier if all apps from the current app\'s vendor have been\\nuninstalled.\\n","returns":"A `Promise` that fulfills with a `string` specifying the app\'s vendor ID. Apps from the\\nsame vendor will return the same ID. See Apple\'s documentation for more information about the\\nvendor ID\'s semantics.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Application.getIosIdForVendorAsync();\\n// \\"68753A44-4D6F-1226-9C60-0050E4C00067\\"\\n```"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getIosPushNotificationServiceEnvironmentAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIosPushNotificationServiceEnvironmentAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current [Apple Push Notification (APN)](https://developer.apple.com/documentation/bundleresources/entitlements/aps-environment?language=objc)\\nservice environment.","returns":"Returns a promise fulfilled with the string, either `\'development\'` or `\'production\'`,\\nbased on the current APN environment.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getLastUpdateTimeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getLastUpdateTimeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the last time the app was updated from the Google Play Store.","returns":"Returns a `Promise` that fulfills with a `Date` object that specifies the last time\\nthe app was updated via the Google Play Store).\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Application.getLastUpdateTimeAsync();\\n// 2019-07-18T21:20:16.887Z\\n```"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"Date","package":"typescript","name":"Date"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},o77H:function(e){e.exports=JSON.parse('{"name":"expo-sharing","kind":1,"kindString":"Project","originalName":"","children":[{"name":"SharingOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"UTI","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"([Uniform Type Identifier](https://developer.apple.com/library/archive/documentation/FileManagement/Conceptual/understanding_utis/understand_utis_conc/understand_utis_conc.html))\\nthe type of the target file *(iOS only)*"},"type":{"type":"intrinsic","name":"string"}},{"name":"dialogTitle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets share dialog title *(Android and Web only)*"},"type":{"type":"intrinsic","name":"string"}},{"name":"mimeType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets `mimeType` for `Intent` *(Android only)*"},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine if the sharing API can be used in this app.","returns":"A promise that fulfills with `true` if the sharing API can be used, and `false` otherwise.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"shareAsync","kind":64,"kindString":"Function","signatures":[{"name":"shareAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Opens action sheet to share file to different applications which can handle this type of file."},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"text":"Local file URL to share."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"A map of share options.\\n"},"type":{"type":"reference","name":"SharingOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"Promise"}}]}]}')},o8bm:function(e,w,n){"use strict";var c=/[\0\t\n\r]/g;function p(){var d=!0,a=1,m="",r;return s;function s(i,o,t){var l=[],k,g,h,f,S;for(i=m+i.toString(o),h=0,m="",d&&(i.charCodeAt(0)===65279&&h++,d=void 0);h<i.length;){if(c.lastIndex=h,k=c.exec(i),f=k?k.index:i.length,S=i.charCodeAt(f),!k){m=i.slice(h);break}if(S===10&&h===f&&r)l.push(-3),r=void 0;else if(r&&(l.push(-5),r=void 0),h<f&&(l.push(i.slice(h,f)),a+=f-h),S===0)l.push(65533),a++;else if(S===9)for(g=Math.ceil(a/4)*4,l.push(-2);a++<g;)l.push(-1);else S===10?(l.push(-4),a=1):(r=!0,a=1);h=f+1}return t&&(r&&l.push(-5),m&&l.push(m),l.push(null)),l}}e.exports=p},oAbb:function(e){e.exports=JSON.parse('{"name":"expo-crypto","kind":1,"kindString":"Project","originalName":"","children":[{"name":"CryptoDigestAlgorithm","kind":8,"kindString":"Enumeration","comment":{"shortText":"[`Cryptographic hash function`](https://developer.mozilla.org/en-US/docs/Glossary/Cryptographic_hash_function)"},"children":[{"name":"MD2","kind":16,"kindString":"Enumeration member","comment":{"shortText":"`128` bits.","tags":[{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"MD2\\""},{"name":"MD4","kind":16,"kindString":"Enumeration member","comment":{"shortText":"`128` bits.","tags":[{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"MD4\\""},{"name":"MD5","kind":16,"kindString":"Enumeration member","comment":{"shortText":"`128` bits.","tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\\n"}]},"defaultValue":"\\"MD5\\""},{"name":"SHA1","kind":16,"kindString":"Enumeration member","comment":{"shortText":"`160` bits."},"defaultValue":"\\"SHA-1\\""},{"name":"SHA256","kind":16,"kindString":"Enumeration member","comment":{"shortText":"`256` bits. Collision Resistant."},"defaultValue":"\\"SHA-256\\""},{"name":"SHA384","kind":16,"kindString":"Enumeration member","comment":{"shortText":"`384` bits. Collision Resistant."},"defaultValue":"\\"SHA-384\\""},{"name":"SHA512","kind":16,"kindString":"Enumeration member","comment":{"shortText":"`512` bits. Collision Resistant."},"defaultValue":"\\"SHA-512\\""}]},{"name":"CryptoEncoding","kind":8,"kindString":"Enumeration","children":[{"name":"BASE64","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Has trailing padding. Does not wrap lines. Does not have a trailing newline."},"defaultValue":"\\"base64\\""},{"name":"HEX","kind":16,"kindString":"Enumeration member","defaultValue":"\\"hex\\""}]},{"name":"CryptoDigestOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"encoding","kind":1024,"kindString":"Property","comment":{"shortText":"Format the digest is returned in."},"type":{"type":"reference","name":"CryptoEncoding"}}]}}},{"name":"Digest","kind":4194304,"kindString":"Type alias","type":{"type":"intrinsic","name":"string"}},{"name":"digestStringAsync","kind":64,"kindString":"Function","signatures":[{"name":"digestStringAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"The `digestStringAsync()` method of `Crypto` generates a digest of the supplied `data` string with the provided digest `algorithm`.\\nA digest is a short fixed-length value derived from some variable-length input. **Cryptographic digests** should exhibit _collision-resistance_,\\nmeaning that it\'s very difficult to generate multiple inputs that have equal digest values.\\nYou can specify the returned string format as one of `CryptoEncoding`. By default, the resolved value will be formatted as a `HEX` string.\\nOn web, this method can only be called from a secure origin (https) otherwise an error will be thrown.","returns":"Return a Promise which fulfills with a value representing the hashed input.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst digest = await Crypto.digestStringAsync(\\n  Crypto.CryptoDigestAlgorithm.SHA512,\\n  \'\u{1F953} Easy to Digest! \u{1F499}\'\\n);\\n```\\n"}]},"parameters":[{"name":"algorithm","kind":32768,"kindString":"Parameter","comment":{"shortText":"The cryptographic hash function to use to transform a block of data into a fixed-size output."},"type":{"type":"reference","name":"CryptoDigestAlgorithm"}},{"name":"data","kind":32768,"kindString":"Parameter","comment":{"shortText":"The value that will be used to generate a digest."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"Format of the digest string. Defaults to: `CryptoDigestOptions.HEX`."},"type":{"type":"reference","name":"CryptoDigestOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Digest"}],"name":"Promise"}}]}]}')},oDdY:function(e,w){var n="phrasing",c=["autolink","link","image","label"];w.unsafe=[{character:"@",before:"[+\\-.\\w]",after:"[\\-.\\w]",inConstruct:n,notInConstruct:c},{character:".",before:"[Ww]",after:"[\\-.\\w]",inConstruct:n,notInConstruct:c},{character:":",before:"[ps]",after:"\\/",inConstruct:n,notInConstruct:c}]},oJEb:function(e,w,n){"use strict";var c=n("TDhK"),p=n("Vx/6"),d=n("pe0m");function a(s){for(var i={},o=-1;++o<s.length;)m(i,s[o]);return i}function m(s,i){var o,t,l,k;for(o in i){t=c.call(s,o)?s[o]:s[o]={},l=i[o];for(k in l)t[k]=r(d(l[k]),c.call(t,k)?t[k]:[])}}function r(s,i){for(var o=-1,t=[];++o<s.length;)(s[o].add==="after"?i:t).push(s[o]);return p(i,0,0,t),i}e.exports=a},oMG0:function(e){e.exports=JSON.parse('{"name":"expo-sharing","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"SharingOptions","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"UTI","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"([Uniform Type Identifier](https://developer.apple.com/library/archive/documentation/FileManagement/Conceptual/understanding_utis/understand_utis_conc/understand_utis_conc.html))\\nthe type of the target file *(iOS only)*"},"type":{"type":"intrinsic","name":"string"}},{"name":"dialogTitle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets share dialog title *(Android and Web only)*"},"type":{"type":"intrinsic","name":"string"}},{"name":"mimeType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets `mimeType` for `Intent` *(Android only)*"},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"isAvailableAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Determine if the sharing API can be used in this app.","returns":"A promise that fulfills with `true` if the sharing API can be used, and `false` otherwise.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"shareAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"shareAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens action sheet to share file to different applications which can handle this type of file."},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Local file URL to share."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A map of share options.\\n"},"type":{"type":"reference","name":"SharingOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"Promise"}}]}]}')},oNQa:function(e){e.exports=JSON.parse('{"name":"expo-location","kind":1,"kindString":"Project","originalName":"","children":[{"name":"LocationAccuracy","kind":16777216,"kindString":"Reference"},{"name":"LocationActivityType","kind":16777216,"kindString":"Reference"},{"name":"LocationGeofencingEventType","kind":16777216,"kindString":"Reference"},{"name":"LocationGeofencingRegionState","kind":16777216,"kindString":"Reference"},{"name":"Accuracy","kind":8,"kindString":"Enumeration","comment":{"shortText":"Enum with available location accuracies."},"children":[{"name":"Balanced","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Accurate to within one hundred meters."},"defaultValue":"3"},{"name":"BestForNavigation","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The highest possible accuracy that uses additional sensor data to facilitate navigation apps."},"defaultValue":"6"},{"name":"High","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Accurate to within ten meters of the desired target."},"defaultValue":"4"},{"name":"Highest","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The best level of accuracy available."},"defaultValue":"5"},{"name":"Low","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Accurate to the nearest kilometer."},"defaultValue":"2"},{"name":"Lowest","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Accurate to the nearest three kilometers."},"defaultValue":"1"}]},{"name":"ActivityType","kind":8,"kindString":"Enumeration","comment":{"shortText":"Enum with available activity types of background location tracking."},"children":[{"name":"Airborne","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Intended for airborne activities. Fall backs to `ActivityType.Other` if\\nunsupported.","tags":[{"tag":"platform","text":"ios 12+\\n"}]},"defaultValue":"5"},{"name":"AutomotiveNavigation","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Location updates are being used specifically during vehicular navigation to track location\\nchanges to the automobile."},"defaultValue":"2"},{"name":"Fitness","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Use this activity type if you track fitness activities such as walking, running, cycling,\\nand so on."},"defaultValue":"3"},{"name":"Other","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Default activity type. Use it if there is no other type that matches the activity you track."},"defaultValue":"1"},{"name":"OtherNavigation","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Activity type for movements for other types of vehicular navigation that are not automobile\\nrelated."},"defaultValue":"4"}]},{"name":"GeofencingEventType","kind":8,"kindString":"Enumeration","comment":{"shortText":"A type of the event that geofencing task can receive."},"children":[{"name":"Enter","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Emitted when the device entered observed region."},"defaultValue":"1"},{"name":"Exit","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Occurs as soon as the device left observed region"},"defaultValue":"2"}]},{"name":"GeofencingRegionState","kind":8,"kindString":"Enumeration","comment":{"shortText":"State of the geofencing region that you receive through the geofencing task."},"children":[{"name":"Inside","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates that the device is inside the region."},"defaultValue":"1"},{"name":"Outside","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Inverse of inside state."},"defaultValue":"2"},{"name":"Unknown","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates that the device position related to the region is unknown."},"defaultValue":"0"}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"LocationPermissionResponse","kind":256,"kindString":"Interface","comment":{"shortText":"`LocationPermissionResponse` extends [PermissionResponse](permissions.md#permissionresponse)\\ntype exported by `expo-modules-core` and contains additional platform-specific fields."},"children":[{"name":"android","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"PermissionDetailsLocationAndroid"}},{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"UMPermissionResponse.canAskAgain"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"},"inheritedFrom":{"type":"reference","name":"UMPermissionResponse.expires"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"UMPermissionResponse.granted"}},{"name":"ios","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"PermissionDetailsLocationIOS"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"},"inheritedFrom":{"type":"reference","name":"UMPermissionResponse.status"}}],"extendedTypes":[{"type":"reference","name":"UMPermissionResponse"}]},{"name":"LocationCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Represents `watchPositionAsync` callback."},"parameters":[{"name":"location","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"LocationObject"}}],"type":{"type":"intrinsic","name":"any"}}]}}},{"name":"LocationGeocodedAddress","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing a result of `reverseGeocodeAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"city","kind":1024,"kindString":"Property","comment":{"shortText":"City name of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"country","kind":1024,"kindString":"Property","comment":{"shortText":"Localized country name of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"district","kind":1024,"kindString":"Property","comment":{"shortText":"Additional city-level information like district name."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"isoCountryCode","kind":1024,"kindString":"Property","comment":{"shortText":"Localized (ISO) country code of the address, if available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"The name of the placemark, for example, \\"Tower Bridge\\"."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"postalCode","kind":1024,"kindString":"Property","comment":{"shortText":"Postal code of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"region","kind":1024,"kindString":"Property","comment":{"shortText":"The state or province associated with the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"street","kind":1024,"kindString":"Property","comment":{"shortText":"Street name of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"streetNumber","kind":1024,"kindString":"Property","comment":{"shortText":"Street number of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"subregion","kind":1024,"kindString":"Property","comment":{"shortText":"Additional information about administrative area."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"timezone","kind":1024,"kindString":"Property","comment":{"shortText":"The timezone identifier associated with the address.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}}},{"name":"LocationGeocodedLocation","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing a result of `geocodeAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accuracy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The radius of uncertainty for the location, measured in meters."},"type":{"type":"intrinsic","name":"number"}},{"name":"altitude","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The altitude in meters above the WGS 84 reference ellipsoid."},"type":{"type":"intrinsic","name":"number"}},{"name":"latitude","kind":1024,"kindString":"Property","comment":{"shortText":"The latitude in degrees."},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","comment":{"shortText":"The longitude in degrees."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationGeocodingOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object of options for forward and reverse geocoding."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"useGoogleMaps","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to force using Google Maps API instead of the native implementation.\\nUsed by default only on Web platform. Requires providing an API key by `setGoogleApiKey`."},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"LocationHeadingCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Represents `watchHeadingAsync` callback."},"parameters":[{"name":"location","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"LocationHeadingObject"}}],"type":{"type":"intrinsic","name":"any"}}]}}},{"name":"LocationHeadingObject","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type of the object containing heading details and provided by `watchHeadingAsync` callback."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accuracy","kind":1024,"kindString":"Property","comment":{"shortText":"Level of calibration of compass.\\n- `3`: high accuracy, `2`: medium accuracy, `1`: low accuracy, `0`: none\\nReference for iOS:\\n- `3`: < 20 degrees uncertainty, `2`: < 35 degrees, `1`: < 50 degrees, `0`: > 50 degrees"},"type":{"type":"intrinsic","name":"number"}},{"name":"magHeading","kind":1024,"kindString":"Property","comment":{"shortText":"Measure of magnetic north in degrees."},"type":{"type":"intrinsic","name":"number"}},{"name":"trueHeading","kind":1024,"kindString":"Property","comment":{"shortText":"Measure of true north in degrees (needs location permissions, will return `-1` if not given)."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationLastKnownOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing options object that can be passed to `getLastKnownPositionAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"maxAge","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A number of milliseconds after which the last known location starts to be invalid and thus\\n`null` is returned."},"type":{"type":"intrinsic","name":"number"}},{"name":"requiredAccuracy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The maximum radius of uncertainty for the location, measured in meters. If the last known\\nlocation\'s accuracy radius is bigger (less accurate) then `null` is returned."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationObject","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing the location object."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"coords","kind":1024,"kindString":"Property","comment":{"shortText":"The coordinates of the position."},"type":{"type":"reference","name":"LocationObjectCoords"}},{"name":"timestamp","kind":1024,"kindString":"Property","comment":{"shortText":"The time at which this position information was obtained, in milliseconds since epoch."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationObjectCoords","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing the location GPS related data."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accuracy","kind":1024,"kindString":"Property","comment":{"shortText":"The radius of uncertainty for the location, measured in meters. Can be `null` on Web if it\'s not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"altitude","kind":1024,"kindString":"Property","comment":{"shortText":"The altitude in meters above the WGS 84 reference ellipsoid. Can be `null` on Web if it\'s not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"altitudeAccuracy","kind":1024,"kindString":"Property","comment":{"shortText":"The accuracy of the altitude value, in meters. Can be `null` on Web if it\'s not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"heading","kind":1024,"kindString":"Property","comment":{"shortText":"Horizontal direction of travel of this device, measured in degrees starting at due north and\\ncontinuing clockwise around the compass. Thus, north is 0 degrees, east is 90 degrees, south is\\n180 degrees, and so on. Can be `null` on Web if it\'s not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"latitude","kind":1024,"kindString":"Property","comment":{"shortText":"The latitude in degrees."},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","comment":{"shortText":"The longitude in degrees."},"type":{"type":"intrinsic","name":"number"}},{"name":"speed","kind":1024,"kindString":"Property","comment":{"shortText":"The instantaneous speed of the device in meters per second. Can be `null` on Web if it\'s not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}}]}}},{"name":"LocationOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing options argument in `getCurrentPositionAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accuracy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Location manager accuracy. Pass one of `LocationAccuracy` enum values.\\nFor low-accuracies the implementation can avoid geolocation providers\\nthat consume a significant amount of power (such as GPS)."},"type":{"type":"reference","name":"LocationAccuracy"}},{"name":"distanceInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Receive updates only when the location has changed by at least this distance in meters.\\nDefault value may depend on `accuracy` option."},"type":{"type":"intrinsic","name":"number"}},{"name":"mayShowUserSettingsDialog","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"(Android only) Specifies whether to ask the user to turn on improved accuracy location mode\\nwhich uses Wi-Fi, cell networks and GPS sensor.","tags":[{"tag":"default","text":"true.\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"timeInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"(Android only) Minimum time to wait between each update in milliseconds.\\nDefault value may depend on `accuracy` option."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationProviderStatus","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Represents the object containing details about location provider."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"backgroundModeEnabled","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"gpsAvailable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the GPS provider is available. If `true` the location data will come\\nfrom GPS, especially for requests with high accuracy.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"locationServicesEnabled","kind":1024,"kindString":"Property","comment":{"shortText":"Whether location services are enabled. See [Location.hasServicesEnabledAsync](#locationhasservicesenabledasync)\\nfor a more convenient solution to get this value."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"networkAvailable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the network provider is available. If `true` the location data will\\ncome from cellular network, especially for requests with low accuracy.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"passiveAvailable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the passive provider is available. If `true` the location data will\\nbe determined passively.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"LocationRegion","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing geofencing region object."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"identifier","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The identifier of the region object. Defaults to auto-generated UUID hash."},"type":{"type":"intrinsic","name":"string"}},{"name":"latitude","kind":1024,"kindString":"Property","comment":{"shortText":"The latitude in degrees of region\'s center point."},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","comment":{"shortText":"The longitude in degrees of region\'s center point."},"type":{"type":"intrinsic","name":"number"}},{"name":"notifyOnEnter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value whether to call the task if the device enters the region.","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"notifyOnExit","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value whether to call the task if the device exits the region.","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"radius","kind":1024,"kindString":"Property","comment":{"shortText":"The radius measured in meters that defines the region\'s outer boundary."},"type":{"type":"intrinsic","name":"number"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"One of [GeofencingRegionState](#geofencingregionstate) region state. Determines whether the\\ndevice is inside or outside a region."},"type":{"type":"reference","name":"LocationGeofencingRegionState"}}]}}},{"name":"LocationSubscription","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Represents subscription object returned by methods watching for new locations or headings."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"Call this function with no arguments to remove this subscription. The callback will no longer\\nbe called for location updates."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"LocationTaskOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing background location task options."},"type":{"type":"intersection","types":[{"type":"reference","name":"LocationOptions"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"activityType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The type of user activity associated with the location updates.","tags":[{"tag":"see","text":"See [Apple docs](https://developer.apple.com/documentation/corelocation/cllocationmanager/1620567-activitytype) for more details."},{"tag":"default","text":"LocationActivityType.Other"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"LocationActivityType"}},{"name":"deferredUpdatesDistance","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The distance in meters that must occur between last reported location and the current location\\nbefore deferred locations are reported.","tags":[{"tag":"default","text":"0\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"deferredUpdatesInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Minimum time interval in milliseconds that must pass since last reported location before all\\nlater locations are reported in a batched update","tags":[{"tag":"default","text":"0\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"deferredUpdatesTimeout","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"foregroundService","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"LocationTaskServiceOptions"}},{"name":"pausesUpdatesAutomatically","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean value indicating whether the location manager can pause location\\nupdates to improve battery life without sacrificing location data. When this option is set to\\n`true`, the location manager pauses updates (and powers down the appropriate hardware) at times\\nwhen the location data is unlikely to change. You can help the determination of when to pause\\nlocation updates by assigning a value to the `activityType` property.","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"showsBackgroundLocationIndicator","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean indicating whether the status bar changes its appearance when\\nlocation services are used in the background.","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"ios 11+\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}]}},{"name":"LocationTaskServiceOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"notificationBody","kind":1024,"kindString":"Property","comment":{"shortText":"Subtitle of the foreground service notification."},"type":{"type":"intrinsic","name":"string"}},{"name":"notificationColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Color of the foreground service notification. Accepts `#RRGGBB` and `#AARRGGBB` hex formats."},"type":{"type":"intrinsic","name":"string"}},{"name":"notificationTitle","kind":1024,"kindString":"Property","comment":{"shortText":"Title of the foreground service notification."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"PermissionDetailsLocationAndroid","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accuracy","kind":1024,"kindString":"Property","comment":{"shortText":"Indicates the type of location provider."},"type":{"type":"union","types":[{"type":"literal","value":"fine"},{"type":"literal","value":"coarse"},{"type":"literal","value":"none"}]}},{"name":"scope","kind":1024,"kindString":"Property","comment":{"tags":[{"tag":"deprecated","text":"__Deprecated.__ Use `accuracy` field instead.\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":"fine"},{"type":"literal","value":"coarse"},{"type":"literal","value":"none"}]}}]}}},{"name":"PermissionDetailsLocationIOS","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"scope","kind":1024,"kindString":"Property","comment":{"shortText":"The scope of granted permission. Indicates when it\'s possible to use location."},"type":{"type":"union","types":[{"type":"literal","value":"whenInUse"},{"type":"literal","value":"always"},{"type":"literal","value":"none"}]}}]}}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"EventEmitter","kind":32,"kindString":"Variable","type":{"type":"reference","name":"EventEmitter"},"defaultValue":"..."},{"name":"enableNetworkProviderAsync","kind":64,"kindString":"Function","signatures":[{"name":"enableNetworkProviderAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to turn on high accuracy location mode which enables network provider that uses\\nGoogle Play services to improve location accuracy and location-based services.","returns":"A promise resolving as soon as the user accepts the dialog. Rejects if denied.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"geocodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"geocodeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Geocode an address string to latitude-longitude location.\\n> **Note**: Geocoding is resource consuming and has to be used reasonably. Creating too many\\n> requests at a time can result in an error, so they have to be managed properly.\\n> It\'s also discouraged to use geocoding while the app is in the background and its results won\'t\\n> be shown to the user immediately.","text":"> On Android, you must request a location permission (`Permissions.LOCATION`) from the user\\n> before geocoding can be used.","returns":"A promise which fulfills with an array (in most cases its size is 1) of [`LocationGeocodedLocation`](#locationgeocodedlocation) objects.\\n"},"parameters":[{"name":"address","kind":32768,"kindString":"Parameter","comment":{"shortText":"A string representing address, eg. `\\"Baker Street London\\"`."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{},"type":{"type":"reference","name":"LocationGeocodingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"LocationGeocodedLocation"}}],"name":"Promise"}}]},{"name":"getBackgroundPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBackgroundPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing location while the app is in the background.","returns":"A promise that fulfills with an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getCurrentPositionAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCurrentPositionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Requests for one-time delivery of the user\'s current location.\\nDepending on given `accuracy` option it may take some time to resolve,\\nespecially when you\'re inside a building.\\n> __Note:__ Calling it causes the location manager to obtain a location fix which may take several\\n> seconds. Consider using [`Location.getLastKnownPositionAsync`](#locationgetlastknownpositionasyncoptions)\\n> if you expect to get a quick response and high accuracy is not required.","returns":"A promise which fulfills with an object of type [`LocationObject`](#locationobject).\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"LocationOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationObject"}],"name":"Promise"}}]},{"name":"getForegroundPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getForegroundPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing location while the app is in the foreground.","returns":"A promise that fulfills with an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"Promise"}}]},{"name":"getHeadingAsync","kind":64,"kindString":"Function","signatures":[{"name":"getHeadingAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current heading information from the device. To simplify, it calls `watchHeadingAsync`\\nand waits for a couple of updates, and then returns the one that is accurate enough.","returns":"A promise which fulfills with an object of type [LocationHeadingObject](#locationheadingobject).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationHeadingObject"}],"name":"Promise"}}]},{"name":"getLastKnownPositionAsync","kind":64,"kindString":"Function","signatures":[{"name":"getLastKnownPositionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the last known position of the device or `null` if it\'s not available or doesn\'t match given\\nrequirements such as maximum age or required accuracy.\\nIt\'s considered to be faster than `getCurrentPositionAsync` as it doesn\'t request for the current\\nlocation, but keep in mind the returned location may not be up-to-date.","returns":"A promise which fulfills with an object of type [LocationObject](#locationobject) or\\n`null` if it\'s not available or doesn\'t match given requirements such as maximum age or required\\naccuracy.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"LocationLastKnownOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"LocationObject"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing location.","returns":"A promise that fulfills with an object of type [LocationPermissionResponse](#locationpermissionresponse).","tags":[{"tag":"deprecated","text":"__Deprecated.__ Use [`getForegroundPermissionsAsync`](#locationgetforegroundpermissionsasync) or [`getBackgroundPermissionsAsync`](#locationgetbackgroundpermissionsasync) instead.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"Promise"}}]},{"name":"getProviderStatusAsync","kind":64,"kindString":"Function","signatures":[{"name":"getProviderStatusAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check status of location providers.","returns":"A promise which fulfills with an object of type [LocationProviderStatus](#locationproviderstatus).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationProviderStatus"}],"name":"Promise"}}]},{"name":"hasServicesEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasServicesEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks whether location services are enabled by the user.","returns":"A promise which fulfills to `true` if location services are enabled on the device,\\nor `false` if not.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"hasStartedGeofencingAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasStartedGeofencingAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"A promise which fulfills with boolean value indicating whether the geofencing task is\\nstarted or not.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the geofencing task to check."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"hasStartedLocationUpdatesAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasStartedLocationUpdatesAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"A promise which fulfills with boolean value indicating whether the location task is\\nstarted or not.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the location task to check."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"installWebGeolocationPolyfill","kind":64,"kindString":"Function","signatures":[{"name":"installWebGeolocationPolyfill","kind":4096,"kindString":"Call signature","comment":{"shortText":"Polyfills `navigator.geolocation` for interop with the core React Native and Web API approach to geolocation."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"isBackgroundLocationAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isBackgroundLocationAvailableAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"requestBackgroundPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestBackgroundPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for location while the app is in the background.\\nOn __Android 11 or higher__: this method will open the system settings page - before that happens\\nyou should explain to the user why your application needs background location permission.\\nFor example, you can use `Modal` component from `react-native` to do that.\\n> __Note__: Foreground permissions should be granted before asking for the background permissions\\n(your app can\'t obtain background permission without foreground permission).","returns":"A promise that fulfills with an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestForegroundPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestForegroundPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for location while the app is in the foreground.","returns":"A promise that fulfills with an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for location.","returns":"A promise that fulfills with an object of type [LocationPermissionResponse](#locationpermissionresponse).","tags":[{"tag":"deprecated","text":"__Deprecated.__ Use [`requestForegroundPermissionsAsync`](#locationrequestforegroundpermissionsasync) or [`requestBackgroundPermissionsAsync`](#locationrequestbackgroundpermissionsasync) instead.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"Promise"}}]},{"name":"reverseGeocodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"reverseGeocodeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Reverse geocode a location to postal address.\\n> **Note**: Geocoding is resource consuming and has to be used reasonably. Creating too many\\n> requests at a time can result in an error, so they have to be managed properly.\\n> It\'s also discouraged to use geocoding while the app is in the background and its results won\'t\\n> be shown to the user immediately.","text":"> On Android, you must request a location permission (`Permissions.LOCATION`) from the user\\n> before geocoding can be used.","returns":"A promise which fulfills with an array (in most cases its size is 1) of [`LocationGeocodedAddress`](#locationgeocodedaddress) objects.\\n"},"parameters":[{"name":"location","kind":32768,"kindString":"Parameter","comment":{"shortText":"An object representing a location."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationGeocodedLocation"},{"type":"union","types":[{"type":"literal","value":"latitude"},{"type":"literal","value":"longitude"}]}],"name":"Pick"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{},"type":{"type":"reference","name":"LocationGeocodingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"LocationGeocodedAddress"}}],"name":"Promise"}}]},{"name":"setGoogleApiKey","kind":64,"kindString":"Function","signatures":[{"name":"setGoogleApiKey","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a Google API Key for using Google Maps Geocoding API which is used by default on Web\\nplatform and can be enabled through `useGoogleMaps` option of `geocodeAsync` and `reverseGeocodeAsync`\\nmethods. It might be useful for Android devices that do not have Google Play Services, hence no\\nGeocoder Service."},"parameters":[{"name":"apiKey","kind":32768,"kindString":"Parameter","comment":{"shortText":"Google API key obtained from Google API Console. This API key must have `Geocoding API`\\nenabled, otherwise your geocoding requests will be denied.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"startGeofencingAsync","kind":64,"kindString":"Function","signatures":[{"name":"startGeofencingAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Starts geofencing for given regions. When the new event comes, the task with specified name will\\nbe called with the region that the device enter to or exit from.\\nIf you want to add or remove regions from already running geofencing task, you can just call\\n`startGeofencingAsync` again with the new array of regions.","returns":"A promise resolving as soon as the task is registered.\\n\\n# Task parameters\\n\\nGeofencing task will be receiving following data:\\n - `eventType` - Indicates the reason for calling the task, which can be triggered by entering or exiting the region.\\n   See [GeofencingEventType](#geofencingeventtype).\\n - `region` - Object containing details about updated region. See [LocationRegion](#locationregion) for more details.\\n\\n# Example\\n```ts\\nimport { GeofencingEventType } from \'expo-location\';\\nimport * as TaskManager from \'expo-task-manager\';\\n\\n TaskManager.defineTask(YOUR_TASK_NAME, ({ data: { eventType, region }, error }) => {\\n  if (error) {\\n    // check `error.message` for more details.\\n    return;\\n  }\\n  if (eventType === GeofencingEventType.Enter) {\\n    console.log(\\"You\'ve entered region:\\", region);\\n  } else if (eventType === GeofencingEventType.Exit) {\\n    console.log(\\"You\'ve left region:\\", region);\\n  }\\n});\\n```\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task that will be called when the device enters or exits from specified regions."},"type":{"type":"intrinsic","name":"string"}},{"name":"regions","kind":32768,"kindString":"Parameter","comment":{"shortText":"Array of region objects to be geofenced."},"type":{"type":"array","elementType":{"type":"reference","name":"LocationRegion"}},"defaultValue":"[]"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"startLocationUpdatesAsync","kind":64,"kindString":"Function","signatures":[{"name":"startLocationUpdatesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Registers for receiving location updates that can also come when the app is in the background.","returns":"A promise resolving once the task with location updates is registered.\\n\\n# Task parameters\\n\\nBackground location task will be receiving following data:\\n- `locations` - An array of the new locations.\\n\\n```ts\\nimport * as TaskManager from \'expo-task-manager\';\\n\\nTaskManager.defineTask(YOUR_TASK_NAME, ({ data: { locations }, error }) => {\\n if (error) {\\n   // check `error.message` for more details.\\n   return;\\n }\\n console.log(\'Received new locations\', locations);\\n});\\n```\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task receiving location updates."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An object of options passed to the location manager."},"type":{"type":"reference","name":"LocationTaskOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"stopGeofencingAsync","kind":64,"kindString":"Function","signatures":[{"name":"stopGeofencingAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Stops geofencing for specified task. It unregisters the background task so the app will not be\\nreceiving any updates, especially in the background.","returns":"A promise resolving as soon as the task is unregistered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task to unregister."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"stopLocationUpdatesAsync","kind":64,"kindString":"Function","signatures":[{"name":"stopLocationUpdatesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Stops geofencing for specified task.","returns":"A promise resolving as soon as the task is unregistered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the background location task to stop."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"useBackgroundPermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"useBackgroundPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions for the foreground location.\\nThis uses both `requestBackgroundPermissionsAsync` and `getBackgroundPermissionsAsync` to\\ninteract with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Location.useBackgroundPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"useForegroundPermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"useForegroundPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions for the foreground location.\\nThis uses both `requestForegroundPermissionsAsync` and `getForegroundPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Location.useForegroundPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"LocationPermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"watchHeadingAsync","kind":64,"kindString":"Function","signatures":[{"name":"watchHeadingAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to compass updates from the device.","returns":"A promise which fulfills with a [`LocationSubscription`](#locationsubscription) object.\\n"},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"shortText":"This function is called on each compass update. It receives an object of type\\n[LocationHeadingObject](#locationheadingobject) as the first argument."},"type":{"type":"reference","name":"LocationHeadingCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationSubscription"}],"name":"Promise"}}]},{"name":"watchPositionAsync","kind":64,"kindString":"Function","signatures":[{"name":"watchPositionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to location updates from the device. Please note that updates will only occur while the\\napplication is in the foreground. To get location updates while in background you\'ll need to use\\n[Location.startLocationUpdatesAsync](#locationstartlocationupdatesasynctaskname-options).","returns":"A promise which fulfills with a [`LocationSubscription`](#locationsubscription) object.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"LocationOptions"}},{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"shortText":"This function is called on each location update. It receives an object of type\\n[`LocationObject`](#locationobject) as the first argument."},"type":{"type":"reference","name":"LocationCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationSubscription"}],"name":"Promise"}}]}]}')},oxjq:function(e,w,n){"use strict";e.exports=c=>{if(typeof c!="string")throw new TypeError("Expected a string");return c.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")}},pBrz:function(e){e.exports=JSON.parse('{"name":"expo-linking","kind":1,"kindString":"Project","originalName":"","children":[{"name":"CreateURLOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isTripleSlashed","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Should the URI be triple slashed `scheme:///path` or double slashed `scheme://path`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"queryParams","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An object of parameters that will be converted into a query string."},"type":{"type":"reference","name":"QueryParams"}},{"name":"scheme","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URI protocol `<scheme>://` that must be built into your native app."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"EventType","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"MessageEvent"}},{"name":"url","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"NativeURLListener","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"nativeEvent","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"MessageEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"ParsedURL","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"hostname","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"path","kind":1024,"kindString":"Property","comment":{"shortText":"The path into the app specified by the URL."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"queryParams","kind":1024,"kindString":"Property","comment":{"shortText":"The set of query parameters specified by the query string of the url used to open the app."},"type":{"type":"union","types":[{"type":"reference","name":"QueryParams"},{"type":"literal","value":null}]}},{"name":"scheme","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}}},{"name":"QueryParams","kind":4194304,"kindString":"Type alias","type":{"type":"reference","name":"ParsedQs"}},{"name":"SendIntentExtras","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"key","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"value","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"}]}}]}}},{"name":"URLListener","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"EventType"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"addEventListener","kind":64,"kindString":"Function","signatures":[{"name":"addEventListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Add a handler to `Linking` changes by listening to the `url` event type and providing the handler.\\nIt is recommended to use the [`useURL()`](#useurl) hook instead.","returns":"An EmitterSubscription that has the remove method from EventSubscription","tags":[{"tag":"see","text":"[React Native Docs Linking page](https://reactnative.dev/docs/linking#addeventlistener).\\n"}]},"parameters":[{"name":"type","kind":32768,"kindString":"Parameter","comment":{"shortText":"The only valid type is `\'url\'`."},"type":{"type":"literal","value":"url"}},{"name":"handler","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`URLListener`](#urllistener) function that takes an `event` object of the type\\n[`EventType`](#eventype)."},"type":{"type":"reference","name":"URLListener"}}],"type":{"type":"reference","name":"EmitterSubscription"}}]},{"name":"canOpenURL","kind":64,"kindString":"Function","signatures":[{"name":"canOpenURL","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine whether or not an installed app can handle a given URL.\\nOn web this always returns `true` because there is no API for detecting what URLs can be opened.","returns":"A `Promise` object that is fulfilled with `true` if the URL can be handled, otherwise it\\n`false` if not.\\n\\nThe `Promise` will reject on Android if it was impossible to check if the URL can be opened, and\\non iOS if you didn\'t [add the specific scheme in the `LSApplicationQueriesSchemes` key inside **Info.plist**](/guides/linking#opening-links-to-other-apps).\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"The URL that you want to test can be opened."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"collectManifestSchemes","kind":64,"kindString":"Function","signatures":[{"name":"collectManifestSchemes","kind":4096,"kindString":"Call signature","comment":{"shortText":"Collect a list of platform schemes from the manifest.","text":"This method is based on the `Scheme` modules from `@expo/config-plugins`\\nwhich are used for collecting the schemes before prebuilding a native app.\\n\\n- iOS: scheme -> ios.scheme -> ios.bundleIdentifier\\n- Android: scheme -> android.scheme -> android.package\\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]},{"name":"createURL","kind":64,"kindString":"Function","signatures":[{"name":"createURL","kind":4096,"kindString":"Call signature","comment":{"shortText":"Helper method for constructing a deep link into your app, given an optional path and set of query\\nparameters. Creates a URI scheme with two slashes by default.","text":"The scheme in bare and standalone must be defined in the Expo config (`app.config.js` or `app.json`)\\nunder `expo.scheme`.\\n\\n# Examples\\n- Bare: `<scheme>://path` - uses provided scheme or scheme from Expo config `scheme`.\\n- Standalone, Custom: `yourscheme://path`\\n- Web (dev): `https://localhost:19006/path`\\n- Web (prod): `https://myapp.com/path`\\n- Expo Client (dev): `exp://128.0.0.1:19000/--/path`\\n- Expo Client (prod): `exp://exp.host/@yourname/your-app/--/path`\\n","returns":"A URL string which points to your app with the given deep link information.\\n"},"parameters":[{"name":"path","kind":32768,"kindString":"Parameter","comment":{"shortText":"Addition path components to append to the base URL."},"type":{"type":"intrinsic","name":"string"}},{"name":"namedParameters","kind":32768,"kindString":"Parameter","comment":{"shortText":"Additional options object."},"originalName":"__namedParameters","type":{"type":"reference","name":"CreateURLOptions"},"defaultValue":"{}"}],"type":{"type":"intrinsic","name":"string"}}]},{"name":"getInitialURL","kind":64,"kindString":"Function","signatures":[{"name":"getInitialURL","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the URL that was used to launch the app if it was launched by a link.","returns":"The URL string that launched your app, or `null`.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"hasConstantsManifest","kind":64,"kindString":"Function","signatures":[{"name":"hasConstantsManifest","kind":4096,"kindString":"Call signature","comment":{"shortText":"Ensure the user has linked the expo-constants manifest in bare workflow."},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"hasCustomScheme","kind":64,"kindString":"Function","signatures":[{"name":"hasCustomScheme","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"boolean"}}]},{"name":"makeUrl","kind":64,"kindString":"Function","signatures":[{"name":"makeUrl","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a URL that works for the environment the app is currently running in.\\nThe scheme in bare and standalone must be defined in the app.json under `expo.scheme`.","text":"# Examples\\n- Bare: empty string\\n- Standalone, Custom: `yourscheme:///path`\\n- Web (dev): `https://localhost:19006/path`\\n- Web (prod): `https://myapp.com/path`\\n- Expo Client (dev): `exp://128.0.0.1:19000/--/path`\\n- Expo Client (prod): `exp://exp.host/@yourname/your-app/--/path`\\n","returns":"A URL string which points to your app with the given deep link information.","tags":[{"tag":"deprecated","text":"An alias for [`createURL()`](#linkingcreateurlpath-namedparameters). This method is\\ndeprecated and will be removed in a future SDK version.\\n"}]},"parameters":[{"name":"path","kind":32768,"kindString":"Parameter","comment":{"shortText":"addition path components to append to the base URL."},"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"},{"name":"queryParams","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"An object with a set of query parameters. These will be merged with any\\nExpo-specific parameters that are needed (e.g. release channel) and then appended to the URL\\nas a query string."},"type":{"type":"reference","name":"ParsedQs"}},{"name":"scheme","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Optional URI protocol to use in the URL `<scheme>:///`, when `undefined` the scheme\\nwill be chosen from the Expo config (`app.config.js` or `app.json`)."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]},{"name":"openSettings","kind":64,"kindString":"Function","signatures":[{"name":"openSettings","kind":4096,"kindString":"Call signature","comment":{"shortText":"Open the operating system settings app and displays the app\u2019s custom settings, if it has any."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"openURL","kind":64,"kindString":"Function","signatures":[{"name":"openURL","kind":4096,"kindString":"Call signature","comment":{"shortText":"Attempt to open the given URL with an installed app. See the [Linking guide](/guides/linking)\\nfor more information.","returns":"A `Promise` that is fulfilled with `true` if the link is opened operating system\\nautomatically or the user confirms the prompt to open the link. The `Promise` rejects if there\\nare no applications registered for the URL or the user cancels the dialog.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"A URL for the operating system to open, eg: `tel:5555555`, `exp://`."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Promise"}}]},{"name":"parse","kind":64,"kindString":"Function","signatures":[{"name":"parse","kind":4096,"kindString":"Call signature","comment":{"shortText":"Helper method for parsing out deep link information from a URL.","returns":"A `ParsedURL` object.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"A URL that points to the currently running experience (e.g. an output of `Linking.createURL()`)."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ParsedURL"}}]},{"name":"parseInitialURLAsync","kind":64,"kindString":"Function","signatures":[{"name":"parseInitialURLAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Helper method which wraps React Native\'s `Linking.getInitialURL()` in `Linking.parse()`.\\nParses the deep link information out of the URL used to open the experience initially.\\nIf no link opened the app, all the fields will be `null`.\\n> On the web it parses the current window URL.","returns":"A promise that resolves with `ParsedURL` object.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ParsedURL"}],"name":"Promise"}}]},{"name":"removeEventListener","kind":64,"kindString":"Function","signatures":[{"name":"removeEventListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Remove a handler by passing the `url` event type and the handler.","tags":[{"tag":"see","text":"[React Native Docs Linking page](https://reactnative.dev/docs/linking#removeeventlistener).\\n"}]},"parameters":[{"name":"type","kind":32768,"kindString":"Parameter","comment":{"shortText":"The only valid type is `\'url\'`."},"type":{"type":"literal","value":"url"}},{"name":"handler","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`URLListener`](#urllistener) function that takes an `event` object of the type\\n[`EventType`](#eventype)."},"type":{"type":"reference","name":"URLListener"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"resolveScheme","kind":64,"kindString":"Function","signatures":[{"name":"resolveScheme","kind":4096,"kindString":"Call signature","parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isSilent","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"scheme","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}]}}}],"type":{"type":"intrinsic","name":"string"}}]},{"name":"sendIntent","kind":64,"kindString":"Function","signatures":[{"name":"sendIntent","kind":4096,"kindString":"Call signature","comment":{"shortText":"Launch an Android intent with extras.\\n> Use [IntentLauncher](./intent-launcher) instead, `sendIntent` is only included in\\n> `Linking` for API compatibility with React Native\'s Linking API.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"action","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"extras","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"reference","name":"SendIntentExtras"}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"useURL","kind":64,"kindString":"Function","signatures":[{"name":"useURL","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns the initial URL followed by any subsequent changes to the URL.","returns":"Returns the initial URL or `null`.\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}]}')},pDO9:function(e,w,n){"use strict";e.exports=p;var c=n("vUGn");function p(d,a){var m=a.value?a.value+`
`:"",r=a.lang&&a.lang.match(/^[^ \t]+(?=[ \t]|$)/),s={},i;return r&&(s.className=["language-"+r]),i=d(a,"code",s,[c("text",m)]),a.meta&&(i.data={meta:a.meta}),d(a.position,"pre",[i])}},pIaa:function(e){e.exports=JSON.parse('{"name":"expo-screen-orientation","kind":1,"kindString":"Project","originalName":"","children":[{"name":"Orientation","kind":8,"kindString":"Enumeration","children":[{"name":"LANDSCAPE_LEFT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Left landscape interface orientation."},"defaultValue":"3"},{"name":"LANDSCAPE_RIGHT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Right landscape interface orientation."},"defaultValue":"4"},{"name":"PORTRAIT_DOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Upside down portrait interface orientation."},"defaultValue":"2"},{"name":"PORTRAIT_UP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Right-side up portrait interface orientation."},"defaultValue":"1"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An unknown screen orientation. For example, the device is flat, perhaps on a table."},"defaultValue":"0"}]},{"name":"OrientationLock","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values can be passed to the [`lockAsync`](#screenorientationlockasyncorientationlock)\\nmethod.\\n> __Note:__ `OrientationLock.ALL` and `OrientationLock.PORTRAIT` are invalid on devices which\\n> don\'t support `OrientationLock.PORTRAIT_DOWN`."},"children":[{"name":"ALL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"All four possible orientations"},"defaultValue":"1"},{"name":"DEFAULT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The default orientation. On iOS, this will allow all orientations except `Orientation.PORTRAIT_DOWN`.\\nOn Android, this lets the system decide the best orientation."},"defaultValue":"0"},{"name":"LANDSCAPE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Any landscape orientation."},"defaultValue":"5"},{"name":"LANDSCAPE_LEFT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Left landscape only."},"defaultValue":"6"},{"name":"LANDSCAPE_RIGHT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Right landscape only."},"defaultValue":"7"},{"name":"OTHER","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A platform specific orientation. This is not a valid policy that can be applied in [`lockAsync`](#screenorientationlockasyncorientationlock)."},"defaultValue":"8"},{"name":"PORTRAIT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Any portrait orientation."},"defaultValue":"2"},{"name":"PORTRAIT_DOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Upside down portrait only."},"defaultValue":"4"},{"name":"PORTRAIT_UP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Right-side up portrait only."},"defaultValue":"3"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An unknown screen orientation lock. This is not a valid policy that can be applied in [`lockAsync`](#screenorientationlockasyncorientationlock)."},"defaultValue":"9"}]},{"name":"SizeClassIOS","kind":8,"kindString":"Enumeration","comment":{"shortText":"Each iOS device has a default set of [size classes](https://developer.apple.com/library/archive/featuredarticles/ViewControllerPGforiPhoneOS/TheAdaptiveModel.html)\\nthat you can use as a guide when designing your interface."},"children":[{"name":"COMPACT","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"REGULAR","kind":16,"kindString":"Enumeration member","defaultValue":"0"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","defaultValue":"2"}]},{"name":"WebOrientation","kind":8,"kindString":"Enumeration","children":[{"name":"LANDSCAPE_PRIMARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"landscape-primary\\""},{"name":"LANDSCAPE_SECONDARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"landscape-secondary\\""},{"name":"PORTRAIT_PRIMARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"portrait-primary\\""},{"name":"PORTRAIT_SECONDARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"portrait-secondary\\""}]},{"name":"WebOrientationLock","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum representing the lock policies that can be applied on the web platform, modelled after\\nthe [W3C specification](https://w3c.github.io/screen-orientation/#dom-orientationlocktype).\\nThese values can be applied through the [`lockPlatformAsync`](#screenorientationlockplatformasyncoptions)\\nmethod."},"children":[{"name":"ANY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"any\\""},{"name":"LANDSCAPE","kind":16,"kindString":"Enumeration member","defaultValue":"\\"landscape\\""},{"name":"LANDSCAPE_PRIMARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"landscape-primary\\""},{"name":"LANDSCAPE_SECONDARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"landscape-secondary\\""},{"name":"NATURAL","kind":16,"kindString":"Enumeration member","defaultValue":"\\"natural\\""},{"name":"PORTRAIT","kind":16,"kindString":"Enumeration member","defaultValue":"\\"portrait\\""},{"name":"PORTRAIT_PRIMARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"portrait-primary\\""},{"name":"PORTRAIT_SECONDARY","kind":16,"kindString":"Enumeration member","defaultValue":"\\"portrait-secondary\\""},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","defaultValue":"\\"unknown\\""}]},{"name":"OrientationChangeEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"orientationInfo","kind":1024,"kindString":"Property","comment":{"shortText":"The current `ScreenOrientationInfo` of the device."},"type":{"type":"reference","name":"ScreenOrientationInfo"}},{"name":"orientationLock","kind":1024,"kindString":"Property","comment":{"shortText":"The current `OrientationLock` of the device."},"type":{"type":"reference","name":"OrientationLock"}}]}}},{"name":"OrientationChangeListener","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"OrientationChangeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"PlatformOrientationInfo","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"screenOrientationArrayIOS","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of orientations to allow on the iOS platform.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"array","elementType":{"type":"reference","name":"Orientation"}}},{"name":"screenOrientationConstantAndroid","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A constant to set using the Android native [API](https://developer.android.com/reference/android/R.attr.html#screenOrientation).\\nFor example, in order to set the lock policy to [unspecified](https://developer.android.com/reference/android/content/pm/ActivityInfo.html#SCREEN_ORIENTATION_UNSPECIFIED),\\n`-1` should be passed in.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"screenOrientationLockWeb","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A web orientation lock to apply in the browser.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"reference","name":"WebOrientationLock"}}]}}},{"name":"ScreenOrientationInfo","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"horizontalSizeClass","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The [horizontal size class](https://developer.apple.com/library/archive/featuredarticles/ViewControllerPGforiPhoneOS/TheAdaptiveModel.html)\\nof the device.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"SizeClassIOS"}},{"name":"orientation","kind":1024,"kindString":"Property","comment":{"shortText":"The current orientation of the device."},"type":{"type":"reference","name":"Orientation"}},{"name":"verticalSizeClass","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The [vertical size class](https://developer.apple.com/library/archive/featuredarticles/ViewControllerPGforiPhoneOS/TheAdaptiveModel.html)\\nof the device.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"SizeClassIOS"}}]}}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"addOrientationChangeListener","kind":64,"kindString":"Function","signatures":[{"name":"addOrientationChangeListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Invokes the `listener` function when the screen orientation changes from `portrait` to `landscape`\\nor from `landscape` to `portrait`. For example, it won\'t be invoked when screen orientation\\nchange from `portrait up` to `portrait down`, but it will be called when there was a change from\\n`portrait up` to `landscape left`."},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"Each orientation update will pass an object with the new [`OrientationChangeEvent`](#orientationchangeevent)\\nto the listener.\\n"},"type":{"type":"reference","name":"OrientationChangeListener"}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getOrientationAsync","kind":64,"kindString":"Function","signatures":[{"name":"getOrientationAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current screen orientation.","returns":"Returns a promise that fulfils with an [`Orientation`](#screenorientationorientation)\\nvalue that reflects the current screen orientation.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_GET_ORIENTATION_LOCK` - __Android Only.__ An unknown error occurred\\n  when trying to get the system lock.\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Orientation"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getOrientationLockAsync","kind":64,"kindString":"Function","signatures":[{"name":"getOrientationLockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current screen orientation lock type.","returns":"Returns a promise which fulfils with an [`OrientationLock`](#orientationlock)\\nvalue.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"OrientationLock"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getPlatformOrientationLockAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPlatformOrientationLockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the platform specific screen orientation lock type.","returns":"Returns a promise which fulfils with a [`PlatformOrientationInfo`](#platformorientationinfo)\\nvalue.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_GET_PLATFORM_ORIENTATION_LOCK`\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PlatformOrientationInfo"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"lockAsync","kind":64,"kindString":"Function","signatures":[{"name":"lockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Lock the screen orientation to a particular `OrientationLock`.","returns":"Returns a promise with `void` value, which fulfils when the orientation is set.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_INVALID_ORIENTATION_LOCK` - An invalid [`OrientationLock`](#orientationlock)\\n  was passed in.\\n- `ERR_SCREEN_ORIENTATION_UNSUPPORTED_ORIENTATION_LOCK` - The platform does not support the\\n  orientation lock policy.\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n","tags":[{"tag":"example","text":"\\n```ts\\nasync function changeScreenOrientation() {\\n  await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE_LEFT);\\n}\\n```\\n"}]},"parameters":[{"name":"orientationLock","kind":32768,"kindString":"Parameter","comment":{"shortText":"The orientation lock to apply. See the [`OrientationLock`](#orientationlock)\\nenum for possible values."},"type":{"type":"reference","name":"OrientationLock"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"lockPlatformAsync","kind":64,"kindString":"Function","signatures":[{"name":"lockPlatformAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns a promise with `void` value, resolving when the orientation is set and rejecting\\nif an invalid option or value is passed.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_INVALID_ORIENTATION_LOCK` - __iOS Only.__ An invalid [`OrientationLock`](#orientationlock)\\n  was passed in.\\n- `ERR_SCREEN_ORIENTATION_UNSUPPORTED_ORIENTATION_LOCK` - The platform does not support the\\n  orientation lock policy.\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"The platform specific lock to apply. See the [`PlatformOrientationInfo`](#platformorientationinfo)\\nobject type for the different platform formats."},"type":{"type":"reference","name":"PlatformOrientationInfo"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"removeOrientationChangeListener","kind":64,"kindString":"Function","signatures":[{"name":"removeOrientationChangeListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unsubscribes the listener associated with the `Subscription` object from all orientation change\\nupdates."},"parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","comment":{"shortText":"A subscription object that manages the updates passed to a listener function\\non an orientation change.\\n"},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeOrientationChangeListeners","kind":64,"kindString":"Function","signatures":[{"name":"removeOrientationChangeListeners","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes all listeners subscribed to orientation change updates."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"supportsOrientationLockAsync","kind":64,"kindString":"Function","signatures":[{"name":"supportsOrientationLockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the [`OrientationLock`](#orientationlock) policy is supported on\\nthe device.","returns":"Returns a promise that resolves to a `boolean` value that reflects whether or not the\\norientationLock is supported.\\n"},"parameters":[{"name":"orientationLock","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"OrientationLock"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"unlockAsync","kind":64,"kindString":"Function","signatures":[{"name":"unlockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the screen orientation back to the `OrientationLock.DEFAULT` policy.","returns":"Returns a promise with `void` value, which fulfils when the orientation is set.\\n\\n# Error codes\\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},pJmk:function(e){e.exports=JSON.parse('{"name":"expo-print","kind":1,"kindString":"Project","originalName":"","children":[{"name":"OrientationType","kind":256,"kindString":"Interface","comment":{"shortText":"The possible values of orientation for the printed content."},"children":[{"name":"landscape","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"portrait","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]},{"name":"FilePrintOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to include base64 encoded string of the file in the returned object."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Height of the single page in pixels. Defaults to `792` which is a height of US Letter paper\\nformat with 72 PPI."},"type":{"type":"intrinsic","name":"number"}},{"name":"html","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"HTML string to print into PDF file."},"type":{"type":"intrinsic","name":"string"}},{"name":"margins","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Page margins for the printed document.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"PageMargins"}},{"name":"useMarkupFormatter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Alternative to default option that uses [UIMarkupTextPrintFormatter](https://developer.apple.com/documentation/uikit/uimarkuptextprintformatter)\\ninstead of WebView, but it doesn\'t display images.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Width of the single page in pixels. Defaults to `612` which is a width of US Letter paper\\nformat with 72 PPI."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"FilePrintResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Base64 encoded string containing the data of the PDF file. **Available only if `base64`\\noption is truthy**. It doesn\'t include data URI prefix `data:application/pdf;base64,`."},"type":{"type":"intrinsic","name":"string"}},{"name":"numberOfPages","kind":1024,"kindString":"Property","comment":{"shortText":"Number of pages that were needed to render given content."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"A URI to the printed PDF file."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"PrintOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Height of the single page in pixels. Defaults to `792` which is a height of US Letter paper\\nformat with 72 PPI. **Available only with `html` option.**"},"type":{"type":"intrinsic","name":"number"}},{"name":"html","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"HTML string to print.","tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"margins","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Page margins for the printed document.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"PageMargins"}},{"name":"markupFormatterIOS","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nThis argument is deprecated, use `useMarkupFormatter` instead.\\nMight be removed in the future releases."},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"orientation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The orientation of the printed content, `Print.Orientation.portrait`\\nor `Print.Orientation.landscape`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"indexedAccess","indexType":{"type":"literal","value":"portrait"},"objectType":{"type":"reference","name":"OrientationType"}},{"type":"indexedAccess","indexType":{"type":"literal","value":"landscape"},"objectType":{"type":"reference","name":"OrientationType"}}]}},{"name":"printerUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL of the printer to use. Returned from `selectPrinterAsync`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URI of a PDF file to print. Remote, local (ex. selected via `DocumentPicker`) or base64 data URI\\nstarting with `data:application/pdf;base64,`. This only supports PDF, not other types of\\ndocument (e.g. images).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"useMarkupFormatter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Alternative to default option that uses [UIMarkupTextPrintFormatter](https://developer.apple.com/documentation/uikit/uimarkuptextprintformatter)\\ninstead of WebView, but it doesn\'t display images.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Width of the single page in pixels. Defaults to `612` which is a width of US Letter paper\\nformat with 72 PPI. **Available only with `html` option.**"},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"Printer","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"Name of the printer."},"type":{"type":"intrinsic","name":"string"}},{"name":"url","kind":1024,"kindString":"Property","comment":{"shortText":"URL of the printer."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Orientation","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The orientation of the printed content."},"type":{"type":"reference","name":"OrientationType"},"defaultValue":"ExponentPrint.Orientation"},{"name":"printAsync","kind":64,"kindString":"Function","signatures":[{"name":"printAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prints a document or HTML, on web this prints the HTML from the page.\\n> Note: On iOS, printing from HTML source doesn\'t support local asset URLs (due to `WKWebView`\\n> limitations). As a workaround you can use inlined base64-encoded strings.\\n> See [this comment](https://github.com/expo/expo/issues/7940#issuecomment-657111033) for more details.","returns":"Resolves to an empty `Promise` if printing started.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map defining what should be printed."},"type":{"type":"reference","name":"PrintOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"printToFileAsync","kind":64,"kindString":"Function","signatures":[{"name":"printToFileAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prints HTML to PDF file and saves it to [app\'s cache directory](./filesystem/#filesystemcachedirectory).\\nOn Web this method opens the print dialog."},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of print options.\\n"},"type":{"type":"reference","name":"FilePrintOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"FilePrintResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"selectPrinterAsync","kind":64,"kindString":"Function","signatures":[{"name":"selectPrinterAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Chooses a printer that can be later used in `printAsync`","returns":"A promise which fulfils with an object containing `name` and `url` of the selected printer.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Printer"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},pe0m:function(e,w,n){"use strict";function c(p){return p==null?[]:"length"in p?p:[p]}e.exports=c},penn:function(e,w,n){e.exports=n("YK6v")},pqfe:function(e){e.exports=JSON.parse('{"name":"expo-localization","kind":1,"kindString":"Project","originalName":"","children":[{"name":"Localization","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"currency","kind":1024,"kindString":"Property","comment":{"shortText":"Three-character ISO 4217 currency code. Returns `null` on web.","tags":[{"tag":"example","text":"`\'USD\'`, `\'EUR\'`, `\'CNY\'`, `null`\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"decimalSeparator","kind":1024,"kindString":"Property","comment":{"shortText":"Decimal separator used for formatting numbers.","tags":[{"tag":"example","text":"`\',\'`, `\'.\'`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"digitGroupingSeparator","kind":1024,"kindString":"Property","comment":{"shortText":"Digit grouping separator used when formatting numbers larger than 1000.","tags":[{"tag":"example","text":"`\'.\'`, `\'\'`, `\',\'`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"isMetric","kind":1024,"kindString":"Property","comment":{"shortText":"Boolean value that indicates whether the system uses the metric system.\\nOn Android and web, this is inferred from the current region."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isRTL","kind":1024,"kindString":"Property","comment":{"shortText":"Returns if the system\'s language is written from Right-to-Left.\\nThis can be used to build features like [bidirectional icons](https://material.io/design/usability/bidirectionality.html).","text":"Returns `false` in Server Side Rendering (SSR) environments.\\n"},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isoCurrencyCodes","kind":1024,"kindString":"Property","comment":{"shortText":"A list of all the supported language ISO codes."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"locale","kind":1024,"kindString":"Property","comment":{"shortText":"An [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag),\\nconsisting of a two-character language code and optional script, region and variant codes.","tags":[{"tag":"example","text":"`\'en\'`, `\'en-US\'`, `\'zh-Hans\'`, `\'zh-Hans-CN\'`, `\'en-emodeng\'`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"locales","kind":1024,"kindString":"Property","comment":{"shortText":"List of all the native languages provided by the user settings.\\nThese are returned in the order the user defines in their device settings.","tags":[{"tag":"example","text":"`[\'en\', \'en-US\', \'zh-Hans\', \'zh-Hans-CN\', \'en-emodeng\']`\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"region","kind":1024,"kindString":"Property","comment":{"shortText":"The region code for your device that comes from the Region setting under Language & Region on iOS.\\nThis value is always available on iOS, but might return `null` on Android or web.","tags":[{"tag":"example","text":"`\'US\'`, `\'NZ\'`, `null`\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"timezone","kind":1024,"kindString":"Property","comment":{"shortText":"The current time zone in display format.\\nOn Web time zone is calculated with Intl.DateTimeFormat().resolvedOptions().timeZone. For a\\nbetter estimation you could use the moment-timezone package but it will add significant bloat to\\nyour website\'s bundle size.","tags":[{"tag":"example","text":"`\'America/Los_Angeles\'`\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"currency","kind":32,"kindString":"Variable","comment":{"shortText":"Three-character ISO 4217 currency code. Returns `null` on web.","tags":[{"tag":"example","text":"`\'USD\'`, `\'EUR\'`, `\'CNY\'`, `null`\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"ExpoLocalization.currency"},{"name":"decimalSeparator","kind":32,"kindString":"Variable","comment":{"shortText":"Decimal separator used for formatting numbers.","tags":[{"tag":"example","text":"`\',\'`, `\'.\'`\\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoLocalization.decimalSeparator"},{"name":"digitGroupingSeparator","kind":32,"kindString":"Variable","comment":{"shortText":"Digit grouping separator used when formatting numbers larger than 1000.","tags":[{"tag":"example","text":"`\'.\'`, `\'\'`, `\',\'`\\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoLocalization.digitGroupingSeparator"},{"name":"isMetric","kind":32,"kindString":"Variable","comment":{"shortText":"Boolean value that indicates whether the system uses the metric system.\\nOn Android and web, this is inferred from the current region."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"ExpoLocalization.isMetric"},{"name":"isRTL","kind":32,"kindString":"Variable","comment":{"shortText":"Returns if the system\'s language is written from Right-to-Left.\\nThis can be used to build features like [bidirectional icons](https://material.io/design/usability/bidirectionality.html).","text":"Returns `false` in Server Side Rendering (SSR) environments.\\n"},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"ExpoLocalization.isRTL"},{"name":"isoCurrencyCodes","kind":32,"kindString":"Variable","comment":{"shortText":"A list of all the supported language ISO codes."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"ExpoLocalization.isoCurrencyCodes"},{"name":"locale","kind":32,"kindString":"Variable","comment":{"shortText":"An [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag),\\nconsisting of a two-character language code and optional script, region and variant codes.","tags":[{"tag":"example","text":"`\'en\'`, `\'en-US\'`, `\'zh-Hans\'`, `\'zh-Hans-CN\'`, `\'en-emodeng\'`\\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoLocalization.locale"},{"name":"locales","kind":32,"kindString":"Variable","comment":{"shortText":"List of all the native languages provided by the user settings.\\nThese are returned in the order the user defines in their device settings.","tags":[{"tag":"example","text":"`[\'en\', \'en-US\', \'zh-Hans\', \'zh-Hans-CN\', \'en-emodeng\']`\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"ExpoLocalization.locales"},{"name":"region","kind":32,"kindString":"Variable","comment":{"shortText":"The region code for your device that comes from the Region setting under Language & Region on iOS.\\nThis value is always available on iOS, but might return `null` on Android or web.","tags":[{"tag":"example","text":"`\'US\'`, `\'NZ\'`, `null`\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"ExpoLocalization.region"},{"name":"timezone","kind":32,"kindString":"Variable","comment":{"shortText":"The current time zone in display format.\\nOn Web time zone is calculated with Intl.DateTimeFormat().resolvedOptions().timeZone. For a\\nbetter estimation you could use the moment-timezone package but it will add significant bloat to\\nyour website\'s bundle size.","tags":[{"tag":"example","text":"`\'America/Los_Angeles\'`\\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoLocalization.timezone"},{"name":"getLocalizationAsync","kind":64,"kindString":"Function","signatures":[{"name":"getLocalizationAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the latest native values from the device. Locale can be changed on some Android devices\\nwithout resetting the app.\\n> On iOS, changing the locale will cause the device to reset meaning the constants will always be\\ncorrect.","tags":[{"tag":"example","text":"\\n```ts\\n// When the app returns from the background on Android...\\n\\nconst { locale } = await Localization.getLocalizationAsync();\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Localization"}],"name":"Promise"}}]}]}')},qD0n:function(e,w){w.exit={taskListCheckValueChecked:n,taskListCheckValueUnchecked:n,paragraph:c};function n(p){this.stack[this.stack.length-2].checked=p.type==="taskListCheckValueChecked"}function c(p){var d=this.stack[this.stack.length-2],a=this.stack[this.stack.length-1],m=d.children,r=a.children[0],s=-1,i;if(d&&d.type==="listItem"&&typeof d.checked=="boolean"&&r&&r.type==="text"){for(;++s<m.length;)if(m[s].type==="paragraph"){i=m[s];break}i===a&&(r.value=r.value.slice(1),r.value.length===0?a.children.shift():(r.position.start.column++,r.position.start.offset++,a.position.start=Object.assign({},r.position.start)))}this.exit(p)}},qF1g:function(e,w,n){"use strict";var c=n("rm/B"),p=c(/[!-/:-@[-`{-~]/);e.exports=p},qOO9:function(e,w,n){w.flow={null:{tokenize:m,resolve:a,interruptible:!0}};var c=n("yRGd"),p={tokenize:r,partial:!0},d={tokenize:s,partial:!0};function a(i,o){for(var t=i.length,l=-1,k,g,h,f,S,b,P,y,v,u;++l<t;)k=i[l][1],f&&(k.type==="temporaryTableCellContent"&&(y=y||l,v=l),(k.type==="tableCellDivider"||k.type==="tableRow")&&v&&(b={type:"tableContent",start:i[y][1].start,end:i[v][1].end},P={type:"chunkText",start:b.start,end:b.end,contentType:"text"},i.splice(y,v-y+1,["enter",b,o],["enter",P,o],["exit",P,o],["exit",b,o]),l-=v-y-3,t=i.length,y=void 0,v=void 0)),i[l][0]==="exit"&&u&&u+1<l&&(k.type==="tableCellDivider"||k.type==="tableRow"&&(u+3<l||i[u][1].type!=="whitespace"))&&(S={type:h?"tableDelimiter":g?"tableHeader":"tableData",start:i[u][1].start,end:i[l][1].end},i.splice(l+(k.type==="tableCellDivider"?1:0),0,["exit",S,o]),i.splice(u,0,["enter",S,o]),l+=2,t=i.length,u=l+1),k.type==="tableRow"&&(f=i[l][0]==="enter",f&&(u=l+1)),k.type==="tableDelimiterRow"&&(h=i[l][0]==="enter",h&&(u=l+1)),k.type==="tableHead"&&(g=i[l][0]==="enter");return i}function m(i,o,t){var l=[],k=0,g,h;return f;function f(E){return E===null||E===-5||E===-4||E===-3?t(E):(i.enter("table")._align=l,i.enter("tableHead"),i.enter("tableRow"),E===124?S(E):(k++,i.enter("temporaryTableCellContent"),y(E)))}function S(E){return i.enter("tableCellDivider"),i.consume(E),i.exit("tableCellDivider"),g=!0,b}function b(E){return E===null||E===-5||E===-4||E===-3?u(E):E===-2||E===-1||E===32?(i.enter("whitespace"),i.consume(E),P):(g&&(g=void 0,k++),E===124?S(E):(i.enter("temporaryTableCellContent"),y(E)))}function P(E){return E===-2||E===-1||E===32?(i.consume(E),P):(i.exit("whitespace"),b(E))}function y(E){return E===null||E<0||E===32||E===124?(i.exit("temporaryTableCellContent"),b(E)):(i.consume(E),E===92?v:y)}function v(E){return E===92||E===124?(i.consume(E),y):y(E)}function u(E){return E===null?t(E):(i.exit("tableRow"),i.exit("tableHead"),i.enter("lineEnding"),i.consume(E),i.exit("lineEnding"),i.check(p,t,c(i,C,"linePrefix",4)))}function C(E){return E===null||E<0||E===32?t(E):(i.enter("tableDelimiterRow"),R(E))}function R(E){return E===null||E===-5||E===-4||E===-3?L(E):E===-2||E===-1||E===32?(i.enter("whitespace"),i.consume(E),F):E===45?(i.enter("tableDelimiterFiller"),i.consume(E),h=!0,l.push(null),j):E===58?(i.enter("tableDelimiterAlignment"),i.consume(E),i.exit("tableDelimiterAlignment"),l.push("left"),I):E===124?(i.enter("tableCellDivider"),i.consume(E),i.exit("tableCellDivider"),R):t(E)}function F(E){return E===-2||E===-1||E===32?(i.consume(E),F):(i.exit("whitespace"),R(E))}function j(E){return E===45?(i.consume(E),j):(i.exit("tableDelimiterFiller"),E===58?(i.enter("tableDelimiterAlignment"),i.consume(E),i.exit("tableDelimiterAlignment"),l[l.length-1]=l[l.length-1]==="left"?"center":"right",W):R(E))}function I(E){return E===45?(i.enter("tableDelimiterFiller"),i.consume(E),h=!0,j):t(E)}function W(E){return E===null||E===-5||E===-4||E===-3?L(E):E===-2||E===-1||E===32?(i.enter("whitespace"),i.consume(E),F):E===124?(i.enter("tableCellDivider"),i.consume(E),i.exit("tableCellDivider"),R):t(E)}function L(E){return i.exit("tableDelimiterRow"),!h||k!==l.length?t(E):E===null?K(E):i.check(d,K,D)(E)}function K(E){return i.exit("table"),o(E)}function D(E){return i.enter("lineEnding"),i.consume(E),i.exit("lineEnding"),c(i,ee,"linePrefix",4)}function ee(E){return i.enter("tableBody"),V(E)}function V(E){return i.enter("tableRow"),E===124?X(E):(i.enter("temporaryTableCellContent"),ne(E))}function X(E){return i.enter("tableCellDivider"),i.consume(E),i.exit("tableCellDivider"),$}function $(E){return E===null||E===-5||E===-4||E===-3?N(E):E===-2||E===-1||E===32?(i.enter("whitespace"),i.consume(E),re):E===124?X(E):(i.enter("temporaryTableCellContent"),ne(E))}function re(E){return E===-2||E===-1||E===32?(i.consume(E),re):(i.exit("whitespace"),$(E))}function ne(E){return E===null||E<0||E===32||E===124?(i.exit("temporaryTableCellContent"),$(E)):(i.consume(E),E===92?B:ne)}function B(E){return E===92||E===124?(i.consume(E),ne):ne(E)}function N(E){return i.exit("tableRow"),E===null?z(E):i.check(d,z,H)(E)}function z(E){return i.exit("tableBody"),K(E)}function H(E){return i.enter("lineEnding"),i.consume(E),i.exit("lineEnding"),c(i,V,"linePrefix",4)}}function r(i,o,t){return l;function l(h){return h!==45?t(h):(i.enter("setextUnderline"),k(h))}function k(h){return h===45?(i.consume(h),k):g(h)}function g(h){return h===-2||h===-1||h===32?(i.consume(h),g):h===null||h===-5||h===-4||h===-3?o(h):t(h)}}function s(i,o,t){var l=0;return k;function k(h){return i.enter("check"),i.consume(h),g}function g(h){return h===-1||h===32?(i.consume(h),l++,l===4?o:g):h===null||h<0?o(h):t(h)}}},qOiC:function(e){e.exports=JSON.parse('{"name":"expo-random","kind":1,"kindString":"Project","originalName":"","children":[{"name":"getRandomBytes","kind":64,"kindString":"Function","signatures":[{"name":"getRandomBytes","kind":4096,"kindString":"Call signature","comment":{"shortText":"Generates completely random bytes using native implementations. The `byteCount` property\\nis a `number` indicating the number of bytes to generate in the form of a `Uint8Array`.\\nFalls back to `Math.random` during development to prevent issues with React Native Debugger.","returns":"An array of random bytes with the same length as the `byteCount`.\\n"},"parameters":[{"name":"byteCount","kind":32768,"kindString":"Parameter","comment":{"shortText":"A number within the range from `0` to `1024`. Anything else will throw a `TypeError`."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Uint8Array"}}]},{"name":"getRandomBytesAsync","kind":64,"kindString":"Function","signatures":[{"name":"getRandomBytesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Generates completely random bytes using native implementations. The `byteCount` property\\nis a `number` indicating the number of bytes to generate in the form of a `Uint8Array`.","returns":"A promise that fulfills with an array of random bytes with the same length as the `byteCount`.\\n"},"parameters":[{"name":"byteCount","kind":32768,"kindString":"Parameter","comment":{"shortText":"A number within the range from `0` to `1024`. Anything else will throw a `TypeError`."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Uint8Array"}],"name":"Promise"}}]}]}')},qT12:function(e,w,n){"use strict";/** @license React v17.0.2
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var c=60103,p=60106,d=60107,a=60108,m=60114,r=60109,s=60110,i=60112,o=60113,t=60120,l=60115,k=60116,g=60121,h=60122,f=60117,S=60129,b=60131;if(typeof Symbol=="function"&&Symbol.for){var P=Symbol.for;c=P("react.element"),p=P("react.portal"),d=P("react.fragment"),a=P("react.strict_mode"),m=P("react.profiler"),r=P("react.provider"),s=P("react.context"),i=P("react.forward_ref"),o=P("react.suspense"),t=P("react.suspense_list"),l=P("react.memo"),k=P("react.lazy"),g=P("react.block"),h=P("react.server.block"),f=P("react.fundamental"),S=P("react.debug_trace_mode"),b=P("react.legacy_hidden")}function y(D){if(typeof D=="object"&&D!==null){var ee=D.$$typeof;switch(ee){case c:switch(D=D.type,D){case d:case m:case a:case o:case t:return D;default:switch(D=D&&D.$$typeof,D){case s:case i:case k:case l:case r:return D;default:return ee}}case p:return ee}}}var v=r,u=c,C=i,R=d,F=k,j=l,I=p,W=m,L=a,K=o;w.ContextConsumer=s,w.ContextProvider=v,w.Element=u,w.ForwardRef=C,w.Fragment=R,w.Lazy=F,w.Memo=j,w.Portal=I,w.Profiler=W,w.StrictMode=L,w.Suspense=K,w.isAsyncMode=function(){return!1},w.isConcurrentMode=function(){return!1},w.isContextConsumer=function(D){return y(D)===s},w.isContextProvider=function(D){return y(D)===r},w.isElement=function(D){return typeof D=="object"&&D!==null&&D.$$typeof===c},w.isForwardRef=function(D){return y(D)===i},w.isFragment=function(D){return y(D)===d},w.isLazy=function(D){return y(D)===k},w.isMemo=function(D){return y(D)===l},w.isPortal=function(D){return y(D)===p},w.isProfiler=function(D){return y(D)===m},w.isStrictMode=function(D){return y(D)===a},w.isSuspense=function(D){return y(D)===o},w.isValidElementType=function(D){return typeof D=="string"||typeof D=="function"||D===d||D===m||D===S||D===a||D===o||D===t||D===b||typeof D=="object"&&D!==null&&(D.$$typeof===k||D.$$typeof===l||D.$$typeof===r||D.$$typeof===s||D.$$typeof===i||D.$$typeof===f||D.$$typeof===g||D[0]===h)},w.typeOf=y},qZ5V:function(e){e.exports=JSON.parse('{"name":"expo-print","kind":1,"kindString":"Project","originalName":"","children":[{"name":"OrientationType","kind":256,"kindString":"Interface","comment":{"shortText":"The possible values of orientation for the printed content."},"children":[{"name":"landscape","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"portrait","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]},{"name":"FilePrintOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to include base64 encoded string of the file in the returned object."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Height of the single page in pixels. Defaults to `792` which is a height of US Letter paper\\nformat with 72 PPI."},"type":{"type":"intrinsic","name":"number"}},{"name":"html","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"HTML string to print into PDF file."},"type":{"type":"intrinsic","name":"string"}},{"name":"margins","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Page margins for the printed document.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"PageMargins"}},{"name":"useMarkupFormatter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Alternative to default option that uses [UIMarkupTextPrintFormatter](https://developer.apple.com/documentation/uikit/uimarkuptextprintformatter)\\ninstead of WebView, but it doesn\'t display images.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Width of the single page in pixels. Defaults to `612` which is a width of US Letter paper\\nformat with 72 PPI."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"FilePrintResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Base64 encoded string containing the data of the PDF file. **Available only if `base64`\\noption is truthy**. It doesn\'t include data URI prefix `data:application/pdf;base64,`."},"type":{"type":"intrinsic","name":"string"}},{"name":"numberOfPages","kind":1024,"kindString":"Property","comment":{"shortText":"Number of pages that were needed to render given content."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"A URI to the printed PDF file."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"PrintOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Height of the single page in pixels. Defaults to `792` which is a height of US Letter paper\\nformat with 72 PPI. **Available only with `html` option.**"},"type":{"type":"intrinsic","name":"number"}},{"name":"html","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"HTML string to print.","tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"margins","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Page margins for the printed document.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"PageMargins"}},{"name":"markupFormatterIOS","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nThis argument is deprecated, use `useMarkupFormatter` instead.\\nMight be removed in the future releases."},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"orientation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The orientation of the printed content, `Print.Orientation.portrait`\\nor `Print.Orientation.landscape`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"indexedAccess","indexType":{"type":"literal","value":"portrait"},"objectType":{"type":"reference","name":"OrientationType"}},{"type":"indexedAccess","indexType":{"type":"literal","value":"landscape"},"objectType":{"type":"reference","name":"OrientationType"}}]}},{"name":"printerUrl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URL of the printer to use. Returned from `selectPrinterAsync`.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"URI of a PDF file to print. Remote, local (ex. selected via `DocumentPicker`) or base64 data URI\\nstarting with `data:application/pdf;base64,`. This only supports PDF, not other types of\\ndocument (e.g. images).","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"useMarkupFormatter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Alternative to default option that uses [UIMarkupTextPrintFormatter](https://developer.apple.com/documentation/uikit/uimarkuptextprintformatter)\\ninstead of WebView, but it doesn\'t display images.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Width of the single page in pixels. Defaults to `612` which is a width of US Letter paper\\nformat with 72 PPI. **Available only with `html` option.**"},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"Printer","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"Name of the printer."},"type":{"type":"intrinsic","name":"string"}},{"name":"url","kind":1024,"kindString":"Property","comment":{"shortText":"URL of the printer."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Orientation","kind":32,"kindString":"Variable","comment":{"shortText":"The orientation of the printed content."},"type":{"type":"reference","name":"OrientationType"},"defaultValue":"ExponentPrint.Orientation"},{"name":"printAsync","kind":64,"kindString":"Function","signatures":[{"name":"printAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prints a document or HTML, on web this prints the HTML from the page.\\n> Note: On iOS, printing from HTML source doesn\'t support local asset URLs (due to `WKWebView`\\n> limitations). As a workaround you can use inlined base64-encoded strings.\\n> See [this comment](https://github.com/expo/expo/issues/7940#issuecomment-657111033) for more details.","returns":"Resolves to an empty `Promise` if printing started.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map defining what should be printed."},"type":{"type":"reference","name":"PrintOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"printToFileAsync","kind":64,"kindString":"Function","signatures":[{"name":"printToFileAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prints HTML to PDF file and saves it to [app\'s cache directory](./filesystem/#filesystemcachedirectory).\\nOn Web this method opens the print dialog."},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of print options.\\n"},"type":{"type":"reference","name":"FilePrintOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"FilePrintResult"}],"name":"Promise"}}]},{"name":"selectPrinterAsync","kind":64,"kindString":"Function","signatures":[{"name":"selectPrinterAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Chooses a printer that can be later used in `printAsync`","returns":"A promise which fulfils with an object containing `name` and `url` of the selected printer.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Printer"}],"name":"Promise"}}]}]}')},qvht:function(e){e.exports=JSON.parse('{"name":"expo-speech","kind":1,"kindString":"Project","originalName":"","children":[{"name":"VoiceQuality","kind":8,"kindString":"Enumeration","comment":{"shortText":"Enum representing the voice quality."},"children":[{"name":"Default","kind":16,"kindString":"Enumeration member","defaultValue":"\\"Default\\""},{"name":"Enhanced","kind":16,"kindString":"Enumeration member","defaultValue":"\\"Enhanced\\""}]},{"name":"SpeechEventCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"this","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SpeechSynthesisUtterance"}},{"name":"ev","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"SpeechSynthesisEvent"}}],"type":{"type":"intrinsic","name":"any"}}]}}},{"name":"SpeechOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"_voiceIndex","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"language","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The code of a language that should be used to read the `text`, refer to IETF BCP 47 to see\\nvalid codes."},"type":{"type":"intrinsic","name":"string"}},{"name":"onBoundary","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SpeechEventCallback"},{"type":"literal","value":null}]}},{"name":"onMark","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SpeechEventCallback"},{"type":"literal","value":null}]}},{"name":"onPause","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SpeechEventCallback"},{"type":"literal","value":null}]}},{"name":"onResume","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SpeechEventCallback"},{"type":"literal","value":null}]}},{"name":"pitch","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Pitch of the voice to speak `text`. `1.0` is the normal pitch."},"type":{"type":"intrinsic","name":"number"}},{"name":"rate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Rate of the voice to speak `text`. `1.0` is the normal rate."},"type":{"type":"intrinsic","name":"number"}},{"name":"voice","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Voice identifier."},"type":{"type":"intrinsic","name":"string"}},{"name":"volume","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"onDone","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onDone","kind":4096,"kindString":"Call signature","comment":{"shortText":"A callback that is invoked when speaking finishes."},"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","name":"SpeechEventCallback"}]}}]},{"name":"onError","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onError","kind":4096,"kindString":"Call signature","comment":{"shortText":"__(Android only).__ A callback that is invoked when an error occurred while speaking."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","comment":{"text":"\\n"},"type":{"type":"reference","name":"Error"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","name":"SpeechEventCallback"}]}}]},{"name":"onStart","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onStart","kind":4096,"kindString":"Call signature","comment":{"shortText":"A callback that is invoked when speaking starts."},"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","name":"SpeechEventCallback"}]}}]},{"name":"onStopped","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onStopped","kind":4096,"kindString":"Call signature","comment":{"shortText":"A callback that is invoked when speaking is stopped by calling `Speech.stop()`."},"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","name":"SpeechEventCallback"}]}}]}]}}},{"name":"Voice","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Object describing the available voices on the device."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"identifier","kind":1024,"kindString":"Property","comment":{"shortText":"Voice unique identifier."},"type":{"type":"intrinsic","name":"string"}},{"name":"language","kind":1024,"kindString":"Property","comment":{"shortText":"Voice language."},"type":{"type":"intrinsic","name":"string"}},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"Voice name."},"type":{"type":"intrinsic","name":"string"}},{"name":"quality","kind":1024,"kindString":"Property","comment":{"shortText":"Voice quality."},"type":{"type":"reference","name":"VoiceQuality"}}]}}},{"name":"WebVoice","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"Voice"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isDefault","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"localService","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"name","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"voiceURI","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"maxSpeechInputLength","kind":32,"kindString":"Variable","comment":{"shortText":"Maximum possible text length acceptable by `Speech.speak()` method. It is platform-dependent.\\nOn iOS, this returns `Number.MAX_VALUE`."},"type":{"type":"intrinsic","name":"number"},"defaultValue":"..."},{"name":"getAvailableVoicesAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAvailableVoicesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns list of all available voices.","returns":"List of `Voice` objects.\\n"},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Voice"}}],"name":"Promise"}}]},{"name":"isSpeakingAsync","kind":64,"kindString":"Function","signatures":[{"name":"isSpeakingAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine whether the Text-to-speech utility is currently speaking. Will return `true` if speaker\\nis paused.","returns":"Returns a Promise that fulfils with a boolean, `true` if speaking, `false` if not.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"pause","kind":64,"kindString":"Function","signatures":[{"name":"pause","kind":4096,"kindString":"Call signature","comment":{"shortText":"Pauses current speech. This method is not available on Android."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"resume","kind":64,"kindString":"Function","signatures":[{"name":"resume","kind":4096,"kindString":"Call signature","comment":{"shortText":"Resumes speaking previously paused speech or does nothing if there\'s none. This method is not\\navailable on Android."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"speak","kind":64,"kindString":"Function","signatures":[{"name":"speak","kind":4096,"kindString":"Call signature","comment":{"shortText":"Speak out loud the text given options. Calling this when another text is being spoken adds\\nan utterance to queue."},"parameters":[{"name":"text","kind":32768,"kindString":"Parameter","comment":{"text":"The text to be spoken. Cannot be longer than [`Speech.maxSpeechInputLength`](#speechmaxspeechinputlength)."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"A `SpeechOptions` object.\\n"},"type":{"type":"reference","name":"SpeechOptions"},"defaultValue":"{}"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"stop","kind":64,"kindString":"Function","signatures":[{"name":"stop","kind":4096,"kindString":"Call signature","comment":{"shortText":"Interrupts current speech and deletes all in queue."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},r82V:function(e){e.exports=JSON.parse('{"name":"expo-application","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"ApplicationReleaseType","kind":4,"kindString":"Enumeration","flags":{},"children":[{"name":"AD_HOC","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"4"},{"name":"APP_STORE","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"5"},{"name":"DEVELOPMENT","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"3"},{"name":"ENTERPRISE","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"2"},{"name":"SIMULATOR","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"1"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"0"}]},{"name":"androidId","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"**Android only.** The value of [`Settings.Secure.ANDROID_ID`](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID).\\nThis is a hexadecimal `string` unique to each combination of app-signing key, user, and device.\\nThe value may change if a factory reset is performed on the device or if an APK signing key changes.\\nFor more information about how the platform handles `ANDROID_ID` in Android 8.0 (API level 26)\\nand higher, see [Android 8.0 Behavior Changes](https://developer.android.com/about/versions/oreo/android-8.0-changes.html#privacy-all).\\nOn iOS and web, this value is `null`.\\n> In versions of the platform lower than Android 8.0 (API level 26), this value remains constant\\n> for the lifetime of the user\'s device. See the [ANDROID_ID](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID)\\n> official docs for more information.\\n- E.g., `\\"dd96dec43fb81c97\\"`"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"applicationId","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The ID of the application. On Android, this is the application ID. On iOS, this is the bundle ID.\\nOn web, this is `null`.\\n- E.g., `\\"com.cocoacasts.scribbles\\"`, `\\"com.apple.Pages\\"`"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"applicationName","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The human-readable name of the application that is displayed with the app\'s icon on the device\'s\\nhome screen or desktop. On Android and iOS, this value is a `string` unless the name could not be\\nretrieved, in which case this value will be `null`. On web this value is `null`.\\n- E.g., `\\"Expo\\"`, `\\"Yelp\\"`, `\\"Instagram\\"`"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"nativeApplicationVersion","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The human-readable version of the native application that may be displayed in the app store.\\nThis is the `Info.plist` value for `CFBundleShortVersionString` on iOS and the version name set\\nby `version` in `app.json` on Android at the time the native app was built.\\nOn web, this value is `null`.\\n- E.g., `\\"2.11.0\\"`"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"nativeBuildVersion","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The internal build version of the native application that the app store may use to distinguish\\nbetween different binaries. This is the `Info.plist` value for `CFBundleVersion` on iOS (set with\\n`ios.buildNumber` value in `app.json` in a standalone app) and the version code set by\\n`android.versionCode` in `app.json` on Android at the time the native app was built. On web, this\\nvalue is `null`. The return type on Android and iOS is `string`.\\n- E.g., iOS: `\\"2.11.0\\"`, Android: `\\"114\\"`"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"getInstallReferrerAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getInstallReferrerAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"**Android only.** Gets the referrer URL of the installed app with the [`Install Referrer API`](https://developer.android.com/google/play/installreferrer)\\nfrom the Google Play Store. In practice, the referrer URL may not be a complete, absolute URL.","returns":"A `Promise` that fulfills with a `string` of the referrer URL of the installed app.\\n\\n# Example\\n```ts\\nawait Application.getInstallReferrerAsync();\\n// \\"utm_source=google-play&utm_medium=organic\\"\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getInstallationTimeAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getInstallationTimeAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the time the app was installed onto the device, not counting subsequent updates. If the app\\nis uninstalled and reinstalled, this method returns the time the app was reinstalled.\\n- On iOS, this method uses the [`NSFileCreationDate`](https://developer.apple.com/documentation/foundation/nsfilecreationdate?language=objc)\\nof the app\'s document root directory.\\n- On Android, this method uses [`PackageInfo.firstInstallTime`](https://developer.android.com/reference/android/content/pm/PackageInfo.html#firstInstallTime).\\n- On web, this method returns `null`.","returns":"Returns a `Promise` that fulfills with a `Date` object that specifies the time the app\\nwas installed on the device.\\n\\n# Example\\n```ts\\nawait Application.getInstallationTimeAsync();\\n// 2019-07-18T18:08:26.121Z\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Date"}],"name":"Promise"}}]},{"name":"getIosApplicationReleaseTypeAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getIosApplicationReleaseTypeAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"**iOS only.** Gets the iOS application release type.","returns":"Returns a promise which fulfills with an [`ApplicationReleaseType`](#applicationreleasetype).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ApplicationReleaseType"}],"name":"Promise"}}]},{"name":"getIosIdForVendorAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getIosIdForVendorAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"**iOS only.** Gets the iOS \\"identifier for vendor\\" ([IDFV](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor))\\nvalue, a string ID that uniquely identifies a device to the app\u2019s vendor. This method may\\nsometimes return `nil`, in which case wait and call the method again later. This might happen\\nwhen the device has been restarted before the user has unlocked the device.","text":"The OS will change the vendor identifier if all apps from the current app\'s vendor have been\\nuninstalled.\\n","returns":"A `Promise` that fulfills with a `string` specifying the app\'s vendor ID. Apps from the\\nsame vendor will return the same ID. See Apple\'s documentation for more information about the\\nvendor ID\'s semantics.\\n\\n# Example\\n```ts\\nawait Application.getIosIdForVendorAsync();\\n// \\"68753A44-4D6F-1226-9C60-0050E4C00067\\"\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getIosPushNotificationServiceEnvironmentAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getIosPushNotificationServiceEnvironmentAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"**iOS only.** Gets the current [Apple Push Notification (APN)](https://developer.apple.com/documentation/bundleresources/entitlements/aps-environment?language=objc)\\nservice environment.","returns":"Returns a promise fulfilled with the string, either `\'development\'` or `\'production\'`,\\nbased on the current APN environment.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getLastUpdateTimeAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getLastUpdateTimeAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"**Android only.** Gets the last time the app was updated from the Google Play Store.","returns":"Returns a `Promise` that fulfills with a `Date` object that specifies the last time\\nthe app was updated via the Google Play Store).\\n\\n# Example\\n```ts\\nawait Application.getLastUpdateTimeAsync();\\n// 2019-07-18T21:20:16.887Z\\n```\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Date"}],"name":"Promise"}}]}]}')},rCOv:function(e,w,n){"use strict";var c=n("E/Jm"),p=n("O+c1"),d=n("Mf4r"),a=n("yRGd"),m={tokenize:i,resolve:s,interruptible:!0,lazy:!0},r={tokenize:o,partial:!0};function s(t){return d(t),t}function i(t,l){var k;return g;function g(b){return t.enter("content"),k=t.enter("chunkContent",{contentType:"content"}),h(b)}function h(b){return b===null?f(b):c(b)?t.check(r,S,f)(b):(t.consume(b),h)}function f(b){return t.exit("chunkContent"),t.exit("content"),l(b)}function S(b){return t.consume(b),t.exit("chunkContent"),k=k.next=t.enter("chunkContent",{contentType:"content",previous:k}),h}}function o(t,l,k){var g=this;return h;function h(S){return t.enter("lineEnding"),t.consume(S),t.exit("lineEnding"),a(t,f,"linePrefix")}function f(S){return S===null||c(S)?k(S):g.parser.constructs.disable.null.indexOf("codeIndented")>-1||p(g.events,"linePrefix")<4?t.interrupt(g.parser.constructs.flow,k,l)(S):l(S)}}e.exports=m},"rm/B":function(e,w,n){"use strict";var c=n("EIjK");function p(d){return a;function a(m){return d.test(c(m))}}e.exports=p},rv7F:function(e){e.exports=JSON.parse('{"name":"expo-cellular","kind":1,"kindString":"Project","originalName":"","children":[{"name":"CellularGeneration","kind":8,"kindString":"Enumeration","comment":{"shortText":"Describes the current generation of the cellular connection. It is an enum with these possible\\nvalues:"},"children":[{"name":"CELLULAR_2G","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Currently connected to a 2G cellular network. Includes CDMA, EDGE, GPRS, and IDEN type connections."},"defaultValue":"1"},{"name":"CELLULAR_3G","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Currently connected to a 3G cellular network. Includes EHRPD, EVDO, HSPA, HSUPA, HSDPA, and UTMS type connections."},"defaultValue":"2"},{"name":"CELLULAR_4G","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Currently connected to a 4G cellular network. Includes HSPAP and LTE type connections."},"defaultValue":"3"},{"name":"CELLULAR_5G","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Currently connected to a 5G cellular network. Includes NR and NRNSA type connections."},"defaultValue":"4"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Either we are not currently connected to a cellular network or type could not be determined."},"defaultValue":"0"}]},{"name":"allowsVoip","kind":32,"kindString":"Variable","comment":{"shortText":"Indicates if the carrier allows making VoIP calls on its network. On Android, this checks whether\\nthe system supports SIP-based VoIP API. See [here](https://developer.android.com/reference/android/net/sip/SipManager.html#isVoipSupported(android.content.Context))\\nto view more information.","text":"On iOS, if you configure a device for a carrier and then remove the SIM card, this property\\nretains the `boolean` value indicating the carrier\u2019s policy regarding VoIP. If you then install\\na new SIM card, its VoIP policy `boolean` replaces the previous value of this property.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nCellular.allowsVoip; // true or false\\n```"},{"tag":"deprecated","text":"Use [`allowsVoipAsync()`](#allowsvoipasync) instead.\\n\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"carrier","kind":32,"kindString":"Variable","comment":{"shortText":"The name of the user\u2019s home cellular service provider. If the device has dual SIM cards, only the\\ncarrier for the currently active SIM card will be returned. On Android, this value is only\\navailable when the SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY).\\nOtherwise, this returns `null`.","text":"On iOS, if you configure a device for a carrier and then remove the SIM card, this property\\nretains the name of the carrier. If you then install a new SIM card, its carrier name replaces\\nthe previous value of this property. The value for this property is `null` if the user never\\nconfigured a carrier for the device.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nCellular.carrier; // \\"T-Mobile\\" or \\"Verizon\\"\\n```"},{"tag":"deprecated","text":"Use [`getCarrierNameAsync()`](#getcarriernameasync) instead.\\n\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"isoCountryCode","kind":32,"kindString":"Variable","comment":{"shortText":"The ISO country code for the user\u2019s cellular service provider. On iOS, the value is `null` if any\\nof the following apply:\\n- The device is in airplane mode.\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.","text":"On web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nCellular.isoCountryCode; // \\"us\\" or \\"au\\"\\n```"},{"tag":"deprecated","text":"Use [`getIsoCountryCodeAsync()`](#getisocountrycodeAsync) instead.\\n\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"mobileCountryCode","kind":32,"kindString":"Variable","comment":{"shortText":"The mobile country code (MCC) for the user\u2019s current registered cellular service provider.\\nOn Android, this value is only available when SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY). Otherwise, this\\nreturns `null`. On iOS, the value may be null on hardware prior to iPhone 4S when in airplane mode.\\nFurthermore, the value for this property is `null` if any of the following apply:\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.","text":"On web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nCellular.mobileCountryCode; // \\"310\\"\\n```"},{"tag":"deprecated","text":"Use [`getMobileCountryCodeAsync()`](#getmobilecountrycodeasync) instead.\\n\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"mobileNetworkCode","kind":32,"kindString":"Variable","comment":{"shortText":"The ISO country code for the user\u2019s cellular service provider. On iOS, the value is `null` if\\nany of the following apply:\\n- The device is in airplane mode.\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.","text":"On web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nCellular.mobileNetworkCode; // \\"260\\"\\n```"},{"tag":"deprecated","text":"Use [`getMobileNetworkCodeAsync()`](#getmobilenetworkcodeasync) instead.\\n\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"allowsVoipAsync","kind":64,"kindString":"Function","signatures":[{"name":"allowsVoipAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns if the carrier allows making VoIP calls on its network. On Android, this checks whether\\nthe system supports SIP-based VoIP API. See [here](https://developer.android.com/reference/android/net/sip/SipManager.html#isVoipSupported(android.content.Context))\\nto view more information.\\n\\nOn iOS, if you configure a device for a carrier and then remove the SIM card, this property\\nretains the `boolean` value indicating the carrier\u2019s policy regarding VoIP. If you then install\\na new SIM card, its VoIP policy `boolean` replaces the previous value of this property.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.allowsVoipAsync(); // true or false\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getCarrierNameAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCarrierNameAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns name of the user\u2019s home cellular service provider. If the device has dual SIM cards, only the\\ncarrier for the currently active SIM card will be returned.\\n\\nOn Android, this value is only available when the SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY).\\nOtherwise, this returns `null`.\\n\\nOn iOS, if you configure a device for a carrier and then remove the SIM card, this property\\nretains the name of the carrier. If you then install a new SIM card, its carrier name replaces\\nthe previous value of this property. The value for this property is `null` if the user never\\nconfigured a carrier for the device.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.getCarrierNameAsync(); // \\"T-Mobile\\" or \\"Verizon\\"\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getCellularGenerationAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCellularGenerationAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns a promise which fulfils with a [`Cellular.CellularGeneration`](#cellulargeneration)\\nenum value that represents the current cellular-generation type.\\n\\nOn web, this method uses [`navigator.connection.effectiveType`](https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/effectiveType)\\nto detect the effective type of the connection using a combination of recently observed\\nround-trip time and downlink values. See [here](https://developer.mozilla.org/en-US/docs/Web/API/Network_Information_API)\\nto view browser compatibility.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.getCellularGenerationAsync();\\n// CellularGeneration.CELLULAR_4G\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CellularGeneration"}],"name":"Promise"}}]},{"name":"getIsoCountryCodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIsoCountryCodeAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns the ISO country code for the user\u2019s cellular service provider.\\n\\nOn iOS, the value is `null` if any of the following apply:\\n- The device is in airplane mode.\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.getIsoCountryCodeAsync(); // \\"us\\" or \\"au\\"\\n```\\n\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getMobileCountryCodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMobileCountryCodeAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns mobile country code (MCC) for the user\u2019s current registered cellular service provider.\\n\\nOn Android, this value is only available when SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY). Otherwise, this\\nreturns `null`. On iOS, the value may be null on hardware prior to iPhone 4S when in airplane mode.\\nFurthermore, the value for this property is `null` if any of the following apply:\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.getMobileCountryCodeAsync(); // \\"310\\"\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getMobileNetworkCodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMobileNetworkCodeAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns the mobile network code (MNC) for the user\u2019s current registered cellular service provider.\\n\\nOn Android, this value is only available when SIM state is [`SIM_STATE_READY`](https://developer.android.com/reference/android/telephony/TelephonyManager.html#SIM_STATE_READY). Otherwise, this\\nreturns `null`. On iOS, the value may be null on hardware prior to iPhone 4S when in airplane mode.\\nFurthermore, the value for this property is `null` if any of the following apply:\\n- There is no SIM card in the device.\\n- The device is outside of cellular service range.\\n\\nOn web, this returns `null`.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait Cellular.getMobileNetworkCodeAsync(); // \\"310\\"\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]}]}')},"s4R/":function(e){e.exports=JSON.parse('{"name":"expo-keep-awake","kind":1,"kindString":"Project","originalName":"","children":[{"name":"activateKeepAwake","kind":64,"kindString":"Function","signatures":[{"name":"activateKeepAwake","kind":4096,"kindString":"Call signature","comment":{"shortText":"Prevents the screen from sleeping until `deactivateKeepAwake` is called with the same `tag` value.","text":"If the `tag` argument is specified, the screen will not sleep until you call `deactivateKeepAwake`\\nwith the same `tag` argument. When using multiple `tags` for activation you\'ll have to deactivate\\neach one in order to re-enable screen sleep. If tag is unspecified, the default `tag` is used."},"parameters":[{"name":"tag","kind":32768,"kindString":"Parameter","comment":{"text":"*Optional* - Tag to lock screen sleep prevention. If not provided, the default tag is used.\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"deactivateKeepAwake","kind":64,"kindString":"Function","signatures":[{"name":"deactivateKeepAwake","kind":4096,"kindString":"Call signature","comment":{"shortText":"Releases the lock on screen-sleep prevention associated with the given `tag` value. If `tag`\\nis unspecified, it defaults to the same default tag that `activateKeepAwake` uses."},"parameters":[{"name":"tag","kind":32768,"kindString":"Parameter","comment":{"text":"*Optional* - Tag to release the lock on screen sleep prevention. If not provided,\\nthe default tag is used.\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"useKeepAwake","kind":64,"kindString":"Function","signatures":[{"name":"useKeepAwake","kind":4096,"kindString":"Call signature","comment":{"shortText":"A React hook to keep the screen awake for as long as the owner component is mounted.\\nThe optionally provided `tag` argument is used when activating and deactivating the keep-awake\\nfeature. If unspecified, the default `tag` is used. See the documentation for `activateKeepAwake`\\nbelow to learn more about the `tag` argument."},"parameters":[{"name":"tag","kind":32768,"kindString":"Parameter","comment":{"text":"*Optional*\\n"},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."}],"type":{"type":"intrinsic","name":"void"}}]}]}')},sBWF:function(e){e.exports=JSON.parse('{"name":"expo-speech","kind":1,"kindString":"Project","originalName":"","children":[{"name":"VoiceQuality","kind":8,"kindString":"Enumeration","comment":{"shortText":"Enum representing the voice quality."},"children":[{"name":"Default","kind":16,"kindString":"Enumeration member","defaultValue":"\\"Default\\""},{"name":"Enhanced","kind":16,"kindString":"Enumeration member","defaultValue":"\\"Enhanced\\""}]},{"name":"SpeechEventCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"this","kind":32768,"kindString":"Parameter","type":{"type":"reference","qualifiedName":"SpeechSynthesisUtterance","package":"typescript","name":"SpeechSynthesisUtterance"}},{"name":"ev","kind":32768,"kindString":"Parameter","type":{"type":"reference","qualifiedName":"SpeechSynthesisEvent","package":"typescript","name":"SpeechSynthesisEvent"}}],"type":{"type":"intrinsic","name":"any"}}]}}},{"name":"SpeechOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"_voiceIndex","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"language","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The code of a language that should be used to read the `text`, refer to IETF BCP 47 to see\\nvalid codes."},"type":{"type":"intrinsic","name":"string"}},{"name":"onBoundary","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SpeechEventCallback"},{"type":"literal","value":null}]}},{"name":"onMark","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SpeechEventCallback"},{"type":"literal","value":null}]}},{"name":"onPause","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SpeechEventCallback"},{"type":"literal","value":null}]}},{"name":"onResume","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SpeechEventCallback"},{"type":"literal","value":null}]}},{"name":"pitch","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Pitch of the voice to speak `text`. `1.0` is the normal pitch."},"type":{"type":"intrinsic","name":"number"}},{"name":"rate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Rate of the voice to speak `text`. `1.0` is the normal rate."},"type":{"type":"intrinsic","name":"number"}},{"name":"voice","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Voice identifier."},"type":{"type":"intrinsic","name":"string"}},{"name":"volume","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"onDone","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onDone","kind":4096,"kindString":"Call signature","comment":{"shortText":"A callback that is invoked when speaking finishes."},"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","name":"SpeechEventCallback"}]}}]},{"name":"onError","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onError","kind":4096,"kindString":"Call signature","comment":{"shortText":"A callback that is invoked when an error occurred while speaking.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","qualifiedName":"Error","package":"typescript","name":"Error"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","name":"SpeechEventCallback"}]}}]},{"name":"onStart","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onStart","kind":4096,"kindString":"Call signature","comment":{"shortText":"A callback that is invoked when speaking starts."},"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","name":"SpeechEventCallback"}]}}]},{"name":"onStopped","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onStopped","kind":4096,"kindString":"Call signature","comment":{"shortText":"A callback that is invoked when speaking is stopped by calling `Speech.stop()`."},"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","name":"SpeechEventCallback"}]}}]}]}}},{"name":"Voice","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Object describing the available voices on the device."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"identifier","kind":1024,"kindString":"Property","comment":{"shortText":"Voice unique identifier."},"type":{"type":"intrinsic","name":"string"}},{"name":"language","kind":1024,"kindString":"Property","comment":{"shortText":"Voice language."},"type":{"type":"intrinsic","name":"string"}},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"Voice name."},"type":{"type":"intrinsic","name":"string"}},{"name":"quality","kind":1024,"kindString":"Property","comment":{"shortText":"Voice quality."},"type":{"type":"reference","name":"VoiceQuality"}}]}}},{"name":"WebVoice","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"Voice"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isDefault","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"localService","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"name","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"voiceURI","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"maxSpeechInputLength","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Maximum possible text length acceptable by `Speech.speak()` method. It is platform-dependent.\\nOn iOS, this returns `Number.MAX_VALUE`."},"type":{"type":"intrinsic","name":"number"},"defaultValue":"..."},{"name":"getAvailableVoicesAsync","kind":64,"kindString":"Function","signatures":[{"name":"getAvailableVoicesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns list of all available voices.","returns":"List of `Voice` objects.\\n"},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Voice"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isSpeakingAsync","kind":64,"kindString":"Function","signatures":[{"name":"isSpeakingAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine whether the Text-to-speech utility is currently speaking. Will return `true` if speaker\\nis paused.","returns":"Returns a Promise that fulfils with a boolean, `true` if speaking, `false` if not.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"pause","kind":64,"kindString":"Function","signatures":[{"name":"pause","kind":4096,"kindString":"Call signature","comment":{"shortText":"Pauses current speech. This method is not available on Android."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"resume","kind":64,"kindString":"Function","signatures":[{"name":"resume","kind":4096,"kindString":"Call signature","comment":{"shortText":"Resumes speaking previously paused speech or does nothing if there\'s none. This method is not\\navailable on Android."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"speak","kind":64,"kindString":"Function","signatures":[{"name":"speak","kind":4096,"kindString":"Call signature","comment":{"shortText":"Speak out loud the text given options. Calling this when another text is being spoken adds\\nan utterance to queue."},"parameters":[{"name":"text","kind":32768,"kindString":"Parameter","comment":{"shortText":"The text to be spoken. Cannot be longer than [`Speech.maxSpeechInputLength`](#speechmaxspeechinputlength)."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A `SpeechOptions` object.\\n"},"type":{"type":"reference","name":"SpeechOptions"},"defaultValue":"{}"}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"stop","kind":64,"kindString":"Function","signatures":[{"name":"stop","kind":4096,"kindString":"Call signature","comment":{"shortText":"Interrupts current speech and deletes all in queue."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},sMeo:function(e){e.exports=JSON.parse('{"name":"expo-clipboard","kind":1,"kindString":"Project","originalName":"","children":[{"name":"EventEmitter","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new EventEmitter","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"nativeModule","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"NativeModule"}}],"type":{"type":"reference","name":"EventEmitter"}}]},{"name":"_eventEmitter","kind":1024,"kindString":"Property","type":{"type":"reference","name":"NativeEventEmitter"}},{"name":"_listenerCount","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"_nativeModule","kind":1024,"kindString":"Property","type":{"type":"reference","name":"NativeModule"}},{"name":"addListener","kind":2048,"kindString":"Method","signatures":[{"name":"addListener","kind":4096,"kindString":"Call signature","typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter"}],"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"listener","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"T"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"emit","kind":2048,"kindString":"Method","signatures":[{"name":"emit","kind":4096,"kindString":"Call signature","parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"params","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeAllListeners","kind":2048,"kindString":"Method","signatures":[{"name":"removeAllListeners","kind":4096,"kindString":"Call signature","parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeSubscription","kind":2048,"kindString":"Method","signatures":[{"name":"removeSubscription","kind":4096,"kindString":"Call signature","parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]}]},{"name":"ClipboardEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"content","kind":1024,"kindString":"Property","comment":{"shortText":"The new content of the user\'s clipboard."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"addClipboardListener","kind":64,"kindString":"Function","signatures":[{"name":"addClipboardListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Adds a listener that will fire whenever the content of the user\'s clipboard changes. This method\\nis a no-op on Web.","tags":[{"tag":"example","text":"\\n```typescript\\naddClipboardListener(({ content }: ClipboardEvent) => {\\n  alert(\'Copy pasta! Here\'s the string that was copied: \' + content);\\n});\\n```\\n"}]},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"Callback to execute when listener is triggered. The callback is provided a\\nsingle argument that is an object with a `content` key.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"ClipboardEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getStringAsync","kind":64,"kindString":"Function","signatures":[{"name":"getStringAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the content of the user\'s clipboard. Please note that calling this method on web will prompt\\nthe user to grant your app permission to \\"see text and images copied to the clipboard.\\"","returns":"A promise that resolves to the content of the clipboard.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"removeClipboardListener","kind":64,"kindString":"Function","signatures":[{"name":"removeClipboardListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes the listener added by addClipboardListener. This method is a no-op on Web.","tags":[{"tag":"example","text":"\\n```typescript\\nconst subscription = addClipboardListener(() => {\\n  alert(\'Copy pasta!\');\\n});\\nremoveClipboardListener(subscription);\\n```\\n"}]},"parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","comment":{"shortText":"The subscription to remove (created by addClipboardListener).\\n"},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setString","kind":64,"kindString":"Function","signatures":[{"name":"setString","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the content of the user\'s clipboard.","returns":"On web, this returns a boolean value indicating whether or not the string was saved to\\nthe user\'s clipboard. On iOS and Android, nothing is returned.\\n"},"parameters":[{"name":"text","kind":32768,"kindString":"Parameter","comment":{"shortText":"The string to save to the clipboard.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]}]}')},sQZE:function(e,w,n){"use strict";e.exports=n("OrAq")},sRe0:function(e){e.exports=JSON.parse('{"name":"expo-app-loading","kind":1,"kindString":"Project","originalName":"","children":[{"name":"default","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new default","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"reference","name":"AppLoadingProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}]}}],"type":{"type":"reference","name":"AppLoading"},"inheritedFrom":{"type":"reference","name":"React.Component<AppLoadingProps>.constructor"}},{"name":"new default","kind":16384,"kindString":"Constructor signature","comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AppLoadingProps"}},{"name":"context","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"AppLoading"},"inheritedFrom":{"type":"reference","name":"React.Component<AppLoadingProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<AppLoadingProps>.constructor"}},{"name":"_isMounted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoHideSplash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to hide the native splash screen as soon as you unmount the `AppLoading` component.\\nAuto-hiding is enabled by default. See [SplashScreen](./splash-screen) module for an example."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"onError","kind":2048,"kindString":"Method","signatures":[{"name":"onError","kind":4096,"kindString":"Call signature","comment":{"shortText":"If `startAsync` throws an error, it is caught and passed into the function provided to `onError`.","tags":[{"tag":"deprecated","text":"\\n"}]},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Error"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onFinish","kind":2048,"kindString":"Method","signatures":[{"name":"onFinish","kind":4096,"kindString":"Call signature","comment":{"shortText":"__(Required if you provide startAsync).__ Called when `startAsync` resolves or rejects.\\nThis should be used to set state and unmount the `AppLoading` component.","tags":[{"tag":"deprecated","text":"\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"name":"startAsync","kind":2048,"kindString":"Method","signatures":[{"name":"startAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"A function that returns a `Promise`, and the `Promise` should fulfil when the app is done\\nloading required data and assets. You can do this process manually if you prefer.\\nThis is mainly for backwards compatibility and it is not recommended.","text":"When provided, requires providing `onError` prop as well.","tags":[{"tag":"deprecated","text":"\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"ReactNode"}}]}}],"name":"Readonly"}]},{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoHideSplash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to hide the native splash screen as soon as you unmount the `AppLoading` component.\\nAuto-hiding is enabled by default. See [SplashScreen](./splash-screen) module for an example."},"type":{"type":"intrinsic","name":"boolean"}}]}}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"ReactNode"}}]}}],"name":"Readonly"}]}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}}],"name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"},"overwrites":{"type":"reference","name":"React.Component.componentDidMount"}}],"overwrites":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"},"overwrites":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"overwrites":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"render","kind":2048,"kindString":"Method","signatures":[{"name":"render","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Component"}]},{"name":"AppLoadingProps","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The following props are recommended, but optional. If you do not provide any props, you are\\nresponsible for coordinating loading assets, handling errors, and updating state to unmount\\nthe `AppLoading` component."},"type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoHideSplash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to hide the native splash screen as soon as you unmount the `AppLoading` component.\\nAuto-hiding is enabled by default. See [SplashScreen](./splash-screen) module for an example."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"onError","kind":2048,"kindString":"Method","signatures":[{"name":"onError","kind":4096,"kindString":"Call signature","comment":{"shortText":"If `startAsync` throws an error, it is caught and passed into the function provided to `onError`.","tags":[{"tag":"deprecated","text":"\\n"}]},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Error"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onFinish","kind":2048,"kindString":"Method","signatures":[{"name":"onFinish","kind":4096,"kindString":"Call signature","comment":{"shortText":"__(Required if you provide startAsync).__ Called when `startAsync` resolves or rejects.\\nThis should be used to set state and unmount the `AppLoading` component.","tags":[{"tag":"deprecated","text":"\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"name":"startAsync","kind":2048,"kindString":"Method","signatures":[{"name":"startAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"A function that returns a `Promise`, and the `Promise` should fulfil when the app is done\\nloading required data and assets. You can do this process manually if you prefer.\\nThis is mainly for backwards compatibility and it is not recommended.","text":"When provided, requires providing `onError` prop as well.","tags":[{"tag":"deprecated","text":"\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoHideSplash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to hide the native splash screen as soon as you unmount the `AppLoading` component.\\nAuto-hiding is enabled by default. See [SplashScreen](./splash-screen) module for an example."},"type":{"type":"intrinsic","name":"boolean"}}]}}]}}]}')},"sjE/":function(e){e.exports=JSON.parse('{"name":"expo-apple-authentication","kind":1,"kindString":"Project","originalName":"","children":[{"name":"AppleAuthenticationButtonStyle","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values control which pre-defined color scheme to use when rendering an [`AppleAuthenticationButton`](#appleauthenticationappleauthenticationbutton)."},"children":[{"name":"BLACK","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Black button with white text."},"defaultValue":"2"},{"name":"WHITE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"White button with black text."},"defaultValue":"0"},{"name":"WHITE_OUTLINE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"White button with a black outline and black text."},"defaultValue":"1"}]},{"name":"AppleAuthenticationButtonType","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values control which pre-defined text to use when rendering an [`AppleAuthenticationButton`](#appleauthenticationappleauthenticationbutton)."},"children":[{"name":"CONTINUE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"\\"Continue with Apple\\""},"defaultValue":"1"},{"name":"SIGN_IN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"\\"Sign in with Apple\\""},"defaultValue":"0"},{"name":"SIGN_UP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"\\"Sign up with Apple\\" *(requires iOS 13.2 or higher)*"},"defaultValue":"2"}]},{"name":"AppleAuthenticationCredentialState","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values specify state of the credential when checked with [`AppleAuthentication.getCredentialStateAsync()`](#appleauthenticationgetcredentialstateasyncuser).","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidprovidercredentialstate)\\nfor more details.\\n"}]},"children":[{"name":"AUTHORIZED","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"NOT_FOUND","kind":16,"kindString":"Enumeration member","defaultValue":"2"},{"name":"REVOKED","kind":16,"kindString":"Enumeration member","defaultValue":"0"},{"name":"TRANSFERRED","kind":16,"kindString":"Enumeration member","defaultValue":"3"}]},{"name":"AppleAuthenticationOperation","kind":8,"kindString":"Enumeration","children":[{"name":"IMPLICIT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An operation that depends on the particular kind of credential provider."},"defaultValue":"0"},{"name":"LOGIN","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"LOGOUT","kind":16,"kindString":"Enumeration member","defaultValue":"3"},{"name":"REFRESH","kind":16,"kindString":"Enumeration member","defaultValue":"2"}]},{"name":"AppleAuthenticationScope","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values specify scopes you can request when calling [`AppleAuthentication.signInAsync()`](#appleauthenticationsigninasyncoptions).","text":"> Note that it is possible that you will not be granted all of the scopes which you request.\\n> You will still need to handle null values for any fields you request.\\n","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationscope)\\nfor more details.\\n"}]},"children":[{"name":"EMAIL","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"FULL_NAME","kind":16,"kindString":"Enumeration member","defaultValue":"0"}]},{"name":"AppleAuthenticationUserDetectionStatus","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values specify the system\'s best guess for how likely the current user is a real person.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asuserdetectionstatus)\\nfor more details.\\n"}]},"children":[{"name":"LIKELY_REAL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The user appears to be a real person."},"defaultValue":"2"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The system has not determined whether the user might be a real person."},"defaultValue":"1"},{"name":"UNSUPPORTED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The system does not support this determination and there is no data."},"defaultValue":"0"}]},{"name":"AppleAuthenticationButtonProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","qualifiedName":"ViewProps","package":"@types/react-native","name":"ViewProps"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"buttonStyle","kind":1024,"kindString":"Property","comment":{"shortText":"The Apple-defined color scheme to use to display the button."},"type":{"type":"reference","name":"AppleAuthenticationButtonStyle"}},{"name":"buttonType","kind":1024,"kindString":"Property","comment":{"shortText":"The type of button text to display (\\"Sign In with Apple\\" vs. \\"Continue with Apple\\")."},"type":{"type":"reference","name":"AppleAuthenticationButtonType"}},{"name":"cornerRadius","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The border radius to use when rendering the button. This works similarly to\\n`style.borderRadius` in other Views."},"type":{"type":"intrinsic","name":"number"}},{"name":"style","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The custom style to apply to the button. Should not include `backgroundColor` or `borderRadius`\\nproperties."},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"ViewStyle","package":"@types/react-native","name":"ViewStyle"},{"type":"union","types":[{"type":"literal","value":"backgroundColor"},{"type":"literal","value":"borderRadius"}]}],"qualifiedName":"Omit","package":"typescript","name":"Omit"}],"qualifiedName":"StyleProp","package":"@types/react-native","name":"StyleProp"}},{"name":"onPress","kind":2048,"kindString":"Method","signatures":[{"name":"onPress","kind":4096,"kindString":"Call signature","comment":{"shortText":"The method to call when the user presses the button. You should call [`AppleAuthentication.signInAsync`](#isavailableasync)\\nin here."},"type":{"type":"intrinsic","name":"void"}}]}]}}]}},{"name":"AppleAuthenticationCredential","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The object type returned from a successful call to [`AppleAuthentication.signInAsync()`](#appleauthenticationsigninasyncoptions),\\n[`AppleAuthentication.refreshAsync()`](#appleauthenticationrefreshasyncoptions), or [`AppleAuthentication.signOutAsync()`](#appleauthenticationsignoutasyncoptions)\\nwhich contains all of the pertinent user and credential information.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidcredential)\\nfor more details.\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"authorizationCode","kind":1024,"kindString":"Property","comment":{"shortText":"A short-lived session token used by your app for proof of authorization when interacting with\\nthe app\'s server counterpart. Unlike `user`, this is ephemeral and will change each session."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"email","kind":1024,"kindString":"Property","comment":{"shortText":"The user\'s email address. Might not be present if you didn\'t request the `EMAIL` scope. May\\nalso be null if this is not the first time the user has signed into your app. If the user chose\\nto withhold their email address, this field will instead contain an obscured email address with\\nan Apple domain."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"fullName","kind":1024,"kindString":"Property","comment":{"shortText":"The user\'s name. May be `null` or contain `null` values if you didn\'t request the `FULL_NAME`\\nscope, if the user denied access, or if this is not the first time the user has signed into\\nyour app."},"type":{"type":"union","types":[{"type":"reference","name":"AppleAuthenticationFullName"},{"type":"literal","value":null}]}},{"name":"identityToken","kind":1024,"kindString":"Property","comment":{"shortText":"A JSON Web Token (JWT) that securely communicates information about the user to your app."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"realUserStatus","kind":1024,"kindString":"Property","comment":{"shortText":"A value that indicates whether the user appears to the system to be a real person."},"type":{"type":"reference","name":"AppleAuthenticationUserDetectionStatus"}},{"name":"state","kind":1024,"kindString":"Property","comment":{"shortText":"An arbitrary string that your app provided as `state` in the request that generated the\\ncredential. Used to verify that the response was from the request you made. Can be used to\\navoid replay attacks. If you did not provide `state` when making the sign-in request, this field\\nwill be `null`."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"user","kind":1024,"kindString":"Property","comment":{"shortText":"An identifier associated with the authenticated user. You can use this to check if the user is\\nstill authenticated later. This is stable and can be shared across apps released under the same\\ndevelopment team. The same user will have a different identifier for apps released by other\\ndevelopers."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AppleAuthenticationFullName","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object representing the tokenized portions of the user\'s full name. Any of all of the fields\\nmay be `null`. Only applicable fields that the user has allowed your app to access will be nonnull."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"familyName","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"givenName","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"middleName","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"namePrefix","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"nameSuffix","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"nickname","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}}},{"name":"AppleAuthenticationRefreshOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The options you can supply when making a call to [`AppleAuthentication.refreshAsync()`](#appleauthenticationrefreshasyncoptions).\\nYou must include the ID string of the user whose credentials you\'d like to refresh.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationopenidrequest)\\nfor more details.\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"requestedScopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Array of user information scopes to which your app is requesting access. Note that the user can\\nchoose to deny your app access to any scope at the time of logging in. You will still need to\\nhandle `null` values for any scopes you request. Additionally, note that the requested scopes\\nwill only be provided to you the first time each user signs into your app; in subsequent\\nrequests they will be `null`. Defaults to `[]` (no scopes)."},"type":{"type":"array","elementType":{"type":"reference","name":"AppleAuthenticationScope"}}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An arbitrary string that is returned unmodified in the corresponding credential after a\\nsuccessful authentication. This can be used to verify that the response was from the request\\nyou made and avoid replay attacks. More information on this property is available in the\\nOAuth 2.0 protocol [RFC6749](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"}},{"name":"user","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AppleAuthenticationSignInOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The options you can supply when making a call to [`AppleAuthentication.signInAsync()`](#appleauthenticationsigninasyncoptions).\\nNone of these options are required.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationopenidrequest)\\nfor more details.\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nonce","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An arbitrary string that is used to prevent replay attacks. See more information on this in the\\n[OpenID Connect specification](https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowSteps)."},"type":{"type":"intrinsic","name":"string"}},{"name":"requestedScopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Array of user information scopes to which your app is requesting access. Note that the user can\\nchoose to deny your app access to any scope at the time of logging in. You will still need to\\nhandle `null` values for any scopes you request. Additionally, note that the requested scopes\\nwill only be provided to you the first time each user signs into your app; in subsequent\\nrequests they will be `null`. Defaults to `[]` (no scopes)."},"type":{"type":"array","elementType":{"type":"reference","name":"AppleAuthenticationScope"}}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An arbitrary string that is returned unmodified in the corresponding credential after a\\nsuccessful authentication. This can be used to verify that the response was from the request\\nyou made and avoid replay attacks. More information on this property is available in the\\nOAuth 2.0 protocol [RFC6749](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AppleAuthenticationSignOutOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The options you can supply when making a call to [`AppleAuthentication.signOutAsync()`](#appleauthenticationsignoutasyncoptions).\\nYou must include the ID string of the user to sign out.","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationopenidrequest)\\nfor more details.\\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An arbitrary string that is returned unmodified in the corresponding credential after a\\nsuccessful authentication. This can be used to verify that the response was from the request\\nyou made and avoid replay attacks. More information on this property is available in the\\nOAuth 2.0 protocol [RFC6749](https://tools.ietf.org/html/rfc6749#section-10.12)."},"type":{"type":"intrinsic","name":"string"}},{"name":"user","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"AppleAuthenticationButton","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"This component displays the proprietary \\"Sign In with Apple\\" / \\"Continue with Apple\\" button on\\nyour screen. The App Store Guidelines require you to use this component to start the\\nauthentication process instead of a custom button. Limited customization of the button is\\navailable via the provided properties.","text":"You should only attempt to render this if [`AppleAuthentication.isAvailableAsync()`](#isavailableasync)\\nresolves to `true`. This component will render nothing if it is not available, and you will get\\na warning in development mode (`__DEV__ === true`).\\n\\nThe properties of this component extend from `View`; however, you should not attempt to set\\n`backgroundColor` or `borderRadius` with the `style` property. This will not work and is against\\nthe App Store Guidelines. Instead, you should use the `buttonStyle` property to choose one of the\\npredefined color styles and the `cornerRadius` property to change the border radius of the\\nbutton.\\n\\nMake sure to attach height and width via the style props as without these styles, the button will\\nnot appear on the screen.\\n","tags":[{"tag":"see","text":"[Apple\\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidbutton)\\nfor more details.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationButtonProps"}],"qualifiedName":"React.FC","package":"@types/react","name":"React.FC"},"defaultValue":"..."},{"name":"addRevokeListener","kind":64,"kindString":"Function","signatures":[{"name":"addRevokeListener","kind":4096,"kindString":"Call signature","parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getCredentialStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCredentialStateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Queries the current state of a user credential, to determine if it is still valid or if it has been revoked.\\n> **Note:** This method must be tested on a real device. On the iOS simulator it always throws an error.","returns":"A promise that fulfills with an [`AppleAuthenticationCredentialState`](#appleauthenticationcredentialstate)\\nvalue depending on the state of the credential.\\n"},"parameters":[{"name":"user","kind":32768,"kindString":"Parameter","comment":{"shortText":"The unique identifier for the user whose credential state you\'d like to check.\\nThis should come from the user field of an [`AppleAuthenticationCredential`](#appleauthenticationcredentialstate) object."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredentialState"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine if the current device\'s operating system supports Apple authentication.","returns":"A promise that fulfills with `true` if the system supports Apple authentication, and `false` otherwise.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"refreshAsync","kind":64,"kindString":"Function","signatures":[{"name":"refreshAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"An operation that refreshes the logged-in user\u2019s credentials.\\nCalling this method will show the sign in modal before actually refreshing the user credentials.","returns":"A promise that fulfills with an [`AppleAuthenticationCredential`](#appleauthenticationcredential)\\nobject after a successful authentication, and rejects with `ERR_CANCELED` if the user cancels the\\nrefresh operation.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`AppleAuthenticationRefreshOptions`](#appleauthenticationrefreshoptions) object"},"type":{"type":"reference","name":"AppleAuthenticationRefreshOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredential"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"signInAsync","kind":64,"kindString":"Function","signatures":[{"name":"signInAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sends a request to the operating system to initiate the Apple authentication flow, which will\\npresent a modal to the user over your app and allow them to sign in.","text":"You can request access to the user\'s full name and email address in this method, which allows you\\nto personalize your UI for signed in users. However, users can deny access to either or both\\nof these options at runtime.\\n\\nAdditionally, you will only receive Apple Authentication Credentials the first time users sign\\ninto your app, so you must store it for later use. It\'s best to store this information either\\nserver-side, or using [SecureStore](./securestore), so that the data persists across app installs.\\nYou can use [`AppleAuthenticationCredential.user`](#appleauthenticationcredential) to identify\\nthe user, since this remains the same for apps released by the same developer.\\n","returns":"A promise that fulfills with an [`AppleAuthenticationCredential`](#appleauthenticationcredential)\\nobject after a successful authentication, and rejects with `ERR_CANCELED` if the user cancels the\\nsign-in operation.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"An optional [`AppleAuthenticationSignInOptions`](#appleauthenticationsigninoptions) object"},"type":{"type":"reference","name":"AppleAuthenticationSignInOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredential"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"signOutAsync","kind":64,"kindString":"Function","signatures":[{"name":"signOutAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"An operation that ends the authenticated session.\\nCalling this method will show the sign in modal before actually signing the user out.","text":"It is not recommended to use this method to sign out the user as it works counterintuitively.\\nInstead of using this method it is recommended to simply clear all the user\'s data collected\\nfrom using [`signInAsync`](./#signinasync) or [`refreshAsync`](./#refreshasync) methods.\\n","returns":"A promise that fulfills with an [`AppleAuthenticationCredential`](#appleauthenticationcredential)\\nobject after a successful authentication, and rejects with `ERR_CANCELED` if the user cancels the\\nsign-out operation.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`AppleAuthenticationSignOutOptions`](#appleauthenticationsignoutoptions) object"},"type":{"type":"reference","name":"AppleAuthenticationSignOutOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredential"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},svZi:function(e){e.exports=JSON.parse('{"name":"expo-background-fetch","kind":1,"kindString":"Project","originalName":"","children":[{"name":"BackgroundFetchResult","kind":8,"kindString":"Enumeration","comment":{"shortText":"This return value is to let iOS know what the result of your background fetch was, so the\\nplatform can better schedule future background fetches. Also, your app has up to 30 seconds\\nto perform the task, otherwise your app will be terminated and future background fetches\\nmay be delayed."},"children":[{"name":"Failed","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An attempt to download data was made but that attempt failed."},"defaultValue":"3"},{"name":"NewData","kind":16,"kindString":"Enumeration member","comment":{"shortText":"New data was successfully downloaded."},"defaultValue":"2"},{"name":"NoData","kind":16,"kindString":"Enumeration member","comment":{"shortText":"There was no new data to download."},"defaultValue":"1"}]},{"name":"BackgroundFetchStatus","kind":8,"kindString":"Enumeration","children":[{"name":"Available","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Background updates are available for the app."},"defaultValue":"3"},{"name":"Denied","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The user explicitly disabled background behavior for this app or for the whole system."},"defaultValue":"1"},{"name":"Restricted","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Background updates are unavailable and the user cannot enable them again. This status can occur\\nwhen, for example, parental controls are in effect for the current user."},"defaultValue":"2"}]},{"name":"BackgroundFetchOptions","kind":256,"kindString":"Interface","children":[{"name":"minimumInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Inexact interval in seconds between subsequent repeats of the background fetch alarm. The final\\ninterval may differ from the specified one to minimize wakeups and battery usage.\\n- On Android it defaults to __10 minutes__,\\n- On iOS it calls [`BackgroundFetch.setMinimumIntervalAsync`](#backgroundfetchsetminimumintervalasyncminimuminterval)\\n  behind the scenes and the default value is the smallest fetch interval supported by the system __(10-15 minutes)__.\\nBackground fetch task receives no data, but your task should return a value that best describes\\nthe results of your background fetch work.","tags":[{"tag":"returns","text":"Returns a promise that fulfils once the task is registered and rejects in case of any errors.\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"startOnBoot","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to restart background fetch events when the device has finished booting.","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"stopOnTerminate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to stop receiving background fetch events after user terminates the app.","tags":[{"tag":"default","text":"true"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"getStatusAsync","kind":64,"kindString":"Function","signatures":[{"name":"getStatusAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets a status of background fetch.","returns":"Returns a promise which fulfils with one of `BackgroundFetchStatus` enum values.\\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"BackgroundFetchStatus"},{"type":"literal","value":null}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"registerTaskAsync","kind":64,"kindString":"Function","signatures":[{"name":"registerTaskAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Registers background fetch task with given name. Registered tasks are saved in persistent storage and restored once the app is initialized.","tags":[{"tag":"example","text":"\\n```ts\\nimport * as BackgroundFetch from \'expo-background-fetch\';\\nimport * as TaskManager from \'expo-task-manager\';\\n\\nTaskManager.defineTask(YOUR_TASK_NAME, () => {\\n  try {\\n    const receivedNewData = // do your background fetch here\\n    return receivedNewData ? BackgroundFetch.BackgroundFetchResult.NewData : BackgroundFetch.BackgroundFetchResult.NoData;\\n  } catch (error) {\\n    return BackgroundFetch.Result.Failed;\\n  }\\n});\\n```\\n"}]},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task to register. The task needs to be defined first - see [`TaskManager.defineTask`](taskmanager#defineTask)\\nfor more details."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An object containing the background fetch options.\\n"},"type":{"type":"reference","name":"BackgroundFetchOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setMinimumIntervalAsync","kind":64,"kindString":"Function","signatures":[{"name":"setMinimumIntervalAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the minimum number of seconds that must elapse before another background fetch can be\\ninitiated. This value is advisory only and does not indicate the exact amount of time expected\\nbetween fetch operations.","text":"> This method doesn\'t take any effect on Android. It is a global value which means that it can\\noverwrite settings from another application opened through Expo Go.\\n","returns":"A promise which fulfils once the minimum interval is set.\\n"},"parameters":[{"name":"minimumInterval","kind":32768,"kindString":"Parameter","comment":{"shortText":"Number of seconds that must elapse before another background fetch can be called."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"unregisterTaskAsync","kind":64,"kindString":"Function","signatures":[{"name":"unregisterTaskAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unregisters background fetch task, so the application will no longer be executing this task.","returns":"A promise which fulfils when the task is fully unregistered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task to unregister."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},tQUn:function(e){e.exports=JSON.parse('{"name":"expo-firebase-core","kind":1,"kindString":"Project","originalName":"","children":[{"name":"FirebaseOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"apiKey","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Firebase API key."},"type":{"type":"intrinsic","name":"string"}},{"name":"appId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Unique identifier of the Firebase app."},"type":{"type":"intrinsic","name":"string"}},{"name":"authDomain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"databaseURL","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Firebase database URL."},"type":{"type":"intrinsic","name":"string"}},{"name":"measurementId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"messagingSenderId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"projectId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Unique identifier of the Firebase project."},"type":{"type":"intrinsic","name":"string"}},{"name":"storageBucket","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Google Cloud Storage bucket name."},"type":{"type":"intrinsic","name":"string"}},{"name":"trackingId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Tracking identifier for Google Analytics."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"DEFAULT_APP_NAME","kind":32,"kindString":"Variable","comment":{"shortText":"Name of the default Firebase app (e.g. `[DEFAULT]`).","text":"In Expo Go, a Firebase App is created for each project that is loaded, and a unique name for each\\nproject is returned.\\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"void"}]},"defaultValue":"..."},{"name":"DEFAULT_APP_OPTIONS","kind":32,"kindString":"Variable","comment":{"shortText":"Firebase options with which the default app was initialized. If no Google services configuration\\nwas provided, `undefined` is returned.","text":"Depending on the platform, the options are read from the following files and `app.json` keys.\\n\\n| Platform | File                       | App.json key                 |\\n| -------- | -------------------------- | ---------------------------- |\\n| iOS      | `GoogleService-Info.plist` | `ios.googleServicesFile`     |\\n| Android  | `google-services.json`     | `android.googleServicesFile` |\\n| Web      | -                          | `web.config.firebase`        |\\n\\n# Example\\n\\n```js\\nconsole.log(FirebaseCore.DEFAULT_APP_OPTIONS);\\n{\\n  appId: \\"1:1082251606918:ios:a2800bc715889446e24a07\\",\\n  apiKey: \\"AIzaXXXXXXXX-xxxxxxxxxxxxxxxxxxx\\",\\n  clientId: \\"000000000000-0000000000000.apps.googleusercontent.com\\",\\n  trackingId: 12345567890,\\n  databaseURL: \\"https://myexpoapp777.firebaseio.com\\",\\n  storageBucket:  \\"myexpoapp777.appspot.com\\",\\n  projectId: \\"myexpoapp777\\",\\n  messagingSenderId:  123454321\\n}\\n```\\n"},"type":{"type":"union","types":[{"type":"reference","name":"FirebaseOptions"},{"type":"intrinsic","name":"void"}]},"defaultValue":"..."},{"name":"DEFAULT_WEB_APP_OPTIONS","kind":32,"kindString":"Variable","comment":{"shortText":"The default Firebase options as defined in `web.config.firebase` in `app.json`."},"type":{"type":"union","types":[{"type":"reference","name":"FirebaseOptions"},{"type":"intrinsic","name":"void"}]},"defaultValue":"..."}]}')},taDj:function(e){e.exports=JSON.parse('{"name":"expo-sharing","kind":1,"kindString":"Project","originalName":"","children":[{"name":"SharingOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"UTI","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"[Uniform Type Identifier](https://developer.apple.com/library/archive/documentation/FileManagement/Conceptual/understanding_utis/understand_utis_conc/understand_utis_conc.html)\\n - the type of the target file.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"dialogTitle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets share dialog title.","tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"web\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"mimeType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets `mimeType` for `Intent`.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine if the sharing API can be used in this app.","returns":"A promise that fulfills with `true` if the sharing API can be used, and `false` otherwise.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"shareAsync","kind":64,"kindString":"Function","signatures":[{"name":"shareAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Opens action sheet to share file to different applications which can handle this type of file."},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"Local file URL to share."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of share options.\\n"},"type":{"type":"reference","name":"SharingOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"Promise"}}]}]}')},tjMG:function(e){e.exports=JSON.parse('{"name":"expo-sms","kind":1,"kindString":"Project","originalName":"","children":[{"name":"SMSAttachment","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object that is used to describe an attachment that is included with a SMS message."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"filename","kind":1024,"kindString":"Property","comment":{"shortText":"The filename of the attachment."},"type":{"type":"intrinsic","name":"string"}},{"name":"mimeType","kind":1024,"kindString":"Property","comment":{"shortText":"The mime type of the attachment such as `image/png`."},"type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"The content URI of the attachment. The URI needs be a content URI so that it can be accessed by\\nother applications outside of Expo. See [FileSystem.getContentUriAsync](./filesystem/#filesystemgetcontenturiasyncfileuri))."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"SMSOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"attachments","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SMSAttachment"},{"type":"array","elementType":{"type":"reference","name":"SMSAttachment"}}]}}]}}},{"name":"SMSResponse","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"result","kind":1024,"kindString":"Property","comment":{"shortText":"Status of SMS action invoked by the user."},"type":{"type":"union","types":[{"type":"literal","value":"unknown"},{"type":"literal","value":"sent"},{"type":"literal","value":"cancelled"}]}}]}}},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determines whether SMS is available. Always returns `false` in the iOS simulator, and in browser.","returns":"Returns a promise that fulfils with a `boolean`, indicating whether SMS is available on this device.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst isAvailable = await SMS.isAvailableAsync();\\nif (isAvailable) {\\n  // do your SMS stuff here\\n} else {\\n  // misfortune... there\'s no SMS available on this device\\n}\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"sendSMSAsync","kind":64,"kindString":"Function","signatures":[{"name":"sendSMSAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Opens the default UI/app for sending SMS messages with prefilled addresses and message.","returns":"Returns a Promise that fulfils with the SMS action is invoked by the user, with corresponding result:\\n- If the user cancelled the SMS sending process: `{ result: \'cancelled\' }`.\\n- If the user has sent/scheduled message for sending: `{ result: \'sent\' }`.\\n- If the status of the SMS message cannot be determined: `{ result: \'unknown\' }`.\\n\\nAndroid does not provide information about the status of the SMS message, so on Android devices\\nthe Promise will always resolve with { result: \'unknown\' }.\\n\\n> Note: The only feedback collected by this module is whether any message has been sent. That\\nmeans we do not check actual content of message nor recipients list.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst { result } = await SMS.sendSMSAsync(\\n  [\'0123456789\', \'9876543210\'],\\n  \'My sample HelloWorld message\',\\n  {\\n    attachments: {\\n      uri: \'path/myfile.png\',\\n      mimeType: \'image/png\',\\n      filename: \'myfile.png\',\\n    },\\n  }\\n);\\n```\\n"}]},"parameters":[{"name":"addresses","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of addresses (phone numbers) or single address passed as strings. Those\\nwould appear as recipients of the prepared message."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"name":"message","kind":32768,"kindString":"Parameter","comment":{"shortText":"Message to be sent."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"A `SMSOptions` object defining additional SMS configuration options.\\n"},"type":{"type":"reference","name":"SMSOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"SMSResponse"}],"name":"Promise"}}]}]}')},tkPk:function(e){e.exports=JSON.parse('{"name":"expo-video-thumbnails","kind":1,"kindString":"Project","originalName":"","children":[{"name":"VideoThumbnailsOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"headers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"In case `sourceFilename` is a remote URI, `headers` object is passed in a network request."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"name":"quality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A value in range `0.0` - `1.0` specifying quality level of the result image. `1` means no\\ncompression (highest quality) and `0` the highest compression (lowest quality)."},"type":{"type":"intrinsic","name":"number"}},{"name":"time","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The time position where the image will be retrieved in ms."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"VideoThumbnailsResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"Height of the created image."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"URI to the created image (usable as the source for an Image/Video element)."},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"Width of the created image."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"getThumbnailAsync","kind":64,"kindString":"Function","signatures":[{"name":"getThumbnailAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create an image thumbnail from video provided via `sourceFilename`.","returns":"Returns a promise which fulfils with [`VideoThumbnailsResult`](#videothumbnailsresult).\\n"},"parameters":[{"name":"sourceFilename","kind":32768,"kindString":"Parameter","comment":{"shortText":"An URI of the video, local or remote."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map defining how modified thumbnail should be created.\\n"},"type":{"type":"reference","name":"VideoThumbnailsOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"VideoThumbnailsResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},tyUG:function(e){e.exports=JSON.parse('{"name":"expo-local-authentication","kind":1,"kindString":"Project","originalName":"","children":[{"name":"AuthenticationType","kind":8,"kindString":"Enumeration","children":[{"name":"FACIAL_RECOGNITION","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates facial recognition support."},"defaultValue":"2"},{"name":"FINGERPRINT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates fingerprint support."},"defaultValue":"1"},{"name":"IRIS","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates iris recognition support.","tags":[{"tag":"platform","text":"android\\n"}]},"defaultValue":"3"}]},{"name":"SecurityLevel","kind":8,"kindString":"Enumeration","children":[{"name":"BIOMETRIC","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates biometric authentication."},"defaultValue":"2"},{"name":"NONE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates no enrolled authentication."},"defaultValue":"0"},{"name":"SECRET","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates non-biometric authentication (e.g. PIN, Pattern)."},"defaultValue":"1"}]},{"name":"LocalAuthenticationOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"cancelLabel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Allows to customize the default `Cancel` label shown."},"type":{"type":"intrinsic","name":"string"}},{"name":"disableDeviceFallback","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"After several failed attempts the system will fallback to the device passcode. This setting\\nallows you to disable this option and instead handle the fallback yourself. This can be\\npreferable in certain custom authentication workflows. This behaviour maps to using the iOS\\n[LAPolicyDeviceOwnerAuthenticationWithBiometrics](https://developer.apple.com/documentation/localauthentication/lapolicy/lapolicydeviceownerauthenticationwithbiometrics?language=objc)\\npolicy rather than the [LAPolicyDeviceOwnerAuthentication](https://developer.apple.com/documentation/localauthentication/lapolicy/lapolicydeviceownerauthentication?language=objc)\\npolicy. Defaults to `false`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"fallbackLabel","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Allows to customize the default `Use Passcode` label shown after several failed\\nauthentication attempts. Setting this option to an empty string disables this button from\\nshowing in the prompt.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"promptMessage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A message that is shown alongside the TouchID or FaceID prompt."},"type":{"type":"intrinsic","name":"string"}},{"name":"requireConfirmation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sets a hint to the system for whether to require user confirmation after authentication.\\nThis may be ignored by the system if the user has disabled implicit authentication in Settings\\nor if it does not apply to a particular biometric modality. Defaults to `true`.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"LocalAuthenticationResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"success","kind":1024,"kindString":"Property","type":{"type":"literal","value":true}}]}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"error","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"success","kind":1024,"kindString":"Property","type":{"type":"literal","value":false}},{"name":"warning","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"authenticateAsync","kind":64,"kindString":"Function","signatures":[{"name":"authenticateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Attempts to authenticate via Fingerprint/TouchID (or FaceID if available on the device).\\n> **Note:** Apple requires apps which use FaceID to provide a description of why they use this API.\\nIf you try to use FaceID on an iPhone with FaceID without providing `infoPlist.NSFaceIDUsageDescription`\\nin `app.json`, the module will authenticate using device passcode. For more information about\\nusage descriptions on iOS, see [Deploying to App Stores](/distribution/app-stores#system-permissions-dialogs-on-ios).","returns":"Returns a promise which fulfils with [`LocalAuthenticationResult`](#localauthenticationresult).\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"LocalAuthenticationOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocalAuthenticationResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"cancelAuthenticate","kind":64,"kindString":"Function","signatures":[{"name":"cancelAuthenticate","kind":4096,"kindString":"Call signature","comment":{"shortText":"Cancels authentication flow.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getEnrolledLevelAsync","kind":64,"kindString":"Function","signatures":[{"name":"getEnrolledLevelAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine what kind of authentication is enrolled on the device.","returns":"Returns a promise which fulfils with [`SecurityLevel`](#securitylevel).\\n> **Note:** On Android devices prior to M, `SECRET` can be returned if only the SIM lock has been\\nenrolled, which is not the method that [`authenticateAsync`](#localauthenticationauthenticateasyncoptions)\\nprompts.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"SecurityLevel"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"hasHardwareAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasHardwareAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine whether a face or fingerprint scanner is available on the device.","returns":"Returns a promise which fulfils with a `boolean` value indicating whether a face or\\nfingerprint scanner is available on this device.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isEnrolledAsync","kind":64,"kindString":"Function","signatures":[{"name":"isEnrolledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine whether the device has saved fingerprints or facial data to use for authentication.","returns":"Returns a promise which fulfils to `boolean` value indicating whether the device has\\nsaved fingerprints or facial data for authentication.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"supportedAuthenticationTypesAsync","kind":64,"kindString":"Function","signatures":[{"name":"supportedAuthenticationTypesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Determine what kinds of authentications are available on the device.","returns":"Returns a promise which fulfils to an array containing [`AuthenticationType`s](#authenticationtype).\\n\\nDevices can support multiple authentication methods- i.e. `[1,2]` means the device supports both\\nfingerprint and facial recognition. If none are supported, this method returns an empty array.\\n"},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"AuthenticationType"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},uDje:function(e,w,n){"use strict";var c=n("rm/B"),p=c(/\s/);e.exports=p},uF0q:function(e){e.exports=JSON.parse('{"name":"expo-random","kind":1,"kindString":"Project","originalName":"","children":[{"name":"getRandomBytes","kind":64,"kindString":"Function","signatures":[{"name":"getRandomBytes","kind":4096,"kindString":"Call signature","comment":{"shortText":"Generates completely random bytes using native implementations. The `byteCount` property\\nis a `number` indicating the number of bytes to generate in the form of a `Uint8Array`.\\nFalls back to `Math.random` during development to prevent issues with React Native Debugger.","returns":"An array of random bytes with the same length as the `byteCount`.\\n"},"parameters":[{"name":"byteCount","kind":32768,"kindString":"Parameter","comment":{"shortText":"A number within the range from `0` to `1024`. Anything else will throw a `TypeError`."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","qualifiedName":"Uint8Array","package":"typescript","name":"Uint8Array"}}]},{"name":"getRandomBytesAsync","kind":64,"kindString":"Function","signatures":[{"name":"getRandomBytesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Generates completely random bytes using native implementations. The `byteCount` property\\nis a `number` indicating the number of bytes to generate in the form of a `Uint8Array`.","returns":"A promise that fulfills with an array of random bytes with the same length as the `byteCount`.\\n"},"parameters":[{"name":"byteCount","kind":32768,"kindString":"Parameter","comment":{"shortText":"A number within the range from `0` to `1024`. Anything else will throw a `TypeError`."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"Uint8Array","package":"typescript","name":"Uint8Array"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},uGmZ:function(e,w,n){e.exports=n("CGL2")},uXm5:function(e,w,n){"use strict";n.d(w,"c",function(){return s}),n.d(w,"a",function(){return i}),n.d(w,"b",function(){return t});var c=n("H+61"),p=n("UlJF"),d=n("cpVT"),a=n("q1tI"),m=n.n(a),r=n("gJph"),s;(function(l){l.Text="text",l.InlineCode="inlineCode"})(s||(s={}));var i=2,o=1,t=function(){function l(k,g){var h;Object(c.a)(this,l),Object(d.a)(this,"slugger",void 0),Object(d.a)(this,"_headings",void 0),Object(d.a)(this,"_meta",void 0),Object(d.a)(this,"_maxNestingLevel",void 0),this.slugger=k,this._meta=g,this._headings=[];var f=(h=g.maxHeadingDepth)!==null&&h!==void 0?h:o;this._maxNestingLevel=f+i}return Object(p.a)(l,[{key:"headings",get:function(){return this._headings}},{key:"maxNestingLevel",get:function(){return this._maxNestingLevel}},{key:"metadata",get:function(){return this._meta}},{key:"addHeading",value:function(g,h,f,S){var b,P;g=Array.isArray(g)?g.map(r.e).join(" "):g;var y=f!=null?f:{},v=y.hideInSidebar,u=y.sidebarTitle,C=y.sidebarDepth,R=y.sidebarType,F=C!=null?i+C:void 0,j=S!=null?S:r.a(this.slugger,g),I=r.e(g),W=this.findMetaForTitle(I),L=(b=(P=F!=null?F:h)!==null&&P!==void 0?P:W==null?void 0:W.depth)!==null&&b!==void 0?b:i,K=R||(this.isCode(g)?s.InlineCode:s.Text),D={title:u!=null?u:I,slug:j,level:L,type:K,ref:a.createRef(),metadata:W};return!v&&L>=i&&L<=this.maxNestingLevel&&this._headings.push(D),D}},{key:"findMetaForTitle",value:function(g){var h=this._meta.headings.find(function(f){return f.title===g&&!f._processed});if(!!h)return h._processed=!0,h}},{key:"isCode",value:function(g){if(!g.props)return!1;var h=g.props,f=h.name,S=h.originalType,b=h.mdxType;return[f,S,b].some(function(P){return P===s.InlineCode})}}]),l}()},uxQZ:function(e,w,n){"use strict";e.exports=c;function c(p,d){return p(d,"hr")}},uzhd:function(e,w){e.exports=n;function n(c,p,d){for(var a=c.children||[],m=[],r=-1,s=d.before,i,o,t;++r<a.length;)t=a[r],r+1<a.length?(o=p.handle.handlers[a[r+1].type],o&&o.peek&&(o=o.peek),i=o?o(a[r+1],c,p,{before:"",after:""}).charAt(0):""):i=d.after,m.length>0&&(s==="\r"||s===`
`)&&t.type==="html"&&(m[m.length-1]=m[m.length-1].replace(/(\r?\n|\r)$/," "),s=" "),m.push(p.handle(t,c,p,{before:s,after:i})),s=m[m.length-1].slice(-1);return m.join("")}},"v+nw":function(e){e.exports=JSON.parse('{"name":"expo-haptics","kind":1,"kindString":"Project","originalName":"","children":[{"name":"ImpactFeedbackStyle","kind":8,"kindString":"Enumeration","comment":{"shortText":"The mass of the objects in the collision simulated by a UIImpactFeedbackGenerator object\\n[`UINotificationFeedbackStyle`](https://developer.apple.com/documentation/uikit/uiimpactfeedbackstyle)"},"children":[{"name":"Heavy","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A collision between large, heavy user interface elements."},"defaultValue":"\\"heavy\\""},{"name":"Light","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A collision between small, light user interface elements."},"defaultValue":"\\"light\\""},{"name":"Medium","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A collision between moderately sized user interface elements."},"defaultValue":"\\"medium\\""}]},{"name":"NotificationFeedbackType","kind":8,"kindString":"Enumeration","comment":{"shortText":"The type of notification feedback generated by a UINotificationFeedbackGenerator object.\\n[`UINotificationFeedbackType`](https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype)"},"children":[{"name":"Error","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A notification feedback type indicating that a task has failed."},"defaultValue":"\\"error\\""},{"name":"Success","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A notification feedback type indicating that a task has completed successfully."},"defaultValue":"\\"success\\""},{"name":"Warning","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A notification feedback type indicating that a task has produced a warning."},"defaultValue":"\\"warning\\""}]},{"name":"impactAsync","kind":64,"kindString":"Function","signatures":[{"name":"impactAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"A `Promise` which fulfils once native size haptics functionality is triggered.\\n"},"parameters":[{"name":"style","kind":32768,"kindString":"Parameter","comment":{"shortText":"A collision indicator that on iOS is directly mapped to [`UIImpactFeedbackStyle`](https://developer.apple.com/documentation/uikit/uiimpactfeedbackstyle),\\nwhile on Android these are simulated using [Vibrator](https://developer.android.com/reference/android/os/Vibrator).\\nYou can use one of `Haptics.ImpactFeedbackStyle.{Light, Medium, Heavy}`."},"type":{"type":"reference","name":"ImpactFeedbackStyle"},"defaultValue":"ImpactFeedbackStyle.Medium"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"notificationAsync","kind":64,"kindString":"Function","signatures":[{"name":"notificationAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"The kind of notification response used in the feedback.","returns":"A `Promise` which fulfils once native size haptics functionality is triggered.\\n"},"parameters":[{"name":"type","kind":32768,"kindString":"Parameter","comment":{"shortText":"A notification feedback type that on iOS is directly mapped to [UINotificationFeedbackType](https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype),\\nwhile on Android these are simulated using [Vibrator](https://developer.android.com/reference/android/os/Vibrator).\\nYou can use one of `Haptics.NotificationFeedbackType.{Success, Warning, Error}`."},"type":{"type":"reference","name":"NotificationFeedbackType"},"defaultValue":"NotificationFeedbackType.Success"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"selectionAsync","kind":64,"kindString":"Function","signatures":[{"name":"selectionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Used to let a user know when a selection change has been registered.","returns":"A `Promise` which fulfils once native size haptics functionality is triggered.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},v0AZ:function(e){e.exports=JSON.parse('{"name":"expo-brightness","kind":1,"kindString":"Project","originalName":"","children":[{"name":"BrightnessMode","kind":8,"kindString":"Enumeration","children":[{"name":"AUTOMATIC","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Mode in which the device OS will automatically adjust the screen brightness depending on the\\nambient light."},"defaultValue":"1"},{"name":"MANUAL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Mode in which the screen brightness will remain constant and will not be adjusted by the OS."},"defaultValue":"2"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Means that the current brightness mode cannot be determined."},"defaultValue":"0"}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"BrightnessEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"brightness","kind":1024,"kindString":"Property","comment":{"shortText":"A number between `0` and `1`, inclusive, representing the current screen brightness."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"addBrightnessListener","kind":64,"kindString":"Function","signatures":[{"name":"addBrightnessListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to brightness (iOS) updates. The event fires whenever\\nthe power mode is toggled.","text":"On web and android the event never fires.","returns":"A `Subscription` object on which you can call `remove()` to unsubscribe from the listener.","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"A callback that is invoked when brightness (iOS) changes.\\nThe callback is provided a single argument that is an object with a `brightness` key."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BrightnessEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current brightness level of the device\'s main screen.","returns":"A `Promise` that fulfils with a number between `0` and `1`, inclusive, representing the\\ncurrent screen brightness.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing system brightness.","returns":"A promise that fulfils with an object of type [PermissionResponse](#permissionrespons).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getSystemBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"getSystemBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the global system screen brightness.","returns":"A `Promise` that is resolved with a number between `0` and `1`, inclusive, representing\\nthe current system screen brightness.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getSystemBrightnessModeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getSystemBrightnessModeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the system brightness mode (e.g. whether or not the OS will automatically\\nadjust the screen brightness depending on ambient light).","returns":"A `Promise` that fulfils with a [`BrightnessMode`](#brightnessmode). Requires\\n`SYSTEM_BRIGHTNESS` permissions.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BrightnessMode"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the Brightness API is enabled on the current device. This does not check the app\\npermissions.","returns":"Async `boolean`, indicating whether the Brightness API is available on the current device.\\nCurrently this resolves `true` on iOS and Android only.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isUsingSystemBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"isUsingSystemBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a boolean specifying whether or not the current activity is using the\\nsystem-wide brightness value.","returns":"A `Promise` that fulfils with `true` when the current activity is using the system-wide\\nbrightness value, and `false` otherwise.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing system brightness.","returns":"A promise that fulfils with an object of type [PermissionResponse](#permissionrespons).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"setBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the current screen brightness. On iOS, this setting will persist until the device is locked,\\nafter which the screen brightness will revert to the user\'s default setting. On Android, this\\nsetting only applies to the current activity; it will override the system brightness value\\nwhenever your app is in the foreground.","returns":"A `Promise` that fulfils when the brightness has been successfully set.\\n"},"parameters":[{"name":"brightnessValue","kind":32768,"kindString":"Parameter","comment":{"shortText":"A number between `0` and `1`, inclusive, representing the desired screen\\nbrightness."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setSystemBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"setSystemBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"> __WARNING:__ This method is experimental.","text":"Sets the global system screen brightness and changes the brightness mode to\\n`MANUAL`. Requires `SYSTEM_BRIGHTNESS` permissions.","returns":"A `Promise` that fulfils when the brightness has been successfully set.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"brightnessValue","kind":32768,"kindString":"Parameter","comment":{"shortText":"A number between `0` and `1`, inclusive, representing the desired screen\\nbrightness."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setSystemBrightnessModeAsync","kind":64,"kindString":"Function","signatures":[{"name":"setSystemBrightnessModeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the system brightness mode.","tags":[{"tag":"platform","text":"android\\n"}]},"parameters":[{"name":"brightnessMode","kind":32768,"kindString":"Parameter","comment":{"shortText":"One of `BrightnessMode.MANUAL` or `BrightnessMode.AUTOMATIC`. The system\\nbrightness mode cannot be set to `BrightnessMode.UNKNOWN`."},"type":{"type":"reference","name":"BrightnessMode"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"usePermissions","kind":64,"kindString":"Function","signatures":[{"name":"usePermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to modify the system brightness.\\nThis uses both `requestPermissionAsync` and `getPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Brightness.usePermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"useSystemBrightnessAsync","kind":64,"kindString":"Function","signatures":[{"name":"useSystemBrightnessAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Resets the brightness setting of the current activity to use the system-wide\\nbrightness value rather than overriding it.","returns":"A `Promise` that fulfils when the setting has been successfully changed.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},v0oL:function(e,w,n){"use strict";e.exports=p;var c=n("LLHA");function p(d){var a=this;this.Parser=m;function m(r){return c(r,Object.assign({},a.data("settings"),d,{extensions:a.data("micromarkExtensions")||[],mdastExtensions:a.data("fromMarkdownExtensions")||[]}))}}},"v21+":function(e){e.exports=JSON.parse('{"name":"expo-system-ui","kind":1,"kindString":"Project","originalName":"","children":[{"name":"getBackgroundColorAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBackgroundColorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the root view background color.","returns":"Current root view background color in hex format. Returns `null` if the background color is not set.\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst color = await SystemUI.getBackgroundColorAsync();\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"ColorValue"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"setBackgroundColorAsync","kind":64,"kindString":"Function","signatures":[{"name":"setBackgroundColorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Changes the root view background color.","tags":[{"tag":"example","text":"\\n```ts\\nSystemUI.setBackgroundColorAsync(\\"white\\");\\n```"}]},"parameters":[{"name":"color","kind":32768,"kindString":"Parameter","comment":{"shortText":"Any valid [CSS 3 (SVG) color](http://www.w3.org/TR/css3-color/#svg-color).\\n"},"type":{"type":"reference","name":"ColorValue"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},vSfO:function(e,w,n){var c=n("ScQ6");w.unsafe=[{atBreak:!0,character:"-",after:"[:|-]"}],w.handlers={listItem:p};function p(d,a,m){var r=c(d,a,m),s=d.children[0];return typeof d.checked=="boolean"&&s&&s.type==="paragraph"&&(r=r.replace(/^(?:[*+-]|\d+\.)([\r\n]| {1,3})/,i)),r;function i(o){return o+"["+(d.checked?"x":" ")+"] "}}},vWM3:function(e,w,n){"use strict";var c=n("abZZ");function p(){}function d(){}d.resetWarningCache=p,e.exports=function(){function a(s,i,o,t,l,k){if(k!==c){var g=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw g.name="Invariant Violation",g}}a.isRequired=a;function m(){return a}var r={array:a,bigint:a,bool:a,func:a,number:a,object:a,string:a,symbol:a,any:a,arrayOf:m,element:a,elementType:a,instanceOf:m,node:a,objectOf:m,oneOf:m,oneOfType:m,shape:m,exact:m,checkPropTypes:d,resetWarningCache:p};return r.PropTypes=r,r}},vcXm:function(e){e.exports=JSON.parse('{"name":"expo-clipboard","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"EventEmitter","kind":128,"kindString":"Class","flags":{},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"name":"new EventEmitter","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"name":"nativeModule","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"NativeModule"}}],"type":{"type":"reference","name":"EventEmitter"}}]},{"name":"_eventEmitter","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","name":"NativeEventEmitter"}},{"name":"_listenerCount","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"}},{"name":"_nativeModule","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","name":"NativeModule"}},{"name":"addListener","kind":2048,"kindString":"Method","flags":{},"signatures":[{"name":"addListener","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"T"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"emit","kind":2048,"kindString":"Method","flags":{},"signatures":[{"name":"emit","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"name":"params","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeAllListeners","kind":2048,"kindString":"Method","flags":{},"signatures":[{"name":"removeAllListeners","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"name":"eventName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeSubscription","kind":2048,"kindString":"Method","flags":{},"signatures":[{"name":"removeSubscription","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]}]},{"name":"ClipboardEvent","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"content","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The new content of the user\'s clipboard."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"name":"remove","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}]}}},{"name":"addClipboardListener","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"addClipboardListener","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a listener that will fire whenever the content of the user\'s clipboard changes. This method\\nis a no-op on Web.","tags":[{"tag":"example","text":"\\n```typescript\\naddClipboardListener(({ content }: ClipboardEvent) => {\\n  alert(\'Copy pasta! Here\'s the string that was copied: \' + content);\\n});\\n```\\n"}]},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Callback to execute when listener is triggered. The callback is provided a\\nsingle argument that is an object with a `content` key.\\n"},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ClipboardEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getStringAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getStringAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the content of the user\'s clipboard. Please note that calling this method on web will prompt\\nthe user to grant your app permission to \\"see text and images copied to the clipboard.\\"","returns":"A promise that resolves to the content of the clipboard.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"removeClipboardListener","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"removeClipboardListener","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Removes the listener added by addClipboardListener. This method is a no-op on Web.","tags":[{"tag":"example","text":"\\n```typescript\\nconst subscription = addClipboardListener(() => {\\n  alert(\'Copy pasta!\');\\n});\\nremoveClipboardListener(subscription);\\n```\\n"}]},"parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The subscription to remove (created by addClipboardListener).\\n"},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setString","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"setString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Sets the content of the user\'s clipboard.","returns":"On web, this returns a boolean value indicating whether or not the string was saved to\\nthe user\'s clipboard. On iOS and Android, nothing is returned.\\n"},"parameters":[{"name":"text","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The string to save to the clipboard.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]}]}')},wBw1:function(e,w,n){"use strict";e.exports=p;var c=n("vUGn");function p(d,a){var m=a.value.replace(/\r?\n|\r/g," ");return d(a,"code",[c("text",m)])}},wH4i:function(e,w,n){"use strict";var c=n("penn"),p=n("jv5L"),d=n("ywEd"),a;e.exports=m;function m(r){var s=this.data();!a&&(this.Parser&&this.Parser.prototype&&this.Parser.prototype.blockTokenizers||this.Compiler&&this.Compiler.prototype&&this.Compiler.prototype.visitors)&&(a=!0,console.warn("[remark-gfm] Warning: please upgrade to remark 13 to use this plugin")),i("micromarkExtensions",c(r)),i("fromMarkdownExtensions",p),i("toMarkdownExtensions",d(r));function i(o,t){s[o]?s[o].push(t):s[o]=[t]}}},wJMj:function(e,w,n){"use strict";e.exports=l;var c=n("IW26"),p=n("NOby"),d=n("TDhK"),a=n("Bh6z"),m=n("Z0IX"),r=n("0RbX"),s=n("o8bm"),i=n("1mpw"),o=n("WtKE"),t=n("/qNp");function l(f,S,b){return typeof S!="string"&&(b=S,S=void 0),k(b)(i(r(b).document().write(s()(f,S,!0))))}function k(f){var S=f||{},b=g({transforms:[],canContainEols:["emphasis","fragment","heading","paragraph","strong"],enter:{autolink:F($e),autolinkProtocol:Y,autolinkEmail:Y,atxHeading:F(Qe),blockQuote:F(Ye),characterEscape:Y,characterReference:Y,codeFenced:F(Je),codeFencedFenceInfo:j,codeFencedFenceMeta:j,codeIndented:F(Je,j),codeText:F(st,j),codeTextData:Y,data:Y,codeFlowValue:Y,definition:F(mt),definitionDestinationString:j,definitionLabelString:j,definitionTitleString:j,emphasis:F(pt),hardBreakEscape:F(Xe),hardBreakTrailing:F(Xe),htmlFlow:F(Ze,j),htmlFlowData:Y,htmlText:F(Ze,j),htmlTextData:Y,image:F(dt),label:j,link:F($e),listItem:F(lt),listItemValue:ee,listOrdered:F(et,D),listUnordered:F(et),paragraph:F(ct),reference:it,referenceString:j,resourceDestinationString:j,resourceTitleString:j,setextHeading:F(Qe),strong:F(kt),thematicBreak:F(yt)},exit:{atxHeading:W(),atxHeadingSequence:H,autolink:W(),autolinkEmail:ot,autolinkProtocol:Ke,blockQuote:W(),characterEscapeValue:ae,characterReferenceMarkerHexadecimal:He,characterReferenceMarkerNumeric:He,characterReferenceValue:at,codeFenced:W(re),codeFencedFence:$,codeFencedFenceInfo:V,codeFencedFenceMeta:X,codeFlowValue:ae,codeIndented:W(ne),codeText:W(we),codeTextData:ae,data:ae,definition:W(),definitionDestinationString:z,definitionLabelString:B,definitionTitleString:N,emphasis:W(),hardBreakEscape:W(fe),hardBreakTrailing:W(fe),htmlFlow:W(je),htmlFlowData:ae,htmlText:W(Ae),htmlTextData:ae,image:W(O),label:ze,labelText:ce,lineEnding:T,link:W(_e),listItem:W(),listOrdered:W(),listUnordered:W(),paragraph:W(),referenceString:rt,resourceDestinationString:We,resourceTitleString:tt,resource:nt,setextHeading:W(J),setextHeadingLineSequence:oe,setextHeadingText:E,strong:W(),thematicBreak:W()}},S.mdastExtensions||[]),P={};return y;function y(M){for(var me={type:"root",children:[]},de=[me],le=[],Te=[],he=-1,xe,Ne,Pe={stack:de,tokenStack:le,config:b,enter:I,exit:L,buffer:j,resume:K,setData:u,getData:C};++he<M.length;)(M[he][1].type==="listOrdered"||M[he][1].type==="listUnordered")&&(M[he][0]==="enter"?Te.push(he):(Ne=Te.pop(he),he=v(M,Ne,he)));for(he=-1;++he<M.length;)xe=b[M[he][0]],d.call(xe,M[he][1].type)&&xe[M[he][1].type].call(p({sliceSerialize:M[he][2].sliceSerialize},Pe),M[he][1]);if(le.length)throw new Error("Cannot close document, a token (`"+le[le.length-1].type+"`, "+t({start:le[le.length-1].start,end:le[le.length-1].end})+") is still open");for(me.position={start:R(M.length?M[0][1].start:{line:1,column:1,offset:0}),end:R(M.length?M[M.length-2][1].end:{line:1,column:1,offset:0})},he=-1;++he<b.transforms.length;)me=b.transforms[he](me)||me;return me}function v(M,me,de){for(var le=me-1,Te=-1,he=!1,xe,Ne,Pe,Ce,ye,Fe,Be;++le<=de;)if(ye=M[le],ye[1].type==="listUnordered"||ye[1].type==="listOrdered"||ye[1].type==="blockQuote"?(ye[0]==="enter"?Te++:Te--,Be=void 0):ye[1].type==="lineEndingBlank"?ye[0]==="enter"&&(xe&&!Be&&!Te&&!Fe&&(Fe=le),Be=void 0):ye[1].type==="linePrefix"||ye[1].type==="listItemValue"||ye[1].type==="listItemMarker"||ye[1].type==="listItemPrefix"||ye[1].type==="listItemPrefixWhitespace"||(Be=void 0),!Te&&ye[0]==="enter"&&ye[1].type==="listItemPrefix"||Te===-1&&ye[0]==="exit"&&(ye[1].type==="listUnordered"||ye[1].type==="listOrdered")){if(xe){for(Ne=le,Pe=void 0;Ne--;)if(Ce=M[Ne],Ce[1].type==="lineEnding"||Ce[1].type==="lineEndingBlank"){if(Ce[0]==="exit")continue;Pe&&(M[Pe][1].type="lineEndingBlank",he=!0),Ce[1].type="lineEnding",Pe=Ne}else if(!(Ce[1].type==="linePrefix"||Ce[1].type==="blockQuotePrefix"||Ce[1].type==="blockQuotePrefixWhitespace"||Ce[1].type==="blockQuoteMarker"||Ce[1].type==="listItemIndent"))break;Fe&&(!Pe||Fe<Pe)&&(xe._spread=!0),xe.end=R(Pe?M[Pe][1].start:ye[1].end),M.splice(Pe||le,0,["exit",xe,ye[2]]),le++,de++}ye[1].type==="listItemPrefix"&&(xe={type:"listItem",_spread:!1,start:R(ye[1].start)},M.splice(le,0,["enter",xe,ye[2]]),le++,de++,Fe=void 0,Be=!0)}return M[me][1]._spread=he,de}function u(M,me){P[M]=me}function C(M){return P[M]}function R(M){return{line:M.line,column:M.column,offset:M.offset}}function F(M,me){return de;function de(le){I.call(this,M(le),le),me&&me.call(this,le)}}function j(){this.stack.push({type:"fragment",children:[]})}function I(M,me){return this.stack[this.stack.length-1].children.push(M),this.stack.push(M),this.tokenStack.push(me),M.position={start:R(me.start)},M}function W(M){return me;function me(de){M&&M.call(this,de),L.call(this,de)}}function L(M){var me=this.stack.pop(),de=this.tokenStack.pop();if(de){if(de.type!==M.type)throw new Error("Cannot close `"+M.type+"` ("+t({start:M.start,end:M.end})+"): a different token (`"+de.type+"`, "+t({start:de.start,end:de.end})+") is open")}else throw new Error("Cannot close `"+M.type+"` ("+t({start:M.start,end:M.end})+"): it\u2019s not open");return me.position.end=R(M.end),me}function K(){return c(this.stack.pop())}function D(){u("expectingFirstListItemValue",!0)}function ee(M){C("expectingFirstListItemValue")&&(this.stack[this.stack.length-2].start=parseInt(this.sliceSerialize(M),10),u("expectingFirstListItemValue"))}function V(){var M=this.resume();this.stack[this.stack.length-1].lang=M}function X(){var M=this.resume();this.stack[this.stack.length-1].meta=M}function $(){C("flowCodeInside")||(this.buffer(),u("flowCodeInside",!0))}function re(){var M=this.resume();this.stack[this.stack.length-1].value=M.replace(/^(\r?\n|\r)|(\r?\n|\r)$/g,""),u("flowCodeInside")}function ne(){var M=this.resume();this.stack[this.stack.length-1].value=M}function B(M){var me=this.resume();this.stack[this.stack.length-1].label=me,this.stack[this.stack.length-1].identifier=a(this.sliceSerialize(M)).toLowerCase()}function N(){var M=this.resume();this.stack[this.stack.length-1].title=M}function z(){var M=this.resume();this.stack[this.stack.length-1].url=M}function H(M){this.stack[this.stack.length-1].depth||(this.stack[this.stack.length-1].depth=this.sliceSerialize(M).length)}function E(){u("setextHeadingSlurpLineEnding",!0)}function oe(M){this.stack[this.stack.length-1].depth=this.sliceSerialize(M).charCodeAt(0)===61?1:2}function J(){u("setextHeadingSlurpLineEnding")}function Y(M){var me=this.stack[this.stack.length-1].children,de=me[me.length-1];(!de||de.type!=="text")&&(de=ut(),de.position={start:R(M.start)},this.stack[this.stack.length-1].children.push(de)),this.stack.push(de)}function ae(M){var me=this.stack.pop();me.value+=this.sliceSerialize(M),me.position.end=R(M.end)}function T(M){var me=this.stack[this.stack.length-1];if(C("atHardBreak")){me.children[me.children.length-1].position.end=R(M.end),u("atHardBreak");return}!C("setextHeadingSlurpLineEnding")&&b.canContainEols.indexOf(me.type)>-1&&(Y.call(this,M),ae.call(this,M))}function fe(){u("atHardBreak",!0)}function je(){var M=this.resume();this.stack[this.stack.length-1].value=M}function Ae(){var M=this.resume();this.stack[this.stack.length-1].value=M}function we(){var M=this.resume();this.stack[this.stack.length-1].value=M}function _e(){var M=this.stack[this.stack.length-1];C("inReference")?(M.type+="Reference",M.referenceType=C("referenceType")||"shortcut",delete M.url,delete M.title):(delete M.identifier,delete M.label,delete M.referenceType),u("referenceType")}function O(){var M=this.stack[this.stack.length-1];C("inReference")?(M.type+="Reference",M.referenceType=C("referenceType")||"shortcut",delete M.url,delete M.title):(delete M.identifier,delete M.label,delete M.referenceType),u("referenceType")}function ce(M){this.stack[this.stack.length-2].identifier=a(this.sliceSerialize(M)).toLowerCase()}function ze(){var M=this.stack[this.stack.length-1],me=this.resume();this.stack[this.stack.length-1].label=me,u("inReference",!0),this.stack[this.stack.length-1].type==="link"?this.stack[this.stack.length-1].children=M.children:this.stack[this.stack.length-1].alt=me}function We(){var M=this.resume();this.stack[this.stack.length-1].url=M}function tt(){var M=this.resume();this.stack[this.stack.length-1].title=M}function nt(){u("inReference")}function it(){u("referenceType","collapsed")}function rt(M){var me=this.resume();this.stack[this.stack.length-1].label=me,this.stack[this.stack.length-1].identifier=a(this.sliceSerialize(M)).toLowerCase(),u("referenceType","full")}function He(M){u("characterReferenceType",M.type)}function at(M){var me=this.sliceSerialize(M),de=C("characterReferenceType"),le,Te;de?(le=m(me,de==="characterReferenceMarkerNumeric"?10:16),u("characterReferenceType")):le=o(me),Te=this.stack.pop(),Te.value+=le,Te.position.end=R(M.end)}function Ke(M){ae.call(this,M),this.stack[this.stack.length-1].url=this.sliceSerialize(M)}function ot(M){ae.call(this,M),this.stack[this.stack.length-1].url="mailto:"+this.sliceSerialize(M)}function Ye(){return{type:"blockquote",children:[]}}function Je(){return{type:"code",lang:null,meta:null,value:""}}function st(){return{type:"inlineCode",value:""}}function mt(){return{type:"definition",identifier:"",label:null,title:null,url:""}}function pt(){return{type:"emphasis",children:[]}}function Qe(){return{type:"heading",depth:void 0,children:[]}}function Xe(){return{type:"break"}}function Ze(){return{type:"html",value:""}}function dt(){return{type:"image",title:null,url:"",alt:null}}function $e(){return{type:"link",title:null,url:"",children:[]}}function et(M){return{type:"list",ordered:M.type==="listOrdered",start:null,spread:M._spread,children:[]}}function lt(M){return{type:"listItem",spread:M._spread,checked:null,children:[]}}function ct(){return{type:"paragraph",children:[]}}function kt(){return{type:"strong",children:[]}}function ut(){return{type:"text",value:""}}function yt(){return{type:"thematicBreak"}}}function g(f,S){for(var b=-1;++b<S.length;)h(f,S[b]);return f}function h(f,S){var b,P;for(b in S)P=d.call(f,b)?f[b]:f[b]={},b==="canContainEols"||b==="transforms"?f[b]=[].concat(P,S[b]):Object.assign(P,S[b])}},wSUl:function(e){e.exports=JSON.parse('{"name":"expo-secure-store","kind":1,"kindString":"Project","originalName":"","children":[{"name":"KeychainAccessibilityConstant","kind":4194304,"kindString":"Type alias","type":{"type":"intrinsic","name":"number"}},{"name":"SecureStoreOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"authenticationPrompt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Custom message displayed to the user while `requireAuthentication` option is turned on."},"type":{"type":"intrinsic","name":"string"}},{"name":"keychainAccessible","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specifies when the stored entry is accessible, using iOS\'s `kSecAttrAccessible` property.","tags":[{"tag":"see","text":"Apple\'s documentation on [keychain item accessibility](https://developer.apple.com/library/content/documentation/Security/Conceptual/keychainServConcepts/02concepts/concepts.html#//apple_ref/doc/uid/TP30000897-CH204-SW18)."},{"tag":"default","text":"SecureStore.WHEN_UNLOCKED"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"KeychainAccessibilityConstant"}},{"name":"keychainService","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"- iOS: The item\'s service, equivalent to `kSecAttrService`\\n- Android: Equivalent of the public/private key pair `Alias`\\n> If the item is set with the `keychainService` option, it will be required to later fetch the value."},"type":{"type":"intrinsic","name":"string"}},{"name":"requireAuthentication","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Option responsible for enabling the usage of the user authentication methods available on the device while\\naccessing data stored in SecureStore.\\n- iOS: Equivalent to `kSecAccessControlUserPresence`\\n- Android: Equivalent to `setUserAuthenticationRequired(true)` (requires API 23).\\nComplete functionality is unlocked only with a freshly generated key - this would not work in tandem with the `keychainService`\\nvalue used for the others non-authenticated operations."},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"AFTER_FIRST_UNLOCK","kind":32,"kindString":"Variable","comment":{"shortText":"The data in the keychain item cannot be accessed after a restart until the device has been\\nunlocked once by the user. This may be useful if you need to access the item when the phone\\nis locked."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.AFTER_FIRST_UNLOCK"},{"name":"AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","comment":{"shortText":"Similar to `AFTER_FIRST_UNLOCK`, except the entry is not migrated to a new device when restoring\\nfrom a backup."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY"},{"name":"ALWAYS","kind":32,"kindString":"Variable","comment":{"shortText":"The data in the keychain item can always be accessed regardless of whether the device is locked.\\nThis is the least secure option."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.ALWAYS"},{"name":"ALWAYS_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","comment":{"shortText":"Similar to `ALWAYS`, except the entry is not migrated to a new device when restoring from a backup."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.ALWAYS_THIS_DEVICE_ONLY"},{"name":"WHEN_PASSCODE_SET_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","comment":{"shortText":"Similar to `WHEN_UNLOCKED_THIS_DEVICE_ONLY`, except the user must have set a passcode in order to\\nstore an entry. If the user removes their passcode, the entry will be deleted."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.WHEN_PASSCODE_SET_THIS_DEVICE_ONLY"},{"name":"WHEN_UNLOCKED","kind":32,"kindString":"Variable","comment":{"shortText":"The data in the keychain item can be accessed only while the device is unlocked by the user."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.WHEN_UNLOCKED"},{"name":"WHEN_UNLOCKED_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","comment":{"shortText":"Similar to `WHEN_UNLOCKED`, except the entry is not migrated to a new device when restoring from\\na backup."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.WHEN_UNLOCKED_THIS_DEVICE_ONLY"},{"name":"deleteItemAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteItemAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Delete the value associated with the provided key.","returns":"A promise that will reject if the value couldn\'t be deleted.\\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"shortText":"The key that was used to store the associated value."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`SecureStoreOptions`](#securestoreoptions) object.\\n"},"type":{"type":"reference","name":"SecureStoreOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"getItemAsync","kind":64,"kindString":"Function","signatures":[{"name":"getItemAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Fetch the stored value associated with the provided key.","returns":"A promise that resolves to the previously stored value, or `null` if there is no entry\\nfor the given key. The promise will reject if an error occurred while retrieving the value.\\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"shortText":"The key that was used to store the associated value."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`SecureStoreOptions`](#securestoreoptions) object.\\n"},"type":{"type":"reference","name":"SecureStoreOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the SecureStore API is enabled on the current device. This does not check the app\\npermissions.","returns":"Promise which fulfils witch `boolean`, indicating whether the SecureStore API is available\\non the current device. Currently this resolves `true` on iOS and Android only.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"setItemAsync","kind":64,"kindString":"Function","signatures":[{"name":"setItemAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Store a key\u2013value pair.","returns":"A promise that will reject if value cannot be stored on the device.\\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"shortText":"The key to associate with the stored value. Keys may contain alphanumeric characters\\n`.`, `-`, and `_`."},"type":{"type":"intrinsic","name":"string"}},{"name":"value","kind":32768,"kindString":"Parameter","comment":{"shortText":"The value to store. Size limit is 2048 bytes."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`SecureStoreOptions`](#securestoreoptions) object.\\n"},"type":{"type":"reference","name":"SecureStoreOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}')},wWWu:function(e){e.exports=JSON.parse('{"name":"expo-web-browser","kind":1,"kindString":"Project","originalName":"","children":[{"name":"WebBrowserResultType","kind":8,"kindString":"Enumeration","children":[{"name":"CANCEL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"iOS only."},"defaultValue":"\\"cancel\\""},{"name":"DISMISS","kind":16,"kindString":"Enumeration member","comment":{"shortText":"iOS only."},"defaultValue":"\\"dismiss\\""},{"name":"LOCKED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"locked\\""},{"name":"OPENED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Android only."},"defaultValue":"\\"opened\\""}]},{"name":"WebBrowserAuthSessionResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"WebBrowserRedirectResult"},{"type":"reference","name":"WebBrowserResult"}]}},{"name":"WebBrowserCompleteAuthSessionOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"skipRedirectCheck","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Attempt to close the window without checking to see if the auth redirect matches the cached redirect URL."},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"WebBrowserCompleteAuthSessionResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"message","kind":1024,"kindString":"Property","comment":{"shortText":"Additional description or reasoning of the result."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the result."},"type":{"type":"union","types":[{"type":"literal","value":"success"},{"type":"literal","value":"failed"}]}}]}}},{"name":"WebBrowserCoolDownResult","kind":4194304,"kindString":"Type alias","type":{"type":"reference","name":"ServiceActionResult"}},{"name":"WebBrowserCustomTabsResults","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"browserPackages","kind":1024,"kindString":"Property","comment":{"shortText":"All packages recognized by `PackageManager` as capable of handling Custom Tabs. Empty array\\nmeans there is no supporting browsers on device."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"defaultBrowserPackage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Default package chosen by user, `null` if there is no such packages. Also `null` usually means,\\nthat user will be prompted to choose from available packages."},"type":{"type":"intrinsic","name":"string"}},{"name":"preferredBrowserPackage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Package preferred by `CustomTabsClient` to be used to handle Custom Tabs. It favors browser\\nchosen by user as default, as long as it is present on both `browserPackages` and\\n`servicePackages` lists. Only such browsers are considered as fully supporting Custom Tabs.\\nIt might be `null` when there is no such browser installed or when default browser is not in\\n`servicePackages` list."},"type":{"type":"intrinsic","name":"string"}},{"name":"servicePackages","kind":1024,"kindString":"Property","comment":{"shortText":"All packages recognized by `PackageManager` as capable of handling Custom Tabs Service.\\nThis service is used by [`warmUpAsync`](#webbrowserwarmupasyncbrowserpackage), [`mayInitWithUrlAsync`](#webbrowsermayinitwithurlasyncurl-browserpackage)\\nand [`coolDownAsync`](#webbrowsercooldownasyncbrowserpackage)."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}}},{"name":"WebBrowserMayInitWithUrlResult","kind":4194304,"kindString":"Type alias","type":{"type":"reference","name":"ServiceActionResult"}},{"name":"WebBrowserOpenOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"browserPackage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(Android only)__. Package name of a browser to be used to handle Custom Tabs. List of\\navailable packages is to be queried by [`getCustomTabsSupportingBrowsers`](#webbrowsergetcustomtabssupportingbrowsersasync) method."},"type":{"type":"intrinsic","name":"string"}},{"name":"controlsColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(iOS only)__ Tint color for controls in SKSafariViewController in `#AARRGGBB` or `#RRGGBB` format."},"type":{"type":"intrinsic","name":"string"}},{"name":"createTask","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(Android only)__ A boolean determining whether the browser should open in a new task or in\\nthe same task as your app.","tags":[{"tag":"default","text":"`true`\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"dismissButtonStyle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(iOS only)__ The style of the dismiss button. Should be one of: `done`, `close`, or `cancel`."},"type":{"type":"union","types":[{"type":"literal","value":"done"},{"type":"literal","value":"close"},{"type":"literal","value":"cancel"}]}},{"name":"enableBarCollapsing","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean determining whether the toolbar should be hiding when a user scrolls the website."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"enableDefaultShareMenuItem","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(Android only)__ A boolean determining whether a default share item should be added to the menu."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"readerMode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(iOS only)__ A boolean determining whether Safari should enter Reader mode, if it is available."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"secondaryToolbarColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(Android only)__ Color of the secondary toolbar in either `#AARRGGBB` or `#RRGGBB` format."},"type":{"type":"intrinsic","name":"string"}},{"name":"showInRecents","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(Android only)__ A boolean determining whether browsed website should be shown as separate\\nentry in Android recents/multitasking view. Requires `createTask` to be `true` (default).","tags":[{"tag":"default","text":"`false`\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"showTitle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(Android only)__ A boolean determining whether the browser should show the title of website on the toolbar."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"toolbarColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Color of the toolbar in either `#AARRGGBB` or `#RRGGBB` format."},"type":{"type":"intrinsic","name":"string"}},{"name":"windowFeatures","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(Web only)__ Features to use with `window.open()`."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"WebBrowserWindowFeatures"}]}},{"name":"windowName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(Web only)__ Name to assign to the popup window."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"WebBrowserRedirectResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the result."},"type":{"type":"literal","value":"success"}},{"name":"url","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"WebBrowserResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"Type of the result."},"type":{"type":"reference","name":"WebBrowserResultType"}}]}}},{"name":"WebBrowserWarmUpResult","kind":4194304,"kindString":"Type alias","type":{"type":"reference","name":"ServiceActionResult"}},{"name":"WebBrowserWindowFeatures","kind":4194304,"kindString":"Type alias","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"string"}]}],"name":"Record"}},{"name":"coolDownAsync","kind":64,"kindString":"Function","signatures":[{"name":"coolDownAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"_Android only_. This methods removes all bindings to services created by [`warmUpAsync`](#webbrowserwarmupasyncbrowserpackage)\\nor [`mayInitWithUrlAsync`](#webbrowsermayinitwithurlasyncurl-browserpackage). You should call\\nthis method once you don\'t need them to avoid potential memory leaks. However, those binding\\nwould be cleared once your application is destroyed, which might be sufficient in most cases.","returns":"The promise which fulfils with `{ package: string }` when cooling is performed, or\\nan empty object when there was no connection to be dismissed.\\n"},"parameters":[{"name":"browserPackage","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"_Optional_ - Package of browser to be cooled. If not set, preferred browser will be used.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserCoolDownResult"}],"name":"Promise"}}]},{"name":"dismissAuthSession","kind":64,"kindString":"Function","signatures":[{"name":"dismissAuthSession","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]},{"name":"dismissBrowser","kind":64,"kindString":"Function","signatures":[{"name":"dismissBrowser","kind":4096,"kindString":"Call signature","comment":{"shortText":"_iOS only_. Dismisses the presented web browser.","returns":"The promise which fulfils with `{ type: \'dismiss\' }` object.\\n"},"type":{"type":"intrinsic","name":"void"}}]},{"name":"getCustomTabsSupportingBrowsersAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCustomTabsSupportingBrowsersAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"_Android only_. Returns a list of applications package names supporting Custom Tabs, Custom Tabs\\nservice, user chosen and preferred one. This may not be fully reliable, since it uses\\n`PackageManager.getResolvingActivities` under the hood. (For example, some browsers might not be\\npresent in browserPackages list once another browser is set to default.)","returns":"The promise which fulfils with [`WebBrowserCustomTabsResults`](#webbrowsercustomtabsresults) object.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserCustomTabsResults"}],"name":"Promise"}}]},{"name":"mayInitWithUrlAsync","kind":64,"kindString":"Function","signatures":[{"name":"mayInitWithUrlAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"_Android only_. This method initiates (if needed) [CustomTabsSession](https://developer.android.com/reference/android/support/customtabs/CustomTabsSession.html#maylaunchurl)\\nand calls its `mayLaunchUrl` method for browser specified by the package.","returns":"A promise which fulfils with `{ package: string }` object.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"text":"The url of page that is likely to be loaded first when opening browser."},"type":{"type":"intrinsic","name":"string"}},{"name":"browserPackage","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"_Optional_ - Package of browser to be informed. If not set, preferred browser will be used.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserMayInitWithUrlResult"}],"name":"Promise"}}]},{"name":"maybeCompleteAuthSession","kind":64,"kindString":"Function","signatures":[{"name":"maybeCompleteAuthSession","kind":4096,"kindString":"Call signature","comment":{"shortText":"_Web only_. Possibly completes an authentication session on web in a window popup. The method\\nshould be invoked on the page that the window redirects to.","returns":"Returns an object with message about why the redirect failed or succeeded:\\n\\nIf `type` is set to `failed`, the reason depends on the message:\\n- `Not supported on this platform`: If the platform doesn\'t support this method (iOS, Android).\\n- `Cannot use expo-web-browser in a non-browser environment`: If the code was executed in an SSR\\n  or node environment.\\n- `No auth session is currently in progress`: (the cached state wasn\'t found in local storage).\\n  This can happen if the window redirects to an origin (website) that is different to the initial\\n  website origin. If this happens in development, it may be because the auth started on localhost\\n  and finished on your computer port (Ex: `128.0.0.*`). This is controlled by the `redirectUrl`\\n  and `returnUrl`.\\n- `Current URL \\"<URL>\\" and original redirect URL \\"<URL>\\" do not match`: This can occur when the\\n  redirect URL doesn\'t match what was initial defined as the `returnUrl`. You can skip this test\\n  in development by passing `{ skipRedirectCheck: true }` to the function.\\n\\nIf `type` is set to `success`, the parent window will attempt to close the child window immediately.\\n\\nIf the error `ERR_WEB_BROWSER_REDIRECT` was thrown, it may mean that the parent window was\\nreloaded before the auth was completed. In this case you\'ll need to close the child window manually.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"\\n"},"type":{"type":"reference","name":"WebBrowserCompleteAuthSessionOptions"},"defaultValue":"{}"}],"type":{"type":"reference","name":"WebBrowserCompleteAuthSessionResult"}}]},{"name":"openAuthSessionAsync","kind":64,"kindString":"Function","signatures":[{"name":"openAuthSessionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"# On iOS:\\nOpens the url with Safari in a modal using `SFAuthenticationSession` on iOS 11 and greater,\\nand falling back on a `SFSafariViewController`. The user will be asked whether to allow the app\\nto authenticate using the given url.","text":"# On Android:\\nThis will be done using a \\"custom Chrome tabs\\" browser, [AppState](../react-native/appstate/),\\nand [Linking](./linking/) APIs.\\n\\n# On web:\\n> This API can only be used in a secure environment (`https`). You can use expo `start:web --https`\\nto test this. Otherwise, an error with code [`ERR_WEB_BROWSER_CRYPTO`](#errwebbrowsercrypto) will be thrown.\\nThis will use the browser\'s [`window.open()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/open) API.\\n- _Desktop_: This will create a new web popup window in the browser that can be closed later using `WebBrowser.maybeCompleteAuthSession()`.\\n- _Mobile_: This will open a new tab in the browser which can be closed using `WebBrowser.maybeCompleteAuthSession()`.\\n\\nHow this works on web:\\n- A crypto state will be created for verifying the redirect.\\n  - This means you need to run with `expo start:web --https`\\n- The state will be added to the window\'s `localstorage`. This ensures that auth cannot complete\\n  unless it\'s done from a page running with the same origin as it was started.\\n  Ex: if `openAuthSessionAsync` is invoked on `https://localhost:19006`, then `maybeCompleteAuthSession`\\n  must be invoked on a page hosted from the origin `https://localhost:19006`. Using a different\\n  website, or even a different host like `https://128.0.0.*:19006` for example will not work.\\n- A timer will be started to check for every 1000 milliseconds (1 second) to detect if the window\\n  has been closed by the user. If this happens then a promise will resolve with `{ type: \'dismiss\' }`.\\n\\n> On mobile web, Chrome and Safari will block any call to [`window.open()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/open)\\nwhich takes too long to fire after a user interaction. This method must be invoked immediately\\nafter a user interaction. If the event is blocked, an error with code [`ERR_WEB_BROWSER_BLOCKED`](#errwebbrowserblocked) will be thrown.\\n","returns":"\\n- If the user does not permit the application to authenticate with the given url, the Promise fulfills with `{ type: \'cancel\' }` object.\\n- If the user closed the web browser, the Promise fulfills with `{ type: \'cancel\' }` object.\\n- If the browser is closed using [`dismissBrowser`](#webbrowserdismissbrowser),\\nthe Promise fulfills with `{ type: \'dismiss\' }` object.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"text":"The url to open in the web browser. This should be a login page."},"type":{"type":"intrinsic","name":"string"}},{"name":"redirectUrl","kind":32768,"kindString":"Parameter","comment":{"text":"_Optional_ - The url to deep link back into your app. By default, this will be [`Constants.linkingUrl`](./constants/#expoconstantslinkinguri)."},"type":{"type":"intrinsic","name":"string"}},{"name":"browserParams","kind":32768,"kindString":"Parameter","comment":{"text":"_Optional_ - An object with the same keys as [`WebBrowserOpenOptions`](#webbrowseropenoptions).\\nIf there is no native AuthSession implementation available (which is the case on Android)\\nthese params will be used in the browser polyfill. If there is a native AuthSession implementation,\\nthese params will be ignored.\\n"},"type":{"type":"reference","name":"WebBrowserOpenOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserAuthSessionResult"}],"name":"Promise"}}]},{"name":"openBrowserAsync","kind":64,"kindString":"Function","signatures":[{"name":"openBrowserAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Opens the url with Safari in a modal on iOS using [`SFSafariViewController`](https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller),\\nand Chrome in a new [custom tab](https://developer.chrome.com/multidevice/android/customtabs)\\non Android. On iOS, the modal Safari will not share cookies with the system Safari. If you need\\nthis, use [`openAuthSessionAsync`](#webbrowseropenauthsessionasyncurl-redirecturl-browserparams).","returns":"The promise behaves differently based on the platform.\\nOn Android promise resolves with `{type: \'opened\'}` if we were able to open browser.\\nOn iOS:\\n- If the user closed the web browser, the Promise resolves with `{ type: \'cancel\' }`.\\n- If the browser is closed using [`dismissBrowser`](#webbrowserdismissbrowser), the Promise resolves with `{ type: \'dismiss\' }`.\\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"text":"The url to open in the web browser."},"type":{"type":"intrinsic","name":"string"}},{"name":"browserParams","kind":32768,"kindString":"Parameter","comment":{"text":"A dictionary of key-value pairs.\\n"},"type":{"type":"reference","name":"WebBrowserOpenOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserResult"}],"name":"Promise"}}]},{"name":"warmUpAsync","kind":64,"kindString":"Function","signatures":[{"name":"warmUpAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"_Android only_. This method calls `warmUp` method on [CustomTabsClient](https://developer.android.com/reference/android/support/customtabs/CustomTabsClient.html#warmup(long))\\nfor specified package.","returns":"A promise which fulfils with `{ package: string }` object.\\n"},"parameters":[{"name":"browserPackage","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"_Optional_ - Package of browser to be warmed up. If not set, preferred browser will be warmed.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserWarmUpResult"}],"name":"Promise"}}]}]}')},wYf1:function(e,w,n){var c=n("uzhd"),p=n("gsvO"),d=n("55fs");e.exports=a;function a(m){var r=m||{},s=r.tableCellPadding,i=r.tablePipeAlign,o=r.stringLength,t=s?" ":"|";return{unsafe:[{character:"\r",inConstruct:"tableCell"},{character:`
`,inConstruct:"tableCell"},{atBreak:!0,character:"|",after:"[	 :-]"},{character:"|",inConstruct:"tableCell"},{atBreak:!0,character:":",after:"-"},{atBreak:!0,character:"-",after:"[:|-]"}],handlers:{table:l,tableRow:k,tableCell:g,inlineCode:b}};function l(P,y,v){return h(f(P,v),P.align)}function k(P,y,v){var u=S(P,v),C=h([u]);return C.slice(0,C.indexOf(`
`))}function g(P,y,v){var u=v.enter("tableCell"),C=c(P,v,{before:t,after:t});return u(),C}function h(P,y){return d(P,{align:y,alignDelimiters:i,padding:s,stringLength:o})}function f(P,y){for(var v=P.children,u=-1,C=v.length,R=[],F=y.enter("table");++u<C;)R[u]=S(v[u],y);return F(),R}function S(P,y){for(var v=P.children,u=-1,C=v.length,R=[],F=y.enter("tableRow");++u<C;)R[u]=g(v[u],P,y);return F(),R}function b(P,y,v){var u=p(P,y,v);return v.stack.indexOf("tableCell")!==-1&&(u=u.replace(/\|/g,"\\$&")),u}}},wwGf:function(e){e.exports=JSON.parse('{"name":"expo-localization","kind":1,"kindString":"Project","originalName":"","children":[{"name":"Localization","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"currency","kind":1024,"kindString":"Property","comment":{"shortText":"Three-character ISO 4217 currency code. Returns `null` on web.","tags":[{"tag":"example","text":"`\'USD\'`, `\'EUR\'`, `\'CNY\'`, `null`\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"decimalSeparator","kind":1024,"kindString":"Property","comment":{"shortText":"Decimal separator used for formatting numbers.","tags":[{"tag":"example","text":"`\',\'`, `\'.\'`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"digitGroupingSeparator","kind":1024,"kindString":"Property","comment":{"shortText":"Digit grouping separator used when formatting numbers larger than 1000.","tags":[{"tag":"example","text":"`\'.\'`, `\'\'`, `\',\'`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"isMetric","kind":1024,"kindString":"Property","comment":{"shortText":"Boolean value that indicates whether the system uses the metric system.\\nOn Android and web, this is inferred from the current region."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isRTL","kind":1024,"kindString":"Property","comment":{"shortText":"Returns if the system\'s language is written from Right-to-Left.\\nThis can be used to build features like [bidirectional icons](https://material.io/design/usability/bidirectionality.html).","text":"Returns `false` in Server Side Rendering (SSR) environments.\\n"},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isoCurrencyCodes","kind":1024,"kindString":"Property","comment":{"shortText":"A list of all the supported language ISO codes."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"locale","kind":1024,"kindString":"Property","comment":{"shortText":"An [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag),\\nconsisting of a two-character language code and optional script, region and variant codes.","tags":[{"tag":"example","text":"`\'en\'`, `\'en-US\'`, `\'zh-Hans\'`, `\'zh-Hans-CN\'`, `\'en-emodeng\'`\\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"locales","kind":1024,"kindString":"Property","comment":{"shortText":"List of all the native languages provided by the user settings.\\nThese are returned in the order the user defines in their device settings.","tags":[{"tag":"example","text":"`[\'en\', \'en-US\', \'zh-Hans\', \'zh-Hans-CN\', \'en-emodeng\']`\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"region","kind":1024,"kindString":"Property","comment":{"shortText":"The region code for your device that comes from the Region setting under Language & Region on iOS.\\nThis value is always available on iOS, but might return `null` on Android or web.","tags":[{"tag":"example","text":"`\'US\'`, `\'NZ\'`, `null`\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"timezone","kind":1024,"kindString":"Property","comment":{"shortText":"The current time zone in display format.\\nOn Web time zone is calculated with Intl.DateTimeFormat().resolvedOptions().timeZone. For a\\nbetter estimation you could use the moment-timezone package but it will add significant bloat to\\nyour website\'s bundle size.","tags":[{"tag":"example","text":"`\'America/Los_Angeles\'`\\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"currency","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Three-character ISO 4217 currency code. Returns `null` on web.","tags":[{"tag":"example","text":"`\'USD\'`, `\'EUR\'`, `\'CNY\'`, `null`\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"ExpoLocalization.currency"},{"name":"decimalSeparator","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Decimal separator used for formatting numbers.","tags":[{"tag":"example","text":"`\',\'`, `\'.\'`\\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoLocalization.decimalSeparator"},{"name":"digitGroupingSeparator","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Digit grouping separator used when formatting numbers larger than 1000.","tags":[{"tag":"example","text":"`\'.\'`, `\'\'`, `\',\'`\\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoLocalization.digitGroupingSeparator"},{"name":"isMetric","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Boolean value that indicates whether the system uses the metric system.\\nOn Android and web, this is inferred from the current region."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"ExpoLocalization.isMetric"},{"name":"isRTL","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"Returns if the system\'s language is written from Right-to-Left.\\nThis can be used to build features like [bidirectional icons](https://material.io/design/usability/bidirectionality.html).","text":"Returns `false` in Server Side Rendering (SSR) environments.\\n"},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"ExpoLocalization.isRTL"},{"name":"isoCurrencyCodes","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"A list of all the supported language ISO codes."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"ExpoLocalization.isoCurrencyCodes"},{"name":"locale","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"An [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag),\\nconsisting of a two-character language code and optional script, region and variant codes.","tags":[{"tag":"example","text":"`\'en\'`, `\'en-US\'`, `\'zh-Hans\'`, `\'zh-Hans-CN\'`, `\'en-emodeng\'`\\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoLocalization.locale"},{"name":"locales","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"List of all the native languages provided by the user settings.\\nThese are returned in the order the user defines in their device settings.","tags":[{"tag":"example","text":"`[\'en\', \'en-US\', \'zh-Hans\', \'zh-Hans-CN\', \'en-emodeng\']`\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"ExpoLocalization.locales"},{"name":"region","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The region code for your device that comes from the Region setting under Language & Region on iOS.\\nThis value is always available on iOS, but might return `null` on Android or web.","tags":[{"tag":"example","text":"`\'US\'`, `\'NZ\'`, `null`\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"ExpoLocalization.region"},{"name":"timezone","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The current time zone in display format.\\nOn Web time zone is calculated with Intl.DateTimeFormat().resolvedOptions().timeZone. For a\\nbetter estimation you could use the moment-timezone package but it will add significant bloat to\\nyour website\'s bundle size.","tags":[{"tag":"example","text":"`\'America/Los_Angeles\'`\\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"ExpoLocalization.timezone"},{"name":"getLocalizationAsync","kind":64,"kindString":"Function","signatures":[{"name":"getLocalizationAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the latest native values from the device. Locale can be changed on some Android devices\\nwithout resetting the app.\\n> On iOS, changing the locale will cause the device to reset meaning the constants will always be\\ncorrect.","tags":[{"tag":"example","text":"\\n```ts\\n// When the app returns from the background on Android...\\n\\nconst { locale } = await Localization.getLocalizationAsync();\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Localization"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}')},"x/L1":function(e){e.exports=JSON.parse('{"name":"expo-location","kind":1,"kindString":"Project","originalName":"","children":[{"name":"LocationAccuracy","kind":16777216,"kindString":"Reference"},{"name":"LocationActivityType","kind":16777216,"kindString":"Reference"},{"name":"LocationGeofencingEventType","kind":16777216,"kindString":"Reference"},{"name":"LocationGeofencingRegionState","kind":16777216,"kindString":"Reference"},{"name":"Accuracy","kind":8,"kindString":"Enumeration","comment":{"shortText":"Enum with available location accuracies."},"children":[{"name":"Balanced","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Accurate to within one hundred meters."},"defaultValue":"3"},{"name":"BestForNavigation","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The highest possible accuracy that uses additional sensor data to facilitate navigation apps."},"defaultValue":"6"},{"name":"High","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Accurate to within ten meters of the desired target."},"defaultValue":"4"},{"name":"Highest","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The best level of accuracy available."},"defaultValue":"5"},{"name":"Low","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Accurate to the nearest kilometer."},"defaultValue":"2"},{"name":"Lowest","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Accurate to the nearest three kilometers."},"defaultValue":"1"}]},{"name":"ActivityType","kind":8,"kindString":"Enumeration","comment":{"shortText":"Enum with available activity types of background location tracking."},"children":[{"name":"Airborne","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Intended for airborne activities. Fall backs to `ActivityType.Other` if\\nunsupported.","tags":[{"tag":"platform","text":"ios 12+\\n"}]},"defaultValue":"5"},{"name":"AutomotiveNavigation","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Location updates are being used specifically during vehicular navigation to track location\\nchanges to the automobile."},"defaultValue":"2"},{"name":"Fitness","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Use this activity type if you track fitness activities such as walking, running, cycling,\\nand so on."},"defaultValue":"3"},{"name":"Other","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Default activity type. Use it if there is no other type that matches the activity you track."},"defaultValue":"1"},{"name":"OtherNavigation","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Activity type for movements for other types of vehicular navigation that are not automobile\\nrelated."},"defaultValue":"4"}]},{"name":"GeofencingEventType","kind":8,"kindString":"Enumeration","comment":{"shortText":"A type of the event that geofencing task can receive."},"children":[{"name":"Enter","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Emitted when the device entered observed region."},"defaultValue":"1"},{"name":"Exit","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Occurs as soon as the device left observed region"},"defaultValue":"2"}]},{"name":"GeofencingRegionState","kind":8,"kindString":"Enumeration","comment":{"shortText":"State of the geofencing region that you receive through the geofencing task."},"children":[{"name":"Inside","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates that the device is inside the region."},"defaultValue":"1"},{"name":"Outside","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Inverse of inside state."},"defaultValue":"2"},{"name":"Unknown","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates that the device position related to the region is unknown."},"defaultValue":"0"}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"LocationPermissionResponse","kind":256,"kindString":"Interface","comment":{"shortText":"`LocationPermissionResponse` extends [PermissionResponse](permissions.md#permissionresponse)\\ntype exported by `expo-modules-core` and contains additional platform-specific fields."},"children":[{"name":"android","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"PermissionDetailsLocationAndroid"}},{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"UMPermissionResponse.canAskAgain"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"},"inheritedFrom":{"type":"reference","name":"UMPermissionResponse.expires"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"UMPermissionResponse.granted"}},{"name":"ios","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"PermissionDetailsLocationIOS"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"},"inheritedFrom":{"type":"reference","name":"UMPermissionResponse.status"}}],"extendedTypes":[{"type":"reference","name":"UMPermissionResponse"}]},{"name":"LocationCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Represents `watchPositionAsync` callback."},"parameters":[{"name":"location","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"LocationObject"}}],"type":{"type":"intrinsic","name":"any"}}]}}},{"name":"LocationGeocodedAddress","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing a result of `reverseGeocodeAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"city","kind":1024,"kindString":"Property","comment":{"shortText":"City name of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"country","kind":1024,"kindString":"Property","comment":{"shortText":"Localized country name of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"district","kind":1024,"kindString":"Property","comment":{"shortText":"Additional city-level information like district name."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"isoCountryCode","kind":1024,"kindString":"Property","comment":{"shortText":"Localized (ISO) country code of the address, if available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"The name of the placemark, for example, \\"Tower Bridge\\"."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"postalCode","kind":1024,"kindString":"Property","comment":{"shortText":"Postal code of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"region","kind":1024,"kindString":"Property","comment":{"shortText":"The state or province associated with the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"street","kind":1024,"kindString":"Property","comment":{"shortText":"Street name of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"streetNumber","kind":1024,"kindString":"Property","comment":{"shortText":"Street number of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"subregion","kind":1024,"kindString":"Property","comment":{"shortText":"Additional information about administrative area."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"timezone","kind":1024,"kindString":"Property","comment":{"shortText":"The timezone identifier associated with the address.","tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}}},{"name":"LocationGeocodedLocation","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing a result of `geocodeAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accuracy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The radius of uncertainty for the location, measured in meters."},"type":{"type":"intrinsic","name":"number"}},{"name":"altitude","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The altitude in meters above the WGS 84 reference ellipsoid."},"type":{"type":"intrinsic","name":"number"}},{"name":"latitude","kind":1024,"kindString":"Property","comment":{"shortText":"The latitude in degrees."},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","comment":{"shortText":"The longitude in degrees."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationGeocodingOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object of options for forward and reverse geocoding."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"useGoogleMaps","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to force using Google Maps API instead of the native implementation.\\nUsed by default only on Web platform. Requires providing an API key by `setGoogleApiKey`."},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"LocationHeadingCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Represents `watchHeadingAsync` callback."},"parameters":[{"name":"location","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"LocationHeadingObject"}}],"type":{"type":"intrinsic","name":"any"}}]}}},{"name":"LocationHeadingObject","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type of the object containing heading details and provided by `watchHeadingAsync` callback."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accuracy","kind":1024,"kindString":"Property","comment":{"shortText":"Level of calibration of compass.\\n- `3`: high accuracy, `2`: medium accuracy, `1`: low accuracy, `0`: none\\nReference for iOS:\\n- `3`: < 20 degrees uncertainty, `2`: < 35 degrees, `1`: < 50 degrees, `0`: > 50 degrees"},"type":{"type":"intrinsic","name":"number"}},{"name":"magHeading","kind":1024,"kindString":"Property","comment":{"shortText":"Measure of magnetic north in degrees."},"type":{"type":"intrinsic","name":"number"}},{"name":"trueHeading","kind":1024,"kindString":"Property","comment":{"shortText":"Measure of true north in degrees (needs location permissions, will return `-1` if not given)."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationLastKnownOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing options object that can be passed to `getLastKnownPositionAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"maxAge","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A number of milliseconds after which the last known location starts to be invalid and thus\\n`null` is returned."},"type":{"type":"intrinsic","name":"number"}},{"name":"requiredAccuracy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The maximum radius of uncertainty for the location, measured in meters. If the last known\\nlocation\'s accuracy radius is bigger (less accurate) then `null` is returned."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationObject","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing the location object."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"coords","kind":1024,"kindString":"Property","comment":{"shortText":"The coordinates of the position."},"type":{"type":"reference","name":"LocationObjectCoords"}},{"name":"timestamp","kind":1024,"kindString":"Property","comment":{"shortText":"The time at which this position information was obtained, in milliseconds since epoch."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationObjectCoords","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing the location GPS related data."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accuracy","kind":1024,"kindString":"Property","comment":{"shortText":"The radius of uncertainty for the location, measured in meters. Can be `null` on Web if it\'s not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"altitude","kind":1024,"kindString":"Property","comment":{"shortText":"The altitude in meters above the WGS 84 reference ellipsoid. Can be `null` on Web if it\'s not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"altitudeAccuracy","kind":1024,"kindString":"Property","comment":{"shortText":"The accuracy of the altitude value, in meters. Can be `null` on Web if it\'s not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"heading","kind":1024,"kindString":"Property","comment":{"shortText":"Horizontal direction of travel of this device, measured in degrees starting at due north and\\ncontinuing clockwise around the compass. Thus, north is 0 degrees, east is 90 degrees, south is\\n180 degrees, and so on. Can be `null` on Web if it\'s not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"latitude","kind":1024,"kindString":"Property","comment":{"shortText":"The latitude in degrees."},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","comment":{"shortText":"The longitude in degrees."},"type":{"type":"intrinsic","name":"number"}},{"name":"speed","kind":1024,"kindString":"Property","comment":{"shortText":"The instantaneous speed of the device in meters per second. Can be `null` on Web if it\'s not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}}]}}},{"name":"LocationOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing options argument in `getCurrentPositionAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accuracy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Location manager accuracy. Pass one of `LocationAccuracy` enum values.\\nFor low-accuracies the implementation can avoid geolocation providers\\nthat consume a significant amount of power (such as GPS)."},"type":{"type":"reference","name":"LocationAccuracy"}},{"name":"distanceInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Receive updates only when the location has changed by at least this distance in meters.\\nDefault value may depend on `accuracy` option."},"type":{"type":"intrinsic","name":"number"}},{"name":"mayShowUserSettingsDialog","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specifies whether to ask the user to turn on improved accuracy location mode\\nwhich uses Wi-Fi, cell networks and GPS sensor.","tags":[{"tag":"default","text":"true"},{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"timeInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Minimum time to wait between each update in milliseconds.\\nDefault value may depend on `accuracy` option.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationProviderStatus","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Represents the object containing details about location provider."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"backgroundModeEnabled","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"gpsAvailable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the GPS provider is available. If `true` the location data will come\\nfrom GPS, especially for requests with high accuracy.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"locationServicesEnabled","kind":1024,"kindString":"Property","comment":{"shortText":"Whether location services are enabled. See [Location.hasServicesEnabledAsync](#locationhasservicesenabledasync)\\nfor a more convenient solution to get this value."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"networkAvailable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the network provider is available. If `true` the location data will\\ncome from cellular network, especially for requests with low accuracy.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"passiveAvailable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the passive provider is available. If `true` the location data will\\nbe determined passively.","tags":[{"tag":"platform","text":"android\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"LocationRegion","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing geofencing region object."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"identifier","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The identifier of the region object. Defaults to auto-generated UUID hash."},"type":{"type":"intrinsic","name":"string"}},{"name":"latitude","kind":1024,"kindString":"Property","comment":{"shortText":"The latitude in degrees of region\'s center point."},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","comment":{"shortText":"The longitude in degrees of region\'s center point."},"type":{"type":"intrinsic","name":"number"}},{"name":"notifyOnEnter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value whether to call the task if the device enters the region.","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"notifyOnExit","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value whether to call the task if the device exits the region.","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"radius","kind":1024,"kindString":"Property","comment":{"shortText":"The radius measured in meters that defines the region\'s outer boundary."},"type":{"type":"intrinsic","name":"number"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"One of [GeofencingRegionState](#geofencingregionstate) region state. Determines whether the\\ndevice is inside or outside a region."},"type":{"type":"reference","name":"LocationGeofencingRegionState"}}]}}},{"name":"LocationSubscription","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Represents subscription object returned by methods watching for new locations or headings."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"Call this function with no arguments to remove this subscription. The callback will no longer\\nbe called for location updates."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"LocationTaskOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing background location task options."},"type":{"type":"intersection","types":[{"type":"reference","name":"LocationOptions"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"activityType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The type of user activity associated with the location updates.","tags":[{"tag":"see","text":"See [Apple docs](https://developer.apple.com/documentation/corelocation/cllocationmanager/1620567-activitytype) for more details."},{"tag":"default","text":"LocationActivityType.Other"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"LocationActivityType"}},{"name":"deferredUpdatesDistance","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The distance in meters that must occur between last reported location and the current location\\nbefore deferred locations are reported.","tags":[{"tag":"default","text":"0\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"deferredUpdatesInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Minimum time interval in milliseconds that must pass since last reported location before all\\nlater locations are reported in a batched update","tags":[{"tag":"default","text":"0\\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"deferredUpdatesTimeout","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"foregroundService","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"LocationTaskServiceOptions"}},{"name":"pausesUpdatesAutomatically","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean value indicating whether the location manager can pause location\\nupdates to improve battery life without sacrificing location data. When this option is set to\\n`true`, the location manager pauses updates (and powers down the appropriate hardware) at times\\nwhen the location data is unlikely to change. You can help the determination of when to pause\\nlocation updates by assigning a value to the `activityType` property.","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"showsBackgroundLocationIndicator","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean indicating whether the status bar changes its appearance when\\nlocation services are used in the background.","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"ios 11+\\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}]}},{"name":"LocationTaskServiceOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"killServiceOnDestroy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value whether to destroy the foreground service if the app is killed."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"notificationBody","kind":1024,"kindString":"Property","comment":{"shortText":"Subtitle of the foreground service notification."},"type":{"type":"intrinsic","name":"string"}},{"name":"notificationColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Color of the foreground service notification. Accepts `#RRGGBB` and `#AARRGGBB` hex formats."},"type":{"type":"intrinsic","name":"string"}},{"name":"notificationTitle","kind":1024,"kindString":"Property","comment":{"shortText":"Title of the foreground service notification."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"PermissionDetailsLocationAndroid","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accuracy","kind":1024,"kindString":"Property","comment":{"shortText":"Indicates the type of location provider."},"type":{"type":"union","types":[{"type":"literal","value":"fine"},{"type":"literal","value":"coarse"},{"type":"literal","value":"none"}]}},{"name":"scope","kind":1024,"kindString":"Property","comment":{"tags":[{"tag":"deprecated","text":"Use `accuracy` field instead.\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":"fine"},{"type":"literal","value":"coarse"},{"type":"literal","value":"none"}]}}]}}},{"name":"PermissionDetailsLocationIOS","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"scope","kind":1024,"kindString":"Property","comment":{"shortText":"The scope of granted permission. Indicates when it\'s possible to use location."},"type":{"type":"union","types":[{"type":"literal","value":"whenInUse"},{"type":"literal","value":"always"},{"type":"literal","value":"none"}]}}]}}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"EventEmitter","kind":32,"kindString":"Variable","type":{"type":"reference","name":"EventEmitter"},"defaultValue":"..."},{"name":"enableNetworkProviderAsync","kind":64,"kindString":"Function","signatures":[{"name":"enableNetworkProviderAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to turn on high accuracy location mode which enables network provider that uses\\nGoogle Play services to improve location accuracy and location-based services.","returns":"A promise resolving as soon as the user accepts the dialog. Rejects if denied.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"geocodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"geocodeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Geocode an address string to latitude-longitude location.\\n> **Note**: Geocoding is resource consuming and has to be used reasonably. Creating too many\\n> requests at a time can result in an error, so they have to be managed properly.\\n> It\'s also discouraged to use geocoding while the app is in the background and its results won\'t\\n> be shown to the user immediately.","text":"> On Android, you must request a location permission (`Permissions.LOCATION`) from the user\\n> before geocoding can be used.","returns":"A promise which fulfills with an array (in most cases its size is 1) of [`LocationGeocodedLocation`](#locationgeocodedlocation) objects.\\n"},"parameters":[{"name":"address","kind":32768,"kindString":"Parameter","comment":{"shortText":"A string representing address, eg. `\\"Baker Street London\\"`."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{},"type":{"type":"reference","name":"LocationGeocodingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"LocationGeocodedLocation"}}],"name":"Promise"}}]},{"name":"getBackgroundPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBackgroundPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing location while the app is in the background.","returns":"A promise that fulfills with an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getCurrentPositionAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCurrentPositionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Requests for one-time delivery of the user\'s current location.\\nDepending on given `accuracy` option it may take some time to resolve,\\nespecially when you\'re inside a building.\\n> __Note:__ Calling it causes the location manager to obtain a location fix which may take several\\n> seconds. Consider using [`Location.getLastKnownPositionAsync`](#locationgetlastknownpositionasyncoptions)\\n> if you expect to get a quick response and high accuracy is not required.","returns":"A promise which fulfills with an object of type [`LocationObject`](#locationobject).\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"LocationOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationObject"}],"name":"Promise"}}]},{"name":"getForegroundPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getForegroundPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing location while the app is in the foreground.","returns":"A promise that fulfills with an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"Promise"}}]},{"name":"getHeadingAsync","kind":64,"kindString":"Function","signatures":[{"name":"getHeadingAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current heading information from the device. To simplify, it calls `watchHeadingAsync`\\nand waits for a couple of updates, and then returns the one that is accurate enough.","returns":"A promise which fulfills with an object of type [LocationHeadingObject](#locationheadingobject).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationHeadingObject"}],"name":"Promise"}}]},{"name":"getLastKnownPositionAsync","kind":64,"kindString":"Function","signatures":[{"name":"getLastKnownPositionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the last known position of the device or `null` if it\'s not available or doesn\'t match given\\nrequirements such as maximum age or required accuracy.\\nIt\'s considered to be faster than `getCurrentPositionAsync` as it doesn\'t request for the current\\nlocation, but keep in mind the returned location may not be up-to-date.","returns":"A promise which fulfills with an object of type [LocationObject](#locationobject) or\\n`null` if it\'s not available or doesn\'t match given requirements such as maximum age or required\\naccuracy.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"LocationLastKnownOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"LocationObject"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing location.","returns":"A promise that fulfills with an object of type [LocationPermissionResponse](#locationpermissionresponse).","tags":[{"tag":"deprecated","text":"Use [`getForegroundPermissionsAsync`](#locationgetforegroundpermissionsasync) or [`getBackgroundPermissionsAsync`](#locationgetbackgroundpermissionsasync) instead.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"Promise"}}]},{"name":"getProviderStatusAsync","kind":64,"kindString":"Function","signatures":[{"name":"getProviderStatusAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check status of location providers.","returns":"A promise which fulfills with an object of type [LocationProviderStatus](#locationproviderstatus).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationProviderStatus"}],"name":"Promise"}}]},{"name":"hasServicesEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasServicesEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks whether location services are enabled by the user.","returns":"A promise which fulfills to `true` if location services are enabled on the device,\\nor `false` if not.\\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"hasStartedGeofencingAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasStartedGeofencingAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"A promise which fulfills with boolean value indicating whether the geofencing task is\\nstarted or not.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the geofencing task to check."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"hasStartedLocationUpdatesAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasStartedLocationUpdatesAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"A promise which fulfills with boolean value indicating whether the location task is\\nstarted or not.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the location task to check."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"installWebGeolocationPolyfill","kind":64,"kindString":"Function","signatures":[{"name":"installWebGeolocationPolyfill","kind":4096,"kindString":"Call signature","comment":{"shortText":"Polyfills `navigator.geolocation` for interop with the core React Native and Web API approach to geolocation."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"isBackgroundLocationAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isBackgroundLocationAvailableAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"requestBackgroundPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestBackgroundPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for location while the app is in the background.\\nOn __Android 11 or higher__: this method will open the system settings page - before that happens\\nyou should explain to the user why your application needs background location permission.\\nFor example, you can use `Modal` component from `react-native` to do that.\\n> __Note__: Foreground permissions should be granted before asking for the background permissions\\n(your app can\'t obtain background permission without foreground permission).","returns":"A promise that fulfills with an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestForegroundPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestForegroundPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for location while the app is in the foreground.","returns":"A promise that fulfills with an object of type [PermissionResponse](#permissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for location.","returns":"A promise that fulfills with an object of type [LocationPermissionResponse](#locationpermissionresponse).","tags":[{"tag":"deprecated","text":"Use [`requestForegroundPermissionsAsync`](#locationrequestforegroundpermissionsasync) or [`requestBackgroundPermissionsAsync`](#locationrequestbackgroundpermissionsasync) instead.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"Promise"}}]},{"name":"reverseGeocodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"reverseGeocodeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Reverse geocode a location to postal address.\\n> **Note**: Geocoding is resource consuming and has to be used reasonably. Creating too many\\n> requests at a time can result in an error, so they have to be managed properly.\\n> It\'s also discouraged to use geocoding while the app is in the background and its results won\'t\\n> be shown to the user immediately.","text":"> On Android, you must request a location permission (`Permissions.LOCATION`) from the user\\n> before geocoding can be used.","returns":"A promise which fulfills with an array (in most cases its size is 1) of [`LocationGeocodedAddress`](#locationgeocodedaddress) objects.\\n"},"parameters":[{"name":"location","kind":32768,"kindString":"Parameter","comment":{"shortText":"An object representing a location."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationGeocodedLocation"},{"type":"union","types":[{"type":"literal","value":"latitude"},{"type":"literal","value":"longitude"}]}],"name":"Pick"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{},"type":{"type":"reference","name":"LocationGeocodingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"LocationGeocodedAddress"}}],"name":"Promise"}}]},{"name":"setGoogleApiKey","kind":64,"kindString":"Function","signatures":[{"name":"setGoogleApiKey","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a Google API Key for using Google Maps Geocoding API which is used by default on Web\\nplatform and can be enabled through `useGoogleMaps` option of `geocodeAsync` and `reverseGeocodeAsync`\\nmethods. It might be useful for Android devices that do not have Google Play Services, hence no\\nGeocoder Service."},"parameters":[{"name":"apiKey","kind":32768,"kindString":"Parameter","comment":{"shortText":"Google API key obtained from Google API Console. This API key must have `Geocoding API`\\nenabled, otherwise your geocoding requests will be denied.\\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"startGeofencingAsync","kind":64,"kindString":"Function","signatures":[{"name":"startGeofencingAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Starts geofencing for given regions. When the new event comes, the task with specified name will\\nbe called with the region that the device enter to or exit from.\\nIf you want to add or remove regions from already running geofencing task, you can just call\\n`startGeofencingAsync` again with the new array of regions.","returns":"A promise resolving as soon as the task is registered.\\n\\n# Task parameters\\n\\nGeofencing task will be receiving following data:\\n - `eventType` - Indicates the reason for calling the task, which can be triggered by entering or exiting the region.\\n   See [GeofencingEventType](#geofencingeventtype).\\n - `region` - Object containing details about updated region. See [LocationRegion](#locationregion) for more details.\\n\\n# Example\\n```ts\\nimport { GeofencingEventType } from \'expo-location\';\\nimport * as TaskManager from \'expo-task-manager\';\\n\\n TaskManager.defineTask(YOUR_TASK_NAME, ({ data: { eventType, region }, error }) => {\\n  if (error) {\\n    // check `error.message` for more details.\\n    return;\\n  }\\n  if (eventType === GeofencingEventType.Enter) {\\n    console.log(\\"You\'ve entered region:\\", region);\\n  } else if (eventType === GeofencingEventType.Exit) {\\n    console.log(\\"You\'ve left region:\\", region);\\n  }\\n});\\n```\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task that will be called when the device enters or exits from specified regions."},"type":{"type":"intrinsic","name":"string"}},{"name":"regions","kind":32768,"kindString":"Parameter","comment":{"shortText":"Array of region objects to be geofenced."},"type":{"type":"array","elementType":{"type":"reference","name":"LocationRegion"}},"defaultValue":"[]"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"startLocationUpdatesAsync","kind":64,"kindString":"Function","signatures":[{"name":"startLocationUpdatesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Registers for receiving location updates that can also come when the app is in the background.","returns":"A promise resolving once the task with location updates is registered.\\n\\n# Task parameters\\n\\nBackground location task will be receiving following data:\\n- `locations` - An array of the new locations.\\n\\n```ts\\nimport * as TaskManager from \'expo-task-manager\';\\n\\nTaskManager.defineTask(YOUR_TASK_NAME, ({ data: { locations }, error }) => {\\n if (error) {\\n   // check `error.message` for more details.\\n   return;\\n }\\n console.log(\'Received new locations\', locations);\\n});\\n```\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task receiving location updates."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An object of options passed to the location manager."},"type":{"type":"reference","name":"LocationTaskOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"stopGeofencingAsync","kind":64,"kindString":"Function","signatures":[{"name":"stopGeofencingAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Stops geofencing for specified task. It unregisters the background task so the app will not be\\nreceiving any updates, especially in the background.","returns":"A promise resolving as soon as the task is unregistered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task to unregister."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"stopLocationUpdatesAsync","kind":64,"kindString":"Function","signatures":[{"name":"stopLocationUpdatesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Stops geofencing for specified task.","returns":"A promise resolving as soon as the task is unregistered.\\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the background location task to stop."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"useBackgroundPermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"useBackgroundPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions for the foreground location.\\nThis uses both `requestBackgroundPermissionsAsync` and `getBackgroundPermissionsAsync` to\\ninteract with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Location.useBackgroundPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"useForegroundPermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"useForegroundPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions for the foreground location.\\nThis uses both `requestForegroundPermissionsAsync` and `getForegroundPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = Location.useForegroundPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"LocationPermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"watchHeadingAsync","kind":64,"kindString":"Function","signatures":[{"name":"watchHeadingAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to compass updates from the device.","returns":"A promise which fulfills with a [`LocationSubscription`](#locationsubscription) object.\\n"},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"shortText":"This function is called on each compass update. It receives an object of type\\n[LocationHeadingObject](#locationheadingobject) as the first argument."},"type":{"type":"reference","name":"LocationHeadingCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationSubscription"}],"name":"Promise"}}]},{"name":"watchPositionAsync","kind":64,"kindString":"Function","signatures":[{"name":"watchPositionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to location updates from the device. Please note that updates will only occur while the\\napplication is in the foreground. To get location updates while in background you\'ll need to use\\n[Location.startLocationUpdatesAsync](#locationstartlocationupdatesasynctaskname-options).","returns":"A promise which fulfills with a [`LocationSubscription`](#locationsubscription) object.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"LocationOptions"}},{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"shortText":"This function is called on each location update. It receives an object of type\\n[`LocationObject`](#locationobject) as the first argument."},"type":{"type":"reference","name":"LocationCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationSubscription"}],"name":"Promise"}}]}]}')},xTuD:function(e){e.exports=JSON.parse('{"name":"expo-battery","kind":1,"kindString":"Project","originalName":"","children":[{"name":"BatteryState","kind":8,"kindString":"Enumeration","children":[{"name":"CHARGING","kind":16,"kindString":"Enumeration member","comment":{"shortText":"if battery is charging."},"defaultValue":"2"},{"name":"FULL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"if the battery level is full."},"defaultValue":"3"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"if the battery state is unknown or inaccessible."},"defaultValue":"0"},{"name":"UNPLUGGED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"if battery is not charging or discharging."},"defaultValue":"1"}]},{"name":"BatteryLevelEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"batteryLevel","kind":1024,"kindString":"Property","comment":{"shortText":"A number between `0` and `1`, inclusive, or `-1` if the battery level is unknown."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"BatteryStateEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"batteryState","kind":1024,"kindString":"Property","comment":{"shortText":"An enum value representing the battery state."},"type":{"type":"reference","name":"BatteryState"}}]}}},{"name":"PowerModeEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"lowPowerMode","kind":1024,"kindString":"Property","comment":{"shortText":"A boolean value, `true` if lowPowerMode is on, `false` if lowPowerMode is off"},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"PowerState","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"batteryLevel","kind":1024,"kindString":"Property","comment":{"shortText":"A number between `0` and `1`, inclusive, or `-1` if the battery level is unknown."},"type":{"type":"intrinsic","name":"number"}},{"name":"batteryState","kind":1024,"kindString":"Property","comment":{"shortText":"An enum value representing the battery state."},"type":{"type":"reference","name":"BatteryState"}},{"name":"lowPowerMode","kind":1024,"kindString":"Property","comment":{"shortText":"A boolean value, `true` if lowPowerMode is on, `false` if lowPowerMode is off"},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"addBatteryLevelListener","kind":64,"kindString":"Function","signatures":[{"name":"addBatteryLevelListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to the battery level change updates.","text":"On iOS devices, the event fires when the battery level drops one percent or more, but is only\\nfired once per minute at maximum.\\n\\nOn Android devices, the event fires only when significant changes happens, which is when the\\nbattery level drops below [`\\"android.intent.action.BATTERY_LOW\\"`](https://developer.android.com/reference/android/content/Intent#ACTION_BATTERY_LOW)\\nor rises above [`\\"android.intent.action.BATTERY_OKAY\\"`](https://developer.android.com/reference/android/content/Intent#ACTION_BATTERY_OKAY)\\nfrom a low battery level. See [here](https://developer.android.com/training/monitoring-device-state/battery-monitoring)\\nto read more from the Android docs.\\n\\nOn web, the event never fires.","returns":"A `Subscription` object on which you can call `remove()` to unsubscribe from the listener.s\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"text":"A callback that is invoked when battery level changes. The callback is provided a\\nsingle argument that is an object with a `batteryLevel` key."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BatteryLevelEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"addBatteryStateListener","kind":64,"kindString":"Function","signatures":[{"name":"addBatteryStateListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to the battery state change updates to receive an object with a [`Battery.BatteryState`](#batterystate)\\nenum value for whether the device is any of the four states.","text":"On web, the event never fires.","returns":"A `Subscription` object on which you can call `remove()` to unsubscribe from the listener.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"text":"A callback that is invoked when battery state changes. The callback is provided a\\nsingle argument that is an object with a `batteryState` key."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BatteryStateEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"addLowPowerModeListener","kind":64,"kindString":"Function","signatures":[{"name":"addLowPowerModeListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to Low Power Mode (iOS) or Power Saver Mode (Android) updates. The event fires whenever\\nthe power mode is toggled.","text":"On web, the event never fires.","returns":"A `Subscription` object on which you can call `remove()` to unsubscribe from the listener.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"text":"A callback that is invoked when Low Power Mode (iOS) or Power Saver Mode (Android)\\nchanges. The callback is provided a single argument that is an object with a `lowPowerMode` key."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"PowerModeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getBatteryLevelAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBatteryLevelAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the battery level of the device as a number between `0` and `1`, inclusive. If the device\\ndoes not support retrieving the battery level, this method returns `-1`. On web, this method\\nalways returns `-1`.","returns":"A `Promise` that fulfils with a number between `0` and `1` representing the battery level,\\nor `-1` if the device does not provide it.","tags":[{"tag":"example","text":"\\n```ts\\nawait Battery.getBatteryLevelAsync();\\n// 0.759999\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise"}}]},{"name":"getBatteryStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBatteryStateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Tells the battery\'s current state. On web, this always returns `BatteryState.UNKNOWN`.","returns":"Returns a `Promise` which fulfills with a [`Battery.BatteryState`](#batterystate) enum\\nvalue for whether the device is any of the four states.","tags":[{"tag":"example","text":"\\n```ts\\nawait Battery.getBatteryStateAsync();\\n// BatteryState.CHARGING\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BatteryState"}],"name":"Promise"}}]},{"name":"getPowerStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPowerStateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the power state of the device including the battery level, whether it is plugged in, and if\\nthe system is currently operating in Low Power Mode (iOS) or Power Saver Mode (Android). This\\nmethod re-throws any errors that occur when retrieving any of the power-state information.","returns":"Returns a `Promise` which fulfills with [`PowerState`](#powerstate) object.","tags":[{"tag":"example","text":"\\n```ts\\nawait Battery.getPowerStateAsync();\\n// {\\n//   batteryLevel: 0.759999,\\n//   batteryState: BatteryState.UNPLUGGED,\\n//   lowPowerMode: true,\\n// }\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PowerState"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Resolves with whether the battery API is available on the current device. The value of this\\nproperty is `true` on Android and physical iOS devices and `false` on iOS simulators. On web,\\nit depends on whether the browser supports the web battery API."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isBatteryOptimizationEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"isBatteryOptimizationEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks whether battery optimization is enabled for your application.\\nIf battery optimization is enabled for your app, background tasks might be affected\\nwhen your app goes into doze mode state. (only on Android 6.0 or later)","returns":"Returns a `Promise` which fulfills with a `boolean` value of either `true` or `false`,\\nindicating whether the battery optimization is enabled or disabled, respectively. (Android only)","tags":[{"tag":"example","text":"\\n```ts\\nawait Battery.isBatteryOptimizationEnabledAsync();\\n// true\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isLowPowerModeEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"isLowPowerModeEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current status of Low Power mode on iOS and Power Saver mode on Android. If a platform\\ndoesn\'t support Low Power mode reporting (like web, older Android devices), the reported low-power\\nstate is always `false`, even if the device is actually in low-power mode.","returns":"Returns a `Promise` which fulfills with a `boolean` value of either `true` or `false`,\\nindicating whether low power mode is enabled or disabled, respectively.","tags":[{"tag":"example","text":"\\nLow Power Mode (iOS) or Power Saver Mode (Android) are enabled.\\n```ts\\nawait Battery.isLowPowerModeEnabledAsync();\\n// true\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}')},xzBm:function(e){e.exports=JSON.parse('{"name":"expo-battery","kind":1,"kindString":"Project","originalName":"","children":[{"name":"BatteryState","kind":8,"kindString":"Enumeration","children":[{"name":"CHARGING","kind":16,"kindString":"Enumeration member","comment":{"shortText":"if battery is charging."},"defaultValue":"2"},{"name":"FULL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"if the battery level is full."},"defaultValue":"3"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"if the battery state is unknown or inaccessible."},"defaultValue":"0"},{"name":"UNPLUGGED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"if battery is not charging or discharging."},"defaultValue":"1"}]},{"name":"BatteryLevelEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"batteryLevel","kind":1024,"kindString":"Property","comment":{"shortText":"A number between `0` and `1`, inclusive, or `-1` if the battery level is unknown."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"BatteryStateEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"batteryState","kind":1024,"kindString":"Property","comment":{"shortText":"An enum value representing the battery state."},"type":{"type":"reference","name":"BatteryState"}}]}}},{"name":"PowerModeEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"lowPowerMode","kind":1024,"kindString":"Property","comment":{"shortText":"A boolean value, `true` if lowPowerMode is on, `false` if lowPowerMode is off"},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"PowerState","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"batteryLevel","kind":1024,"kindString":"Property","comment":{"shortText":"A number between `0` and `1`, inclusive, or `-1` if the battery level is unknown."},"type":{"type":"intrinsic","name":"number"}},{"name":"batteryState","kind":1024,"kindString":"Property","comment":{"shortText":"An enum value representing the battery state."},"type":{"type":"reference","name":"BatteryState"}},{"name":"lowPowerMode","kind":1024,"kindString":"Property","comment":{"shortText":"A boolean value, `true` if lowPowerMode is on, `false` if lowPowerMode is off"},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"addBatteryLevelListener","kind":64,"kindString":"Function","signatures":[{"name":"addBatteryLevelListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to the battery level change updates.","text":"On iOS devices, the event fires when the battery level drops one percent or more, but is only\\nfired once per minute at maximum.\\n\\nOn Android devices, the event fires only when significant changes happens, which is when the\\nbattery level drops below [`\\"android.intent.action.BATTERY_LOW\\"`](https://developer.android.com/reference/android/content/Intent#ACTION_BATTERY_LOW)\\nor rises above [`\\"android.intent.action.BATTERY_OKAY\\"`](https://developer.android.com/reference/android/content/Intent#ACTION_BATTERY_OKAY)\\nfrom a low battery level. See [here](https://developer.android.com/training/monitoring-device-state/battery-monitoring)\\nto read more from the Android docs.\\n\\nOn web, the event never fires.","returns":"A `Subscription` object on which you can call `remove()` to unsubscribe from the listener.s\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"A callback that is invoked when battery level changes. The callback is provided a\\nsingle argument that is an object with a `batteryLevel` key."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BatteryLevelEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"addBatteryStateListener","kind":64,"kindString":"Function","signatures":[{"name":"addBatteryStateListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to the battery state change updates to receive an object with a [`Battery.BatteryState`](#batterystate)\\nenum value for whether the device is any of the four states.","text":"On web, the event never fires.","returns":"A `Subscription` object on which you can call `remove()` to unsubscribe from the listener.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"A callback that is invoked when battery state changes. The callback is provided a\\nsingle argument that is an object with a `batteryState` key."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BatteryStateEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"addLowPowerModeListener","kind":64,"kindString":"Function","signatures":[{"name":"addLowPowerModeListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to Low Power Mode (iOS) or Power Saver Mode (Android) updates. The event fires whenever\\nthe power mode is toggled.","text":"On web, the event never fires.","returns":"A `Subscription` object on which you can call `remove()` to unsubscribe from the listener.\\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"A callback that is invoked when Low Power Mode (iOS) or Power Saver Mode (Android)\\nchanges. The callback is provided a single argument that is an object with a `lowPowerMode` key."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"PowerModeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getBatteryLevelAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBatteryLevelAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the battery level of the device as a number between `0` and `1`, inclusive. If the device\\ndoes not support retrieving the battery level, this method returns `-1`. On web, this method\\nalways returns `-1`.","returns":"A `Promise` that fulfils with a number between `0` and `1` representing the battery level,\\nor `-1` if the device does not provide it.","tags":[{"tag":"example","text":"\\n```ts\\nawait Battery.getBatteryLevelAsync();\\n// 0.759999\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise"}}]},{"name":"getBatteryStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBatteryStateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Tells the battery\'s current state. On web, this always returns `BatteryState.UNKNOWN`.","returns":"Returns a `Promise` which fulfills with a [`Battery.BatteryState`](#batterystate) enum\\nvalue for whether the device is any of the four states.","tags":[{"tag":"example","text":"\\n```ts\\nawait Battery.getBatteryStateAsync();\\n// BatteryState.CHARGING\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BatteryState"}],"name":"Promise"}}]},{"name":"getPowerStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPowerStateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the power state of the device including the battery level, whether it is plugged in, and if\\nthe system is currently operating in Low Power Mode (iOS) or Power Saver Mode (Android). This\\nmethod re-throws any errors that occur when retrieving any of the power-state information.","returns":"Returns a `Promise` which fulfills with [`PowerState`](#powerstate) object.","tags":[{"tag":"example","text":"\\n```ts\\nawait Battery.getPowerStateAsync();\\n// {\\n//   batteryLevel: 0.759999,\\n//   batteryState: BatteryState.UNPLUGGED,\\n//   lowPowerMode: true,\\n// }\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PowerState"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Resolves with whether the battery API is available on the current device. The value of this\\nproperty is `true` on Android and physical iOS devices and `false` on iOS simulators. On web,\\nit depends on whether the browser supports the web battery API."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isBatteryOptimizationEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"isBatteryOptimizationEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks whether battery optimization is enabled for your application.\\nIf battery optimization is enabled for your app, background tasks might be affected\\nwhen your app goes into doze mode state. (only on Android 6.0 or later)","returns":"Returns a `Promise` which fulfills with a `boolean` value of either `true` or `false`,\\nindicating whether the battery optimization is enabled or disabled, respectively. (Android only)","tags":[{"tag":"example","text":"\\n```ts\\nawait Battery.isBatteryOptimizationEnabledAsync();\\n// true\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isLowPowerModeEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"isLowPowerModeEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current status of Low Power mode on iOS and Power Saver mode on Android. If a platform\\ndoesn\'t support Low Power mode reporting (like web, older Android devices), the reported low-power\\nstate is always `false`, even if the device is actually in low-power mode.","returns":"Returns a `Promise` which fulfills with a `boolean` value of either `true` or `false`,\\nindicating whether low power mode is enabled or disabled, respectively.","tags":[{"tag":"example","text":"\\nLow Power Mode (iOS) or Power Saver Mode (Android) are enabled.\\n```ts\\nawait Battery.isLowPowerModeEnabledAsync();\\n// true\\n```\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}')},"y3+S":function(e){e.exports=JSON.parse('{"name":"expo-image-picker","kind":1,"kindString":"Project","originalName":"","children":[{"name":"MediaTypeOptions","kind":8,"kindString":"Enumeration","children":[{"name":"All","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Images and videos."},"defaultValue":"\\"All\\""},{"name":"Images","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Only images."},"defaultValue":"\\"Images\\""},{"name":"Videos","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Only videos."},"defaultValue":"\\"Videos\\""}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"denied\\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"granted\\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\\"undetermined\\""}]},{"name":"UIImagePickerControllerQualityType","kind":8,"kindString":"Enumeration","children":[{"name":"High","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Highest available resolution."},"defaultValue":"0"},{"name":"IFrame1280x720","kind":16,"kindString":"Enumeration member","comment":{"shortText":"1280 \xD7 720"},"defaultValue":"4"},{"name":"IFrame960x540","kind":16,"kindString":"Enumeration member","comment":{"shortText":"960 \xD7 540"},"defaultValue":"5"},{"name":"Low","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Depends on the device."},"defaultValue":"2"},{"name":"Medium","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Depends on the device."},"defaultValue":"1"},{"name":"VGA640x480","kind":16,"kindString":"Enumeration member","comment":{"shortText":"640 \xD7 480"},"defaultValue":"3"}]},{"name":"UIImagePickerPresentationStyle","kind":8,"kindString":"Enumeration","comment":{"shortText":"Picker presentation style. Its values are directly mapped to the [`UIModalPresentationStyle`](https://developer.apple.com/documentation/uikit/uiviewcontroller/1621355-modalpresentationstyle).","tags":[{"tag":"platform","text":"ios\\n"}]},"children":[{"name":"AUTOMATIC","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The default presentation style chosen by the system.\\nOn older iOS versions, falls back to `WebBrowserPresentationStyle.FullScreen`.","tags":[{"tag":"platform","text":"ios 13+\\n"}]},"defaultValue":"\\"automatic\\""},{"name":"Automatic","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"deprecated","text":"Use `UIImagePickerPresentationStyle.AUTOMATIC` instead.\\n"}]},"defaultValue":"\\"automatic\\""},{"name":"CURRENT_CONTEXT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style where the picker is displayed over the app\'s content."},"defaultValue":"\\"currentContext\\""},{"name":"CurrentContext","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"deprecated","text":"Use `UIImagePickerPresentationStyle.CURRENT_CONTEXT` instead.\\n"}]},"defaultValue":"\\"currentContext\\""},{"name":"FORM_SHEET","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style that displays the picker centered in the screen."},"defaultValue":"\\"formSheet\\""},{"name":"FULL_SCREEN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style in which the presented picker covers the screen."},"defaultValue":"\\"fullScreen\\""},{"name":"FormSheet","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"deprecated","text":"Use `UIImagePickerPresentationStyle.FORM_SHEET` instead.\\n"}]},"defaultValue":"\\"formSheet\\""},{"name":"FullScreen","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"deprecated","text":"Use `UIImagePickerPresentationStyle.FULL_SCREEN` instead.\\n"}]},"defaultValue":"\\"fullScreen\\""},{"name":"OVER_CURRENT_CONTEXT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style where the picker is displayed over the app\'s content."},"defaultValue":"\\"overCurrentContext\\""},{"name":"OVER_FULL_SCREEN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style in which the picker view covers the screen."},"defaultValue":"\\"overFullScreen\\""},{"name":"OverCurrentContext","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"deprecated","text":"Use `UIImagePickerPresentationStyle.OVER_CURRENT_CONTEXT` instead.\\n"}]},"defaultValue":"\\"overCurrentContext\\""},{"name":"OverFullScreen","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"deprecated","text":"Use `UIImagePickerPresentationStyle.OVER_FULL_SCREEN` instead.\\n"}]},"defaultValue":"\\"overFullScreen\\""},{"name":"PAGE_SHEET","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style that partially covers the underlying content."},"defaultValue":"\\"pageSheet\\""},{"name":"POPOVER","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A presentation style where the picker is displayed in a popover view."},"defaultValue":"\\"popover\\""},{"name":"PageSheet","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"deprecated","text":"Use `UIImagePickerPresentationStyle.PAGE_SHEET` instead.\\n"}]},"defaultValue":"\\"pageSheet\\""},{"name":"Popover","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"deprecated","text":"Use `UIImagePickerPresentationStyle.POPOVER` instead.\\n"}]},"defaultValue":"\\"popover\\""}]},{"name":"VideoExportPreset","kind":8,"kindString":"Enumeration","children":[{"name":"H264_1280x720","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __1280 \xD7 720__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"6"},{"name":"H264_1920x1080","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __1920 \xD7 1080__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"7"},{"name":"H264_3840x2160","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __3840 \xD7 2160__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"8"},{"name":"H264_640x480","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __640 \xD7 480__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"4"},{"name":"H264_960x540","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __960 \xD7 540__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"5"},{"name":"HEVC_1920x1080","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __1920 \xD7 1080__ \u2022\\nVideo compression: __HEVC__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"9"},{"name":"HEVC_3840x2160","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __3840 \xD7 2160__ \u2022\\nVideo compression: __HEVC__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"10"},{"name":"HighestQuality","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __Depends on the device__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"3"},{"name":"LowQuality","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __Depends on the device__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"1"},{"name":"MediumQuality","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __Depends on the device__ \u2022\\nVideo compression: __H.264__ \u2022\\nAudio compression: __AAC__"},"defaultValue":"2"},{"name":"Passthrough","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Resolution: __Unchanged__ \u2022\\nVideo compression: __None__ \u2022\\nAudio compression: __None__"},"defaultValue":"0"}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"CameraPermissionResponse","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Alias for `PermissionResponse` type exported by `expo-modules-core`."},"type":{"type":"reference","name":"PermissionResponse"}},{"name":"CameraRollPermissionResponse","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An alias for the `MediaLibraryPermissionResponse` object.","tags":[{"tag":"deprecated","text":"Use `ImagePicker.MediaLibraryPermissionResponse` instead.\\n"}]},"type":{"type":"reference","name":"MediaLibraryPermissionResponse"}},{"name":"ExpandImagePickerResult","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter","type":{"type":"union","types":[{"type":"reference","name":"ImagePickerOptions"},{"type":"reference","name":"OpenFileBrowserOptions"}]}}],"type":{"type":"conditional","checkType":{"type":"reference","name":"T"},"extendsType":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"allowsMultipleSelection","kind":1024,"kindString":"Property","type":{"type":"literal","value":true}}]}},"trueType":{"type":"reference","name":"ImagePickerMultipleResult"},"falseType":{"type":"reference","name":"ImagePickerResult"}}},{"name":"ImageInfo","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Included if the `base64` option is truthy, and is a Base64-encoded string of the selected\\nimage\'s JPEG data. If you prepend this with `\'data:image/jpeg;base64,\'` to create a data URI,\\nyou can use it as the source of an `Image` element; for example:\\n```ts\\n<Image\\n  source={{ uri: \'data:image/jpeg;base64,\' + launchCameraResult.base64 }}\\n  style={{ width: 200, height: 200 }}\\n/>\\n```"},"type":{"type":"intrinsic","name":"string"}},{"name":"cancelled","kind":1024,"kindString":"Property","comment":{"shortText":"Boolean flag which shows if request was cancelled. If asset data have been returned this should\\nalways be `false`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"duration","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Length of the video in milliseconds."},"type":{"type":"intrinsic","name":"number"}},{"name":"exif","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The `exif` field is included if the `exif` option is truthy, and is an object containing the\\nimage\'s EXIF data. The names of this object\'s properties are EXIF tags and the values are the\\nrespective EXIF values for those tags."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"Height of the image or video."},"type":{"type":"intrinsic","name":"number"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The type of the asset."},"type":{"type":"union","types":[{"type":"literal","value":"image"},{"type":"literal","value":"video"}]}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"URI to the local image or video file (usable as the source of an `Image` element, in the case of\\nan image) and `width` and `height` specify the dimensions of the media."},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"Width of the image or video."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"ImagePickerCancelledResult","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object returned when the pick action has been cancelled by the user."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"cancelled","kind":1024,"kindString":"Property","type":{"type":"literal","value":true}}]}}},{"name":"ImagePickerErrorResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"code","kind":1024,"kindString":"Property","comment":{"shortText":"The error code."},"type":{"type":"intrinsic","name":"string"}},{"name":"exception","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The exception which caused the error."},"type":{"type":"intrinsic","name":"string"}},{"name":"message","kind":1024,"kindString":"Property","comment":{"shortText":"The error message."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"ImagePickerMultipleResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"ImagePickerCancelledResult"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"cancelled","kind":1024,"kindString":"Property","type":{"type":"literal","value":false}},{"name":"selected","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"reference","name":"ImageInfo"}}}]}}]}},{"name":"ImagePickerOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"allowsEditing","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to show a UI to edit the image after it is picked. On Android the user can crop and\\nrotate the image and on iOS simply crop it.","tags":[{"tag":"default","text":"false\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"allowsMultipleSelection","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether or not to allow selecting multiple media files at once.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"aspect","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array with two entries `[x, y]` specifying the aspect ratio to maintain if the user is\\nallowed to edit the image (by passing `allowsEditing: true`). This is only applicable on\\nAndroid, since on iOS the crop rectangle is always a square."},"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to also include the image data in Base64 format."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"exif","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to also include the EXIF data for the image. On iOS the EXIF data does not include GPS\\ntags in the camera case."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"mediaTypes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Choose what type of media to pick.","tags":[{"tag":"default","text":"ImagePicker.MediaTypeOptions.Images\\n"}]},"type":{"type":"reference","name":"MediaTypeOptions"}},{"name":"presentationStyle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Choose [presentation style](https://developer.apple.com/documentation/uikit/uiviewcontroller/1621355-modalpresentationstyle?language=objc)\\nto customize view during taking photo/video.","tags":[{"tag":"default","text":"ImagePicker.UIImagePickerPresentationStyle.Automatic"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"UIImagePickerPresentationStyle"}},{"name":"quality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specify the quality of compression, from `0` to `1`. `0` means compress for small size,\\n`1` means compress for maximum quality.\\n> Note: If the selected image has been compressed before, the size of the output file may be\\n> bigger than the size of the original image."},"type":{"type":"intrinsic","name":"number"}},{"name":"videoExportPreset","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specify preset which will be used to compress selected video.","tags":[{"tag":"default","text":"ImagePicker.VideoExportPreset.Passthrough"},{"tag":"platform","text":"ios 11+"},{"tag":"deprecated","text":"See [`videoExportPreset`](https://developer.apple.com/documentation/uikit/uiimagepickercontroller/2890964-videoexportpreset?language=objc)\\nin Apple documentation.\\n"}]},"type":{"type":"reference","name":"VideoExportPreset"}},{"name":"videoMaxDuration","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum duration, in seconds, for video recording. Setting this to `0` disables the limit.\\nDefaults to `0` (no limit).\\n- **On iOS**, when `allowsEditing` is set to `true`, maximum duration is limited to 10 minutes.\\n  This limit is applied automatically, if `0` or no value is specified.\\n- **On Android**, effect of this option depends on support of installed camera app.\\n- **On Web** this option has no effect - the limit is browser-dependant."},"type":{"type":"intrinsic","name":"number"}},{"name":"videoQuality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specify the quality of recorded videos. Defaults to the highest quality available for the device.","tags":[{"tag":"default","text":"ImagePicker.UIImagePickerControllerQualityType.High"},{"tag":"platform","text":"ios\\n"}]},"type":{"type":"reference","name":"UIImagePickerControllerQualityType"}}]}}},{"name":"ImagePickerResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"ImagePickerCancelledResult"},{"type":"reference","name":"ImageInfo"}]}},{"name":"MediaLibraryPermissionResponse","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Extends `PermissionResponse` type exported by `expo-modules-core` and contains additional iOS-specific field."},"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionResponse"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accessPrivileges","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"platform","text":"ios\\n"}]},"type":{"type":"union","types":[{"type":"literal","value":"all"},{"type":"literal","value":"limited"},{"type":"literal","value":"none"}]}}]}}]}},{"name":"OpenFileBrowserOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"allowsMultipleSelection","kind":1024,"kindString":"Property","comment":{"shortText":"Whether or not to allow selecting multiple media files at once.","tags":[{"tag":"platform","text":"web\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"base64","kind":1024,"kindString":"Property","comment":{"shortText":"Whether to also include the image data in Base64 format."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"capture","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"mediaTypes","kind":1024,"kindString":"Property","comment":{"shortText":"Choose what type of media to pick.","tags":[{"tag":"default","text":"ImagePicker.MediaTypeOptions.Images\\n"}]},"type":{"type":"reference","name":"MediaTypeOptions"}}]}}},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"getCameraPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCameraPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing camera.","returns":"A promise that fulfills with an object of type [CameraPermissionResponse](#camerarollpermissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraPermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getCameraRollPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCameraRollPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"Use `getMediaLibraryPermissionsAsync()` instead.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"MediaLibraryPermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getMediaLibraryPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMediaLibraryPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user\'s permissions for accessing photos.","returns":"A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\\n"},"parameters":[{"name":"writeOnly","kind":32768,"kindString":"Parameter","comment":{"shortText":"Whether to request write or read and write permissions. Defaults to `false`"},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"MediaLibraryPermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getPendingResultAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPendingResultAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Android system sometimes kills the `MainActivity` after the `ImagePicker` finishes. When this\\nhappens, we lost the data selected from the `ImagePicker`. However, you can retrieve the lost\\ndata by calling `getPendingResultAsync`. You can test this functionality by turning on\\n`Don\'t keep activities` in the developer options.","returns":"\\n- **On Android:** a promise that resolves to an array of objects of exactly same type as in\\n`ImagePicker.launchImageLibraryAsync` or `ImagePicker.launchCameraAsync` if the `ImagePicker`\\nfinished successfully. Otherwise, to the array of [`ImagePickerErrorResult`](#imagepickerimagepickererrorresult).\\n- **On other platforms:** an empty array.\\n"},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"union","types":[{"type":"reference","name":"ImagePickerResult"},{"type":"reference","name":"ImagePickerErrorResult"}]}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"launchCameraAsync","kind":64,"kindString":"Function","signatures":[{"name":"launchCameraAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Display the system UI for taking a photo with the camera. Requires `Permissions.CAMERA`.\\nOn Android and iOS 10 `Permissions.CAMERA_ROLL` is also required. On mobile web, this must be\\ncalled immediately in a user interaction like a button press, otherwise the browser will bloc\\nthe request without a warning.\\n> **Note:** Make sure that you handle `MainActivity` destruction on **Android**. See [ImagePicker.getPendingResultAsync](#imagepickergetpendingresultasync).\\n> **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\\nTherefore, calling `launchCameraAsync` in `componentDidMount`, for example, will **not** work as\\nintended. The `cancelled` event will not be returned in the browser due to platform restrictions\\nand inconsistencies across browsers.","returns":"If the user cancelled the action, the method returns `{ cancelled: true }`. Otherwise,\\nthis method returns information about the selected media item. When the chosen item is an image,\\nthis method returns `{ cancelled: false, type: \'image\', uri, width, height, exif, base64 }`;\\nwhen the item is a video, this method returns `{ cancelled: false, type: \'video\', uri, width, height, duration }`.\\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An `ImagePickerOptions` object."},"type":{"type":"reference","name":"ImagePickerOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImagePickerResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"launchImageLibraryAsync","kind":64,"kindString":"Function","signatures":[{"name":"launchImageLibraryAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Display the system UI for choosing an image or a video from the phone\'s library.\\nRequires `Permissions.MEDIA_LIBRARY` on iOS 10 only. On mobile web, this must be called\\nimmediately in a user interaction like a button press, otherwise the browser will block the\\nrequest without a warning.\\n**Animated GIFs support** If the selected image is an animated GIF, the result image will be an\\nanimated GIF too if and only if `quality` is set to `undefined` and `allowsEditing` is set to `false`.\\nOtherwise compression and/or cropper will pick the first frame of the GIF and return it as the\\nresult (on Android the result will be a PNG, on iOS \u2014 GIF).\\n> **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\\nTherefore, calling `launchImageLibraryAsync` in `componentDidMount`, for example, will **not**\\nwork as intended. The `cancelled` event will not be returned in the browser due to platform\\nrestrictions and inconsistencies across browsers.","returns":"If the user cancelled the action, the method returns `{ cancelled: true }`. Otherwise,\\nthis method returns information about the selected media item. When the chosen item is an image,\\nthis method returns `{ cancelled: false, type: \'image\', uri, width, height, exif, base64 }`;\\nwhen the item is a video, this method returns `{ cancelled: false, type: \'video\', uri, width, height, duration }`.\\n"},"typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter","type":{"type":"reference","name":"ImagePickerOptions"}}],"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"An object extended by [`ImagePickerOptions`](#imagepickeroptions)."},"type":{"type":"reference","name":"T"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"T"}],"name":"ExpandImagePickerResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestCameraPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestCameraPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing camera. This does nothing on web because the\\nbrowser camera is not used.","returns":"A promise that fulfills with an object of type [CameraPermissionResponse](#camerarollpermissionresponse).\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraPermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestCameraRollPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestCameraRollPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"Use `requestMediaLibraryPermissionsAsync()` instead.\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"MediaLibraryPermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestMediaLibraryPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestMediaLibraryPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing user\'s photo. This method does nothing on web.","returns":"A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\\n"},"parameters":[{"name":"writeOnly","kind":32768,"kindString":"Parameter","comment":{"shortText":"Whether to request write or read and write permissions. Defaults to `false`"},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"MediaLibraryPermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"useCameraPermissions","kind":64,"kindString":"Function","signatures":[{"name":"useCameraPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to access the camera.\\nThis uses both `requestCameraPermissionsAsync` and `getCameraPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = ImagePicker.useCameraPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"useMediaLibraryPermissions","kind":64,"kindString":"Function","signatures":[{"name":"useMediaLibraryPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions to access the media library.\\nThis uses both `requestMediaLibraryPermissionsAsync` and `getMediaLibraryPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\\n```ts\\nconst [status, requestPermission] = ImagePicker.useMediaLibraryPermissions();\\n```\\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"writeOnly","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}]}}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"MediaLibraryPermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"MediaLibraryPermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"MediaLibraryPermissionResponse"}],"name":"GetPermissionMethod"}]}}]}]}')},yAol:function(e){e.exports=JSON.parse('{"name":"expo-document-picker","kind":1,"kindString":"Project","originalName":"","children":[{"name":"DocumentPickerOptions","kind":4194304,"kindString":"Type alias","comment":{},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"copyToCacheDirectory","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true`, the picked file is copied to [`FileSystem.CacheDirectory`](filesystem.md#filesystemcachedirectory),\\nwhich allows other Expo APIs to read the file immediately. This may impact performance for\\nlarge files, so you should consider setting this to `false` if you expect users to pick\\nparticularly large files and your app does not need immediate read access.","tags":[{"tag":"default","text":"true\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"multiple","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Allows multiple files to be selected from the system UI.","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"web\\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The [MIME type(s)](https://en.wikipedia.org/wiki/Media_type) of the documents that are available\\nto be picked. Is also supports wildcards like `\'image/*\'` to choose any image. To allow any type\\nof document you can use `\'&ast;/*\'`.","tags":[{"tag":"default","text":"\'&ast;/*\'\\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}}]}}},{"name":"DocumentResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","type":{"type":"literal","value":"cancel"}}]}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"file","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"File"}},{"name":"lastModified","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"mimeType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Document MIME type."},"type":{"type":"intrinsic","name":"string"}},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"Document original name."},"type":{"type":"intrinsic","name":"string"}},{"name":"output","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"FileList"},{"type":"literal","value":null}]}},{"name":"size","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Document size in bytes."},"type":{"type":"intrinsic","name":"number"}},{"name":"type","kind":1024,"kindString":"Property","type":{"type":"literal","value":"success"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"An URI to the local document file."},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"getDocumentAsync","kind":64,"kindString":"Function","signatures":[{"name":"getDocumentAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Display the system UI for choosing a document. By default, the chosen file is copied to [the app\'s internal cache directory](filesystem.md#filesystemcachedirectory).\\n> **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\\nTherefore, calling `getDocumentAsync` in `componentDidMount`, for example, will **not** work as\\nintended. The `cancel` event will not be returned in the browser due to platform restrictions and\\ninconsistencies across browsers.","returns":"On success returns a promise that fulfils with [`DocumentResult`](#documentresult) object.\\n\\nIf the user cancelled the document picking, the promise resolves to `{ type: \'cancel\' }`.\\n"},"parameters":[{"name":"__namedParameters","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"DocumentPickerOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DocumentResult"}],"name":"Promise"}}]}]}')},yRGd:function(e,w,n){"use strict";var c=n("2N74");function p(d,a,m,r){var s=r?r-1:1/0,i=0;return o;function o(l){return c(l)?(d.enter(m),t(l)):a(l)}function t(l){return c(l)&&i++<s?(d.consume(l),t):(d.exit(m),a(l))}}e.exports=p},yuB8:function(e,w,n){"use strict";e.exports=d;var c=n("UFN4"),p=n("2jS9");function d(a,m){return a(m,"blockquote",c(p(a,m),!0))}},ywEd:function(e,w,n){var c=n("oDdY"),p=n("K/gC"),d=n("wYf1"),a=n("vSfO"),m=n("UhtW");e.exports=r;function r(s){var i=m({handlers:{},join:[],unsafe:[],options:{}},{extensions:[c,p,d(s),a]});return Object.assign(i.options,{handlers:i.handlers,join:i.join,unsafe:i.unsafe})}},z78n:function(e){e.exports=JSON.parse('{"name":"expo-navigation-bar","kind":1,"kindString":"Project","originalName":"","children":[{"name":"NavigationBarBehavior","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Interaction behavior for the system navigation bar."},"type":{"type":"union","types":[{"type":"literal","value":"overlay-swipe"},{"type":"literal","value":"inset-swipe"},{"type":"literal","value":"inset-touch"}]}},{"name":"NavigationBarButtonStyle","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Appearance of the foreground elements in the navigation bar, i.e. the color of the menu, back, home button icons.","text":"- `dark` makes buttons **darker** to adjust for a mostly light nav bar.\\n- `light` makes buttons **lighter** to adjust for a mostly dark nav bar.\\n"},"type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"}]}},{"name":"NavigationBarPosition","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Navigation bar positional mode."},"type":{"type":"union","types":[{"type":"literal","value":"relative"},{"type":"literal","value":"absolute"}]}},{"name":"NavigationBarVisibility","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Visibility of the navigation bar."},"type":{"type":"union","types":[{"type":"literal","value":"visible"},{"type":"literal","value":"hidden"}]}},{"name":"NavigationBarVisibilityEvent","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Current system UI visibility state. Due to platform constraints, this will return when the status bar visibility changes as well as the navigation bar."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"rawVisibility","kind":1024,"kindString":"Property","comment":{"shortText":"Native Android system UI visibility state, returned from the native Android `setOnSystemUiVisibilityChangeListener` API."},"type":{"type":"intrinsic","name":"number"}},{"name":"visibility","kind":1024,"kindString":"Property","comment":{"shortText":"Current navigation bar visibility."},"type":{"type":"reference","name":"NavigationBarVisibility"}}]}}},{"name":"addVisibilityListener","kind":64,"kindString":"Function","signatures":[{"name":"addVisibilityListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Observe changes to the system navigation bar.\\nDue to platform constraints, this callback will also be triggered when the status bar visibility changes.","tags":[{"tag":"example","text":"\\n```ts\\nNavigationBar.addVisibilityListener(({ visibility }) => {\\n  // ...\\n});\\n```\\n"}]},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"NavigationBarVisibilityEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getBackgroundColorAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBackgroundColorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the navigation bar\'s background color.","returns":"Current navigation bar color in hex format. Returns `#00000000` (transparent) on unsupported platforms (iOS, web).\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst color = await NavigationBar.getBackgroundColorAsync();\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"ColorValue","package":"@types/react-native","name":"ColorValue"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getBehaviorAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBehaviorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the behavior of the status and navigation bars when the user swipes or touches the screen.","returns":"Navigation bar interaction behavior. Returns `inset-touch` on unsupported platforms (iOS, web).\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait NavigationBar.getBehaviorAsync()\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"NavigationBarBehavior"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getBorderColorAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBorderColorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the navigation bar\'s top border color, also known as the \\"divider color\\".","returns":"Navigation bar top border color in hex format. Returns `#00000000` (transparent) on unsupported platforms (iOS, web).\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst color = await NavigationBar.getBorderColorAsync();\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","qualifiedName":"ColorValue","package":"@types/react-native","name":"ColorValue"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getButtonStyleAsync","kind":64,"kindString":"Function","signatures":[{"name":"getButtonStyleAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the navigation bar\'s button color styles.","returns":"Navigation bar foreground element color settings. Returns `light` on unsupported platforms (iOS, web).\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst style = await NavigationBar.getButtonStyleAsync();\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"NavigationBarButtonStyle"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getVisibilityAsync","kind":64,"kindString":"Function","signatures":[{"name":"getVisibilityAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the navigation bar\'s visibility.","returns":"Navigation bar\'s current visibility status. Returns `hidden` on unsupported platforms (iOS, web).\\n","tags":[{"tag":"example","text":"\\n```ts\\nconst visibility = await NavigationBar.getVisibilityAsync(\\"hidden\\");\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"NavigationBarVisibility"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setBackgroundColorAsync","kind":64,"kindString":"Function","signatures":[{"name":"setBackgroundColorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Changes the navigation bar\'s background color.","tags":[{"tag":"example","text":"\\n```ts\\nNavigationBar.setBackgroundColorAsync(\\"white\\");\\n```"}]},"parameters":[{"name":"color","kind":32768,"kindString":"Parameter","comment":{"shortText":"Any valid [CSS 3 (SVG) color](http://www.w3.org/TR/css3-color/#svg-color).\\n"},"type":{"type":"reference","qualifiedName":"ColorValue","package":"@types/react-native","name":"ColorValue"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setBehaviorAsync","kind":64,"kindString":"Function","signatures":[{"name":"setBehaviorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the behavior of the status bar and navigation bar when they are hidden and the user wants to reveal them.","text":"For example, if the navigation bar is hidden (`setVisibilityAsync(false)`) and the behavior\\nis `\'overlay-swipe\'`, the user can swipe from the bottom of the screen to temporarily reveal the navigation bar.\\n\\n- `\'overlay-swipe\'`: Temporarily reveals the System UI after a swipe gesture (bottom or top) without insetting your App\'s content.\\n- `\'inset-swipe\'`: Reveals the System UI after a swipe gesture (bottom or top) and insets your App\'s content (Safe Area). The System UI is visible until you explicitly hide it again.\\n- `\'inset-touch\'`: Reveals the System UI after a touch anywhere on the screen and insets your App\'s content (Safe Area). The System UI is visible until you explicitly hide it again.\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait NavigationBar.setBehaviorAsync(\'overlay-swipe\')\\n```"}]},"parameters":[{"name":"behavior","kind":32768,"kindString":"Parameter","comment":{"shortText":"Dictates the interaction behavior of the navigation bar.\\n"},"type":{"type":"reference","name":"NavigationBarBehavior"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setBorderColorAsync","kind":64,"kindString":"Function","signatures":[{"name":"setBorderColorAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Changes the navigation bar\'s border color.","tags":[{"tag":"example","text":"\\n```ts\\nNavigationBar.setBorderColorAsync(\\"red\\");\\n```"}]},"parameters":[{"name":"color","kind":32768,"kindString":"Parameter","comment":{"shortText":"Any valid [CSS 3 (SVG) color](http://www.w3.org/TR/css3-color/#svg-color).\\n"},"type":{"type":"reference","qualifiedName":"ColorValue","package":"@types/react-native","name":"ColorValue"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setButtonStyleAsync","kind":64,"kindString":"Function","signatures":[{"name":"setButtonStyleAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Changes the navigation bar\'s button colors between white (`light`) and a dark gray color (`dark`).","tags":[{"tag":"example","text":"\\n```ts\\nNavigationBar.setButtonStyleAsync(\\"light\\");\\n```"}]},"parameters":[{"name":"style","kind":32768,"kindString":"Parameter","comment":{"shortText":"Dictates the color of the foreground element color.\\n"},"type":{"type":"reference","name":"NavigationBarButtonStyle"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setPositionAsync","kind":64,"kindString":"Function","signatures":[{"name":"setPositionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets positioning method used for the navigation bar (and status bar).\\nSetting position `absolute` will float the navigation bar above the content,\\nwhereas position `relative` will shrink the screen to inline the navigation bar.","text":"When drawing behind the status and navigation bars, ensure the safe area insets are adjusted accordingly.\\n","tags":[{"tag":"example","text":"\\n```ts\\n// enables edge-to-edge mode\\nawait NavigationBar.setPositionAsync(\'absolute\')\\n// transparent backgrounds to see through\\nawait NavigationBar.setBackgroundColorAsync(\'#ffffff00\')\\n```"}]},"parameters":[{"name":"position","kind":32768,"kindString":"Parameter","comment":{"shortText":"Based on CSS position property.\\n"},"type":{"type":"reference","name":"NavigationBarPosition"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"setVisibilityAsync","kind":64,"kindString":"Function","signatures":[{"name":"setVisibilityAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Set the navigation bar\'s visibility.","tags":[{"tag":"example","text":"\\n```ts\\nNavigationBar.setVisibilityAsync(\\"hidden\\");\\n```"}]},"parameters":[{"name":"visibility","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"NavigationBarVisibility"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"unstable_getPositionAsync","kind":64,"kindString":"Function","signatures":[{"name":"unstable_getPositionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Whether the navigation and status bars float above the app (absolute) or sit inline with it (relative).\\nThis value can be incorrect if `androidNavigationBar.visible` is used instead of the config plugin `position` property.","text":"This method is unstable because the position can be set via another native module and get out of sync.\\nAlternatively, you can get the position by measuring the insets returned by `react-native-safe-area-context`.\\n","returns":"Navigation bar positional rendering mode. Returns `relative` on unsupported platforms (iOS, web).\\n","tags":[{"tag":"example","text":"\\n```ts\\nawait NavigationBar.unstable_getPositionAsync()\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"NavigationBarPosition"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"useVisibility","kind":64,"kindString":"Function","signatures":[{"name":"useVisibility","kind":4096,"kindString":"Call signature","comment":{"shortText":"React hook that statefully updates with the visibility of the system navigation bar.","returns":"Visibility of the navigation bar, `null` during async initialization.\\n","tags":[{"tag":"example","text":"\\n```ts\\nfunction App() {\\n  const visibility = NavigationBar.useVisibility()\\n  // React Component...\\n}\\n```"}]},"type":{"type":"union","types":[{"type":"reference","name":"NavigationBarVisibility"},{"type":"literal","value":null}]}}]}]}')},zq41:function(e){e.exports=JSON.parse('{"name":"expo-asset","kind":1,"originalName":"","children":[{"name":"Asset","kind":128,"kindString":"Class","comment":{"shortText":"The `Asset` class represents an asset in your app. It gives metadata about the asset (such as its\\nname and type) and provides facilities to load the asset data."},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new Asset","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"__namedParameters","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AssetDescriptor"}}],"type":{"type":"reference","name":"Asset"}}]},{"name":"downloaded","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"name":"downloading","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"name":"hash","kind":1024,"kindString":"Property","comment":{"shortText":"The MD5 hash of the asset\'s data."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"null"},{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"If the asset is an image, the height of the image data divided by the scale factor. The scale factor is the number after `@` in the filename, or `1` if not present."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"number"}]},"defaultValue":"null"},{"name":"localUri","kind":1024,"kindString":"Property","comment":{"shortText":"If the asset has been downloaded (by calling [`downloadAsync()`](#downloadasync)), the\\n`file://` URI pointing to the local file on the device that contains the asset data."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"null"},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"The name of the asset file without the extension. Also without the part from `@` onward in the\\nfilename (used to specify scale factor for images)."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"The extension of the asset filename."},"type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"A URI that points to the asset\'s data on the remote server. When running the published version\\nof your app, this refers to the location on Expo\'s asset server where Expo has stored your\\nasset. When running the app from Expo CLI during development, this URI points to Expo CLI\'s\\nserver running on your computer and the asset is served directly from your computer."},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"If the asset is an image, the width of the image data divided by the scale factor. The scale\\nfactor is the number after `@` in the filename, or `1` if not present."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"number"}]},"defaultValue":"null"},{"name":"downloadAsync","kind":2048,"kindString":"Method","signatures":[{"name":"downloadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Downloads the asset data to a local file in the device\'s cache directory. Once the returned\\npromise is fulfilled without error, the [`localUri`](#assetlocaluri) field of this asset points\\nto a local file containing the asset data. The asset is only downloaded if an up-to-date local\\nfile for the asset isn\'t already present due to an earlier download. The downloaded `Asset`\\nwill be returned when the promise is resolved.","returns":"Returns a Promise which fulfills with an `Asset` instance.\\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Asset"}],"name":"Promise"}}]},{"name":"fromMetadata","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"fromMetadata","kind":4096,"kindString":"Call signature","parameters":[{"name":"meta","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AssetMetadata"}}],"type":{"type":"reference","name":"Asset"}}]},{"name":"fromModule","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"fromModule","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns the [`Asset`](#asset) instance representing an asset given its module or URL.","returns":"The [`Asset`](#asset) instance for the asset.\\n"},"parameters":[{"name":"virtualAssetModule","kind":32768,"kindString":"Parameter","comment":{"shortText":"The value of `require(\'path/to/file\')` for the asset or external\\nnetwork URL"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"reference","name":"Asset"}}]},{"name":"fromURI","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"fromURI","kind":4096,"kindString":"Call signature","parameters":[{"name":"uri","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Asset"}}]},{"name":"loadAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"loadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"A helper that wraps `Asset.fromModule(module).downloadAsync` for convenience.","returns":"Returns a Promise that fulfills with an array of `Asset`s when the asset(s) has been\\nsaved to disk.","tags":[{"tag":"example","text":"\\n```ts\\nconst [{ localUri }] = await Asset.loadAsync(require(\'./assets/snack-icon.png\'));\\n```\\n"}]},"parameters":[{"name":"moduleId","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of `require(\'path/to/file\')` or external network URLs. Can also be\\njust one module or URL without an Array."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Asset"}}],"name":"Promise"}}]}]},{"name":"AssetDescriptor","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"hash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"name","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}}]}}},{"name":"AssetMetadata","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"fileHashes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"fileUris","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"hash","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"httpServerLocation","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"name","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"scales","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"name":"type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"useAssets","kind":64,"kindString":"Function","signatures":[{"name":"useAssets","kind":4096,"kindString":"Call signature","comment":{"shortText":"Downloads and stores one or more assets locally.\\nAfter the assets are loaded, this hook returns a list of asset instances.\\nIf something went wrong when loading the assets, an error is returned.","text":"> Note, the assets are not \\"reloaded\\" when you dynamically change the asset list.\\n","returns":"Returns an array containing:\\n- on the first position, a list of all loaded assets. If they aren\'t loaded yet, this value is\\n  `undefined`.\\n- on the second position, an error which encountered when loading the assets. If there was no\\n  error, this value is `undefined`.\\n","tags":[{"tag":"example","text":"\\n```tsx\\nconst [assets, error] = useAssets([require(\'path/to/asset.jpg\'), require(\'path/to/other.png\')]);\\n\\nreturn assets ? <Image source={assets[0]} /> : null;\\n```\\n"}]},"parameters":[{"name":"moduleIds","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"Asset"}},{"type":"intrinsic","name":"undefined"}]},{"type":"union","types":[{"type":"reference","name":"Error"},{"type":"intrinsic","name":"undefined"}]}]}}]}]}')}}]);
